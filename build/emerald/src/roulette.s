@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_0203AB88
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_0203AB88,object
	.size	 gUnknown_0203AB88,4
gUnknown_0203AB88:
	.word	0x0
	.globl	gUnknown_0203AB8C
	.type	 gUnknown_0203AB8C,object
	.size	 gUnknown_0203AB8C,1
gUnknown_0203AB8C:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 gUnknown_085B5BFC,object
gUnknown_085B5BFC:
	.short	0x1a6a
	.short	0x14a5
	.short	0x398c
	.short	0x62d5
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x3ff
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x14a5
	.short	0x41ef
	.short	0x62d5
	.short	0x7fff
	.short	0x4fbd
	.short	0x36d7
	.short	0x1170
	.short	0x2e1f
	.short	0x31b7
	.short	0x7f7c
	.short	0x4ee9
	.short	0x7fff
	.short	0x56cf
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x20e7
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x672d
	.short	0x2d9e
	.short	0x7e6d
	.short	0x7fff
	.short	0x37f3
	.short	0x279e
	.short	0x3f9f
	.short	0x7fff
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x6b39
	.short	0x7fff
	.short	0x47af
	.short	0x46bf
	.short	0x2662
	.short	0x7e98
	.short	0x11a6
	.short	0x430e
	.short	0x5e38
	.short	0x1d5f
	.short	0x2bbf
	.short	0x6d9
	.short	0x73f
	.short	0x4da9
	.short	0x722d
	.short	0x65ca
	.short	0x7fff
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x7fff
	.short	0x4da9
	.short	0x23df
	.short	0x53ff
	.short	0x23df
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x77f5
	.short	0x7ffb
	.short	0x77f2
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x1d08
	.short	0x4da9
	.short	0x7f3f
	.short	0x7f7f
	.short	0x7f1f
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x173f
	.short	0x2bf
	.short	0x229a
	.short	0x2a99
	.short	0x21b1
	.short	0x5f70
	.short	0x4ee9
	.short	0x4aee
	.short	0x56cf
	.short	0x39c9
	.short	0x7fff
	.short	0x4da9
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x6679
	.short	0x51b4
	.short	0x5215
	.short	0x4df3
	.short	0x34eb
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4da9
	.short	0x2bdf
	.short	0x6ff4
	.short	0x62d5
	.short	0x7fff
	.short	0x23df
	.short	0xf3e
	.short	0x331d
	.short	0x2eb9
	.short	0x2e14
	.short	0x6fd3
	.short	0x5b4b
	.short	0x5770
	.short	0x4eee
	.short	0x4a4c
	.short	0x1d08
	.short	0x4da9
	.short	0x76fd
	.short	0x4a53
	.short	0x62d5
	.short	0x7fff
	.short	0x7f3f
	.short	0x727b
	.short	0x6278
	.short	0x5635
	.short	0x49b1
	.short	0x7339
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x4da9
	.short	0x7b9d
	.short	0x7339
	.short	0x62d5
	.short	0x7fff
	.short	0x73ff
	.short	0x53ff
	.short	0x7fff
	.short	0x7ffb
	.short	0x7fdf
	.short	0x7f7f
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x1d08
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.size	 gUnknown_085B5BFC,512
	.align	2, 0
	.type	 gUnknown_085B5DFC,object
gUnknown_085B5DFC:
	.word	0x30010
	.word	0x0
	.word	0x2b0e000
	.word	-0x3ffcf340
	.word	0x5f0c004
	.word	0x1d10
	.word	0x12b0f000
	.word	0x14c013c0
	.word	0x5f080c0
	.word	-0x4f0e0000
	.word	-0x3b1e4f0f
	.word	0x1f601ff0
	.word	0x6b005
	.word	0x10b03001
	.word	-0xfcd4fcf
	.word	-0x3ff44ffb
	.word	0x16b02015
	.word	-0x4fbfff00
	.word	-0x7ebd4fbf
	.word	0x1bb005f0
	.word	0x26b025c0
	.word	0x50040100
	.word	0x52b051b0
	.word	0x2bb005f0
	.word	-0x4ff83ff8
	.word	0x33010008
	.word	-0x4fcecb50
	.word	0x5f035
	.word	0x18b0175f
	.word	0x43060100
	.word	0x45b044b0
	.word	0x5f0005f0
	.word	0x28b02027
	.word	-0x4facff00
	.word	-0x3baa4fac
	.word	0x5f0005f0
	.word	0xac009
	.word	0x10c03601
	.word	-0xfc73fc9
	.word	-0x3ff43ffb
	.word	0x1ac02019
	.word	-0x3fb9ff00
	.word	-0x7eb73fb9
	.word	0x1bc005f0
	.word	0x2ac029c0
	.word	0x56040100
	.word	0x58c057c0
	.word	0x2bc005f0
	.word	-0x1d9ede80
	.word	0x23b022b0
	.word	-0xf7fdb50
	.word	0xb005
	.word	-0x2f322f34
	.word	-0x232f31ff
	.word	-0x212f2230
	.word	-0x69fffac0
	.word	-0x672f6830
	.word	0xd0a6d0
	.word	-0x2f572f59
	.word	-0x2f482f4a
	.word	-0x662f4800
	.word	-0x642f6530
	.word	-0x2f56ff30
	.word	-0x2f542f56
	.word	-0x45ff2f47
	.word	-0x632f4430
	.word	0xd09dd0
	.word	-0x2f532f62
	.word	-0x2f512f53
	.word	-0x422f4400
	.word	-0x392f4130
	.word	0xc74460
	.word	-0x289f29ff
	.word	0x60e60100
	.word	0x100e744
	.word	0xc970c8
	.word	0x4470d801
	.word	-0x17feff27
	.word	0x100e970
	.word	-0x34bb7f36
	.word	-0x7f25ff00
	.word	-0x15feff25
	.word	0xeb4080
	.word	0xc000001
	.word	0x400d40
	.word	0x401c400e
	.word	0x401e401d
	.word	0x2d402c00
	.word	0x70402e40
	.word	0x40710040
	.word	0x40804072
	.word	-0x7d87bf7f
	.word	0x5f005f0
	.word	0x54005f0
	.word	0x3914090
	.word	0x73409240
	.word	0x1f07440
	.word	0x75060160
	.word	-0x7bbf7cc0
	.word	0x16001f0
	.word	-0x6cbff37b
	.word	0x1f09440
	.word	0x40950160
	.word	-0xf3ecd20
	.word	0x15001
	.size	 gUnknown_085B5DFC,420
	.align	2, 0
	.type	 gUnknown_085B5FA0,object
gUnknown_085B5FA0:
	.word	0x40010
	.word	-0xfffffc8
	.word	0x1001f001
	.word	0x3020101
	.word	0x6050403
	.word	-0xff6f7f9
	.word	0x1001a
	.word	0xd0c0b0a
	.word	0x11100f0e
	.word	0x14131204
	.word	0x1ef01615
	.word	0x19001817
	.word	0x1d1c1b1a
	.word	0x4201f1e
	.word	0x24232221
	.word	0x251ed0d8
	.word	0x28270026
	.word	0x2b2b2a29
	.word	0x2d012d2c
	.word	0x31302f2e
	.word	0x1fc0dad9
	.word	0x34333200
	.word	0x38373635
	.word	0x3b3a0039
	.word	0x3f3e3d3c
	.word	-0x23bf24c0
	.word	0x42411eb0
	.word	0x45364443
	.word	0x48474600
	.word	0x4c4b4a49
	.word	0x4e3e044d
	.word	-0x5f202123
	.word	0x8504f1f
	.word	0x54535251
	.word	0x56550c40
	.word	-0x1e1fefa9
	.word	0x581fa0e2
	.word	0x205b5a59
	.word	0xc405d5c
	.word	-0x1c9fa0a2
	.word	-0x5f1abf1c
	.word	0x6362611f
	.word	-0x7e9a9ba5
	.word	0x67660c40
	.word	-0x171819a0
	.word	0x68021fa0
	.word	0x6c6b6a69
	.word	0x6e0c406d
	.word	-0x168f90fc
	.word	0x1fa0ebea
	.word	0x73087271
	.word	0x40767574
	.word	0x7978770c
	.word	-0x111213f0
	.word	0x7b7a1fa0
	.word	0x7d20747c
	.word	0x7f0c407e
	.word	-0xf108680
	.word	0x1fa0f140
	.word	-0x7b7c7d7f
	.word	0x40818685
	.word	-0x767778f4
	.word	-0x5f0b0c0e
	.word	-0x7475ffe1
	.word	-0x70717274
	.word	-0x6dff6e70
	.word	-0x696a6b6d
	.word	0x10999897
	.word	-0x4e08090b
	.word	-0x636465e0
	.word	-0x6171ff63
	.word	-0x5d5e5f61
	.word	-0x67fb5b5d
	.word	-0x607595b
	.word	-0x5758a03f
	.word	-0x54555700
	.word	-0x51525254
	.word	-0x4f50fe51
	.word	-0x54c4d4f
	.word	0xa0d1fb
	.word	-0x48494a4c
	.word	-0x44454648
	.word	-0x414243ff
	.word	-0x33e3f41
	.word	-0x3dff1f0f
	.word	-0x393a3b3d
	.word	0x6c9c8c7
	.word	-0x32333436
	.word	0x1ef0ce
	.word	-0x2fff30ff
	.word	-0x2b2c2d2f
	.word	-0x28292b
	.word	0x1f01af0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0fc01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f0
	.size	 gUnknown_085B5FA0,416
	.align	2, 0
	.type	 gUnknown_085B6140,object
	.size	 gUnknown_085B6140,12
gUnknown_085B6140:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x41
	.byte	0x12
	.byte	0x0
	.space	1
	.byte	0x66
	.byte	0x2a
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 gUnknown_085B614C,object
gUnknown_085B614C:
	.byte	0x0
	.byte	0x3
	.byte	0xf
	.byte	0x18
	.byte	0x4
	.byte	0xf
	.short	0xc5
	.size	 gUnknown_085B614C,8
	.align	2, 0
	.type	 gUnknown_085B6154,object
	.size	 gUnknown_085B6154,400
gUnknown_085B6154:
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x0
	.word	0x0
	.short	0x0
	.space	2
	.byte	0xc
	.byte	0x14
	.byte	0x0
	.byte	0x11
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x2
	.word	0x10842
	.short	0xe000
	.space	2
	.byte	0xd
	.byte	0x24
	.byte	0x0
	.byte	0x14
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x4
	.word	0x21084
	.short	0xe000
	.space	2
	.byte	0xe
	.byte	0x34
	.byte	0x0
	.byte	0x17
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x8
	.word	0x42108
	.short	0xe000
	.space	2
	.byte	0xf
	.byte	0x44
	.byte	0x0
	.byte	0x1a
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.space	1
	.word	0x10
	.word	0x84210
	.short	0xe000
	.space	2
	.byte	0x10
	.byte	0x3
	.byte	0x1
	.byte	0xe
	.byte	0xa
	.byte	0x0
	.byte	0xc
	.space	1
	.word	0x20
	.word	0x3e0
	.short	0x249
	.space	2
	.byte	0x0
	.byte	0x1c
	.byte	0x1
	.byte	0x11
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x40
	.word	0x40
	.short	0x2001
	.space	2
	.byte	0x9
	.byte	0x2c
	.byte	0x1
	.byte	0x14
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x80
	.word	0x80
	.short	0x2200
	.space	2
	.byte	0x6
	.byte	0x3c
	.byte	0x1
	.byte	0x17
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x100
	.word	0x100
	.short	0x2040
	.space	2
	.byte	0x3
	.byte	0x4c
	.byte	0x1
	.byte	0x1a
	.byte	0xa
	.byte	0x3
	.byte	0x3
	.space	1
	.word	0x200
	.word	0x200
	.short	0x2008
	.space	2
	.byte	0x11
	.byte	0x3
	.byte	0x2
	.byte	0xe
	.byte	0xd
	.byte	0x3
	.byte	0xf
	.space	1
	.word	0x400
	.word	0x7c00
	.short	0x492
	.space	2
	.byte	0x4
	.byte	0x1c
	.byte	0x2
	.byte	0x11
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x800
	.word	0x800
	.short	0x2010
	.space	2
	.byte	0x1
	.byte	0x2c
	.byte	0x2
	.byte	0x14
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x1000
	.word	0x1000
	.short	0x2002
	.space	2
	.byte	0xa
	.byte	0x3c
	.byte	0x2
	.byte	0x17
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x2000
	.word	0x2000
	.short	0x2400
	.space	2
	.byte	0x7
	.byte	0x4c
	.byte	0x2
	.byte	0x1a
	.byte	0xd
	.byte	0x6
	.byte	0x6
	.space	1
	.word	0x4000
	.word	0x4000
	.short	0x2080
	.space	2
	.byte	0x12
	.byte	0x3
	.byte	0x3
	.byte	0xe
	.byte	0x10
	.byte	0x6
	.byte	0x12
	.space	1
	.word	0x8000
	.word	0xf8000
	.short	0x924
	.space	2
	.byte	0x8
	.byte	0x1c
	.byte	0x3
	.byte	0x11
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x10000
	.word	0x10000
	.short	0x2100
	.space	2
	.byte	0x5
	.byte	0x2c
	.byte	0x3
	.byte	0x14
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x20000
	.word	0x20000
	.short	0x2020
	.space	2
	.byte	0x2
	.byte	0x3c
	.byte	0x3
	.byte	0x17
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x40000
	.word	0x40000
	.short	0x2004
	.space	2
	.byte	0xb
	.byte	0x4c
	.byte	0x3
	.byte	0x1a
	.byte	0x10
	.byte	0x9
	.byte	0x9
	.space	1
	.word	0x80000
	.word	0x80000
	.short	0x2800
	.space	2
	.align	2, 0
	.type	 gUnknown_085B62E4,object
gUnknown_085B62E4:
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.space	1
	.word	0x40
	.byte	0x1
	.byte	0x3
	.byte	0xc
	.space	1
	.word	0x1000
	.byte	0x2
	.byte	0x5
	.byte	0x12
	.space	1
	.word	0x40000
	.byte	0x3
	.byte	0x7
	.byte	0x9
	.space	1
	.word	0x200
	.byte	0x4
	.byte	0x9
	.byte	0xb
	.space	1
	.word	0x800
	.byte	0x5
	.byte	0xb
	.byte	0x11
	.space	1
	.word	0x20000
	.byte	0x6
	.byte	0xd
	.byte	0x8
	.space	1
	.word	0x100
	.byte	0x7
	.byte	0xf
	.byte	0xe
	.space	1
	.word	0x4000
	.byte	0x8
	.byte	0x11
	.byte	0x10
	.space	1
	.word	0x10000
	.byte	0x9
	.byte	0x13
	.byte	0x7
	.space	1
	.word	0x80
	.byte	0xa
	.byte	0x15
	.byte	0xd
	.space	1
	.word	0x2000
	.byte	0xb
	.byte	0x17
	.byte	0x13
	.space	1
	.word	0x80000
	.size	 gUnknown_085B62E4,96
	.type	 gUnknown_085B6344,object
gUnknown_085B6344:
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x6
	.size	 gUnknown_085B6344,4
	.align	2, 0
	.type	 gUnknown_085B6348,object
gUnknown_085B6348:
	.byte	0x1
	.byte	0x3c
	.byte	0x1e
	.byte	0x1
	.byte	0x1
	.space	3
	.short	0x2d
	.short	0x1e
	.short	0x1
	.space	2
	.short	0x4b
	.short	0x1b
	.short	0x18
	.space	2
	.short	0xa
	.short	0x168
	.word 0xbf000000	@ float -5.00000000000000000000e-1
	.byte	0x3
	.byte	0x1e
	.byte	0xf
	.byte	0x1
	.byte	0x0
	.space	3
	.short	0x4b
	.short	0x3c
	.short	0x2
	.space	2
	.short	0x0
	.short	0x36
	.short	0x30
	.space	2
	.short	0xa
	.short	0x10e
	.word 0xbf800000	@ float -1.00000000000000000000e0
	.size	 gUnknown_085B6348,64
	.align	2, 0
	.type	 gUnknown_085B6388,object
	.size	 gUnknown_085B6388,104
gUnknown_085B6388:
	.short	0x8000
	.short	0x5
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0xa
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x15
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x55
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x5a
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x65
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x75
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x7a
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x85
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x95
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0x9a
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x8000
	.short	0xa5
	.byte	0x1
	.byte	0x1
	.byte	0xff
	.byte	0x48
	.short	0x77d6
	.short	0x28
	.byte	0x2
	.byte	0xa
	.byte	0xff
	.byte	0x4e
	.align	2, 0
	.type	 gUnknown_085B63F0,object
	.size	 gUnknown_085B63F0,24
gUnknown_085B63F0:
	.short	0x53ff
	.short	0x101
	.byte	0x5
	.byte	0x1e
	.byte	0xff
	.byte	0x4e
	.short	0x7ffb
	.short	0x106
	.byte	0x5
	.byte	0x1e
	.byte	0xff
	.byte	0x4e
	.short	0x7f7f
	.short	0x10b
	.byte	0x5
	.byte	0x1e
	.byte	0xff
	.byte	0x4e
	.align	2, 0
	.type	 gUnknown_085B6408,object
	.size	 gUnknown_085B6408,8
gUnknown_085B6408:
	.word	sub_8142918
	.word	sub_814297C
	.align	2, 0
	.type	 gUnknown_085B6410,object
	.size	 gUnknown_085B6410,8
gUnknown_085B6410:
	.word	sub_8140968
	.word	sub_8140994
.text
	.align	2, 0
	.type	 sub_8140238,function
	.thumb_func
sub_8140238:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r0, .L4
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0xb8
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L3	@cond_branch
	add	r0, r1, #0
	bl	task_tutorial_controls_fadein
.L3:
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gUnknown_0203AB88
.Lfe1:
	.size	 sub_8140238,.Lfe1-sub_8140238
	.align	2, 0
	.type	 sub_8140264,function
	.thumb_func
sub_8140264:
	push	{r4, lr}
	add	sp, sp, #-0x4
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	bl	sub_8142814
	ldr	r4, .L17
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x26]
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r1, r2, #0
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L7	@cond_branch
	ldrh	r1, [r1, #0x34]
	mov	r0, #0x52
	bl	SetGpuReg
.L7:
	ldr	r2, [r4]
	mov	r3, #0x2a
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	beq	.L8	@cond_branch
	ldr	r1, .L17+0x4
	ldr	r3, .L17+0x8
	add	r0, r2, r3
	str	r0, [r1]
	ldr	r0, .L17+0xc
	str	r0, [r1, #0x4]
	ldr	r0, .L17+0x10
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x0
	strh	r0, [r2, #0x2a]
.L8:
	ldr	r0, [r4]
	mov	r2, #0x28
	ldrsh	r1, [r0, r2]
	cmp	r1, #0x1
	beq	.L10	@cond_branch
	cmp	r1, #0x1
	ble	.L9	@cond_branch
	cmp	r1, #0x2
	beq	.L11	@cond_branch
	cmp	r1, #0xff
	beq	.L12	@cond_branch
	b	.L9
.L18:
	.align	2, 0
.L17:
	.word	gUnknown_0203AB88
	.word	0x40000d4
	.word	0x133c
	.word	0x60021c0
	.word	-0x7ffffe60
.L10:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetBgAttribute
	mov	r0, #0x0
	bl	ShowBg
	ldr	r1, .L19
	ldr	r2, [r4]
	mov	r3, #0xcf
	lsl	r3, r3, #0x2
	add	r0, r2, r3
	str	r0, [r1]
	ldr	r0, .L19+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L19+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x2
	strh	r0, [r2, #0x28]
	b	.L9
.L20:
	.align	2, 0
.L19:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7ffffe60
.L11:
	ldr	r1, .L21
	mov	r2, #0xcf
	lsl	r2, r2, #0x2
	add	r0, r0, r2
	str	r0, [r1]
	ldr	r0, .L21+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L21+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	b	.L9
.L22:
	.align	2, 0
.L21:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7ffffe60
.L12:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x2
	bl	SetBgAttribute
	mov	r0, #0x0
	bl	ShowBg
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L23
	mov	r3, sp
	str	r3, [r1]
	ldr	r0, .L23+0x4
	str	r0, [r1, #0x4]
	ldr	r0, .L23+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1, #0x28]
.L9:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	0x40000d4
	.word	0x600f9c0
	.word	-0x7efffe60
.Lfe2:
	.size	 sub_8140264,.Lfe2-sub_8140264
	.align	2, 0
	.type	 sub_8140388,function
	.thumb_func
sub_8140388:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r5, #0x0
	str	r5, [sp]
	ldr	r4, .L26
	mov	r0, #0xe6
	lsl	r0, r0, #0x6
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L26+0x4
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r1, [r4]
	mov	r0, #0xbe
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r2, .L26+0x8
	add	r1, r1, r2
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L26+0xc
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r0, .L26+0x10
	bl	InitWindows
	bl	sub_8197200
	ldr	r0, .L26+0x14
	strb	r5, [r0]
	ldr	r0, .L26+0x18
	mov	r1, sp
	bl	malloc_and_decompress
	ldr	r1, [r4]
	ldr	r2, .L26+0x1c
	add	r1, r1, r2
	str	r0, [r1]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6140
	.word	0x117c
	.word	0x317c
	.word	gUnknown_085B614C
	.word	gUnknown_0203AB8C
	.word	gUnknown_085B5DFC
	.word	0x397c
.Lfe3:
	.size	 sub_8140388,.Lfe3-sub_8140388
	.align	2, 0
	.type	 sub_8140418,function
	.thumb_func
sub_8140418:
	push	{r4, r5, lr}
	ldr	r5, .L29
	ldr	r0, [r5]
	ldr	r4, .L29+0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r4, #0x0
	str	r4, [r0]
	bl	FreeAllWindowBuffers
	mov	r0, #0x0
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r0, [r5]
	mov	r2, #0xe6
	lsl	r2, r2, #0x6
	mov	r1, #0x0
	bl	memset
	ldr	r0, [r5]
	bl	Free
	str	r4, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	gUnknown_0203AB88
	.word	0x397c
.Lfe4:
	.size	 sub_8140418,.Lfe4-sub_8140418
	.section .rodata
	.align	1, 0
.LC8:
	.short	0x2898
	.short	0x1a6a
	.short	0x2898
.text
	.align	2, 0
	.type	 sub_8140470,function
	.thumb_func
sub_8140470:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r1, .L52
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	ldr	r5, .L52+0x4
	ldr	r3, [r5]
	ldr	r4, .L52+0x8
	ldrb	r0, [r4]
	mov	r1, #0x1
	and	r1, r1, r0
	ldrb	r2, [r3, #0x4]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x4]
	ldrh	r1, [r4]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L32	@cond_branch
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x4]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0, #0x4]
.L32:
	ldr	r1, [r5]
	ldr	r2, .L52+0xc
	ldrb	r0, [r1, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r2
	ldrb	r0, [r0, #0x3]
	add	r1, r1, #0x22
	strb	r0, [r1]
	ldr	r1, [r5]
	ldrb	r0, [r1, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r2
	ldrb	r0, [r0, #0x4]
	add	r1, r1, #0x23
	strb	r0, [r1]
	ldr	r2, [r5]
	ldr	r3, .L52+0x10
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r3
	ldrb	r0, [r0]
	strb	r0, [r2, #0x19]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x19]
	cmp	r0, #0x1
	bne	.L33	@cond_branch
	ldr	r4, .L52+0x14
	ldr	r3, .L52+0x18
	mov	r0, sp
	ldrh	r2, [r0]
	b	.L50
.L53:
	.align	2, 0
.L52:
	.word	.LC8
	.word	gUnknown_0203AB88
	.word	gSpecialVar_0x8004
	.word	gUnknown_085B6348
	.word	gUnknown_085B6344
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
.L33:
	ldr	r4, .L54
	ldr	r3, .L54+0x4
	mov	r0, sp
	ldrh	r2, [r0, #0x2]
.L50:
	add	r0, r3, #0
	add	r0, r0, #0xa2
	strh	r2, [r0]
	ldr	r1, .L54+0x8
	add	r0, r1, #0
	and	r0, r0, r2
	strh	r0, [r3]
	and	r0, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0xa2
	strh	r0, [r2]
	and	r0, r0, r1
	strh	r0, [r4]
	ldr	r0, .L54+0xc
	ldr	r0, [r0]
	add	r0, r0, #0xb8
	bl	sub_8151678
	mov	r4, #0x0
.L38:
	ldr	r5, .L54+0xc
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	lsl	r2, r4, #0x3
	ldr	r1, .L54+0x10
	add	r2, r2, r1
	add	r1, r4, #0
	bl	sub_815168C
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xc
	bls	.L38	@cond_branch
	mov	r4, #0x0
.L43:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L54+0x14
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L46	@cond_branch
	add	r0, r0, #0x2
	cmp	r1, r0
	bne	.L42	@cond_branch
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	mov	r2, #0x1
	b	.L51
.L55:
	.align	2, 0
.L54:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	0xffff
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6388
	.word	gPlayerParty
.L46:
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x2]
	mov	r2, #0x2
.L51:
	orr	r1, r1, r2
	strb	r1, [r0, #0x2]
.L42:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L43	@cond_branch
	bl	RtcCalcLocalTime
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 sub_8140470,.Lfe5-sub_8140470
	.align	2, 0
	.type	 sub_81405CC,function
	.thumb_func
sub_81405CC:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L70
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bls	.LCB587
	b	.L57	@long jump
.LCB587:
	lsl	r0, r0, #0x2
	ldr	r1, .L70+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L71:
	.align	2, 0
.L70:
	.word	gMain
	.word	.L68
	.align	2, 0
	.align	2, 0
.L68:
	.word	.L58
	.word	.L59
	.word	.L60
	.word	.L61
	.word	.L62
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
.L58:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	bl	SetVBlankHBlankCallbacksToNull
	bl	ResetVramOamAndBgCntRegs
	bl	ResetAllBgsCoordinates
	b	.L57
.L59:
	bl	sub_8140388
	bl	DeactivateAllTextPrinters
	mov	r1, #0x90
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L72
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L57
.L73:
	.align	2, 0
.L72:
	.word	0x60a
.L60:
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ResetTempTileDataBuffers
	b	.L57
.L61:
	ldr	r0, .L74
	mov	r2, #0xe0
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	ldr	r1, .L74+0x4
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L74+0x8
	str	r4, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L57
.L75:
	.align	2, 0
.L74:
	.word	gUnknown_085B5BFC
	.word	gRouletteMenuTiles
	.word	gRouletteWheelTiles
.L62:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB681
	b	.L56	@long jump
.LCB681:
	bl	sub_8140470
	ldr	r1, .L76
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L57
.L77:
	.align	2, 0
.L76:
	.word	gUnknown_085B5FA0
.L64:
	mov	r0, #0x0
	bl	sub_8142C0C
	bl	sub_81439C8
	bl	sub_814391C
	bl	sub_8143314
	bl	sub_8142CD0
	bl	sub_8142F7C
	bl	sub_81431E4
	b	.L57
.L65:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_8143514
	mov	r0, #0x6
	bl	sub_814372C
	mov	r0, #0x0
	bl	sub_81436D0
	mov	r0, #0x0
	bl	sub_81424FC
	ldr	r4, .L78
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L78+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L78+0x8
	mov	r2, #0x3c
	neg	r2, r2
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L78+0xc
	strh	r5, [r0]
	b	.L57
.L79:
	.align	2, 0
.L78:
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_ControlsInstruction
	.word	gSpriteCoordOffsetX
	.word	gSpriteCoordOffsetY
.L66:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	b	.L57
.L67:
	mov	r0, #0x1
	bl	EnableInterrupts
	ldr	r0, .L80
	bl	SetVBlankCallback
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginHardwarePaletteFade
	ldr	r0, .L80+0x4
	mov	r1, #0x0
	bl	CreateTask
	ldr	r5, .L80+0x8
	ldr	r1, [r5]
	add	r1, r1, #0xa4
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L80+0xc
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r0, #0x6
	strh	r0, [r4, #0x14]
	bl	GetCoins
	strh	r0, [r4, #0x22]
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	AlertTVThatPlayerPlayedRoulette
	ldr	r0, .L80+0x10
	mov	r1, #0x1
	bl	CreateTask
	ldr	r1, [r5]
	add	r1, r1, #0xa5
	strb	r0, [r1]
	ldr	r0, .L80+0x14
	bl	SetMainCallback2
	b	.L56
.L81:
	.align	2, 0
.L80:
	.word	sub_8140264
	.word	sub_81408A8
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	sub_8140814
	.word	sub_8140238
.L57:
	ldr	r1, .L82
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L56:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	gMain
.Lfe6:
	.size	 sub_81405CC,.Lfe6-sub_81405CC
	.align	2, 0
	.type	 sub_8140814,function
	.thumb_func
sub_8140814:
	push	{r4, r5, r6, lr}
	ldr	r3, .L89
	ldr	r0, [r3]
	add	r0, r0, #0x21
	ldrb	r2, [r0]
	add	r1, r2, #0x1
	strb	r1, [r0]
	ldr	r1, [r3]
	add	r0, r1, #0
	add	r0, r0, #0x23
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r6, r3, #0
	ldrb	r0, [r0]
	cmp	r2, r0
	bne	.L85	@cond_branch
	add	r1, r1, #0x21
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r2, [r6]
	add	r3, r2, #0
	add	r3, r3, #0x22
	ldrb	r1, [r3]
	ldrh	r0, [r2, #0x24]
	sub	r0, r0, r1
	strh	r0, [r2, #0x24]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L85	@cond_branch
	ldrb	r1, [r3]
	mov	r3, #0xb4
	lsl	r3, r3, #0x1
	add	r0, r3, #0
	sub	r0, r0, r1
	strh	r0, [r2, #0x24]
.L85:
	add	r4, r6, #0
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x24]
	bl	Sin2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x24]
	bl	Cos2
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L87	@cond_branch
	add	r0, r0, #0xf
.L87:
	lsl	r0, r0, #0xc
	lsr	r5, r0, #0x10
	ldr	r3, [r6]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L88	@cond_branch
	add	r0, r0, #0xf
.L88:
	asr	r0, r0, #0x4
	strh	r0, [r3, #0x32]
	strh	r0, [r3, #0x2c]
	strh	r5, [r3, #0x2e]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r3, #0x30]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	gUnknown_0203AB88
.Lfe7:
	.size	 sub_8140814,.Lfe7-sub_8140814
	.align	2, 0
	.type	 sub_81408A8,function
	.thumb_func
sub_81408A8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L92	@cond_branch
	mov	r1, #0x90
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L93
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r1, .L93+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0x14]
	add	r0, r4, #0
	bl	sub_8141FF4
	bl	sub_8142070
	bl	sub_8143A40
	mov	r0, #0x0
	bl	sub_81424FC
	mov	r0, #0x6
	bl	sub_814372C
	ldr	r1, .L93+0x8
	ldr	r2, .L93+0xc
	add	r0, r4, #0
	mov	r3, #0x3
	bl	sub_8141F7C
.L92:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	0x808
	.word	gTasks
	.word	sub_8140968
	.word	0xffff
.Lfe8:
	.size	 sub_81408A8,.Lfe8-sub_81408A8
	.align	2, 0
	.type	 sub_8140914,function
	.thumb_func
sub_8140914:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DisplayYesNoMenuDefaultYes
	ldr	r5, .L96
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	ldr	r2, .L96+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L96+0x8
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_KeepPlaying
	.word	gUnknown_085B6410
.Lfe9:
	.size	 sub_8140914,.Lfe9-sub_8140914
	.align	2, 0
	.type	 sub_8140968,function
	.thumb_func
sub_8140968:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldr	r1, .L99
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L99+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gTasks
	.word	sub_8140BD0
.Lfe10:
	.size	 sub_8140968,.Lfe10-sub_8140968
	.align	2, 0
	.type	 sub_8140994,function
	.thumb_func
sub_8140994:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L102
	ldr	r0, [r0]
	add	r0, r0, #0xa5
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r4, #0
	bl	sub_8141DE4
	pop	{r4}
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	gUnknown_0203AB88
.Lfe11:
	.size	 sub_8140994,.Lfe11-sub_8140994
	.align	2, 0
	.type	 sub_81409B8,function
	.thumb_func
sub_81409B8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.LCB1143
	b	.L114	@long jump
.LCB1143:
	lsl	r0, r4, #0x2
	ldr	r1, .L116
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L117:
	.align	2, 0
.L116:
	.word	.L115
	.align	2, 0
	.align	2, 0
.L115:
	.word	.L106
	.word	.L110
	.word	.L110
	.word	.L110
	.word	.L110
	.word	.L113
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L113
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L114
	.word	.L113
.L106:
	ldr	r0, .L118
	ldr	r0, [r0]
	mov	r1, #0xbe
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x10
	str	r1, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	sub_8152008
	b	.L105
.L119:
	.align	2, 0
.L118:
	.word	gUnknown_0203AB88
.L110:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	add	r0, r0, #0xe
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r5, .L120
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r1, #0x10
	str	r1, [sp]
	mov	r6, #0xd
	str	r6, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	sub_8152008
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L120+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L120+0x8
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [sp]
	str	r6, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, r8
	mov	r3, #0x7
	bl	sub_8152058
	b	.L105
.L121:
	.align	2, 0
.L120:
	.word	gUnknown_0203AB88
	.word	0x397c
	.word	0x232
.L113:
	sub	r0, r4, #0x1
	mov	r1, #0x5
	bl	__divsi3
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0xa
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r5, .L122
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r6, #0x10
	str	r6, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	sub_8152008
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L122+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0xa0
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	str	r6, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0xe
	add	r3, r7, #0
	bl	sub_8152058
	b	.L105
.L123:
	.align	2, 0
.L122:
	.word	gUnknown_0203AB88
	.word	0x397c
.L114:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0xe
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	sub	r0, r4, #0x1
	mov	r1, #0x5
	bl	__divsi3
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, #0x7
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r5, .L124
	ldr	r0, [r5]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	mov	r1, #0x10
	str	r1, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	sub_8152008
	ldr	r0, [r5]
	add	r4, r0, r4
	ldr	r1, .L124+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x88
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, r8
	add	r3, r7, #0
	bl	sub_8152058
.L105:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gUnknown_0203AB88
	.word	0x397c
.Lfe12:
	.size	 sub_81409B8,.Lfe12-sub_81409B8
	.align	2, 0
	.type	 sub_8140B64,function
	.thumb_func
sub_8140B64:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L127
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x10]
	bl	sub_81436D0
	ldrb	r0, [r4, #0x10]
	bl	sub_81409B8
	pop	{r4}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gTasks
.Lfe13:
	.size	 sub_8140B64,.Lfe13-sub_8140B64
	.align	2, 0
	.type	 sub_8140B8C,function
	.thumb_func
sub_8140B8C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L130
	ldr	r2, [r5]
	mov	r6, #0x0
	mov	r1, #0x1
	strh	r1, [r2, #0x28]
	ldr	r1, .L130+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x10]
	bl	sub_81409B8
	ldr	r0, [r5]
	add	r0, r0, #0x23
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x21
	strb	r6, [r0]
	ldr	r0, .L130+0x8
	str	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	sub_8141040
.Lfe14:
	.size	 sub_8140B8C,.Lfe14-sub_8140B8C
	.align	2, 0
	.type	 sub_8140BD0,function
	.thumb_func
sub_8140BD0:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L148
	ldr	r0, [r1]
	ldr	r2, [r0, #0x8]
	mov	r0, #0x20
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L133	@cond_branch
	mov	r3, #0xb
	ldr	r5, .L148+0x4
	add	r0, r5, #0
	add	r0, r0, #0xe4
	ldr	r0, [r0]
	and	r2, r2, r0
	ldr	r0, .L148+0x8
	mov	ip, r0
	lsl	r7, r6, #0x2
	cmp	r2, #0
	beq	.L140	@cond_branch
	add	r4, r1, #0
	add	r5, r5, #0x8
.L136:
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r3, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0xd
	bgt	.L140	@cond_branch
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L136	@cond_branch
	b	.L140
.L149:
	.align	2, 0
.L148:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6154
	.word	gTasks
.L133:
	mov	r3, #0x6
	ldr	r5, .L150
	add	r0, r5, #0
	add	r0, r0, #0x80
	ldr	r0, [r0]
	and	r2, r2, r0
	ldr	r0, .L150+0x4
	mov	ip, r0
	lsl	r7, r6, #0x2
	cmp	r2, #0
	beq	.L140	@cond_branch
	add	r4, r1, #0
	add	r5, r5, #0x8
.L143:
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r3, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0x9
	bgt	.L140	@cond_branch
	ldr	r1, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L143	@cond_branch
.L140:
	add	r4, r7, r6
	lsl	r4, r4, #0x3
	add	r4, r4, ip
	mov	r5, #0x0
	strh	r3, [r4, #0x10]
	add	r0, r6, #0
	bl	sub_8141FF4
	ldrb	r0, [r4, #0x10]
	bl	sub_81424FC
	ldrb	r0, [r4, #0x10]
	bl	sub_81436D0
	ldrb	r0, [r4, #0x10]
	bl	sub_8142284
	strh	r5, [r4, #0xa]
	ldr	r0, .L150+0x8
	str	r0, [r4]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	gUnknown_085B6154
	.word	gTasks
	.word	sub_8140B8C
.Lfe15:
	.size	 sub_8140BD0,.Lfe15-sub_8140BD0
	.section .rodata
.LC59:
	.byte	-0x5
	.byte	0x5
	.byte	-0x1
	.byte	0x1
.text
	.align	2, 0
	.type	 sub_8140CA8,function
	.thumb_func
sub_8140CA8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r6, #0x0
	mov	r7, #0x0
	ldr	r1, .L166
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	ldrb	r0, [r4]
	mov	r8, r0
	cmp	r5, #0
	blt	.L153	@cond_branch
	cmp	r5, #0x1
	bgt	.L155	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r1, #0x5
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, #0xf0
	lsl	r2, r2, #0x14
	add	r1, r0, r2
	lsr	r7, r1, #0x18
	cmp	r0, #0
	bne	.L153	@cond_branch
	mov	r6, #0x5
	b	.L153
.L167:
	.align	2, 0
.L166:
	.word	.LC59
.L155:
	cmp	r5, #0x3
	bgt	.L153	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r1, #0x5
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	add	r0, r1, r2
	lsr	r7, r0, #0x18
	cmp	r1, #0
	bne	.L153	@cond_branch
	mov	r6, #0x1
.L153:
	mov	r1, sp
	add	r0, r1, r5
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r4]
	add	r0, r0, r2
	strh	r0, [r4]
	lsl	r1, r6, #0x18
	asr	r3, r1, #0x18
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r7, #0x18
	cmp	r0, r3
	bge	.L162	@cond_branch
	asr	r0, r2, #0x18
	strh	r0, [r4]
.L162:
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	asr	r0, r2, #0x18
	cmp	r1, r0
	ble	.L163	@cond_branch
	strh	r3, [r4]
.L163:
	mov	r1, r8
	lsl	r0, r1, #0x18
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	asr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L164	@cond_branch
	mov	r0, #0x0
	b	.L165
.L164:
	mov	r0, #0x1
.L165:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 sub_8140CA8,.Lfe16-sub_8140CA8
	.align	2, 0
	.type	 sub_8140D6C,function
	.thumb_func
sub_8140D6C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	mov	r9, r0
	mov	r5, #0x0
	ldr	r4, .L184
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L170	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x0
	bl	sub_8140CA8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1766
	b	.L169	@long jump
.LCB1766:
.L170:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x1
	bl	sub_8140CA8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1789
	b	.L169	@long jump
.LCB1789:
.L172:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L174	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x2
	bl	sub_8140CA8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1812
	b	.L169	@long jump
.LCB1812:
.L174:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L176	@cond_branch
	mov	r5, #0x1
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	add	r0, r0, #0x8
	mov	r1, #0x3
	bl	sub_8140CA8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1835
	b	.L169	@long jump
.LCB1835:
.L176:
	cmp	r5, #0
	bne	.LCB1838
	b	.L169	@long jump
.LCB1838:
	ldr	r0, .L184+0x8
	lsl	r6, r7, #0x2
	add	r4, r6, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x10]
	bl	sub_81424FC
	add	r0, r7, #0
	bl	sub_8140B64
	mov	r1, r9
	strh	r1, [r4, #0xa]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L184+0xc
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	ldr	r1, .L184+0x10
	bl	sub_8151A9C
	ldr	r5, [r5]
	mov	r2, #0xb8
	lsl	r2, r2, #0x1
	add	r3, r5, r2
	ldrb	r2, [r3]
	mov	r1, #0x7f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xb2
	lsl	r0, r0, #0x1
	add	r3, r5, r0
	ldrb	r2, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xac
	lsl	r0, r0, #0x1
	add	r2, r5, r0
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	ldrb	r0, [r4, #0x10]
	bl	sub_8142284
	mov	r4, #0x0
	mov	r9, r6
	ldr	r1, .L184+0x14
	mov	ip, r1
	mov	r2, #0x8
	add	r2, r2, ip
	mov	sl, r2
.L181:
	ldr	r0, .L184+0xc
	ldr	r5, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x29
	add	r6, r5, #0
	add	r6, r6, #0x3c
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r1, ip
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, sl
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L184+0x18
	mov	r8, r2
	mov	r0, r8
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L184+0x1c
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L181	@cond_branch
	ldr	r0, .L184+0x8
	mov	r2, r9
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r3, [r1, #0x10]
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bhi	.L169	@cond_branch
	ldr	r2, .L184+0x20
	mov	r0, #0x10
	ldrsh	r1, [r1, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r1, [r5, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L169	@cond_branch
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	add	r0, r0, #0x29
	add	r0, r6, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L184+0x14
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldrh	r2, [r2]
	add	r1, r1, r2
	mov	r2, r8
	and	r1, r1, r2
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L184+0x1c
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
.L169:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	gMain
	.word	gTasks+0x8
	.word	gTasks
	.word	gUnknown_0203AB88
	.word	0xffff
	.word	gSprites
	.word	0x3ff
	.word	-0x400
	.word	gUnknown_085B6154
.Lfe17:
	.size	 sub_8140D6C,.Lfe17-sub_8140D6C
	.align	2, 0
	.type	 sub_8140F6C,function
	.thumb_func
sub_8140F6C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IncrementDailyRouletteUses
	ldr	r0, .L189
	ldr	r1, [r0]
	mov	r0, #0xff
	strh	r0, [r1, #0x28]
	ldrb	r2, [r1, #0x19]
	cmp	r2, #0x1
	bne	.L187	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x23
	strb	r2, [r0]
	b	.L188
.L190:
	.align	2, 0
.L189:
	.word	gUnknown_0203AB88
.L187:
	add	r1, r1, #0x23
	mov	r0, #0x0
	strb	r0, [r1]
.L188:
	ldr	r0, .L191
	ldr	r0, [r0]
	add	r0, r0, #0x21
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L191+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x20
	strh	r1, [r0, #0xa]
	ldr	r1, .L191+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	sub_81410FC
.Lfe18:
	.size	 sub_8140F6C,.Lfe18-sub_8140F6C
	.align	2, 0
	.type	 sub_8140FC4,function
	.thumb_func
sub_8140FC4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L195
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r2, r2, #0x1b
	add	r2, r2, r1
	ldr	r3, .L195+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r5, r1, r3
	ldrh	r0, [r5, #0x10]
	strb	r0, [r2]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	sub_8142758
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0xc]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	sub_81436D0
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x19]
	ldrh	r0, [r5, #0x22]
	sub	r0, r0, r1
	strh	r0, [r5, #0x22]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L194	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x22]
.L194:
	ldrh	r0, [r5, #0x22]
	bl	sub_8143514
	ldr	r0, .L195+0x8
	str	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	sub_8140F6C
.Lfe19:
	.size	 sub_8140FC4,.Lfe19-sub_8140FC4
	.align	2, 0
	.type	 sub_8141040,function
	.thumb_func
sub_8141040:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	sub_8140D6C
	ldr	r1, .L209
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1e
	beq	.L200	@cond_branch
	cmp	r0, #0x1e
	bgt	.L204	@cond_branch
	cmp	r0, #0
	beq	.L199	@cond_branch
	b	.L202
.L210:
	.align	2, 0
.L209:
	.word	gTasks
.L204:
	cmp	r0, #0x3b
	beq	.L201	@cond_branch
	b	.L202
.L199:
	ldrb	r0, [r4, #0x10]
	b	.L208
.L200:
	mov	r0, #0x0
.L208:
	bl	sub_81409B8
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L198
.L201:
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
	b	.L198
.L202:
	ldr	r0, .L211
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L198:
	ldr	r0, .L211+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L205	@cond_branch
	ldr	r0, .L211+0x8
	ldr	r3, [r0]
	ldr	r2, .L211+0xc
	ldr	r1, .L211
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r1, [r3, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L206	@cond_branch
	mov	r0, #0x16
	bl	PlaySE
	b	.L205
.L212:
	.align	2, 0
.L211:
	.word	gTasks
	.word	gMain
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6154
.L206:
	mov	r0, #0x5f
	bl	m4aSongNumStart
	ldr	r0, .L213
	str	r0, [r4]
.L205:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	sub_8140FC4
.Lfe20:
	.size	 sub_8141040,.Lfe20-sub_8141040
	.align	2, 0
	.type	 sub_81410FC,function
	.thumb_func
sub_81410FC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L220
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L216	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L217	@cond_branch
	ldr	r1, .L220+0x4
	ldrh	r0, [r1]
	add	r0, r0, #0x2
	strh	r0, [r1]
.L217:
	ldr	r0, .L220+0x8
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x4
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x68
	bne	.L219	@cond_branch
	ldr	r2, .L220+0xc
	add	r0, r1, #0
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L220+0x10
	str	r1, [r0]
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	gTasks
	.word	gSpriteCoordOffsetX
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	SpriteCallbackDummy
.L216:
	mov	r0, #0x1
	mov	r1, #0xff
	bl	sub_8142E70
	mov	r0, #0x1
	mov	r1, #0xff
	bl	sub_8143038
	ldr	r0, .L222
	str	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
.L219:
	pop	{r4}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	sub_8141344
.Lfe21:
	.size	 sub_81410FC,.Lfe21-sub_81410FC
	.align	2, 0
	.type	 sub_814118C,function
	.thumb_func
sub_814118C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L262
	ldr	r3, [r0]
	ldrb	r2, [r3, #0x2]
	add	r5, r0, #0
	cmp	r2, #0x2
	bgt	.L258	@cond_branch
	cmp	r2, #0x1
	bge	.L227	@cond_branch
	b	.L244
.L263:
	.align	2, 0
.L262:
	.word	gUnknown_0203AB88
.L258:
	cmp	r2, #0x3
	beq	.L235	@cond_branch
	b	.L244
.L227:
	ldr	r0, .L264
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L228	@cond_branch
	cmp	r4, #0xb
	bls	.L230	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L261	@cond_branch
.L230:
	ldr	r0, .L264+0x4
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L265:
	.align	2, 0
.L264:
	.word	gLocalTime
	.word	gUnknown_085B6348
.L228:
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L233	@cond_branch
	ldr	r0, .L266
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L267:
	.align	2, 0
.L266:
	.word	gUnknown_085B6348
.L233:
	ldr	r0, .L268
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	b	.L260
.L269:
	.align	2, 0
.L268:
	.word	gUnknown_085B6348
.L235:
	ldr	r0, .L270
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x6
	bhi	.L236	@cond_branch
	cmp	r4, #0x5
	bls	.L238	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L261	@cond_branch
.L238:
	ldr	r0, .L270+0x4
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L271:
	.align	2, 0
.L270:
	.word	gLocalTime
	.word	gUnknown_085B6348
.L236:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L241	@cond_branch
	cmp	r4, #0x6
	bls	.L241	@cond_branch
	ldr	r0, .L272
	ldrb	r1, [r3, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x19
	add	r1, r1, r0
	ldrb	r0, [r1, #0x2]
	lsr	r0, r0, #0x2
	b	.L260
.L273:
	.align	2, 0
.L272:
	.word	gUnknown_085B6348
.L241:
	ldr	r1, .L274
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L275:
	.align	2, 0
.L274:
	.word	gUnknown_085B6348
.L244:
	ldr	r0, .L276
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L245	@cond_branch
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L246	@cond_branch
.L261:
	mov	r0, #0x1
	b	.L259
.L277:
	.align	2, 0
.L276:
	.word	gLocalTime
.L246:
	ldr	r1, .L278
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L279:
	.align	2, 0
.L278:
	.word	gUnknown_085B6348
.L245:
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L249	@cond_branch
	cmp	r4, #0xc
	bls	.L250	@cond_branch
	ldr	r1, .L280
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	lsr	r0, r0, #0x1
	b	.L260
.L281:
	.align	2, 0
.L280:
	.word	gUnknown_085B6348
.L250:
	ldr	r1, .L282
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	b	.L260
.L283:
	.align	2, 0
.L282:
	.word	gUnknown_085B6348
.L249:
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L253	@cond_branch
	cmp	r4, #0xc
	bls	.L254	@cond_branch
	ldr	r1, .L284
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	b	.L260
.L285:
	.align	2, 0
.L284:
	.word	gUnknown_085B6348
.L254:
	ldr	r1, .L286
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	b	.L260
.L287:
	.align	2, 0
.L286:
	.word	gUnknown_085B6348
.L253:
	ldr	r1, .L288
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x18
.L260:
.L259:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L289:
	.align	2, 0
.L288:
	.word	gUnknown_085B6348
.Lfe22:
	.size	 sub_814118C,.Lfe22-sub_814118C
	.section .rodata
	.align	1, 0
.LC94:
	.short	0x0
	.short	0xb4
	.short	0x5a
	.short	0x10e
.text
	.align	2, 0
	.type	 sub_8141344,function
	.thumb_func
sub_8141344:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r4, #0x0
	ldr	r1, .L301
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	add	r0, r7, #0
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r3, .L301+0x4
	ldr	r0, [r3]
	ldr	r2, .L301+0x8
	mov	r5, sl
	lsl	r1, r5, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r1, #0x14]
	add	r0, r0, #0x7c
	strb	r2, [r0]
	ldr	r0, [r3]
	add	r2, r0, #0
	add	r2, r2, #0x7f
	strb	r4, [r2]
	sub	r2, r2, #0x1
	strb	r4, [r2]
	add	r0, r0, #0x7d
	strb	r4, [r0]
	ldrh	r0, [r1, #0x18]
	add	r1, r7, #0
	bl	sub_814118C
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r1, r4, #0x18
	add	r0, r7, #0
	bl	__modsi3
	lsr	r4, r4, #0x19
	sub	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L301+0xc
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r5, #0x1
	cmp	r0, #0xc
	bgt	.L291	@cond_branch
	mov	r5, #0x0
.L291:
	cmp	r6, #0x4f
	bhi	.L293	@cond_branch
	lsl	r0, r5, #0x19
	b	.L300
.L302:
	.align	2, 0
.L301:
	.word	.LC94
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	gLocalTime
.L293:
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	mov	r0, #0x1
	sub	r0, r0, r1
	lsl	r0, r0, #0x19
.L300:
	lsr	r5, r0, #0x18
	ldr	r0, .L303
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	ldr	r1, .L303+0x4
	add	r0, r0, r1
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	ldrh	r0, [r0, #0x1a]
	add	r4, r4, r0
	add	r0, r6, #0
	add	r0, r0, #0x80
	strh	r4, [r0]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L295	@cond_branch
	ldr	r1, .L303+0x8
	bl	__addsf3
.L295:
	ldr	r1, .L303+0xc
	bl	__divsf3
	bl	__fixunssfsi
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	mov	r2, #0x82
	add	r2, r2, r6
	mov	r8, r2
	strh	r0, [r2]
	add	r0, r6, #0
	add	r0, r0, #0x84
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	mov	r0, #0x88
	add	r0, r0, r6
	mov	r9, r0
	mov	r0, #0x1
	and	r0, r0, r7
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	mov	r1, #0x0
	ldrsh	r4, [r0, r1]
	add	r0, r4, #0
	bl	__floatsisf
	cmp	r4, #0
	bge	.L296	@cond_branch
	ldr	r1, .L303+0x8
	bl	__addsf3
.L296:
	mov	r2, r9
	str	r0, [r2]
	add	r7, r6, #0
	add	r7, r7, #0x8c
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	ldr	r5, .L303+0x4
	add	r0, r0, r5
	mov	r1, #0x18
	ldrsh	r4, [r0, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r5, r0, #0
	cmp	r4, #0
	bge	.L297	@cond_branch
	ldr	r1, .L303+0x8
	bl	__addsf3
	add	r5, r0, #0
.L297:
	str	r5, [r7]
	add	r7, r6, #0
	add	r7, r7, #0x90
	ldr	r1, .L303+0x10
	add	r0, r5, #0
	bl	__mulsf3
	add	r1, r5, #0
	bl	__subsf3
	add	r5, r0, #0
	mov	r2, r8
	mov	r0, #0x0
	ldrsh	r4, [r2, r0]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L298	@cond_branch
	ldr	r1, .L303+0x8
	bl	__addsf3
	add	r2, r0, #0
.L298:
	add	r0, r5, #0
	add	r1, r2, #0
	bl	__divsf3
	str	r0, [r7]
	add	r1, r6, #0
	add	r1, r1, #0x94
	ldr	r0, .L303+0x14
	str	r0, [r1]
	add	r1, r1, #0x8
	ldr	r0, .L303+0x18
	str	r0, [r1]
	add	r5, r6, #0
	add	r5, r5, #0x98
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r4, [r1, r2]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L299	@cond_branch
	ldr	r1, .L303+0x8
	bl	__addsf3
	add	r2, r0, #0
.L299:
	ldr	r0, .L303+0x1c
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	str	r0, [r5]
	add	r1, r6, #0
	add	r1, r1, #0xa0
	ldr	r0, .L303+0x20
	str	r0, [r1]
	ldr	r1, .L303+0x24
	mov	r5, sl
	lsl	r0, r5, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L303+0x28
	str	r1, [r0]
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6348
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x40a00000	@ float 5.00000000000000000000e0
	.word 0x3f000000	@ float 5.00000000000000000000e-1
	.word 0x42880000	@ float 6.80000000000000000000e1
	.word 0x0	@ float 0.00000000000000000000e0
	.word 0x41000000	@ float 8.00000000000000000000e0
	.word 0x42100000	@ float 3.60000000000000000000e1
	.word	gTasks
	.word	sub_814155C
.Lfe23:
	.size	 sub_8141344,.Lfe23-sub_8141344
	.align	2, 0
	.type	 sub_814155C,function
	.thumb_func
sub_814155C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L306
	ldr	r3, [r4]
	ldrb	r1, [r3, #0x3]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r3, #0x3]
	ldr	r3, [r4]
	add	r2, r3, #0
	add	r2, r2, #0x7c
	add	r1, r3, #0
	add	r1, r1, #0x3c
	ldrb	r2, [r2]
	add	r1, r1, r2
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L306+0x4
	add	r1, r1, r2
	str	r1, [r3, #0x38]
	ldr	r2, .L306+0x8
	str	r2, [r1, #0x1c]
	ldr	r1, .L306+0xc
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrh	r1, [r4, #0x14]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x14]
	ldrh	r0, [r4, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x18]
	mov	r0, #0x6
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_814372C
	mov	r0, #0x5c
	bl	m4aSongNumStart
	ldr	r0, .L306+0x10
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L307:
	.align	2, 0
.L306:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	sub_81446AC
	.word	gTasks
	.word	sub_81415D4
.Lfe24:
	.size	 sub_814155C,.Lfe24-sub_814155C
	.align	2, 0
	.type	 sub_81415D4,function
	.thumb_func
sub_81415D4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L318
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x7d
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L309	@cond_branch
	ldrb	r1, [r3, #0x3]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L310	@cond_branch
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L309	@cond_branch
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3, #0x3]
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	b	.L309
.L319:
	.align	2, 0
.L318:
	.word	gUnknown_0203AB88
.L310:
	ldr	r2, .L320
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r2
	mov	r2, #0xa
	ldrsh	r0, [r5, r2]
	add	r7, r1, #0
	cmp	r0, #0
	bne	.L313	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x7e
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	sub_81420D0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r2, r2, #0x1b
	add	r2, r2, r1
	ldrb	r1, [r2]
	bl	sub_81421E8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x12]
	cmp	r0, #0x1
	bne	.L313	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0xb8
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	bl	sub_8151A48
.L313:
	ldr	r0, .L320
	add	r1, r7, r4
	lsl	r1, r1, #0x3
	add	r4, r1, r0
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3c
	bgt	.L315	@cond_branch
	ldr	r0, .L320+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L316	@cond_branch
	mov	r0, #0x3c
	strh	r0, [r4, #0xa]
.L316:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L309
.L321:
	.align	2, 0
.L320:
	.word	gTasks
	.word	gMain
.L315:
	ldr	r0, .L322
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	sub_81424FC
	ldrh	r1, [r4, #0x20]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	sub_8142E70
	ldrb	r1, [r4, #0x14]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	sub_8143038
	mov	r0, #0x20
	strh	r0, [r4, #0xa]
	ldr	r0, .L322+0x4
	str	r0, [r4]
.L309:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	gUnknown_0203AB88
	.word	sub_81416D4
.Lfe25:
	.size	 sub_81415D4,.Lfe25-sub_81415D4
	.align	2, 0
	.type	 sub_81416D4,function
	.thumb_func
sub_81416D4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L332
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L325	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L326	@cond_branch
	ldr	r1, .L332+0x4
	ldrh	r0, [r1]
	sub	r0, r0, #0x2
	strh	r0, [r1]
.L326:
	ldr	r0, .L332+0x8
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x26]
	sub	r0, r0, #0x4
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x68
	bne	.L328	@cond_branch
	ldr	r2, .L332+0xc
	add	r0, r1, #0
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L332+0x10
	str	r1, [r0]
	b	.L328
.L333:
	.align	2, 0
.L332:
	.word	gTasks
	.word	gSpriteCoordOffsetX
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	sub_814390C
.L325:
	ldrh	r0, [r4, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8143150
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L329	@cond_branch
	mov	r0, #0x79
	b	.L331
.L329:
	mov	r0, #0x3d
.L331:
	strh	r0, [r4, #0xa]
	ldr	r0, .L334
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L334+0x4
	str	r0, [r1]
.L328:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gTasks
	.word	sub_8141778
.Lfe26:
	.size	 sub_81416D4,.Lfe26-sub_81416D4
	.align	2, 0
	.type	 sub_8141778,function
	.thumb_func
sub_8141778:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L345
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r0, [r4, #0xa]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L337	@cond_branch
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L343	@cond_branch
	add	r0, r0, #0xf
.L343:
	asr	r0, r0, #0x4
	lsl	r0, r0, #0x4
	sub	r0, r1, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L340	@cond_branch
	cmp	r0, #0x8
	bne	.L344	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xff
	bl	sub_8142E70
	mov	r0, #0x0
	mov	r1, #0xff
	bl	sub_8143038
	b	.L344
.L346:
	.align	2, 0
.L345:
	.word	gTasks
.L340:
	ldrh	r1, [r4, #0x20]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	sub_8142E70
	ldrb	r1, [r4, #0x14]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	bl	sub_8143038
	b	.L344
.L337:
	ldr	r1, .L347
	add	r0, r2, #0
	mov	r2, #0x1e
	mov	r3, #0x0
	bl	sub_8141F7C
.L344:
	pop	{r4}
	pop	{r0}
	bx	r0
.L348:
	.align	2, 0
.L347:
	.word	sub_814189C
.Lfe27:
	.size	 sub_8141778,.Lfe27-sub_8141778
	.align	2, 0
	.type	 sub_8141800,function
	.thumb_func
sub_8141800:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L359
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L356	@cond_branch
	cmp	r0, #0
	blt	.L356	@cond_branch
	cmp	r0, #0x2
	bgt	.L356	@cond_branch
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L350	@cond_branch
	mov	r0, #0x1d
	bl	GetGameStat
	ldrh	r1, [r4, #0x1e]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x1e]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r0, r1
	bcs	.L354	@cond_branch
	mov	r0, #0x1e
	ldrsh	r1, [r4, r0]
	mov	r0, #0x1d
	bl	SetGameStat
.L354:
	ldr	r1, .L359+0x4
	ldr	r2, .L359+0x8
	add	r0, r5, #0
	mov	r3, #0x3
	bl	sub_8141F7C
	b	.L350
.L360:
	.align	2, 0
.L359:
	.word	gTasks
	.word	sub_8141A18
	.word	0xffff
.L356:
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L350	@cond_branch
	ldr	r1, .L361
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r2, [r0, #0x1e]
	ldr	r1, .L361+0x4
	ldr	r2, .L361+0x8
	add	r0, r5, #0
	mov	r3, #0x3
	bl	sub_8141F7C
.L350:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gTasks
	.word	sub_8141AC0
	.word	0xffff
.Lfe28:
	.size	 sub_8141800,.Lfe28-sub_8141800
	.align	2, 0
	.type	 sub_814189C,function
	.thumb_func
sub_814189C:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L373
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x12
	ldrsh	r1, [r0, r2]
	cmp	r1, #0
	beq	.L370	@cond_branch
	cmp	r1, #0
	blt	.L370	@cond_branch
	cmp	r1, #0x2
	bgt	.L370	@cond_branch
	mov	r1, #0xc
	ldrsh	r0, [r0, r1]
	cmp	r0, #0xc
	bne	.L367	@cond_branch
	ldr	r0, .L373+0x4
	bl	PlayFanfare
	ldr	r4, .L373+0x8
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L373+0xc
	b	.L372
.L374:
	.align	2, 0
.L373:
	.word	gTasks
	.word	0x185
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_Jackpot
.L367:
	mov	r0, #0xc3
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	ldr	r4, .L375
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L375+0x4
.L372:
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L364
.L376:
	.align	2, 0
.L375:
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_ItsAHit
.L370:
	mov	r0, #0x20
	bl	m4aSongNumStart
	ldr	r4, .L377
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L377+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
.L364:
	ldr	r1, .L377+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	ldr	r1, .L377+0xc
	str	r1, [r0]
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L378:
	.align	2, 0
.L377:
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_NothingDoing
	.word	gTasks
	.word	sub_8141800
.Lfe29:
	.size	 sub_814189C,.Lfe29-sub_814189C
	.align	2, 0
	.type	 sub_8141984,function
	.thumb_func
sub_8141984:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L389
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x16
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	beq	.L381	@cond_branch
	cmp	r5, #0x3
	beq	.L384	@cond_branch
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	b	.L388
.L390:
	.align	2, 0
.L389:
	.word	gTasks
.L381:
	ldrh	r0, [r4, #0x22]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x22]
	mov	r0, #0x15
	bl	m4aSongNumStart
	ldrh	r0, [r4, #0x22]
	bl	sub_8143514
	mov	r2, #0x22
	ldrsh	r1, [r4, r2]
	ldr	r0, .L391
	cmp	r1, r0
	ble	.L382	@cond_branch
	strh	r5, [r4, #0xa]
	b	.L380
.L392:
	.align	2, 0
.L391:
	.word	0x270e
.L382:
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	b	.L388
.L384:
	mov	r0, #0x15
	bl	m4aSongNumStop
	mov	r0, #0x0
.L388:
	strh	r0, [r4, #0x16]
.L380:
	ldr	r0, .L393
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L387	@cond_branch
	ldr	r1, .L393+0x4
	ldr	r2, .L393+0x8
	add	r0, r6, #0
	mov	r3, #0x3
	bl	sub_8141F7C
.L387:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L394:
	.align	2, 0
.L393:
	.word	gTasks
	.word	sub_8141AC0
	.word	0xffff
.Lfe30:
	.size	 sub_8141984,.Lfe30-sub_8141984
	.align	2, 0
	.type	 sub_8141A18,function
	.thumb_func
sub_8141A18:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L396
	ldr	r1, .L396+0x4
	mov	r9, r1
	ldr	r1, [r1]
	ldrb	r2, [r1, #0x19]
	ldr	r1, .L396+0x8
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	mov	r1, r2
	mul	r1, r1, r0
	add	r0, r3, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r2, .L396+0xc
	mov	r8, r2
	ldr	r1, .L396+0x10
	mov	r0, r8
	bl	StringExpandPlaceholders
	ldr	r5, .L396+0x14
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, r8
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r1, r9
	ldr	r0, [r1]
	ldrb	r1, [r0, #0x19]
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	mul	r0, r0, r1
	strh	r0, [r4, #0xa]
	strh	r6, [r4, #0x16]
	ldr	r0, .L396+0x18
	str	r0, [r4]
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	gStringVar1
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	gStringVar4
	.word	Roulette_Text_YouveWonXCoins
	.word	gUnknown_0203AB8C
	.word	sub_8141984
.Lfe31:
	.size	 sub_8141A18,.Lfe31-sub_8141A18
	.align	2, 0
	.type	 sub_8141AC0,function
	.thumb_func
sub_8141AC0:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L399
	ldr	r0, [r5]
	add	r0, r0, #0xb8
	ldr	r1, .L399+0x4
	bl	sub_8151A9C
	ldr	r6, [r5]
	mov	r0, #0xb8
	lsl	r0, r0, #0x1
	add	r3, r6, r0
	ldrb	r2, [r3]
	mov	r1, #0x7f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xb2
	lsl	r0, r0, #0x1
	add	r3, r6, r0
	ldrb	r2, [r3]
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	mov	r0, #0xac
	lsl	r0, r0, #0x1
	add	r2, r6, r0
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	ldr	r6, .L399+0x8
	ldr	r2, [r5]
	ldr	r5, .L399+0xc
	ldr	r0, .L399+0x10
	lsl	r3, r4, #0x2
	add	r3, r3, r4
	lsl	r3, r3, #0x3
	add	r3, r3, r0
	mov	r0, #0x20
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0]
	add	r2, r2, r0
	add	r2, r2, #0x43
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L399+0x14
	str	r0, [r3]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	gUnknown_0203AB88
	.word	0xffff
	.word	gSprites
	.word	gUnknown_085B6154
	.word	gTasks
	.word	sub_8141B58
.Lfe32:
	.size	 sub_8141AC0,.Lfe32-sub_8141AC0
	.align	2, 0
	.type	 sub_8141B58,function
	.thumb_func
sub_8141B58:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	ldr	r1, .L414
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x0
	strh	r5, [r0, #0x10]
	ldr	r4, .L414+0x4
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	add	r1, r1, #0x1b
	add	r1, r1, r0
	strb	r2, [r1]
	mov	r0, #0x0
	bl	sub_81424FC
	ldr	r3, .L414+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r7, r3, #0
	mov	r0, #0x8
	add	r0, r0, r7
	mov	ip, r0
	ldr	r1, .L414+0xc
	mov	r8, r1
.L405:
	ldr	r0, .L414+0x4
	ldr	r4, [r0]
	add	r0, r4, r5
	add	r0, r0, #0x65
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, ip
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L414+0x10
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L405	@cond_branch
	ldr	r0, .L414
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r2, r1, r0
	mov	r1, #0x22
	ldrsh	r0, [r2, r1]
	ldrb	r4, [r4, #0x19]
	cmp	r0, r4
	blt	.L407	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x6
	bne	.L408	@cond_branch
	ldr	r4, .L414+0x14
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L414+0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L414+0x1c
	b	.L413
.L415:
	.align	2, 0
.L414:
	.word	gTasks
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	-0x400
	.word	0x3ff
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_BoardWillBeCleared
	.word	dp01t_12_3_battle_menu
.L408:
	mov	r0, #0x22
	ldrsh	r1, [r2, r0]
	ldr	r0, .L416
	cmp	r1, r0
	bne	.L410	@cond_branch
	ldr	r4, .L416+0x4
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L416+0x8
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L416+0xc
.L413:
	ldr	r2, .L416+0x10
	add	r0, r6, #0
	mov	r3, #0x3
	bl	sub_8141F7C
	b	.L412
.L417:
	.align	2, 0
.L416:
	.word	0x270f
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_CoinCaseIsFull
	.word	sub_8140914
	.word	0xffff
.L410:
	ldr	r0, .L418
	str	r0, [r2]
	b	.L412
.L419:
	.align	2, 0
.L418:
	.word	sub_8140914
.L407:
	ldr	r4, .L420
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L420+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L420+0x8
	add	r0, r6, #0
	mov	r2, #0x3c
	mov	r3, #0x3
	bl	sub_8141F7C
.L412:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L421:
	.align	2, 0
.L420:
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_NoCoinsLeft
	.word	sub_8140994
.Lfe33:
	.size	 sub_8141B58,.Lfe33-sub_8141B58
	.align	2, 0
	.type	 dp01t_12_3_battle_menu,function
	.thumb_func
dp01t_12_3_battle_menu:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r1, .L430
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r4, [r0, #0x14]
	add	r0, r5, #0
	bl	sub_8141FF4
	bl	sub_8142070
	bl	sub_8143A40
	mov	r0, #0x0
	bl	sub_81424FC
	mov	r0, #0x6
	bl	sub_814372C
	ldr	r7, .L430+0x4
	ldr	r3, .L430+0x8
	mov	r6, #0x5
	neg	r6, r6
.L426:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L426	@cond_branch
	ldr	r1, .L430
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r0, #0x22
	ldrsh	r1, [r2, r0]
	ldr	r0, .L430+0xc
	cmp	r1, r0
	bne	.L428	@cond_branch
	ldr	r4, .L430+0x10
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r4]
	ldr	r2, .L430+0x14
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L430+0x18
	ldr	r2, .L430+0x1c
	add	r0, r5, #0
	mov	r3, #0x3
	bl	sub_8141F7C
	b	.L429
.L431:
	.align	2, 0
.L430:
	.word	gTasks
	.word	gSprites
	.word	gUnknown_0203AB88
	.word	0x270f
	.word	gUnknown_0203AB8C
	.word	Roulette_Text_CoinCaseIsFull
	.word	sub_8140914
	.word	0xffff
.L428:
	ldr	r0, .L432
	str	r0, [r2]
.L429:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L433:
	.align	2, 0
.L432:
	.word	sub_8140914
.Lfe34:
	.size	 dp01t_12_3_battle_menu,.Lfe34-dp01t_12_3_battle_menu
	.align	2, 0
	.type	 sub_8141DE4,function
	.thumb_func
sub_8141DE4:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L438
	ldr	r0, [r4]
	add	r0, r0, #0xb8
	ldr	r1, .L438+0x4
	bl	sub_8151A9C
	ldr	r0, [r4]
	add	r0, r0, #0xb8
	bl	sub_8151678
	ldr	r1, .L438+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x22]
	bl	SetCoins
	bl	GetCoins
	ldr	r1, [r4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x19]
	cmp	r0, r1
	bcs	.L435	@cond_branch
	ldr	r1, .L438+0xc
	mov	r0, #0x1
	b	.L437
.L439:
	.align	2, 0
.L438:
	.word	gUnknown_0203AB88
	.word	0xffff
	.word	gTasks
	.word	gSpecialVar_0x8004
.L435:
	ldr	r1, .L440
	mov	r0, #0x0
.L437:
	strh	r0, [r1]
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	AlertTVOfNewCoinTotal
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginHardwarePaletteFade
	ldr	r1, .L440+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L440+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L441:
	.align	2, 0
.L440:
	.word	gSpecialVar_0x8004
	.word	gTasks
	.word	sub_8141E7C
.Lfe35:
	.size	 sub_8141DE4,.Lfe35-sub_8141DE4
	.align	2, 0
	.type	 sub_8141E7C,function
	.thumb_func
sub_8141E7C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L443	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r1, .L444
	ldr	r0, .L444+0x4
	strh	r4, [r0]
	strh	r4, [r1]
	bl	ResetVramOamAndBgCntRegs
	bl	ResetAllBgsCoordinates
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	sub_8140418
	ldr	r1, .L444+0x8
	ldr	r0, .L444+0xc
	str	r0, [r1]
	ldr	r0, .L444+0x10
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L443:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L445:
	.align	2, 0
.L444:
	.word	gSpriteCoordOffsetX
	.word	gSpriteCoordOffsetY
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptHandleMusic
	.word	CB2_ReturnToField
.Lfe36:
	.size	 sub_8141E7C,.Lfe36-sub_8141E7C
	.align	2, 0
	.type	 sub_8141EF8,function
	.thumb_func
sub_8141EF8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L451
	ldr	r3, [r1]
	add	r0, r3, #0
	add	r0, r0, #0xa8
	ldrh	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L448	@cond_branch
	ldr	r0, .L451+0x4
	add	r2, r3, #0
	add	r2, r2, #0xaa
	ldrh	r1, [r0, #0x2e]
	ldrh	r0, [r2]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L447	@cond_branch
.L448:
	ldr	r1, .L451+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0xac
	ldr	r1, [r1]
	str	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0xaa
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L449	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L449:
	ldr	r2, [r5]
	add	r0, r2, #0
	add	r0, r0, #0xac
	mov	r1, #0x0
	str	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
.L447:
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrh	r2, [r1]
	ldr	r0, .L451+0xc
	cmp	r2, r0
	beq	.L450	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L450:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L452:
	.align	2, 0
.L451:
	.word	gUnknown_0203AB88
	.word	gMain
	.word	gTasks
	.word	0xffff
.Lfe37:
	.size	 sub_8141EF8,.Lfe37-sub_8141EF8
	.align	2, 0
	.type	 sub_8141F7C,function
	.thumb_func
sub_8141F7C:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r7, r3, #0x10
	ldr	r2, .L457
	ldr	r0, [r2]
	mov	ip, r0
	mov	r3, ip
	add	r3, r3, #0xb4
	ldr	r1, .L457+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r3]
	add	r3, r1, #0
	cmp	r5, #0
	bne	.L454	@cond_branch
	add	r5, r0, #0
.L454:
	mov	r0, ip
	add	r0, r0, #0xac
	str	r5, [r0]
	sub	r0, r0, #0x4
	strh	r4, [r0]
	ldr	r0, .L457+0x8
	cmp	r4, r0
	bne	.L455	@cond_branch
	cmp	r7, #0
	bne	.L455	@cond_branch
	mov	r1, ip
	add	r1, r1, #0xaa
	ldrh	r0, [r1]
	orr	r4, r4, r0
	strh	r4, [r1]
	b	.L456
.L458:
	.align	2, 0
.L457:
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	0xffff
.L455:
	ldr	r0, [r2]
	add	r0, r0, #0xaa
	strh	r7, [r0]
.L456:
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r1, .L459
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L460:
	.align	2, 0
.L459:
	.word	sub_8141EF8
.Lfe38:
	.size	 sub_8141F7C,.Lfe38-sub_8141F7C
	.align	2, 0
	.type	 sub_8141FF4,function
	.thumb_func
sub_8141FF4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r3, .L467
	ldr	r0, [r3]
	strb	r4, [r0]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r6, .L467+0x4
	add	r2, r3, #0
	mov	r1, #0x0
.L465:
	ldr	r0, [r2]
	add	r0, r0, #0x1b
	add	r0, r0, r4
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L465	@cond_branch
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L468:
	.align	2, 0
.L467:
	.word	gUnknown_0203AB88
	.word	gTasks
.Lfe39:
	.size	 sub_8141FF4,.Lfe39-sub_8141FF4
	.align	2, 0
	.type	 sub_8142070,function
	.thumb_func
sub_8142070:
	push	{lr}
	ldr	r2, .L485
	ldr	r1, [r2]
	mov	r0, #0x0
	str	r0, [r1, #0x8]
	mov	r1, #0x0
	mov	r3, #0x0
.L473:
	ldr	r0, [r2]
	add	r0, r0, #0xc
	add	r0, r0, r1
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x5
	bls	.L473	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L485
	mov	r2, #0x0
.L478:
	ldr	r0, [r3]
	add	r0, r0, #0x12
	add	r0, r0, r1
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L478	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L485
	mov	r2, #0x0
.L483:
	ldr	r0, [r3]
	add	r0, r0, #0x16
	add	r0, r0, r1
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L483	@cond_branch
	mov	r0, #0x1
	mov	r1, #0xff
	bl	sub_8143038
	pop	{r0}
	bx	r0
.L486:
	.align	2, 0
.L485:
	.word	gUnknown_0203AB88
.Lfe40:
	.size	 sub_8142070,.Lfe40-sub_8142070
	.section .rodata
	.align	2, 0
.LC180:
	.word	0x10842
	.word	0x21084
	.word	0x42108
	.word	0x84210
	.align	2, 0
.LC182:
	.word	0x3e0
	.word	0x7c00
	.word	0xf8000
.text
	.align	2, 0
	.type	 sub_81420D0,function
	.thumb_func
sub_81420D0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x1c
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r1, sp
	ldr	r0, .L504
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r2, sp, #0x10
	add	r1, r2, #0
	ldr	r0, .L504+0x4
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	mov	r8, r2
	cmp	r5, #0xb
	bls	.L488	@cond_branch
	mov	r0, #0x0
	b	.L503
.L505:
	.align	2, 0
.L504:
	.word	.LC180
	.word	.LC182
.L488:
	ldr	r6, .L506
	ldr	r3, [r6]
	ldr	r1, .L506+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r7, #0x14
	ldrsh	r1, [r0, r7]
	add	r3, r3, r1
	ldr	r4, .L506+0x8
	lsl	r5, r5, #0x3
	add	r2, r5, r4
	ldrb	r1, [r2, #0x2]
	strb	r1, [r3, #0xb]
	ldrb	r1, [r2, #0x2]
	strh	r1, [r0, #0x20]
	ldr	r2, [r6]
	add	r0, r4, #0x4
	add	r0, r5, r0
	ldr	r1, [r2, #0x8]
	ldr	r0, [r0]
	orr	r1, r1, r0
	str	r1, [r2, #0x8]
	mov	r3, #0x0
	mov	r9, r4
	mov	ip, r5
	add	r5, r0, #0
.L492:
	lsl	r0, r3, #0x2
	mov	r1, sp
	add	r4, r1, r0
	ldr	r0, [r4]
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L493	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, #0x12
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L493:
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x12
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bls	.L491	@cond_branch
	ldr	r0, [r2, #0x8]
	ldr	r1, [r4]
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
.L491:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3
	bls	.L492	@cond_branch
	mov	r6, #0x0
	ldr	r0, .L506+0xc
	add	r0, r0, ip
	ldr	r7, [r0]
	ldr	r4, .L506
	mov	r5, r8
.L499:
	lsl	r0, r6, #0x2
	add	r2, r5, r0
	ldr	r0, [r2]
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L500	@cond_branch
	ldr	r1, [r4]
	add	r1, r1, #0x16
	add	r1, r1, r6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L500:
	ldr	r3, [r4]
	add	r0, r3, #0
	add	r0, r0, #0x16
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bls	.L498	@cond_branch
	ldr	r0, [r3, #0x8]
	ldr	r1, [r2]
	orr	r0, r0, r1
	str	r0, [r3, #0x8]
.L498:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L499	@cond_branch
	mov	r0, ip
	add	r0, r0, r9
	ldrb	r0, [r0, #0x2]
.L503:
	add	sp, sp, #0x1c
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L507:
	.align	2, 0
.L506:
	.word	gUnknown_0203AB88
	.word	gTasks
	.word	gUnknown_085B62E4
	.word	gUnknown_085B62E4+0x4
.Lfe41:
	.size	 sub_81420D0,.Lfe41-sub_81420D0
	.align	2, 0
	.type	 sub_81421E8,function
	.thumb_func
sub_81421E8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsr	r3, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x12
	bhi	.L509	@cond_branch
	cmp	r2, #0xf
	bhi	.L519	@cond_branch
	lsl	r0, r2, #0x2
	ldr	r1, .L525
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L526:
	.align	2, 0
.L525:
	.word	.L521
	.align	2, 0
	.align	2, 0
.L521:
	.word	.L511
	.word	.L512
	.word	.L512
	.word	.L512
	.word	.L512
	.word	.L517
	.word	.L519
	.word	.L519
	.word	.L519
	.word	.L519
	.word	.L517
	.word	.L519
	.word	.L519
	.word	.L519
	.word	.L519
	.word	.L517
.L511:
	mov	r0, #0x3
	b	.L522
.L512:
	add	r0, r2, #0x5
	cmp	r3, r0
	beq	.L524	@cond_branch
	add	r0, r0, #0x5
	cmp	r3, r0
	beq	.L524	@cond_branch
	add	r0, r0, #0x5
	cmp	r3, r0
	bne	.L509	@cond_branch
	b	.L524
.L517:
	add	r0, r2, #0x1
	cmp	r3, r0
	blt	.L509	@cond_branch
	add	r0, r2, #0x4
	cmp	r3, r0
	bgt	.L509	@cond_branch
.L524:
	mov	r0, #0x1
	b	.L522
.L519:
	cmp	r3, r2
	beq	.L524	@cond_branch
.L509:
	mov	r0, #0x0
.L522:
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 sub_81421E8,.Lfe42-sub_81421E8
	.align	2, 0
	.type	 sub_8142284,function
	.thumb_func
sub_8142284:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	str	r0, [sp, #0x18]
	cmp	r7, #0xa
	beq	.L531	@cond_branch
	cmp	r7, #0xa
	bgt	.L562	@cond_branch
	cmp	r7, #0x5
	beq	.L531	@cond_branch
	b	.L538
.L562:
	cmp	r7, #0xf
	bne	.L538	@cond_branch
.L531:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r2, r7, #0x5
	ldr	r1, .L564
	mov	ip, r1
	cmp	r4, r2
	bge	.L533	@cond_branch
	ldr	r0, [r1]
	ldr	r3, .L564+0x4
	ldr	r5, [r0, #0x8]
	add	r6, r3, #0
	add	r6, r6, #0x8
.L535:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r1, r0, #0x2
	add	r0, r1, r6
	ldr	r0, [r0]
	and	r0, r0, r5
	cmp	r0, #0
	bne	.L534	@cond_branch
	add	r0, r1, r3
	ldrh	r0, [r0, #0x10]
	ldr	r1, [sp, #0x18]
	orr	r1, r1, r0
	str	r1, [sp, #0x18]
.L534:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r2
	blt	.L535	@cond_branch
.L533:
	mov	r2, ip
	ldr	r0, [r2]
	add	r0, r0, #0xb8
	ldr	r1, .L564+0x8
	ldr	r3, [sp, #0x18]
	and	r3, r3, r1
	str	r3, [sp, #0x18]
	add	r1, r3, #0
	bl	sub_8151A48
	b	.L528
.L565:
	.align	2, 0
.L564:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6154
	.word	0xdfff
.L538:
	mov	r0, sp
	ldr	r1, .L566
	ldmia	r1!, {r2, r4, r5}
	stmia	r0!, {r2, r4, r5}
	ldmia	r1!, {r3, r4, r5}
	stmia	r0!, {r3, r4, r5}
	sub	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	mov	r9, r1
	cmp	r0, #0x3
	bhi	.L539	@cond_branch
	mov	r2, #0x3
	mov	r9, r2
.L539:
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r3, .L566+0x4
	add	r0, r0, r3
	lsr	r0, r0, #0x10
	mov	r8, r0
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L543	@cond_branch
	cmp	r0, #0x2
	bgt	.L548	@cond_branch
	cmp	r0, #0x1
	beq	.L542	@cond_branch
	ldr	r4, .L566+0x8
	mov	ip, r4
	b	.L541
.L567:
	.align	2, 0
.L566:
	.word	gUnknown_085B63F0
	.word	-0x10000
	.word	gUnknown_0203AB88
.L548:
	cmp	r0, #0x3
	beq	.L544	@cond_branch
	cmp	r0, #0x4
	beq	.L545	@cond_branch
	ldr	r5, .L568
	mov	ip, r5
	b	.L541
.L569:
	.align	2, 0
.L568:
	.word	gUnknown_0203AB88
.L542:
	ldr	r3, .L570
	ldr	r2, .L570+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x43
	b	.L563
.L571:
	.align	2, 0
.L570:
	.word	gSprites
	.word	gUnknown_0203AB88
.L543:
	ldr	r3, .L572
	ldr	r2, .L572+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x44
	b	.L563
.L573:
	.align	2, 0
.L572:
	.word	gSprites
	.word	gUnknown_0203AB88
.L544:
	ldr	r3, .L574
	ldr	r2, .L574+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x45
	b	.L563
.L575:
	.align	2, 0
.L574:
	.word	gSprites
	.word	gUnknown_0203AB88
.L545:
	ldr	r3, .L576
	ldr	r2, .L576+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x46
.L563:
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	lsr	r0, r0, #0x4
	lsl	r0, r0, #0x4
	mov	r8, r0
	mov	ip, r2
.L541:
	mov	r0, r9
	cmp	r0, #0x1
	bne	.L549	@cond_branch
	mov	r1, ip
	ldr	r4, [r1]
	ldr	r1, .L576+0x8
	lsl	r2, r7, #0x2
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldr	r1, [r4, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	str	r2, [sp, #0x1c]
	cmp	r1, #0
	bne	.L528	@cond_branch
	add	r0, r7, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x3
	mov	r3, sp
	add	r2, r3, r1
	ldrh	r1, [r2, #0x2]
	add	r1, r1, r8
	strh	r1, [r2, #0x2]
	add	r1, r4, #0
	add	r1, r1, #0xb8
	lsl	r0, r0, #0x3
	sub	r0, r0, #0x8
	add	r2, r3, r0
	add	r0, r1, #0
	mov	r1, #0xd
	bl	sub_815168C
	b	.L552
.L577:
	.align	2, 0
.L576:
	.word	gSprites
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6154
.L549:
	mov	r4, #0x0
	lsl	r5, r7, #0x2
	str	r5, [sp, #0x1c]
	ldr	r0, .L578
	mov	sl, r0
.L556:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	add	r0, r7, r0
	add	r0, r0, #0x5
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r1, ip
	ldr	r5, [r1]
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r6, r0, #0x2
	mov	r0, sl
	add	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, [r5, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L555	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x5
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x3
	mov	r3, sp
	add	r2, r3, r1
	ldrh	r1, [r2, #0x2]
	add	r1, r1, r8
	strh	r1, [r2, #0x2]
	add	r3, r5, #0
	add	r3, r3, #0xb8
	add	r1, r4, #0
	add	r1, r1, #0xd
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r0, #0x3
	sub	r0, r0, #0x8
	mov	r5, sp
	add	r2, r5, r0
	add	r0, r3, #0
	bl	sub_815168C
	mov	r0, r9
	cmp	r0, #0x3
	bne	.L558	@cond_branch
	mov	r1, sl
	add	r0, r6, r1
	ldrh	r0, [r0, #0x10]
	str	r0, [sp, #0x18]
.L558:
	mov	r0, r9
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r2, .L578+0x4
	mov	ip, r2
.L555:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L556	@cond_branch
	mov	r3, r9
	cmp	r3, #0x2
	beq	.L552	@cond_branch
	mov	r4, #0x0
	str	r4, [sp, #0x18]
.L552:
	ldr	r0, .L578+0x4
	ldr	r0, [r0]
	add	r0, r0, #0xb8
	ldr	r2, .L578
	ldr	r5, [sp, #0x1c]
	add	r1, r5, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1, #0x10]
	ldr	r2, [sp, #0x18]
	orr	r2, r2, r1
	str	r2, [sp, #0x18]
	add	r1, r2, #0
	bl	sub_8151A48
.L528:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L579:
	.align	2, 0
.L578:
	.word	gUnknown_085B6154
	.word	gUnknown_0203AB88
.Lfe43:
	.size	 sub_8142284,.Lfe43-sub_8142284
	.align	2, 0
	.type	 sub_81424FC,function
	.thumb_func
sub_81424FC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x2c
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L609
	ldr	r1, [r4]
	mov	r0, #0x1
	strh	r0, [r1, #0x2a]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8142E70
	ldr	r1, [r4]
	ldr	r2, .L609+0x4
	add	r0, r1, r2
	ldr	r2, .L609+0x8
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x10
	str	r2, [sp]
	mov	r2, #0xd
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	mov	r3, #0x7
	bl	sub_8152058
	cmp	r5, #0xf
	bhi	.L597	@cond_branch
	lsl	r0, r5, #0x2
	ldr	r1, .L609+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L610:
	.align	2, 0
.L609:
	.word	gUnknown_0203AB88
	.word	0x117c
	.word	0x397c
	.word	.L598
	.align	2, 0
	.align	2, 0
.L598:
	.word	.L580
	.word	.L583
	.word	.L583
	.word	.L583
	.word	.L583
	.word	.L591
	.word	.L597
	.word	.L597
	.word	.L597
	.word	.L597
	.word	.L591
	.word	.L597
	.word	.L597
	.word	.L597
	.word	.L597
	.word	.L591
.L583:
	mov	r0, #0x4
	str	r0, [sp, #0x18]
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bhi	.L581	@cond_branch
	add	r4, sp, #0x10
	add	r3, r1, #0
.L587:
	ldrb	r2, [r3]
	add	r2, r2, r4
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	add	r0, r5, r0
	strb	r0, [r2]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
	ldrb	r0, [r3]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.L587	@cond_branch
	b	.L581
.L591:
	mov	r2, #0x5
	str	r2, [sp, #0x18]
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bhi	.L581	@cond_branch
	add	r3, sp, #0x10
	add	r2, r1, #0
.L595:
	ldrb	r1, [r2]
	add	r1, r1, r3
	ldrb	r0, [r2]
	add	r0, r5, r0
	strb	r0, [r1]
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldrb	r0, [r2]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.L595	@cond_branch
	b	.L581
.L597:
	mov	r2, #0x1
	str	r2, [sp, #0x18]
	add	r0, sp, #0x10
	strb	r5, [r0]
.L581:
	add	r1, sp, #0x8
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r1, #0
	ldrb	r0, [r0]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcc	.LCB5820
	b	.L580	@long jump
.LCB5820:
	mov	r2, sp
	add	r2, r2, #0xe
	str	r2, [sp, #0x1c]
	add	r0, sp, #0x10
	mov	sl, r0
	add	r1, sp, #0x8
	mov	r9, r1
	sub	r2, r2, #0x4
	str	r2, [sp, #0x20]
.L602:
	mov	r1, r9
	ldrb	r0, [r1]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L611
	add	r0, r0, r2
	ldrb	r0, [r0, #0x6]
	ldr	r1, [sp, #0x1c]
	strb	r0, [r1]
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L611
	add	r0, r0, r1
	ldrb	r0, [r0, #0x3]
	ldr	r2, [sp, #0x20]
	strh	r0, [r2]
	mov	r7, sp
	add	r7, r7, #0x9
	mov	r0, #0x0
	strb	r0, [r7]
	ldrb	r0, [r7]
	cmp	r0, #0x2
	bhi	.L601	@cond_branch
	add	r6, sp, #0xc
	mov	r8, r2
	ldr	r0, [sp, #0x1c]
	mov	ip, r0
	ldr	r1, .L611+0x4
	str	r1, [sp, #0x28]
.L606:
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, sl
	ldrb	r0, [r0]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L611
	add	r1, r1, r0
	str	r7, [sp, #0x24]
	ldrb	r0, [r7]
	ldrb	r1, [r1, #0x4]
	add	r0, r0, r1
	lsl	r0, r0, #0x5
	strh	r0, [r6]
	ldr	r1, [sp, #0x28]
	ldr	r4, [r1]
	mov	r2, r8
	ldrh	r0, [r2]
	ldrh	r2, [r6]
	add	r2, r2, r0
	lsl	r2, r2, #0x1
	ldr	r0, .L611+0x8
	add	r5, r4, r0
	add	r2, r5, r2
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r0, .L611+0xc
	add	r4, r4, r0
	ldr	r3, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	mov	r2, r8
	ldrh	r0, [r2]
	ldrh	r2, [r6]
	add	r2, r2, r0
	add	r2, r2, #0x1
	lsl	r2, r2, #0x1
	add	r2, r5, r2
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r3, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	mov	r1, #0xd1
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	mov	r2, r8
	ldrh	r1, [r2]
	ldrh	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	mov	r1, ip
	ldrb	r0, [r1]
	ldrb	r1, [r7]
	add	r1, r1, r0
	ldr	r2, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	mov	r2, #0xd2
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r5]
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	ldr	r1, [sp, #0x24]
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bls	.L606	@cond_branch
.L601:
	mov	r2, r9
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldrb	r0, [r2]
	ldr	r1, [sp, #0x18]
	cmp	r0, r1
	bcs	.LCB6028
	b	.L602	@long jump
.LCB6028:
.L580:
	add	sp, sp, #0x2c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L612:
	.align	2, 0
.L611:
	.word	gUnknown_085B6154
	.word	gUnknown_0203AB88
	.word	0x117c
	.word	0x397c
.Lfe44:
	.size	 sub_81424FC,.Lfe44-sub_81424FC
	.section .rodata
.LC203:
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x6
	.byte	0xc
.text
	.align	2, 0
	.type	 sub_8142758,function
	.thumb_func
sub_8142758:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L627
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	cmp	r4, #0x13
	bls	.L614	@cond_branch
	mov	r4, #0x0
.L614:
	ldr	r3, .L627+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r2, r0, #0x2
	add	r0, r2, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x4
	beq	.L618	@cond_branch
	cmp	r0, #0x4
	bgt	.L624	@cond_branch
	cmp	r0, #0x3
	beq	.L616	@cond_branch
	b	.L615
.L628:
	.align	2, 0
.L627:
	.word	.LC203
	.word	gUnknown_085B6154
.L624:
	cmp	r0, #0xc
	beq	.L620	@cond_branch
	b	.L615
.L616:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__udivsi3
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L629
	ldr	r0, [r0]
	add	r0, r0, #0x16
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bhi	.L615	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L626
.L630:
	.align	2, 0
.L629:
	.word	gUnknown_0203AB88
.L618:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L631
	ldr	r0, [r0]
	add	r0, r0, #0x12
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L615	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x2
.L626:
	add	r0, r0, sp
	ldrb	r0, [r0]
	b	.L625
.L632:
	.align	2, 0
.L631:
	.word	gUnknown_0203AB88
.L620:
	ldr	r0, .L633
	ldr	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x8
	add	r0, r2, r0
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L615	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	b	.L625
.L634:
	.align	2, 0
.L633:
	.word	gUnknown_0203AB88
.L615:
	mov	r0, #0x0
.L625:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 sub_8142758,.Lfe45-sub_8142758
	.align	2, 0
	.type	 sub_8142814,function
	.thumb_func
sub_8142814:
	push	{r4, r5, r6, lr}
	ldr	r4, .L636
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x20
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x22
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x30]
	mov	r0, #0x24
	bl	SetGpuReg
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x32]
	mov	r0, #0x26
	bl	SetGpuReg
	ldr	r3, [r4]
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	ldr	r0, .L636+0x4
	mov	r4, #0x0
	ldrsh	r2, [r0, r4]
	add	r2, r2, #0x50
	mov	r0, r1
	mul	r0, r0, r2
	mov	r4, #0xe8
	lsl	r4, r4, #0x7
	sub	r4, r4, r0
	mov	r6, #0x2c
	ldrsh	r5, [r3, r6]
	ldr	r0, .L636+0x8
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	add	r1, r1, #0x74
	mov	r0, r5
	mul	r0, r0, r1
	sub	r4, r4, r0
	mov	r5, #0x32
	ldrsh	r0, [r3, r5]
	mul	r0, r0, r2
	mov	r5, #0xa8
	lsl	r5, r5, #0x7
	sub	r5, r5, r0
	mov	r6, #0x30
	ldrsh	r0, [r3, r6]
	mul	r0, r0, r1
	sub	r5, r5, r0
	lsl	r1, r4, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x28
	bl	SetGpuReg
	ldr	r6, .L636+0xc
	and	r4, r4, r6
	lsr	r4, r4, #0x10
	mov	r0, #0x2a
	add	r1, r4, #0
	bl	SetGpuReg
	lsl	r1, r5, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x2c
	bl	SetGpuReg
	and	r5, r5, r6
	lsr	r5, r5, #0x10
	mov	r0, #0x2e
	add	r1, r5, #0
	bl	SetGpuReg
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L637:
	.align	2, 0
.L636:
	.word	gUnknown_0203AB88
	.word	gSpriteCoordOffsetY
	.word	gSpriteCoordOffsetX
	.word	0xfff0000
.Lfe46:
	.size	 sub_8142814,.Lfe46-sub_8142814
	.section .rodata
	.type	 sFiller_085B644D,object
	.size	 sFiller_085B644D,3
sFiller_085B644D:
	.space	3
	.align	1, 0
	.type	 RouletteSpritePalette_01,object
RouletteSpritePalette_01:
	.short	0x5d8c
	.short	0x0
	.short	0x2108
	.short	0x294a
	.short	0x318c
	.short	0x39ce
	.short	0x4210
	.short	0x4a52
	.short	0x5294
	.short	0x5ad6
	.short	0x6739
	.short	0x1f
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 RouletteSpritePalette_01,32
	.align	1, 0
	.type	 RouletteSpritePalette_02,object
RouletteSpritePalette_02:
	.short	0x4da9
	.short	0x14a5
	.short	0x41ef
	.short	0x62d5
	.short	0x7fff
	.short	0x4fbd
	.short	0x36d7
	.short	0x1170
	.short	0x2e1f
	.short	0x31b7
	.short	0x7f7c
	.short	0x4ee9
	.short	0x7fff
	.short	0x4a6c
	.short	0x7fff
	.short	0x294a
	.size	 RouletteSpritePalette_02,32
	.align	1, 0
	.type	 RouletteSpritePalette_03,object
RouletteSpritePalette_03:
	.short	0x4da9
	.short	0x20e7
	.short	0x398c
	.short	0x5273
	.short	0x7fff
	.short	0x2b90
	.short	0x527f
	.short	0x7e6d
	.short	0x7fff
	.short	0x37f3
	.short	0x279e
	.short	0x3f9f
	.short	0x963
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.size	 RouletteSpritePalette_03,32
	.align	1, 0
	.type	 RouletteSpritePalette_04,object
RouletteSpritePalette_04:
	.short	0x4da9
	.short	0x14a5
	.short	0x520f
	.short	0x6b39
	.short	0x7fff
	.short	0x76ef
	.short	0x1cff
	.short	0x2662
	.short	0x6a8c
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x4ff
	.short	0x2bbf
	.short	0x4da9
	.short	0x7e79
	.size	 RouletteSpritePalette_04,32
	.align	1, 0
	.type	 RouletteSpritePalette_05,object
RouletteSpritePalette_05:
	.short	0x4da9
	.short	0x14a5
	.short	0x398c
	.short	0x6b39
	.short	0x7fff
	.short	0x47af
	.short	0x46bf
	.short	0x2662
	.short	0x7e98
	.short	0x11a6
	.short	0x430e
	.short	0x5e38
	.short	0x1d5f
	.short	0x2bbf
	.short	0x6d9
	.short	0x73f
	.size	 RouletteSpritePalette_05,32
	.align	1, 0
	.type	 RouletteSpritePalette_06,object
RouletteSpritePalette_06:
	.short	0x4da9
	.short	0x2108
	.short	0x36bb
	.short	0x537e
	.short	0x36af
	.short	0x4b75
	.short	0x2593
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 RouletteSpritePalette_06,32
	.align	1, 0
	.type	 RouletteSpritePalette_07,object
RouletteSpritePalette_07:
	.short	0x4da9
	.short	0x2108
	.short	0x44e7
	.short	0x618b
	.short	0x7b37
	.short	0x2f9f
	.short	0x215f
	.short	0x20f5
	.short	0x7fff
	.short	0x2108
	.short	0x29f3
	.short	0x36f9
	.short	0x2154
	.short	0x1d2c
	.short	0x6b5a
	.short	0x7fff
	.size	 RouletteSpritePalette_07,32
	.align	1, 0
	.type	 RouletteSpritePalette_08,object
RouletteSpritePalette_08:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7e6d
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x3f9f
	.short	0x7fff
	.short	0x4fff
	.short	0x4bf3
	.short	0x7e79
	.size	 RouletteSpritePalette_08,32
	.align	1, 0
	.type	 RouletteSpritePalette_09,object
RouletteSpritePalette_09:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x6f6d
	.short	0x2d9e
	.size	 RouletteSpritePalette_09,32
	.align	1, 0
	.type	 RouletteSpritePalette_10,object
RouletteSpritePalette_10:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x7e6d
	.short	0x467f
	.size	 RouletteSpritePalette_10,32
	.align	1, 0
	.type	 RouletteSpritePalette_11,object
RouletteSpritePalette_11:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x467f
	.short	0x4fde
	.size	 RouletteSpritePalette_11,32
	.align	1, 0
	.type	 RouletteSpritePalette_12,object
RouletteSpritePalette_12:
	.short	0x4da9
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.short	0x20e7
	.short	0x4231
	.short	0x7fff
	.short	0x3f9f
	.short	0x2d9e
	.size	 RouletteSpritePalette_12,32
	.align	1, 0
	.type	 RouletteSpritePalette_13,object
RouletteSpritePalette_13:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7ffb
	.short	0x6f6d
	.short	0x2d9e
	.short	0x7f7f
	.short	0x6f6d
	.short	0x2d9e
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 RouletteSpritePalette_13,32
	.align	1, 0
	.type	 RouletteSpritePalette_14,object
RouletteSpritePalette_14:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x7e6d
	.short	0x737b
	.short	0x7ffb
	.short	0x7e6d
	.short	0x737b
	.short	0x7f7f
	.short	0x7e6d
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 RouletteSpritePalette_14,32
	.align	1, 0
	.type	 RouletteSpritePalette_15,object
RouletteSpritePalette_15:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x467f
	.short	0x4fde
	.short	0x7ffb
	.short	0x467f
	.short	0x4fde
	.short	0x7f7f
	.short	0x467f
	.short	0x4fde
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 RouletteSpritePalette_15,32
	.align	1, 0
	.type	 RouletteSpritePalette_16,object
RouletteSpritePalette_16:
	.short	0x4da9
	.short	0x20e7
	.short	0x3dad
	.short	0x53ff
	.short	0x3f9f
	.short	0x737b
	.short	0x7ffb
	.short	0x3f9f
	.short	0x737b
	.short	0x7f7f
	.short	0x3f9f
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.short	0x737b
	.size	 RouletteSpritePalette_16,32
	.align	2, 0
	.type	 gUnknown_085B6650,object
gUnknown_085B6650:
	.word	0x40010
	.word	0x10000020
	.word	0x11f001
	.word	0x220021f0
	.word	0x3aa32100
	.word	0x4a32f0
	.word	0x4a331034
	.word	0x33332f33
	.word	0x213335
	.word	-0xee2effd
	.word	0x220300
	.word	0x23330104
	.word	0x33330001
	.word	0x480300f2
	.word	0x23030013
	.word	0x103000f
	.word	0xc03221
	.word	0x2f030027
	.word	0x10333222
	.word	0x22220022
	.word	0x2222fff0
	.word	0x1f48f100
	.word	0x11114f00
	.word	0x33335710
	.word	0x20014022
	.word	0xf222203
	.word	0x122222
	.word	-0xdde00
	.word	0x1ff1100
	.word	0x11003a
	.word	-0x3fa8efb1
	.word	0x7f00aa7f
	.word	0x7f00baa4
	.word	-0xf800fc6
	.word	0x227f607f
	.word	-0x3cdd80f0
	.word	0x7f507ff0
	.word	0x23012223
	.word	0x7ff07ff0
	.word	0x32ff50bd
	.word	-0x28bf0100
	.word	0x7f107ff0
	.word	0x4b030012
	.word	0x227f0022
	.word	0x217b1001
	.word	0x76007b00
	.word	0x7ff02270
	.word	0x7b307f00
	.word	-0xdddddff
	.word	0x607ff0c3
	.word	0x11107f
	.word	0x7f3010
	.word	0x7f21f37b
	.word	-0xaf04f0
	.word	0x22004800
	.word	0x7f300400
	.word	0x207b10f4
	.word	-0xea8fe01
	.word	0x7f20107f
	.word	0xfffff
	.word	0x10fff110
	.word	0x7f8157
	.word	0x177f1083
	.word	0xff001f
	.word	0x4f00ff7f
	.word	-0x400ea8f0
	.word	-0xec00e01
	.word	-0xf402f41
	.word	-0xffe0fff
	.word	-0xefeefff
	.word	0x7ff0ffbf
	.word	0x7ff0bff1
	.word	0x1f001f0
	.word	0x7f0001f0
	.word	-0xe00400f
	.word	-0xf400e41
	.word	-0xffe0f81
	.word	-0x1efe0fff
	.word	-0x3400e81
	.word	-0x406e400f
	.word	0x1f001f0
	.word	0x17001f0
	.size	 gUnknown_085B6650,328
	.align	2, 0
	.type	 RouletteBallCounterTiles,object
RouletteBallCounterTiles:
	.word	0x14010
	.word	0x11110000
	.word	0x23331000
	.word	0x34310001
	.word	0x33311233
	.word	0x21001233
	.word	0x21122333
	.word	0xf123222
	.word	0x1222210
	.word	0x1ff01b10
	.word	0x1ff01ff0
	.word	0x101f80c0
	.word	0x555501
	.word	0x7f555550
	.word	0x10039005
	.word	-0xfe3cfed
	.word	-0xfe00fe1
	.word	-0x3fe09fe1
	.word	0x7ff07ff0
	.word	0x60006666
	.word	0x67f6666
	.word	0x13100390
	.word	0x1ff05f60
	.word	0x1ff01ff0
	.word	0x1a20
	.size	 RouletteBallCounterTiles,100
	.align	2, 0
	.type	 gUnknown_085B67FC,object
gUnknown_085B67FC:
	.word	0xe0010
	.word	-0xfffffc6
	.word	-0x5ffe0fff
	.word	0x2001001
	.word	0x2008231
	.word	0x21210062
	.word	0x11cd036
	.word	0x130300a8
	.word	0x260400
	.word	0x12126304
	.word	-0xfc20f0b
	.word	0x20578001
	.word	0x3302103
	.word	0x30010
	.word	0x62102621
	.word	0x53212622
	.word	0x32222500
	.word	0x32333553
	.word	0x20335033
	.word	0x3102203
	.word	0x22661662
	.word	0x22122214
	.word	0x11e00
	.word	0x1a33141c
	.word	0x455333
	.word	0x43031016
	.word	0x1661e10
	.word	0x22222661
	.word	-0x6fdddddf
	.word	0x310f597
	.word	0x3209110
	.word	0x20620c00
	.word	0x2300119e
	.word	0x233133
	.word	0x1007006b
	.word	0x60834011
	.word	0x24420001
	.word	0x44441622
	.word	0x46002612
	.word	0x52222244
	.word	0x226225
	.word	0x32112222
	.word	0x21441111
	.word	0x11110000
	.word	0x44410011
	.word	0x22610111
	.word	0x21622442
	.word	0x1d0044
	.word	0x26226444
	.word	0x11232552
	.word	0x449500b0
	.word	0x1e001c00
	.word	0x144411
	.word	0x51002241
	.word	0x1332
	.word	0x7f6b0022
	.word	0x10730011
	.word	-0xffe0f7d
	.word	0x10157101
	.word	-0xfe0f6e
	.word	0x54100160
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x10945080
	.word	0x21006631
	.word	-0x1f2fcc9f
	.word	0x3303008e
	.word	0x1165b11
	.word	0x137c3600
	.word	0x1f0fff1
	.word	-0x4be000f
	.word	0x46110300
	.word	0x62621000
	.word	0x22552122
	.word	0x55323422
	.word	0x310fb31
	.word	0x12030026
	.word	0x33321866
	.word	0x11e52112
	.word	0x331233ff
	.word	0x23553301
	.word	0x25555333
	.word	0x33270320
	.word	0x22220255
	.word	-0xefefdde
	.word	0x4a0380ff
	.word	0x313a2162
	.word	0x426b0046
	.word	-0x1e9e8d00
	.word	0x7f420c10
	.word	0x16220362
	.word	-0x7effdede
	.word	0x62490088
	.word	-0x1eedcde
	.word	0x2332141
	.word	0x22141111
	.word	-0x1ffebf00
	.word	0x41111110
	.word	0x42f90122
	.word	0x3202444
	.word	0x22446204
	.word	0x1e001226
	.word	0x222e1441
	.word	0x44ff1101
	.word	0x3106342
	.word	-0xddecef
	.word	-0x320efd00
	.word	0x17f101f0
	.word	0x6f9101f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xc000cff
	.word	-0xf000c01
	.word	0x1f0fe01
	.word	-0x78ee009f
	.word	-0x25fffcee
	.word	0x5503ff03
	.word	0x23353421
	.word	-0x48e1dff
	.word	0x22040062
	.word	0x33361c61
	.word	0x33960126
	.word	0x33ff11ff
	.word	0x55330123
	.word	0x55532333
	.word	0x5d031035
	.word	0x42020242
	.word	-0x28fe52ff
	.word	0x5014ffb1
	.word	0xc00b503
	.word	-0x1c000c9c
	.word	-0x1fbe9d01
	.word	0x14030026
	.word	0x73642332
	.word	-0x1ffeef01
	.word	0xe51000
	.word	0x1601c
	.word	0x7323328a
	.word	0x672001ff
	.word	-0xcdb81
	.word	0x1f001f0
	.word	0x1f0e2f1
	.word	0x1f0d760
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0x1dfe0fff
	.word	-0x5de40ffd
	.word	0x1df0ff03
	.word	0x3f201f0
	.word	0x63020382
	.word	0x37203f2
	.word	-0xd009cee
	.word	-0x2ffc8dfd
	.word	0x1203d297
	.word	0x7203f263
	.word	-0x69ccdfd
	.word	0x35603f2
	.word	0x3f26312
	.word	0x1440352
	.word	-0xd009cee
	.word	-0xf070ffd
	.word	-0xf000aff
	.word	-0xfe00fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	-0xefe10
	.word	-0xe000f
	.word	0x1f01df0
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe000e01
	.word	-0xe1101
	.word	-0xee000f
	.word	-0xe1cfef0
	.word	0x11ff91ff
	.word	-0xe9cdb01
	.word	-0xf070f01
	.word	-0xf2008ff
	.word	-0xfe00fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf2ffe10
	.word	0x71fb8101
	.word	0x670600
	.word	0x10a85100
	.word	0xb007703
	.word	0x11e23215
	.word	0x7ca3111
	.word	0x22de01ed
	.word	0x36030066
	.word	0x35220320
	.word	-0x20b87ede
	.word	0x12b011
	.word	0x78013304
	.word	0x21502ce
	.word	0x22207
	.word	0x668f1122
	.word	0x9d2080
	.word	0x31022229
	.word	0xb907b
	.word	0x63f75101
	.word	0x100170d2
	.word	-0xf8ae9d
	.word	0x1b024110
	.word	0x1f12c110
	.word	0x422203b0
	.word	0x2120114
	.word	0x4f1aff48
	.word	-0x18e8a8a8
	.word	0x1f00350
	.word	0x1f001f0
	.word	-0x5710e95f
	.word	0x1001d08f
	.word	0x30021e1
	.word	0x1f006f4
	.word	-0xf01fe10
	.word	-0xffe0fff
	.word	-0xffc5bff
	.word	0x2963217
	.word	0x337c33fb
	.word	0x1f0f402
	.word	-0xefe10
	.word	0x3331ff81
	.word	-0x2feef86
	.word	-0x21ec00ff
	.word	0x133ffe1
	.word	0x11c92378
	.word	0x2363137b
	.word	0x22060421
	.word	0x3e030012
	.word	-0xecdfe
	.word	-0xe000f
	.word	-0xde000f
	.word	0x10330712
	.word	0x333141
	.word	0x20ef0aee
	.word	0x1f7adaf3
	.word	0x323ff01
	.word	0x33831083
	.word	0x4f23e719
	.word	0x33b10011
	.word	-0xe4cfdff
	.word	-0xffe0f03
	.word	0x1f0fe01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x10001f0
	.size	 gUnknown_085B67FC,1008
	.align	2, 0
	.type	 RoulettePokeIconsTiles,object
RoulettePokeIconsTiles:
	.word	0x20010
	.word	0x0
	.word	0x30000033
	.word	0x30000011
	.word	0x13005513
	.word	0x30005521
	.word	0x23555551
	.word	0x555115
	.word	0x55155123
	.word	0x55555513
	.word	0x20000354
	.word	0x15030031
	.word	0x11252500
	.word	0x55000300
	.word	0x55003155
	.word	0x3250011
	.word	0x3215515
	.word	0x15005555
	.word	0x25151303
	.word	0x651351
	.word	0x52131621
	.word	0x15136666
	.word	0x13666100
	.word	0x30111332
	.word	0x306003
	.word	0x2101302d
	.word	0x26031515
	.word	0x3156100
	.word	0x3125666
	.word	0x15110066
	.word	0x12331103
	.word	0x10c83303
	.word	0x33015072
	.word	0x317d0003
	.word	0x77001300
	.word	-0x68eccce9
	.word	0x2131117
	.word	0x30777277
	.word	0x3007771
	.word	0x13770471
	.word	-0x7f888e89
	.word	0x411031f
	.word	0x77031797
	.word	0x77030072
	.word	0x77001031
	.word	0x17031071
	.word	0x29331303
	.word	0x3007777
	.word	0x331017
	.word	0x182f0013
	.word	0x111330
	.word	0x776060cf
	.word	0x3761337
	.word	0x33100320
	.word	0x11bf00
	.word	0x7d8019
	.word	-0x1fffffc0
	.word	0x33130
	.word	0x31001913
	.word	0x19999133
	.word	0x991311
	.word	0x21309999
	.word	-0x5ecf6666
	.word	0x1399aa02
	.word	0x20aaa119
	.word	0x31003320
	.word	0x19113300
	.word	0x991103
	.word	-0x6666fe67
	.word	0x2a990319
	.word	-0x56ffceff
	.word	-0x55ffce56
	.word	0x13001300
	.word	0x13aa2aa9
	.word	0x2aaaa9
	.word	-0x55556ed0
	.word	-0x666eed00
	.word	0x2a7fd082
	.word	-0x55fce656
	.word	0x1c9a0310
	.word	-0xf66ffcf
	.word	0x2a007f
	.word	0x31135f
	.word	0x1bb13000
	.word	-0x44ecffcd
	.word	0x11870190
	.word	0x220700bb
	.word	0x6bbb130
	.word	-0x4ee4ec45
	.word	0x9d31bb
	.word	0x3101bb9f
	.word	0x31bb100
	.word	-0x73fee500
	.word	0x700b250
	.word	-0x44f0ff45
	.word	0x31b11
	.word	-0x44d449ed
	.word	-0x444e94ed
	.word	0x2b613003
	.word	0x130011
	.word	0x7fc02f
	.word	0x316bb2b
	.word	0x31b61bb
	.word	0x106b2130
	.word	0x7ff02f
	.size	 RoulettePokeIconsTiles,420
	.align	2, 0
	.type	 RoulettePokeIcons2Tiles,object
RoulettePokeIcons2Tiles:
	.word	0xc0010
	.word	0x0
	.word	0x30000033
	.word	0x30000011
	.word	0x13004413
	.word	0x30004421
	.word	0x23444441
	.word	0x444114
	.word	0x44144123
	.word	0x44444413
	.word	0x20000354
	.word	0x14030031
	.word	0x11242500
	.word	0x44000300
	.word	0x44003144
	.word	0x3240011
	.word	0x3214414
	.word	0x14004444
	.word	0x24141303
	.word	0x541341
	.word	0x42131521
	.word	0x14135555
	.word	0x13555100
	.word	0x30111332
	.word	0x306003
	.word	0x2101302d
	.word	0x25031414
	.word	0x3145100
	.word	0x3124555
	.word	0x14110055
	.word	0x12331103
	.word	0x10ff3303
	.word	-0xffe0f8e
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7ffe0fff
	.word	0x880190
	.word	0x668000
	.word	-0x6697ff80
	.word	-0x66899800
	.word	-0x66ff6980
	.word	-0x69968767
	.word	0x1967899
	.word	-0x66976697
	.word	0x89999
	.word	0x865020
	.word	0x25006903
	.word	0x86679
	.word	-0x79666700
	.word	0x79669900
	.word	-0x6696fff8
	.word	-0x6666f78a
	.word	0x68000869
	.word	0x68967969
	.word	0x6a76a9
	.word	-0x55556898
	.word	-0x55599698
	.word	0x68876801
	.word	-0x7ff77f9a
	.word	0x30802d00
	.word	0x69697601
	.word	0x69a67a08
	.word	-0x6555f800
	.word	0x66aa0867
	.word	0x66080369
	.word	-0x77f79878
	.word	0x1f07210
	.word	-0xffe0f02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x22fe6fff
	.word	-0x30000000
	.word	-0x422fff45
	.word	-0x42ffff12
	.word	-0x142f1135
	.word	-0x32ff1112
	.word	-0x32111442
	.word	0x5eebeeb
	.word	-0x11111143
	.word	-0x24dffff3
	.word	-0x41bffd00
	.word	-0x4431db00
	.word	-0x1111fff3
	.word	-0x11ff2500
	.word	-0x41f23145
	.word	0xdcb00ee
	.word	0xdbeeeee
	.word	-0x31ff4143
	.word	-0x34014215
	.word	0xecbdbf
	.word	-0x41420001
	.word	-0x23420005
	.word	-0x2f4442fa
	.word	0x2d00d00d
	.word	0xcb0130
	.word	-0x30f24142
	.word	-0xf24105
	.word	0xdbcef00
	.word	0xdbebbff
	.word	-0x4322f045
	.word	0x7210dd0d
	.word	0x1f001f0
	.word	-0xf06fe10
	.word	-0xffe0fff
	.word	0x7001f001
	.word	0x2033301
	.word	0x3100fd
	.word	0x33144413
	.word	0x14045413
	.word	0x42441311
	.word	0x41300323
	.word	-0xfdbeb8
	.word	0x1f804441
	.word	0xd541103
	.word	0x42440314
	.word	0x3130300
	.word	-0x75fcefbf
	.word	0x4433ff02
	.word	0x14030044
	.word	0x46003310
	.word	0x302f0013
	.word	0x4f031113
	.word	0x1844e062
	.word	0x20031334
	.word	0x3372303
	.word	0xff1100
	.word	-0xf020de7
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x5ffe0fff
	.word	0x208fdd2
	.word	0x680086fd
	.word	-0x77ff9667
	.word	0x6669a968
	.word	-0x76686698
	.word	-0x697ffcdd
	.word	-0x6900fd6a
	.word	0x11f8099
	.word	0x69a96608
	.word	0x979908
	.word	0x313b103
	.word	0x2031096
	.word	-0x66667701
	.word	0x69480300
	.word	0x68003310
	.word	0x68802f00
	.word	0x4f03c366
	.word	-0x76661f9e
	.word	0x3200868
	.word	0x81f3723
	.word	0x19006600
	.word	0x1f0fdf2
	.word	0x1f001f0
	.word	-0xffe0f0c
	.word	-0x2dfe0fff
	.word	-0x2fdf203
	.word	-0x42ffff25
	.word	-0x42224112
	.word	0x11bbbefe
	.word	0x23eceebd
	.word	-0x14142ffd
	.word	-0x14df00fe
	.word	0xd1f80ee
	.word	0xdbefebb
	.word	0xecee36
	.word	-0x14fcecfd
	.word	-0xfdfcf0
	.word	-0x1111d623
	.word	0x10be0300
	.word	0xbd0033
	.word	-0x422fe7d1
	.word	0x624f03bb
	.word	-0x42211120
	.word	0x3200d63
	.word	0xd3723
	.word	-0xde6ff45
	.word	0x1f0fffd
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1c001f0
	.word	0x3000e005
	.word	0x13000331
	.word	0x30333114
	.word	-0xedbbbf
	.word	0x4521fb02
	.word	0x51183044
	.word	-0x30eabbab
	.word	0x31332020
	.word	0x15334400
	.word	0x14444bb
	.word	0x2544f315
	.word	0x54003102
	.word	0x15003155
	.word	0x540013cf
	.word	0x54135525
	.word	0x10302555
	.word	-0xdaaaabf
	.word	0x250000ff
	.word	-0x4fa20ab
	.word	-0xdbafcf0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	0x1f0f801
	.word	0x1f001f0
	.word	-0x1ffafec0
	.word	0x1088680
	.word	-0x79969800
	.word	0x12999688
	.word	-0x4fd7f01
	.word	-0x7f66658a
	.word	-0x3d66555a
	.word	0x2020cf15
	.word	-0x77ff7978
	.word	0x2099bb15
	.word	-0xceaf967
	.word	0x867a99
	.word	-0x7955ef57
	.word	0x68cf1500
	.word	0xaa7aa9
	.word	0x7aaaa968
	.word	-0x55556980
	.word	0xfff286
	.word	0x5aa7a00
	.word	-0x65fcef05
	.word	-0xf000d01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x140c001
	.word	-0x242f1ffb
	.word	-0x4142fff3
	.word	-0x142224f4
	.word	0x2ff12ee
	.word	0x6efcbfb
	.word	-0x42f12
	.word	0x20cf15ee
	.word	-0x24ee22e0
	.word	-0x44ea2300
	.word	0x150beeee
	.word	-0x3011ff0d
	.word	-0x1ff25
	.word	0x158000db
	.word	-0x30014231
	.word	-0x14201
	.word	-0x142f30fc
	.word	-0xd0001
	.word	-0x30c90000
	.word	0x10fb05ff
	.word	-0xd10fd
	.word	0x1f001f0
	.word	-0xffe0f03
	.word	-0xffe0fff
	.word	0x4001f001
	.word	-0x20fdcfff
	.word	0x311304
	.word	-0x1ef7bed0
	.word	0x9a54413
	.word	-0x38faeef9
	.word	-0x30eaddbc
	.word	-0xcf8f6ed
	.word	0x1f031d39
	.word	-0x11fa40fb
	.word	0xc091400
	.word	0x49c00206
	.word	0x45ff0207
	.word	0x54134424
	.word	0x2f039841
	.word	-0xdeedc
	.word	0x15443309
	.word	0x8444f03
	.word	-0xdabde01
	.word	-0xffe0f01
	.word	-0x5fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x2800140
	.word	-0x79f69721
	.word	0x8968000
	.word	0x99968e1
	.word	0x5664b07
	.word	0x157799c7
	.word	0x70968cf
	.word	0x3e71d39
	.word	0x5bf051f
	.word	0x96900ee
	.word	0x4902060c
	.word	-0xfd7ef9
	.word	0x6899799a
	.word	0x2f0396a9
	.word	-0xd9986d0
	.word	-0x66ccf601
	.word	-0x6066f796
	.word	-0x568900f8
	.word	0x1f0fff2
	.word	0x1f001f0
	.word	-0xf0bfe10
	.word	-0xffe0fff
	.word	-0x2ffebfff
	.word	-0x244220fe
	.word	-0x142fffee
	.word	-0x11421ef8
	.word	-0x6844f8f7
	.word	-0x331138fb
	.word	0x9bdcf15
	.word	0x31d3907
	.word	-0x40fa30e1
	.word	-0x41ff11fb
	.word	0x2060c09
	.word	-0xfdf8b7
	.word	-0x113110fe
	.word	0x3ebfebd
	.word	-0x449e31d1
	.word	0x3309fff2
	.word	-0x11f24012
	.word	-0x34c000f8
	.word	-0xf000d02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0e001
	.word	0x13001f0
	.size	 RoulettePokeIcons2Tiles,1280
	.align	2, 0
	.type	 gUnknown_085B7290,object
gUnknown_085B7290:
	.word	0x18010
	.word	0x20000028
	.word	0x2009901
	.word	-0x406fff67
	.word	0x30990300
	.word	0x200a0003
	.word	0x101c4003
	.word	0x6f03001d
	.word	0x101e5009
	.word	0x3100903
	.word	0x3502760
	.word	0x20ff4310
	.word	0x6036202d
	.word	0x10227027
	.word	-0xfe3bfbd
	.word	0x11001
	.word	-0x7fffff79
	.word	-0x77ffff68
	.word	-0x78ddff5f
	.word	-0x788fd990
	.word	0x40008788
	.word	0x5001d0c5
	.word	0x778881e
	.word	-0xf87a0f0
	.word	0x1b0a51f
	.word	-0x76fcff88
	.word	-0x7780fff8
	.word	0x10ef0300
	.word	0x1063200c
	.word	0x2b10806b
	.word	0x1b07b00
	.word	0x10f74fd0
	.word	-0xf74ef7d
	.word	0x7801601f
	.word	0x1f608b10
	.word	0x10f06300
	.word	0x2073106b
	.word	0x1c06e
	.size	 gUnknown_085B7290,152
	.align	2, 0
	.type	 RouletteCursorTiles,object
RouletteCursorTiles:
	.word	0x20010
	.word	-0x33333fef
	.word	0x130
	.word	-0x7fc1000
	.word	0x1e700300
	.word	0x1f3001f0
	.word	0xc0310
	.word	-0xf3f8100
	.word	-0xffcdffd
	.word	-0xfc05fff
	.word	-0xffc5ffd
	.word	0x1d0ff01
	.word	0x7ff073f0
	.word	0x7ff001f0
	.word	0x1711f3b0
	.word	0x60ff2df0
	.word	-0xfec7e0d
	.word	-0xff0ee8d
	.word	-0xffe0fc2
	.word	-0x3fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x13001f0
	.size	 RouletteCursorTiles,92
	.align	2, 0
	.type	 gUnknown_085B7384,object
gUnknown_085B7384:
	.word	RouletteSpritePalette_01
	.short	0x1
	.space	2
	.word	RouletteSpritePalette_02
	.short	0x2
	.space	2
	.word	RouletteSpritePalette_03
	.short	0x3
	.space	2
	.word	RouletteSpritePalette_04
	.short	0x4
	.space	2
	.word	RouletteSpritePalette_05
	.short	0x5
	.space	2
	.word	RouletteSpritePalette_06
	.short	0x6
	.space	2
	.word	RouletteSpritePalette_07
	.short	0x7
	.space	2
	.word	RouletteSpritePalette_08
	.short	0x8
	.space	2
	.word	RouletteSpritePalette_09
	.short	0x9
	.space	2
	.word	RouletteSpritePalette_10
	.short	0xa
	.space	2
	.word	RouletteSpritePalette_11
	.short	0xb
	.space	2
	.word	RouletteSpritePalette_12
	.short	0xc
	.space	2
	.space	8
	.size	 gUnknown_085B7384,104
	.align	2, 0
	.type	 gOamData_85B73EC,object
	.size	 gOamData_85B73EC,8
gOamData_85B73EC:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_85B73F4,object
	.size	 gOamData_85B73F4,8
gOamData_85B73F4:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_85B73FC,object
	.size	 gOamData_85B73FC,8
gOamData_85B73FC:
	.byte	0x3c
	.byte	0x83
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gSpriteAnim_85B7404,object
gSpriteAnim_85B7404:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B7404,8
	.align	2, 0
	.type	 gSpriteAnimTable_85B740C,object
gSpriteAnimTable_85B740C:
	.word	gSpriteAnim_85B7404
	.size	 gSpriteAnimTable_85B740C,4
	.align	2, 0
	.type	 gSpriteAffineAnim_85B7410,object
gSpriteAffineAnim_85B7410:
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_85B7410,8
	.align	2, 0
	.type	 gSpriteAffineAnimTable_85B7418,object
gSpriteAffineAnimTable_85B7418:
	.word	gSpriteAffineAnim_85B7410
	.size	 gSpriteAffineAnimTable_85B7418,4
	.align	2, 0
	.type	 gUnknown_085B741C,object
	.size	 gUnknown_085B741C,8
gUnknown_085B741C:
	.word	RoulettePokeIcons2Tiles
	.short	0xc00
	.short	0x0
	.align	2, 0
	.type	 gSpriteAnim_85B7420,object
gSpriteAnim_85B7420:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	0x40
	.byte	0x0
	.space	1
	.short	0x48
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0x28
	.byte	0x0
	.space	1
	.short	0x30
	.byte	0x0
	.space	1
	.short	0x50
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x18
	.byte	0x0
	.space	1
	.short	0x38
	.byte	0x0
	.space	1
	.short	0x58
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B7420,52
	.align	2, 0
	.type	 gSpriteAnimTable_85B7458,object
gSpriteAnimTable_85B7458:
	.word	gSpriteAnim_85B7420
	.size	 gSpriteAnimTable_85B7458,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B745C,object
gSpriteAnimTable_85B745C:
	.word	gSpriteAnim_85B7420+0x4
	.size	 gSpriteAnimTable_85B745C,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7460,object
gSpriteAnimTable_85B7460:
	.word	gSpriteAnim_85B7420+0x8
	.size	 gSpriteAnimTable_85B7460,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7464,object
gSpriteAnimTable_85B7464:
	.word	gSpriteAnim_85B7420+0xc
	.size	 gSpriteAnimTable_85B7464,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7468,object
gSpriteAnimTable_85B7468:
	.word	gSpriteAnim_85B7420+0x10
	.size	 gSpriteAnimTable_85B7468,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B746C,object
gSpriteAnimTable_85B746C:
	.word	gSpriteAnim_85B7420+0x14
	.size	 gSpriteAnimTable_85B746C,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7470,object
gSpriteAnimTable_85B7470:
	.word	gSpriteAnim_85B7420+0x18
	.size	 gSpriteAnimTable_85B7470,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7474,object
gSpriteAnimTable_85B7474:
	.word	gSpriteAnim_85B7420+0x1c
	.size	 gSpriteAnimTable_85B7474,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7478,object
gSpriteAnimTable_85B7478:
	.word	gSpriteAnim_85B7420+0x20
	.size	 gSpriteAnimTable_85B7478,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B747C,object
gSpriteAnimTable_85B747C:
	.word	gSpriteAnim_85B7420+0x24
	.size	 gSpriteAnimTable_85B747C,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7480,object
gSpriteAnimTable_85B7480:
	.word	gSpriteAnim_85B7420+0x28
	.size	 gSpriteAnimTable_85B7480,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7484,object
gSpriteAnimTable_85B7484:
	.word	gSpriteAnim_85B7420+0x2c
	.size	 gSpriteAnimTable_85B7484,4
	.align	2, 0
	.type	 gUnknown_085B7488,object
	.size	 gUnknown_085B7488,8
gUnknown_085B7488:
	.word	gRouletteHeadersTiles
	.short	0x1600
	.short	0x4
	.align	2, 0
	.type	 gUnknown_085B7490,object
	.size	 gUnknown_085B7490,8
gUnknown_085B7490:
	.word	RoulettePokeIconsTiles
	.short	0x400
	.short	0x5
	.align	2, 0
	.type	 gSpriteAnim_85B7498,object
gSpriteAnim_85B7498:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	0x30
	.byte	0x0
	.space	1
	.short	0x40
	.byte	0x0
	.space	1
	.short	0x50
	.byte	0x0
	.space	1
	.short	0x60
	.byte	0x0
	.space	1
	.short	0x70
	.byte	0x0
	.space	1
	.short	0x80
	.byte	0x0
	.space	1
	.short	0x90
	.byte	0x0
	.space	1
	.short	0xa0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B7498,48
	.align	2, 0
	.type	 gSpriteAnim_85B74C8,object
gSpriteAnim_85B74C8:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B74C8,20
	.align	2, 0
	.type	 gSpriteAnimTable_85B74DC,object
gSpriteAnimTable_85B74DC:
	.word	gSpriteAnim_85B7498
	.size	 gSpriteAnimTable_85B74DC,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74E0,object
gSpriteAnimTable_85B74E0:
	.word	gSpriteAnim_85B7498+0x8
	.size	 gSpriteAnimTable_85B74E0,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74E4,object
gSpriteAnimTable_85B74E4:
	.word	gSpriteAnim_85B7498+0x10
	.size	 gSpriteAnimTable_85B74E4,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74E8,object
gSpriteAnimTable_85B74E8:
	.word	gSpriteAnim_85B7498+0x18
	.size	 gSpriteAnimTable_85B74E8,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74EC,object
gSpriteAnimTable_85B74EC:
	.word	gSpriteAnim_85B7498+0x20
	.size	 gSpriteAnimTable_85B74EC,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74F0,object
gSpriteAnimTable_85B74F0:
	.word	gSpriteAnim_85B7498+0x24
	.size	 gSpriteAnimTable_85B74F0,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74F4,object
gSpriteAnimTable_85B74F4:
	.word	gSpriteAnim_85B7498+0x28
	.size	 gSpriteAnimTable_85B74F4,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74F8,object
gSpriteAnimTable_85B74F8:
	.word	gSpriteAnim_85B74C8
	.size	 gSpriteAnimTable_85B74F8,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B74FC,object
gSpriteAnimTable_85B74FC:
	.word	gSpriteAnim_85B74C8+0x4
	.size	 gSpriteAnimTable_85B74FC,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7500,object
gSpriteAnimTable_85B7500:
	.word	gSpriteAnim_85B74C8+0x8
	.size	 gSpriteAnimTable_85B7500,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7504,object
gSpriteAnimTable_85B7504:
	.word	gSpriteAnim_85B74C8+0xc
	.size	 gSpriteAnimTable_85B7504,4
	.align	2, 0
	.type	 gSpriteTemplate_85B7508,object
gSpriteTemplate_85B7508:
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74DC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74E0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74E4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74E8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.size	 gSpriteTemplate_85B7508,96
	.align	2, 0
	.type	 gSpriteTemplate_85B7568,object
gSpriteTemplate_85B7568:
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74EC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74F0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x4
	.short	0x8
	.word	gOamData_85B73EC
	.word	gSpriteAnimTable_85B74F4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.size	 gSpriteTemplate_85B7568,72
	.align	2, 0
	.type	 gSpriteTemplate_85B75B0,object
gSpriteTemplate_85B75B0:
	.short	0x5
	.short	0x8
	.word	gOamData_85B73F4
	.word	gSpriteAnimTable_85B74F8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x5
	.short	0x8
	.word	gOamData_85B73F4
	.word	gSpriteAnimTable_85B74FC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x5
	.short	0x8
	.word	gOamData_85B73F4
	.word	gSpriteAnimTable_85B7500
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.short	0x5
	.short	0x8
	.word	gOamData_85B73F4
	.word	gSpriteAnimTable_85B7504
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.size	 gSpriteTemplate_85B75B0,96
	.align	2, 0
	.type	 gSpriteTemplate_85B7610,object
gSpriteTemplate_85B7610:
	.short	0x0
	.short	0x9
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7458
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xa
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B745C
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xb
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7460
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xc
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7464
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0x9
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7468
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xa
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B746C
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xb
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7470
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xc
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7474
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0x9
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7478
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xa
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B747C
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xb
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7480
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.short	0x0
	.short	0xc
	.word	gOamData_85B73FC
	.word	gSpriteAnimTable_85B7484
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8143280
	.size	 gSpriteTemplate_85B7610,288
	.align	2, 0
	.type	 gOamData_85B7730,object
	.size	 gOamData_85B7730,8
gOamData_85B7730:
	.space	1
	.byte	0x40
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_85B7738,object
	.size	 gOamData_85B7738,8
gOamData_85B7738:
	.space	1
	.byte	0x80
	.space	1
	.byte	0x0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_85B7740,object
	.size	 gOamData_85B7740,8
gOamData_85B7740:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gOamData_85B7748,object
	.size	 gOamData_85B7748,8
gOamData_85B7748:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gUnknown_085B7750,object
gUnknown_085B7750:
	.word	gRouletteCreditTiles
	.short	0x400
	.short	0x7
	.word	gRouletteNumbersTiles
	.short	0x280
	.short	0x8
	.word	gRouletteMultiplierTiles
	.short	0x500
	.short	0x9
	.word	RouletteBallCounterTiles
	.short	0x140
	.short	0xa
	.word	RouletteCursorTiles
	.short	0x200
	.short	0xb
	.space	8
	.size	 gUnknown_085B7750,48
	.align	2, 0
	.type	 gSpriteAnim_85B7780,object
gSpriteAnim_85B7780:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x2
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x6
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0xa
	.byte	0x0
	.space	1
	.short	0xc
	.byte	0x0
	.space	1
	.short	0xe
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x12
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B7780,40
	.align	2, 0
	.type	 gSpriteAnimTable_85B77A8,object
gSpriteAnimTable_85B77A8:
	.word	gSpriteAnim_85B7780
	.size	 gSpriteAnimTable_85B77A8,4
	.align	2, 0
	.type	 gSpriteAnim_85B77AC,object
gSpriteAnim_85B77AC:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	0x10
	.byte	0x0
	.space	1
	.short	0x18
	.byte	0x0
	.space	1
	.short	0x20
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B77AC,24
	.align	2, 0
	.type	 gSpriteAnimTable_85B77C4,object
gSpriteAnimTable_85B77C4:
	.word	gSpriteAnim_85B77AC
	.size	 gSpriteAnimTable_85B77C4,4
	.align	2, 0
	.type	 gSpriteAnim_85B77C8,object
gSpriteAnim_85B77C8:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0x2
	.byte	0x0
	.space	1
	.short	0x4
	.byte	0x0
	.space	1
	.short	0x6
	.byte	0x0
	.space	1
	.short	0x8
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B77C8,24
	.align	2, 0
	.type	 gSpriteAnimTable_85B77E0,object
gSpriteAnimTable_85B77E0:
	.word	gSpriteAnim_85B77C8
	.size	 gSpriteAnimTable_85B77E0,4
	.align	2, 0
	.type	 gSpriteTemplate_85B77E4,object
	.size	 gSpriteTemplate_85B77E4,24
gSpriteTemplate_85B77E4:
	.short	0x7
	.short	0x5
	.word	gOamData_85B7730
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_085B77FC,object
	.size	 gUnknown_085B77FC,24
gUnknown_085B77FC:
	.short	0x8
	.short	0x5
	.word	gOamData_85B7738
	.word	gSpriteAnimTable_85B77A8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_085B7814,object
	.size	 gUnknown_085B7814,24
gUnknown_085B7814:
	.short	0x9
	.short	0x5
	.word	gOamData_85B7740
	.word	gSpriteAnimTable_85B77C4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814390C
	.align	2, 0
	.type	 gUnknown_085B782C,object
	.size	 gUnknown_085B782C,24
gUnknown_085B782C:
	.short	0xa
	.short	0x3
	.word	gOamData_85B7748
	.word	gSpriteAnimTable_85B77E0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_085B7844,object
	.size	 gUnknown_085B7844,24
gUnknown_085B7844:
	.short	0xb
	.short	0x5
	.word	gOamData_85B73EC
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gOamData_85B785C,object
	.size	 gOamData_85B785C,8
gOamData_85B785C:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gUnknown_085B7864,object
	.size	 gUnknown_085B7864,8
gUnknown_085B7864:
	.word	gUnknown_085B6650
	.short	0x200
	.short	0xc
	.align	2, 0
	.type	 gSpriteAnim_85B786C,object
gSpriteAnim_85B786C:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B786C,20
	.align	2, 0
	.type	 gSpriteAnim_85B7880,object
gSpriteAnim_85B7880:
	.short	0x0
	.byte	0xa
	.space	1
	.short	0x4
	.byte	0xa
	.space	1
	.short	0x8
	.byte	0xa
	.space	1
	.short	0x4
	.byte	0xa
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B7880,20
	.align	2, 0
	.type	 gSpriteAnim_85B7894,object
gSpriteAnim_85B7894:
	.short	0x0
	.byte	0xf
	.space	1
	.short	0x4
	.byte	0xf
	.space	1
	.short	0x8
	.byte	0xf
	.space	1
	.short	0x4
	.byte	0xf
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B7894,20
	.align	2, 0
	.type	 gSpriteAnim_85B78A8,object
gSpriteAnim_85B78A8:
	.short	0x4
	.byte	0x2
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B78A8,20
	.align	2, 0
	.type	 gSpriteAnim_85B78BC,object
gSpriteAnim_85B78BC:
	.short	0x4
	.byte	0x2
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B78BC,24
	.align	2, 0
	.type	 gSpriteAnim_85B78D4,object
gSpriteAnim_85B78D4:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x8
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B78D4,20
	.align	2, 0
	.type	 gSpriteAnim_85B78E8,object
gSpriteAnim_85B78E8:
	.short	0xc
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B78E8,8
	.align	2, 0
	.type	 gSpriteAnim_85B78F0,object
gSpriteAnim_85B78F0:
	.short	0x8
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x0
	.byte	0x5
	.space	1
	.short	0xc
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B78F0,20
	.align	2, 0
	.type	 gSpriteAnimTable_85B7904,object
gSpriteAnimTable_85B7904:
	.word	gSpriteAnim_85B786C
	.word	gSpriteAnim_85B7880
	.word	gSpriteAnim_85B7894
	.word	gSpriteAnim_85B78A8
	.word	gSpriteAnim_85B78F0
	.word	gSpriteAnim_85B78BC
	.word	gSpriteAnim_85B78D4
	.word	gSpriteAnim_85B78D4
	.word	gSpriteAnim_85B78E8
	.size	 gSpriteAnimTable_85B7904,36
	.align	2, 0
	.type	 gSpriteTemplate_85B7928,object
	.size	 gSpriteTemplate_85B7928,24
gSpriteTemplate_85B7928:
	.short	0xc
	.short	0x2
	.word	gOamData_85B785C
	.word	gSpriteAnimTable_85B7904
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gOamData_85B7940,object
	.size	 gOamData_85B7940,8
gOamData_85B7940:
	.byte	0x51
	.byte	0x3
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gUnknown_085B7948,object
	.size	 gUnknown_085B7948,8
gUnknown_085B7948:
	.word	gRouletteCenter_Gfx
	.short	0x800
	.short	0x6
	.align	2, 0
	.type	 gSpriteTemplate_85B7950,object
	.size	 gSpriteTemplate_85B7950,24
gSpriteTemplate_85B7950:
	.short	0x6
	.short	0x2
	.word	gOamData_85B7940
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814399C
	.align	2, 0
	.type	 gOamData_85B7968,object
	.size	 gOamData_85B7968,8
gOamData_85B7968:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gOamData_85B7970,object
	.size	 gOamData_85B7970,8
gOamData_85B7970:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gUnknown_085B7978,object
	.size	 gUnknown_085B7978,8
gUnknown_085B7978:
	.word	gUnknown_085B67FC
	.short	0xe00
	.short	0xd
	.align	2, 0
	.type	 gSpriteAnim_85B7980,object
gSpriteAnim_85B7980:
	.short	0x0
	.byte	0x6
	.space	1
	.short	0x10
	.byte	0x6
	.space	1
	.short	0x20
	.byte	0x6
	.space	1
	.short	0x30
	.byte	0x6
	.space	1
	.short	0x20
	.byte	0x6
	.space	1
	.short	0x40
	.byte	0x6
	.space	1
	.short	-0x2
	.byte	0x2
	.space	1
	.size	 gSpriteAnim_85B7980,28
	.align	2, 0
	.type	 gSpriteAnim_85B799C,object
gSpriteAnim_85B799C:
	.short	0x50
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B799C,8
	.align	2, 0
	.type	 gSpriteAnim_85B79A4,object
gSpriteAnim_85B79A4:
	.short	0x50
	.byte	0x4a
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B79A4,8
	.align	2, 0
	.type	 gSpriteAnim_85B79AC,object
gSpriteAnim_85B79AC:
	.short	0x50
	.byte	0x14
	.space	1
	.short	0x60
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B79AC,12
	.align	2, 0
	.type	 gSpriteAnim_85B79B8,object
gSpriteAnim_85B79B8:
	.short	0x50
	.byte	0x54
	.space	1
	.short	0x60
	.byte	0x54
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B79B8,12
	.align	2, 0
	.type	 gSpriteAnim_85B79C4,object
gSpriteAnim_85B79C4:
	.short	0x50
	.byte	0xa
	.space	1
	.short	0x60
	.byte	0xa
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B79C4,12
	.align	2, 0
	.type	 gSpriteAnim_85B79D0,object
gSpriteAnim_85B79D0:
	.short	0x50
	.byte	0x4a
	.space	1
	.short	0x60
	.byte	0x4a
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_85B79D0,12
	.align	2, 0
	.type	 gSpriteAnimTable_85B79DC,object
gSpriteAnimTable_85B79DC:
	.word	gSpriteAnim_85B7980
	.size	 gSpriteAnimTable_85B79DC,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B79E0,object
gSpriteAnimTable_85B79E0:
	.word	gSpriteAnim_85B799C
	.word	gSpriteAnim_85B79A4
	.word	gSpriteAnim_85B79AC
	.word	gSpriteAnim_85B79B8
	.word	gSpriteAnim_85B79C4
	.word	gSpriteAnim_85B79D0
	.size	 gSpriteAnimTable_85B79E0,24
	.align	2, 0
	.type	 gSpriteTemplate_85B79F8,object
	.size	 gSpriteTemplate_85B79F8,24
gSpriteTemplate_85B79F8:
	.short	0xd
	.short	0x6
	.word	gOamData_85B7968
	.word	gSpriteAnimTable_85B79DC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gSpriteTemplate_85B7A10,object
	.size	 gSpriteTemplate_85B7A10,24
gSpriteTemplate_85B7A10:
	.short	0xd
	.short	0x7
	.word	gOamData_85B7970
	.word	gSpriteAnimTable_85B79E0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8145294
	.align	2, 0
	.type	 gOamData_85B7A28,object
	.size	 gOamData_85B7A28,8
gOamData_85B7A28:
	.space	1
	.byte	0x0
	.space	1
	.byte	0x40
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gOamData_85B7A30,object
	.size	 gOamData_85B7A30,8
gOamData_85B7A30:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gOamData_85B7A38,object
	.size	 gOamData_85B7A38,8
gOamData_85B7A38:
	.space	1
	.byte	0x41
	.space	1
	.byte	0x80
	.space	1
	.byte	0x8
	.space	2
	.align	2, 0
	.type	 gUnknown_085B7A40,object
	.size	 gUnknown_085B7A40,8
gUnknown_085B7A40:
	.word	gUnknown_085B7290
	.short	0x180
	.short	0xe
	.align	2, 0
	.type	 gSpriteAffineAnim_85B7A48,object
gSpriteAffineAnim_85B7A48:
	.short	0x80
	.short	0x80
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x3c
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_85B7A48,24
	.align	2, 0
	.type	 gSpriteAffineAnim_85B7A60,object
gSpriteAffineAnim_85B7A60:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	-0x2
	.short	0x0
	.byte	0x0
	.byte	0xf
	.space	2
	.short	-0x1
	.short	-0x2
	.byte	0x0
	.byte	0xf
	.space	2
	.short	-0x1
	.short	-0x5
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_85B7A60,40
	.align	2, 0
	.type	 gSpriteAffineAnimTable_85B7A88,object
gSpriteAffineAnimTable_85B7A88:
	.word	gSpriteAffineAnim_85B7A48
	.size	 gSpriteAffineAnimTable_85B7A88,4
	.align	2, 0
	.type	 gSpriteAffineAnimTable_85B7A8C,object
gSpriteAffineAnimTable_85B7A8C:
	.word	gSpriteAffineAnim_85B7A60
	.size	 gSpriteAffineAnimTable_85B7A8C,4
	.align	2, 0
	.type	 gSpriteAffineAnim_85B7A90,object
gSpriteAffineAnim_85B7A90:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_85B7A90,16
	.align	2, 0
	.type	 gSpriteAffineAnimTable_85B7AA0,object
gSpriteAffineAnimTable_85B7AA0:
	.word	gSpriteAffineAnim_85B7A90
	.size	 gSpriteAffineAnimTable_85B7AA0,4
	.align	2, 0
	.type	 gSpriteAnim_85B7AA4,object
gSpriteAnim_85B7AA4:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B7AA4,8
	.align	2, 0
	.type	 gSpriteAnim_85B7AAC,object
gSpriteAnim_85B7AAC:
	.short	0x4
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_85B7AAC,8
	.align	2, 0
	.type	 gSpriteAnimTable_85B7AB4,object
gSpriteAnimTable_85B7AB4:
	.word	gSpriteAnim_85B7AA4
	.size	 gSpriteAnimTable_85B7AB4,4
	.align	2, 0
	.type	 gSpriteAnimTable_85B7AB8,object
gSpriteAnimTable_85B7AB8:
	.word	gSpriteAnim_85B7AAC
	.size	 gSpriteAnimTable_85B7AB8,4
	.align	2, 0
	.type	 gSpriteTemplate_85B7ABC,object
gSpriteTemplate_85B7ABC:
	.short	0xe
	.short	0x1
	.word	gOamData_85B7A28
	.word	gSpriteAnimTable_85B7AB4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.short	0xe
	.short	0x1
	.word	gOamData_85B7A30
	.word	gSpriteAnimTable_85B7AB8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8144E60
	.size	 gSpriteTemplate_85B7ABC,48
	.align	2, 0
	.type	 gUnknown_085B7AEC,object
	.size	 gUnknown_085B7AEC,24
gUnknown_085B7AEC:
	.short	0xe
	.short	0x1
	.word	gOamData_85B7A38
	.word	gSpriteAnimTable_85B7AB8
	.word	0x0
	.word	gSpriteAffineAnimTable_85B7A8C
	.word	sub_8145294
.text
	.align	2, 0
	.type	 sub_81428C4,function
	.thumb_func
sub_81428C4:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L639
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	pop	{r4}
	pop	{r0}
	bx	r0
.L640:
	.align	2, 0
.L639:
	.word	gUnknown_085B6408
.Lfe47:
	.size	 sub_81428C4,.Lfe47-sub_81428C4
	.align	2, 0
	.type	 sub_81428E4,function
	.thumb_func
sub_81428E4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L643
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L642	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L643+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L642:
	pop	{r4}
	pop	{r0}
	bx	r0
.L644:
	.align	2, 0
.L643:
	.word	gPaletteFade
	.word	sub_81405CC
.Lfe48:
	.size	 sub_81428E4,.Lfe48-sub_81428E4
	.align	2, 0
	.type	 sub_8142918,function
	.thumb_func
sub_8142918:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	HideCoinsWindow
	bl	FreeAllWindowBuffers
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r2, .L646
	ldrb	r1, [r2, #0x8]
	lsl	r1, r1, #0x1a
	lsr	r1, r1, #0x1a
	ldrb	r3, [r2, #0x4]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x4]
	bl	UpdatePaletteFade
	ldr	r1, .L646+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L646+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L647:
	.align	2, 0
.L646:
	.word	gPaletteFade
	.word	gTasks
	.word	sub_81428E4
.Lfe49:
	.size	 sub_8142918,.Lfe49-sub_8142918
	.align	2, 0
	.type	 sub_814297C,function
	.thumb_func
sub_814297C:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	HideCoinsWindow
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 sub_814297C,.Lfe50-sub_814297C
	.align	2, 0
	.type	 sub_81429A0,function
	.thumb_func
sub_81429A0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L651
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	ldr	r0, .L651+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L650	@cond_branch
	ldr	r1, .L651+0x8
	mov	r0, #0x1
	strh	r0, [r1]
	bl	HideCoinsWindow
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
.L650:
	pop	{r4}
	pop	{r0}
	bx	r0
.L652:
	.align	2, 0
.L651:
	.word	gTasks
	.word	gMain
	.word	gSpecialVar_0x8004
.Lfe51:
	.size	 sub_81429A0,.Lfe51-sub_81429A0
	.align	2, 0
	.type	 sub_81429F0,function
	.thumb_func
sub_81429F0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L655
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L654	@cond_branch
	ldr	r2, .L655+0x4
	ldr	r0, .L655+0x8
	ldrh	r1, [r0]
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r1, [r0]
	ldr	r0, .L655+0xc
	mov	r2, #0x2
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L655+0x10
	ldr	r1, .L655+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	str	r5, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L655+0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L655+0x1c
	str	r1, [r0]
.L654:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	gMain
	.word	gUnknown_085B6344
	.word	gSpecialVar_0x8004
	.word	gStringVar1
	.word	gStringVar4
	.word	Roulette_Text_PlayMinimumWagerIsX
	.word	gTasks
	.word	sub_81428C4
.Lfe52:
	.size	 sub_81429F0,.Lfe52-sub_81429F0
	.align	2, 0
	.type	 Task_Roulette_0,function
	.thumb_func
Task_Roulette_0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L662
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r1, #0x22
	ldrsh	r0, [r6, r1]
	bl	PrintCoinsString
	ldr	r2, .L662+0x4
	ldr	r0, .L662+0x8
	mov	r8, r0
	ldrh	r1, [r0]
	mov	r7, #0x1
	add	r0, r7, #0
	and	r0, r0, r1
	lsr	r1, r1, #0x7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r4, [r0]
	ldr	r0, .L662+0xc
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r1, #0x22
	ldrsh	r0, [r6, r1]
	cmp	r0, r4
	blt	.L658	@cond_branch
	mov	r0, r8
	ldrh	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L659	@cond_branch
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L659	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r2, .L662+0x10
	str	r7, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L662+0x14
	str	r0, [r6]
	b	.L661
.L663:
	.align	2, 0
.L662:
	.word	gTasks
	.word	gUnknown_085B6344
	.word	gSpecialVar_0x8004
	.word	gStringVar1
	.word	Roulette_Text_SpecialRateTable
	.word	sub_81429F0
.L659:
	ldr	r4, .L664
	ldr	r1, .L664+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L664+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L664+0xc
	str	r1, [r0]
	b	.L661
.L665:
	.align	2, 0
.L664:
	.word	gStringVar4
	.word	Roulette_Text_PlayMinimumWagerIsX
	.word	gTasks
	.word	sub_81428C4
.L658:
	ldr	r5, .L666
	ldr	r1, .L666+0x4
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	str	r7, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L666+0x8
	str	r0, [r6]
	strh	r4, [r6, #0x22]
	strh	r4, [r6, #0x8]
.L661:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L667:
	.align	2, 0
.L666:
	.word	gStringVar4
	.word	Roulette_Text_NotEnoughCoins
	.word	sub_81429A0
.Lfe53:
	.size	 Task_Roulette_0,.Lfe53-Task_Roulette_0
	.align	2, 0
	.globl	PlayRoulette
	.type	 PlayRoulette,function
	.thumb_func
PlayRoulette:
	push	{r4, lr}
	bl	ScriptContext2_Enable
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	mov	r2, #0x1
	bl	ShowCoinsWindow
	ldr	r0, .L669
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCoins
	ldr	r2, .L669+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r0, [r1, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.L670:
	.align	2, 0
.L669:
	.word	Task_Roulette_0
	.word	gTasks
.Lfe54:
	.size	 PlayRoulette,.Lfe54-PlayRoulette
	.align	2, 0
	.type	 sub_8142C0C,function
	.thumb_func
sub_8142C0C:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L672	@cond_branch
	bl	FreeAllSpritePalettes
	ldr	r0, .L674
	bl	LoadSpritePalettes
	ldr	r0, .L674+0x4
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L674+0x8
	bl	LoadCompressedSpriteSheet
	ldr	r0, .L674+0xc
	bl	LoadCompressedSpriteSheet
	b	.L673
.L675:
	.align	2, 0
.L674:
	.word	gUnknown_085B7384
	.word	gUnknown_085B7864
	.word	gUnknown_085B7978
	.word	gUnknown_085B7A40
.L672:
	mov	r0, #0xe
	bl	FreeSpriteTilesByTag
	mov	r0, #0xd
	bl	FreeSpriteTilesByTag
	mov	r0, #0xc
	bl	FreeSpriteTilesByTag
	bl	FreeAllSpritePalettes
.L673:
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 sub_8142C0C,.Lfe55-sub_8142C0C
	.align	2, 0
	.type	 sub_8142C60,function
	.thumb_func
sub_8142C60:
	push	{r4, r5, r6, lr}
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, [r0, #0x4]
	ldrb	r3, [r1]
	mov	r1, #0x74
	mov	r2, #0x50
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r0, .L678
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r6]
	strh	r0, [r1, #0x2e]
	strh	r4, [r1, #0x30]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x2c
	ldrb	r0, [r1]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r1]
	ldrh	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x1e
	strh	r0, [r6]
	lsl	r0, r0, #0x10
	ldr	r1, .L678+0x4
	cmp	r0, r1
	bls	.L677	@cond_branch
	ldr	r1, .L678+0x8
	add	r0, r2, r1
	strh	r0, [r6]
.L677:
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L679:
	.align	2, 0
.L678:
	.word	gSprites
	.word	0x1670000
	.word	-0x14a
.Lfe56:
	.size	 sub_8142C60,.Lfe56-sub_8142C60
	.align	2, 0
	.type	 sub_8142CD0,function
	.thumb_func
sub_8142CD0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	ldr	r4, .L702
	ldr	r0, [r4]
	ldr	r5, .L702+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	mov	r6, sp
	ldrh	r1, [r4, #0x6]
	lsl	r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r4, .L702+0x8
	ldr	r0, [r4]
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r6, #0x4]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r6, #0x6]
	mov	r0, sp
	bl	LoadSpriteSheet
	mov	r6, #0x0
	ldr	r0, .L702+0xc
	mov	r8, r0
.L684:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x1b
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	lsl	r7, r6, #0x2
.L688:
	lsl	r1, r5, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	ldr	r0, .L702+0x10
	add	r0, r1, r0
	add	r1, r1, #0x94
	add	r2, r4, #0
	add	r2, r2, #0x5c
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L702+0x14
	ldr	r1, [r1]
	add	r2, r5, #0
	add	r2, r2, #0x1d
	add	r2, r7, r2
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x18
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x47
	bls	.L687	@cond_branch
	mov	r4, #0x0
.L687:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L688	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L684	@cond_branch
	mov	r6, #0x0
	ldr	r4, .L702+0xc
.L695:
	lsl	r1, r6, #0x1
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	ldr	r0, .L702+0x18
	add	r0, r1, r0
	add	r1, r1, #0x94
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x46
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L702+0x14
	ldr	r1, [r1]
	add	r1, r1, r6
	add	r1, r1, #0x65
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L695	@cond_branch
	mov	r6, #0x0
	ldr	r4, .L702+0xc
.L700:
	lsl	r2, r6, #0x1
	add	r2, r2, r6
	lsl	r2, r2, #0x3
	ldr	r0, .L702+0x1c
	add	r0, r2, r0
	add	r2, r2, #0x5c
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r1, #0x7e
	mov	r3, #0x1e
	bl	CreateSprite
	ldr	r1, .L702+0x14
	ldr	r1, [r1]
	add	r1, r1, r6
	add	r1, r1, #0x69
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L700	@cond_branch
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L703:
	.align	2, 0
.L702:
	.word	gUnknown_085B7488
	.word	gDecompressionBuffer
	.word	gUnknown_085B7490
	.word	gSprites
	.word	gSpriteTemplate_85B75B0
	.word	gUnknown_0203AB88
	.word	gSpriteTemplate_85B7508
	.word	gSpriteTemplate_85B7568
.Lfe57:
	.size	 sub_8142CD0,.Lfe57-sub_8142CD0
	.align	2, 0
	.type	 unref_sub_8142E3C,function
	.thumb_func
unref_sub_8142E3C:
	push	{r4, lr}
	mov	r4, #0x0
.L708:
	ldr	r0, .L710
	ldr	r0, [r0]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L710+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L708	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L711:
	.align	2, 0
.L710:
	.word	gUnknown_0203AB88
	.word	gSprites
.Lfe58:
	.size	 unref_sub_8142E3C,.Lfe58-unref_sub_8142E3C
	.align	2, 0
	.type	 sub_8142E70,function
	.thumb_func
sub_8142E70:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	ip, r1
	cmp	r0, #0
	beq	.L720	@cond_branch
	cmp	r0, #0x1
	bne	.L713	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L737
	ldr	r3, .L737+0x4
	mov	r2, #0x4
.L718:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x12
	bls	.L718	@cond_branch
	b	.L713
.L738:
	.align	2, 0
.L737:
	.word	gSprites
	.word	gUnknown_0203AB88
.L720:
	mov	r4, #0x0
	ldr	r0, .L739
	mov	r9, r0
	ldr	r7, .L739+0x4
	add	r1, r7, #0x4
	mov	r8, r1
	ldr	r5, .L739+0x8
	mov	r6, #0x5
	neg	r6, r6
.L724:
	mov	r0, r9
	ldr	r2, [r0]
	lsl	r3, r4, #0x3
	mov	r1, r8
	add	r0, r3, r1
	ldr	r1, [r2, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L727	@cond_branch
	add	r0, r3, r7
	ldrb	r0, [r0, #0x2]
	cmp	r0, ip
	beq	.L727	@cond_branch
	add	r0, r2, r4
	add	r0, r0, #0x59
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L723
.L740:
	.align	2, 0
.L739:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B62E4
	.word	gSprites
.L727:
	add	r0, r2, r4
	add	r0, r0, #0x59
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
.L723:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xb
	bls	.L724	@cond_branch
	cmp	r4, #0x12
	bhi	.L713	@cond_branch
	ldr	r6, .L741
	ldr	r3, .L741+0x4
	mov	r5, #0x5
	neg	r5, r5
.L733:
	ldr	r0, [r3]
	add	r0, r0, r4
	add	r0, r0, #0x59
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r5, #0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x12
	bls	.L733	@cond_branch
.L713:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L742:
	.align	2, 0
.L741:
	.word	gSprites
	.word	gUnknown_0203AB88
.Lfe59:
	.size	 sub_8142E70,.Lfe59-sub_8142E70
	.align	2, 0
	.type	 sub_8142F7C,function
	.thumb_func
sub_8142F7C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r5, #0x0
	ldr	r6, .L749
	ldr	r4, .L749+0x4
	mov	r0, #0x4
	mov	r8, r0
.L747:
	ldr	r0, .L749+0x8
	mov	r1, #0x74
	mov	r2, #0x14
	mov	r3, #0xa
	bl	CreateSprite
	ldr	r1, [r6]
	add	r3, r5, #0
	add	r3, r3, #0x31
	add	r1, r1, #0x3c
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r2, [r6]
	add	r2, r2, #0x3c
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x1
	strh	r1, [r0, #0x2e]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L749+0xc
	str	r1, [r0]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r1, [r0, #0x5]
	mov	r7, #0xd
	neg	r7, r7
	add	r2, r7, #0
	and	r1, r1, r2
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x8
	bl	StartSpriteAnim
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L747	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L750:
	.align	2, 0
.L749:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	gSpriteTemplate_85B7928
	.word	sub_814390C
.Lfe60:
	.size	 sub_8142F7C,.Lfe60-sub_8142F7C
	.align	2, 0
	.type	 sub_8143038,function
	.thumb_func
sub_8143038:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	mov	r6, #0x0
	cmp	r0, #0
	beq	.L752	@cond_branch
	ldr	r4, .L767
	ldr	r3, .L767+0x4
	mov	r2, #0x4
.L756:
	ldr	r0, [r3]
	add	r0, r0, r6
	add	r0, r0, #0x6d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L756	@cond_branch
	b	.L758
.L768:
	.align	2, 0
.L767:
	.word	gSprites
	.word	gUnknown_0203AB88
.L752:
	ldr	r0, .L769
	mov	r8, r0
	ldr	r7, .L769+0x4
	ldr	r0, .L769+0x8
	mov	ip, r0
	mov	r0, #0x5
	neg	r0, r0
	mov	sl, r0
.L762:
	mov	r0, r8
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xc
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L764	@cond_branch
	cmp	r6, r9
	bne	.L763	@cond_branch
.L764:
	add	r0, r1, r6
	add	r0, r0, #0x6d
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L761
.L770:
	.align	2, 0
.L769:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	gUnknown_085B6154
.L763:
	add	r5, r6, #0
	add	r5, r5, #0x31
	add	r0, r1, #0
	add	r0, r0, #0x3c
	add	r0, r0, r5
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, sl
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r0, r8
	ldr	r3, [r0]
	add	r4, r3, #0
	add	r4, r4, #0x3c
	add	r4, r4, r5
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r7
	add	r3, r3, #0xc
	add	r3, r3, r6
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r0, [r0, #0x3]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0x4
	strh	r0, [r2, #0x20]
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r7
	ldrb	r1, [r3]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r0, [r0, #0x4]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0x3
	strh	r0, [r2, #0x22]
.L761:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L762	@cond_branch
.L758:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 sub_8143038,.Lfe61-sub_8143038
	.align	2, 0
	.type	 sub_8143150,function
	.thumb_func
sub_8143150:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L772	@cond_branch
	ldr	r2, .L774
	ldr	r0, .L774+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L773
.L775:
	.align	2, 0
.L774:
	.word	gSprites
	.word	gUnknown_0203AB88
.L772:
	ldr	r4, .L776
	ldr	r3, .L776+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r3, [r3]
	add	r3, r3, #0x6c
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldr	r0, .L776+0x8
	lsl	r2, r5, #0x2
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldrb	r0, [r2, #0x3]
	add	r0, r0, #0x2
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x20]
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r2, #0x4]
	add	r0, r0, #0x2
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x22]
.L773:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L777:
	.align	2, 0
.L776:
	.word	gSprites
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6154
.Lfe62:
	.size	 sub_8143150,.Lfe62-sub_8143150
	.align	2, 0
	.type	 sub_81431E4,function
	.thumb_func
sub_81431E4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L789
	ldr	r0, [r4]
	ldr	r5, .L789+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp, #0x4]
	add	r0, sp, #0x4
	ldrh	r2, [r4, #0x6]
	lsl	r2, r2, #0x10
	ldrh	r1, [r4, #0x4]
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	bl	LoadSpriteSheet
	mov	r1, #0xf
	mov	r0, sp
	strh	r1, [r0]
	mov	r0, #0x0
	ldr	r7, .L789+0x8
.L782:
	mov	r4, #0x0
	add	r6, r0, #0x1
	lsl	r5, r0, #0x2
.L786:
	add	r1, r5, r4
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L789+0xc
	add	r0, r0, r1
	mov	r1, #0x28
	mov	r2, sp
	bl	sub_8142C60
	ldr	r1, .L789+0x10
	ldr	r1, [r1]
	add	r2, r4, #0x7
	add	r2, r5, r2
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x2c
	ldrb	r0, [r1]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L786	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bls	.L782	@cond_branch
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L790:
	.align	2, 0
.L789:
	.word	gUnknown_085B741C
	.word	gDecompressionBuffer
	.word	gSprites
	.word	gSpriteTemplate_85B7610
	.word	gUnknown_0203AB88
.Lfe63:
	.size	 sub_81431E4,.Lfe63-sub_81431E4
	.align	2, 0
	.type	 sub_8143280,function
	.thumb_func
sub_8143280:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r0, .L795
	ldr	r1, [r0]
	ldrh	r0, [r6, #0x2e]
	ldrh	r1, [r1, #0x24]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	asr	r1, r0, #0x10
	ldr	r0, .L795+0x4
	cmp	r1, r0
	ble	.L792	@cond_branch
	ldr	r2, .L795+0x8
	add	r0, r1, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L792:
	add	r0, r4, #0
	bl	Sin2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	bl	Cos2
	lsl	r2, r5, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x30
	ldrsh	r1, [r6, r3]
	mul	r1, r1, r2
	asr	r1, r1, #0xc
	strh	r1, [r6, #0x24]
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	neg	r1, r4
	mov	r3, #0x30
	ldrsh	r0, [r6, r3]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r6, #0x26]
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r3, r0, #0x1b
	cmp	r2, #0
	bge	.L793	@cond_branch
	add	r2, r2, #0xf
.L793:
	lsl	r0, r2, #0xc
	lsr	r5, r0, #0x10
	ldr	r1, .L795+0xc
	lsl	r0, r3, #0x3
	add	r1, r0, r1
	add	r0, r4, #0
	cmp	r0, #0
	bge	.L794	@cond_branch
	add	r0, r0, #0xf
.L794:
	asr	r0, r0, #0x4
	strh	r0, [r1, #0x6]
	strh	r0, [r1]
	strh	r5, [r1, #0x2]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r1, #0x4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L796:
	.align	2, 0
.L795:
	.word	gUnknown_0203AB88
	.word	0x167
	.word	-0x168
	.word	gOamMatrices
.Lfe64:
	.size	 sub_8143280,.Lfe64-sub_8143280
	.align	2, 0
	.type	 sub_8143314,function
	.thumb_func
sub_8143314:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r5, #0x0
	ldr	r7, .L813
	mov	r6, sp
.L801:
	ldr	r0, .L813+0x4
	lsl	r4, r5, #0x3
	add	r4, r4, r0
	ldr	r0, [r4]
	add	r1, r7, #0
	bl	LZ77UnCompWram
	str	r7, [sp]
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L813+0x8
	ldr	r1, [r6, #0x4]
	and	r1, r1, r0
	orr	r1, r1, r2
	str	r1, [r6, #0x4]
	ldrh	r2, [r4, #0x6]
	lsl	r2, r2, #0x10
	ldr	r0, .L813+0xc
	and	r0, r0, r1
	orr	r0, r0, r2
	str	r0, [r6, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L801	@cond_branch
	ldr	r0, .L813+0x10
	mov	r1, #0xd0
	mov	r2, #0x10
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r3, .L813+0x14
	ldr	r1, [r3]
	add	r1, r1, #0x50
	strb	r0, [r1]
	ldr	r4, .L813+0x18
	ldr	r0, [r3]
	add	r0, r0, #0x50
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r5, #0x0
	add	r7, r3, #0
.L806:
	lsl	r1, r5, #0x13
	mov	r0, #0xc4
	lsl	r0, r0, #0x10
	add	r1, r1, r0
	asr	r1, r1, #0x10
	ldr	r0, .L813+0x1c
	mov	r2, #0x18
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r3, r5, #0
	add	r3, r3, #0x15
	add	r1, r1, #0x3c
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r7]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r6, #0x40
	orr	r1, r1, r6
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L806	@cond_branch
	ldr	r0, .L813+0x20
	mov	r1, #0x78
	mov	r2, #0x44
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r2, .L813+0x14
	ldr	r1, [r2]
	add	r1, r1, #0x55
	strb	r0, [r1]
	ldr	r3, .L813+0x18
	ldr	r0, [r2]
	add	r0, r0, #0x55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	orr	r1, r1, r6
	strb	r1, [r0]
	mov	r5, #0x0
	add	r4, r2, #0
	add	r7, r3, #0
.L811:
	lsl	r1, r5, #0x14
	mov	r2, #0xc0
	lsl	r2, r2, #0x10
	add	r1, r1, r2
	asr	r1, r1, #0x10
	ldr	r0, .L813+0x24
	mov	r2, #0x24
	mov	r3, #0x4
	bl	CreateSprite
	ldr	r1, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x1a
	add	r1, r1, #0x3c
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r3, #0x4
	mov	r8, r3
	mov	r3, r8
	orr	r1, r1, r3
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r6, #0x40
	orr	r1, r1, r6
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L811	@cond_branch
	ldr	r0, .L813+0x28
	mov	r1, #0x98
	mov	r2, #0x60
	mov	r3, #0x9
	bl	CreateSprite
	ldr	r3, .L813+0x14
	ldr	r1, [r3]
	add	r1, r1, #0x6c
	strb	r0, [r1]
	ldr	r4, .L813+0x18
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, r8
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	orr	r1, r1, r6
	strb	r1, [r0]
	ldr	r0, [r3]
	add	r0, r0, #0x6c
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L814:
	.align	2, 0
.L813:
	.word	gDecompressionBuffer
	.word	gUnknown_085B7750
	.word	-0x10000
	.word	0xffff
	.word	gSpriteTemplate_85B77E4
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	gUnknown_085B77FC
	.word	gUnknown_085B7814
	.word	gUnknown_085B782C
	.word	gUnknown_085B7844
.Lfe65:
	.size	 sub_8143314,.Lfe65-sub_8143314
	.align	2, 0
	.type	 sub_8143514,function
	.thumb_func
sub_8143514:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	mov	r8, r0
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r1, .L823
	mov	r9, r1
	ldr	r0, .L823+0x4
	mov	sl, r0
.L819:
	add	r0, r7, #0
	mov	r1, r8
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L823+0x4
	ldr	r0, [r1]
	add	r3, r6, #0
	add	r3, r3, #0x15
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L823
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	cmp	r5, #0
	bne	.L821	@cond_branch
	cmp	r4, #0
	bne	.L821	@cond_branch
	cmp	r6, #0x3
	bne	.L820	@cond_branch
.L821:
	mov	r4, sl
	ldr	r0, [r4]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r4, #0x5
	neg	r4, r4
	add	r2, r4, #0
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r1, sl
	ldr	r0, [r1]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r4, r9
	add	r3, r0, r4
	add	r4, r3, #0
	add	r4, r4, #0x40
	ldr	r1, .L823+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrh	r2, [r0]
	ldrh	r4, [r4]
	add	r2, r2, r4
	ldr	r4, .L823+0xc
	add	r0, r4, #0
	and	r2, r2, r0
	ldrh	r0, [r3, #0x4]
	ldr	r4, .L823+0x10
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strh	r0, [r3, #0x4]
	mov	r4, #0x1
.L820:
	add	r0, r7, #0
	mov	r1, r8
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r0, r8
	mov	r1, #0xa
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L819	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L824:
	.align	2, 0
.L823:
	.word	gSprites
	.word	gUnknown_0203AB88
	.word	gSprites+0x8
	.word	0x3ff
	.word	-0x400
.Lfe66:
	.size	 sub_8143514,.Lfe66-sub_8143514
	.section .rodata
.LC301:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
.text
	.align	2, 0
	.type	 sub_8143614,function
	.thumb_func
sub_8143614:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L839
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	cmp	r4, #0x13
	bls	.L826	@cond_branch
	mov	r4, #0x0
.L826:
	ldr	r3, .L839+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r2, r0, #0x2
	add	r0, r2, r3
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x4
	beq	.L830	@cond_branch
	cmp	r0, #0x4
	bgt	.L836	@cond_branch
	cmp	r0, #0x3
	beq	.L828	@cond_branch
	b	.L827
.L840:
	.align	2, 0
.L839:
	.word	.LC301
	.word	gUnknown_085B6154
.L836:
	cmp	r0, #0xc
	beq	.L832	@cond_branch
	b	.L827
.L828:
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__udivsi3
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L841
	ldr	r0, [r0]
	add	r0, r0, #0x16
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x3
	bhi	.L827	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L838
.L842:
	.align	2, 0
.L841:
	.word	gUnknown_0203AB88
.L830:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L843
	ldr	r0, [r0]
	add	r0, r0, #0x12
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L827	@cond_branch
	ldrb	r0, [r1]
	add	r0, r0, #0x2
.L838:
	add	r0, r0, sp
	ldrb	r0, [r0]
	b	.L837
.L844:
	.align	2, 0
.L843:
	.word	gUnknown_0203AB88
.L832:
	ldr	r0, .L845
	ldr	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x8
	add	r0, r2, r0
	ldr	r1, [r1, #0x8]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L827	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	b	.L837
.L846:
	.align	2, 0
.L845:
	.word	gUnknown_0203AB88
.L827:
	mov	r0, #0x0
.L837:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 sub_8143614,.Lfe67-sub_8143614
	.align	2, 0
	.type	 sub_81436D0,function
	.thumb_func
sub_81436D0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L848
	ldr	r1, [r1]
	add	r1, r1, #0x55
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L848+0x4
	add	r4, r1, r2
	bl	sub_8143614
	add	r3, r4, #0
	add	r3, r3, #0x2b
	strb	r0, [r3]
	add	r2, r4, #0
	add	r2, r2, #0x40
	ldr	r1, [r4, #0x8]
	ldrb	r0, [r3]
	ldr	r1, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L848+0x8
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L848+0xc
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L849:
	.align	2, 0
.L848:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	0x3ff
	.word	-0x400
.Lfe68:
	.size	 sub_81436D0,.Lfe68-sub_81436D0
	.align	2, 0
	.type	 sub_814372C,function
	.thumb_func
sub_814372C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r6, #0x0
	ldr	r1, .L874
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x19]
	add	r5, r1, #0
	cmp	r0, #0x1
	bne	.L851	@cond_branch
	mov	r6, #0x2
.L851:
	cmp	r2, #0x6
	bls	.LCB8624
	b	.L865	@long jump
.LCB8624:
	lsl	r0, r2, #0x2
	ldr	r1, .L874+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L875:
	.align	2, 0
.L874:
	.word	gUnknown_0203AB88
	.word	.L871
	.align	2, 0
	.align	2, 0
.L871:
	.word	.L865
	.word	.L863
	.word	.L862
	.word	.L861
	.word	.L860
	.word	.L859
	.word	.L853
.L853:
	mov	r4, #0x0
	ldr	r5, .L876
	ldr	r6, .L876+0x4
	mov	r0, #0x5
	neg	r0, r0
	mov	ip, r0
	add	r7, r5, #0
	add	r7, r7, #0x8
	ldr	r2, .L876+0x8
	mov	r8, r2
.L857:
	ldr	r0, [r6]
	add	r3, r4, #0
	add	r3, r3, #0x1a
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, ip
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r5
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, r7
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldrh	r1, [r0]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L876+0xc
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L857	@cond_branch
	b	.L852
.L877:
	.align	2, 0
.L876:
	.word	gSprites
	.word	gUnknown_0203AB88
	.word	-0x400
	.word	0x3ff
.L859:
	ldr	r2, .L878
	ldr	r0, [r5]
	add	r0, r0, #0x58
	b	.L872
.L879:
	.align	2, 0
.L878:
	.word	gSprites
.L860:
	ldr	r2, .L880
	ldr	r0, [r5]
	add	r0, r0, #0x58
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	b	.L873
.L881:
	.align	2, 0
.L880:
	.word	gSprites
.L861:
	ldr	r2, .L882
	ldr	r0, [r5]
	add	r0, r0, #0x57
	b	.L872
.L883:
	.align	2, 0
.L882:
	.word	gSprites
.L862:
	ldr	r2, .L884
	ldr	r0, [r5]
	add	r0, r0, #0x57
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	b	.L873
.L885:
	.align	2, 0
.L884:
	.word	gSprites
.L863:
	ldr	r2, .L886
	ldr	r0, [r5]
	add	r0, r0, #0x56
.L872:
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r2
	add	r4, r3, #0
	add	r4, r4, #0x40
	add	r2, r2, #0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0, #0x4]
.L873:
	ldrh	r4, [r4]
	add	r1, r1, r4
	ldr	r2, .L886+0x4
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	ldr	r0, .L886+0x8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	b	.L852
.L887:
	.align	2, 0
.L886:
	.word	gSprites
	.word	0x3ff
	.word	-0x400
.L865:
	mov	r4, #0x0
	lsl	r7, r6, #0x2
	ldr	r6, .L888
	mov	r0, #0x8
	add	r0, r0, r6
	mov	ip, r0
	ldr	r2, .L888+0x4
	mov	r8, r2
.L869:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, #0x56
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r0, r6
	add	r2, r3, #0
	add	r2, r2, #0x40
	add	r0, r0, ip
	ldr	r0, [r0]
	ldr	r0, [r0]
	add	r0, r7, r0
	ldrh	r1, [r0, #0x8]
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L888+0x8
	add	r0, r2, #0
	and	r1, r1, r0
	ldrh	r2, [r3, #0x4]
	mov	r0, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r3, #0x4]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L869	@cond_branch
.L852:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L889:
	.align	2, 0
.L888:
	.word	gSprites
	.word	-0x400
	.word	0x3ff
.Lfe69:
	.size	 sub_814372C,.Lfe69-sub_814372C
	.align	2, 0
	.type	 sub_814390C,function
	.thumb_func
sub_814390C:
	ldr	r1, .L891
	ldr	r1, [r1]
	ldrh	r1, [r1, #0x26]
	strh	r1, [r0, #0x24]
	bx	lr
.L892:
	.align	2, 0
.L891:
	.word	gUnknown_0203AB88
.Lfe70:
	.size	 sub_814390C,.Lfe70-sub_814390C
	.align	2, 0
	.type	 sub_814391C,function
	.thumb_func
sub_814391C:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r4, .L894
	ldr	r0, [r4]
	ldr	r5, .L894+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	str	r5, [sp]
	ldrh	r1, [r4, #0x6]
	lsl	r1, r1, #0x10
	ldrh	r0, [r4, #0x4]
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r0, .L894+0x8
	mov	r1, #0x74
	mov	r2, #0x50
	mov	r3, #0x51
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L894+0xc
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, .L894+0x10
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x24]
	mov	r2, #0x0
	strh	r0, [r1, #0x2e]
	strh	r2, [r1, #0x30]
	add	r3, r1, #0
	add	r3, r3, #0x2c
	ldrb	r0, [r3]
	mov	r2, #0x40
	orr	r0, r0, r2
	mov	r2, #0x80
	orr	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L895:
	.align	2, 0
.L894:
	.word	gUnknown_085B7948
	.word	gDecompressionBuffer
	.word	gSpriteTemplate_85B7950
	.word	gSprites
	.word	gUnknown_0203AB88
.Lfe71:
	.size	 sub_814391C,.Lfe71-sub_814391C
	.align	2, 0
	.type	 sub_814399C,function
	.thumb_func
sub_814399C:
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	ldr	r1, .L897
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L897+0x4
	ldr	r2, [r1]
	ldrh	r1, [r2, #0x2c]
	strh	r1, [r0, #0x6]
	ldrh	r1, [r2, #0x2c]
	strh	r1, [r0]
	ldrh	r1, [r2, #0x2e]
	strh	r1, [r0, #0x2]
	ldrh	r1, [r2, #0x30]
	strh	r1, [r0, #0x4]
	bx	lr
.L898:
	.align	2, 0
.L897:
	.word	gOamMatrices
	.word	gUnknown_0203AB88
.Lfe72:
	.size	 sub_814399C,.Lfe72-sub_814399C
	.align	2, 0
	.type	 sub_81439C8,function
	.thumb_func
sub_81439C8:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r5, .L906
	ldr	r6, .L906+0x4
.L903:
	mov	r3, #0x39
	sub	r3, r3, r4
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L906+0x8
	mov	r1, #0x74
	mov	r2, #0x50
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x3c
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r1, r0, r4
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L902	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0]
.L902:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L903	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L907:
	.align	2, 0
.L906:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	gSpriteTemplate_85B7928
.Lfe73:
	.size	 sub_81439C8,.Lfe73-sub_81439C8
	.align	2, 0
	.type	 sub_8143A40,function
	.thumb_func
sub_8143A40:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L919
	ldr	r0, [r0]
	add	r0, r0, #0x3c
	ldrb	r5, [r0]
	mov	r6, #0x0
	ldr	r7, .L919+0x4
	mov	r0, #0x1c
	add	r0, r0, r7
	mov	sl, r0
	mov	r1, #0x2e
	add	r1, r1, r7
	mov	r9, r1
	mov	r8, r6
.L912:
	lsl	r4, r5, #0x4
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	add	r0, r4, r7
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, sl
	add	r2, r4, r1
	ldr	r1, .L919+0x8
	str	r1, [r2]
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r1, #0x0
	add	r2, r5, #0x1
	add	r3, r6, #0x1
.L916:
	lsl	r0, r1, #0x1
	add	r0, r0, r4
	add	r0, r0, r9
	mov	r5, r8
	strh	r5, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L916	@cond_branch
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r3, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L912	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L920:
	.align	2, 0
.L919:
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	SpriteCallbackDummy
.Lfe74:
	.size	 sub_8143A40,.Lfe74-sub_8143A40
	.align	2, 0
	.type	 sub_8143AC8,function
	.thumb_func
sub_8143AC8:
	push	{r4, r5, lr}
	add	r3, r0, #0
	ldr	r0, .L926
	ldr	r0, [r0]
	ldrh	r4, [r0, #0x24]
	mov	r2, #0x24
	ldrsh	r1, [r0, r2]
	ldrh	r2, [r3, #0x34]
	mov	r5, #0x34
	ldrsh	r0, [r3, r5]
	cmp	r1, r0
	ble	.L922	@cond_branch
	mov	r1, #0xb4
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	sub	r2, r0, r4
	strh	r2, [r3, #0x3a]
	lsl	r1, r2, #0x10
	ldr	r0, .L926+0x4
	cmp	r1, r0
	ble	.L924	@cond_branch
	ldr	r5, .L926+0x8
	add	r0, r2, r5
	b	.L925
.L927:
	.align	2, 0
.L926:
	.word	gUnknown_0203AB88
	.word	0x1670000
	.word	-0x168
.L922:
	sub	r0, r2, r4
.L925:
	strh	r0, [r3, #0x3a]
.L924:
	mov	r1, #0x3a
	ldrsh	r0, [r3, r1]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 sub_8143AC8,.Lfe75-sub_8143AC8
	.align	2, 0
	.type	 sub_8143B14,function
	.thumb_func
sub_8143B14:
	push	{r4, r5, lr}
	bl	sub_8143AC8
	ldr	r5, .L929
	ldr	r4, [r5]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	__floatsisf
	ldr	r1, .L929+0x4
	bl	__divsf3
	bl	__fixunssfsi
	add	r4, r4, #0x7e
	strb	r0, [r4]
	ldr	r0, [r5]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L930:
	.align	2, 0
.L929:
	.word	gUnknown_0203AB88
	.word 0x41f00000	@ float 3.00000000000000000000e1
.Lfe76:
	.size	 sub_8143B14,.Lfe76-sub_8143B14
	.align	2, 0
	.type	 sub_8143B48,function
	.thumb_func
sub_8143B48:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_8143AC8
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x1e
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0xe
	bne	.L932	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	b	.L937
.L932:
	cmp	r1, #0xd
	bgt	.L934	@cond_branch
	mov	r0, #0xe
	b	.L938
.L934:
	mov	r0, #0x2b
.L938:
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
.L937:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 sub_8143B48,.Lfe77-sub_8143B48
	.align	2, 0
	.type	 sub_8143B84,function
	.thumb_func
sub_8143B84:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	ldr	r5, .L945
	ldr	r6, [r5]
	add	r4, r6, #0
	add	r4, r4, #0x8c
	add	r1, r6, #0
	add	r1, r1, #0x90
	ldr	r0, [r4]
	ldr	r1, [r1]
	bl	__addsf3
	add	r1, r0, #0
	str	r1, [r4]
	sub	r4, r4, #0x4
	ldr	r0, [r4]
	bl	__addsf3
	add	r6, r0, #0
	str	r6, [r4]
	ldr	r0, .L945+0x4
	mov	r8, r0
	add	r0, r6, #0
	mov	r1, r8
	bl	__gesf2
	cmp	r0, #0
	blt	.L940	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	bl	__subsf3
	b	.L944
.L946:
	.align	2, 0
.L945:
	.word	gUnknown_0203AB88
	.word 0x43b40000	@ float 3.60000000000000000000e2
.L940:
	ldr	r1, .L947
	add	r0, r6, #0
	bl	__ltsf2
	cmp	r0, #0
	bge	.L941	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	bl	__addsf3
.L944:
	str	r0, [r4]
.L941:
	ldr	r5, [r5]
	add	r0, r5, #0
	add	r0, r0, #0x88
	ldr	r0, [r0]
	bl	__fixsfsi
	strh	r0, [r7, #0x34]
	add	r4, r5, #0
	add	r4, r4, #0x98
	add	r1, r5, #0
	add	r1, r1, #0x9c
	ldr	r0, [r4]
	ldr	r1, [r1]
	bl	__addsf3
	add	r1, r0, #0
	str	r1, [r4]
	sub	r4, r4, #0x4
	ldr	r0, [r4]
	bl	__addsf3
	str	r0, [r4]
	bl	__fixsfsi
	strh	r0, [r7, #0x36]
	ldrh	r0, [r7, #0x34]
	bl	Sin2
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrh	r0, [r7, #0x34]
	bl	Cos2
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r7, r2]
	mul	r1, r1, r4
	asr	r1, r1, #0xc
	strh	r1, [r7, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	mov	r2, #0x36
	ldrsh	r1, [r7, r2]
	mul	r0, r0, r1
	asr	r0, r0, #0xc
	strh	r0, [r7, #0x26]
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L943	@cond_branch
	ldr	r0, .L947+0x4
	ldr	r4, .L947+0x8
	ldrh	r2, [r7, #0x24]
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	add	r1, r4, #0
	bl	m4aMPlayPanpotControl
	ldr	r0, .L947+0xc
	ldrh	r2, [r7, #0x24]
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	add	r1, r4, #0
	bl	m4aMPlayPanpotControl
.L943:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L948:
	.align	2, 0
.L947:
	.word 0x0	@ float 0.00000000000000000000e0
	.word	gMPlayInfo_SE1
	.word	0xffff
	.word	gMPlayInfo_SE2
.Lfe78:
	.size	 sub_8143B84,.Lfe78-sub_8143B84
	.align	2, 0
	.type	 sub_8143C90,function
	.thumb_func
sub_8143C90:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L951
	ldr	r1, [r0]
	ldrh	r0, [r5, #0x3a]
	ldrh	r1, [r1, #0x24]
	add	r2, r0, r1
	strh	r2, [r5, #0x34]
	lsl	r1, r2, #0x10
	ldr	r0, .L951+0x4
	cmp	r1, r0
	ble	.L950	@cond_branch
	ldr	r1, .L951+0x8
	add	r0, r2, r1
	strh	r0, [r5, #0x34]
.L950:
	ldrh	r0, [r5, #0x34]
	bl	Sin2
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrh	r0, [r5, #0x34]
	bl	Cos2
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r5, r2]
	mul	r1, r1, r4
	asr	r1, r1, #0xc
	strh	r1, [r5, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	mov	r2, #0x36
	ldrsh	r1, [r5, r2]
	mul	r0, r0, r1
	ldr	r1, .L951+0xc
	asr	r0, r0, #0xc
	ldrh	r1, [r1]
	add	r0, r0, r1
	strh	r0, [r5, #0x26]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L952:
	.align	2, 0
.L951:
	.word	gUnknown_0203AB88
	.word	0x1670000
	.word	-0x168
	.word	gSpriteCoordOffsetY
.Lfe79:
	.size	 sub_8143C90,.Lfe79-sub_8143C90
	.align	2, 0
	.type	 sub_8143CFC,function
	.thumb_func
sub_8143CFC:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	bl	sub_8143B84
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x36]
	add	r0, r0, #0x84
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xd4
	bls	.L954	@cond_branch
	add	r2, r5, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	b	.L961
.L954:
	add	r2, r5, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
.L961:
	strb	r0, [r2]
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1d
	ble	.L956	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L957	@cond_branch
	ldr	r7, .L964
	ldr	r6, [r7]
	add	r4, r6, #0
	add	r4, r4, #0x94
	add	r0, r6, #0
	add	r0, r0, #0xa0
	ldr	r0, [r0]
	ldr	r1, .L964+0x4
	bl	__subsf3
	add	r1, r0, #0
	ldr	r0, [r4]
	bl	__lesf2
	cmp	r0, #0
	bgt	.L956	@cond_branch
	b	.L963
.L965:
	.align	2, 0
.L964:
	.word	gUnknown_0203AB88
	.word 0x40000000	@ float 2.00000000000000000000e0
.L957:
	ldr	r7, .L966
	ldr	r6, [r7]
	add	r4, r6, #0
	add	r4, r4, #0x94
	add	r0, r6, #0
	add	r0, r0, #0xa0
	ldr	r0, [r0]
	ldr	r1, .L966+0x4
	bl	__subsf3
	add	r1, r0, #0
	ldr	r0, [r4]
	bl	__gesf2
	cmp	r0, #0
	blt	.L956	@cond_branch
.L963:
	add	r1, r6, #0
	add	r1, r1, #0x7d
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r2, [r7]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	sub_8143B14
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_8143AC8
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L966+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	ldr	r3, [r7]
	add	r2, r3, #0
	add	r2, r2, #0x9c
	add	r1, r3, #0
	add	r1, r1, #0x98
	ldr	r0, .L966+0xc
	str	r0, [r1]
	str	r0, [r2]
	sub	r1, r1, #0xc
	ldr	r0, .L966+0x10
	str	r0, [r1]
.L956:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L967:
	.align	2, 0
.L966:
	.word	gUnknown_0203AB88
	.word 0x40000000	@ float 2.00000000000000000000e0
	.word	sub_8143C90
	.word 0x0	@ float 0.00000000000000000000e0
	.word 0xbf800000	@ float -1.00000000000000000000e0
.Lfe80:
	.size	 sub_8143CFC,.Lfe80-sub_8143CFC
	.align	2, 0
	.type	 sub_8143E14,function
	.thumb_func
sub_8143E14:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r7, r0, #0
	bl	sub_8143B84
	mov	r1, #0x34
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L970	@cond_branch
	cmp	r0, #0xb4
	beq	.L973	@cond_branch
	b	.L968
.L970:
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0x1
	bne	.LCB9808
	b	.L968	@long jump
.LCB9808:
	mov	r1, #0x3c
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	mov	r9, r0
	ldr	r0, .L979
	mov	sl, r0
	ldr	r1, .L979+0x4
	mov	r8, r1
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x4]
	lsl	r4, r4, #0x1e
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x1]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__mulsf3
	add	r6, r0, #0
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r6, #0
	bl	__addsf3
	add	r5, r0, #0
	lsr	r4, r4, #0x19
	add	r4, r4, sl
	ldrh	r0, [r4, #0xc]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__divsf3
	b	.L978
.L980:
	.align	2, 0
.L979:
	.word	gUnknown_085B6348
	.word	gUnknown_0203AB88
.L973:
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L968	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	mov	r9, r0
	ldr	r0, .L981
	mov	sl, r0
	ldr	r1, .L981+0x4
	mov	r8, r1
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x4]
	lsl	r4, r4, #0x1e
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x1]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__mulsf3
	add	r6, r0, #0
	lsr	r0, r4, #0x19
	add	r0, r0, sl
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r6, #0
	bl	__addsf3
	add	r5, r0, #0
	lsr	r4, r4, #0x19
	add	r4, r4, sl
	ldrh	r0, [r4, #0xc]
	bl	__floatsisf
	add	r1, r0, #0
	mov	r0, r9
	bl	__divsf3
	bl	__negsf2
.L978:
	add	r2, r0, #0
	mov	r0, r8
	ldr	r6, [r0]
	add	r1, r6, #0
	add	r1, r1, #0xa0
	add	r0, r6, #0
	add	r0, r0, #0x94
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x98
	str	r2, [r0]
	mov	r0, #0x9c
	add	r0, r0, r6
	mov	r8, r0
	add	r0, r2, #0
	add	r1, r2, #0
	bl	__addsf3
	add	r1, r5, #0
	bl	__divsf3
	add	r4, r0, #0
	add	r0, r5, #0
	add	r1, r5, #0
	bl	__mulsf3
	add	r1, r0, #0
	ldr	r0, .L981+0x8
	bl	__divsf3
	add	r1, r0, #0
	add	r0, r4, #0
	bl	__addsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x8c
	ldr	r0, .L981+0xc
	str	r0, [r1]
	add	r2, r7, #0
	add	r2, r2, #0x2c
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	add	r0, r7, #0
	add	r0, r0, #0x2a
	mov	r2, #0x0
	strb	r2, [r0]
	add	r3, r7, #0
	add	r3, r3, #0x3f
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, .L981+0x10
	str	r0, [r7, #0x1c]
	strh	r2, [r7, #0x32]
.L968:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L982:
	.align	2, 0
.L981:
	.word	gUnknown_085B6348
	.word	gUnknown_0203AB88
	.word 0x40000000	@ float 2.00000000000000000000e0
	.word 0x0	@ float 0.00000000000000000000e0
	.word	sub_8143CFC
.Lfe81:
	.size	 sub_8143E14,.Lfe81-sub_8143E14
	.align	2, 0
	.type	 sub_8143FA4,function
	.thumb_func
sub_8143FA4:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	bl	__floatsisf
	add	r4, r0, #0
	ldr	r1, .L985
	bl	__mulsf3
	add	r1, r4, #0
	bl	__mulsf3
	bl	__fixsfsi
	add	r1, r0, #0
	sub	r1, r1, #0x2d
	strh	r1, [r5, #0x26]
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1d
	ble	.L984	@cond_branch
	lsl	r0, r1, #0x10
	cmp	r0, #0
	blt	.L984	@cond_branch
	ldr	r4, .L985+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x7d
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	sub_8143B14
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_8143AC8
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L985+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
.L984:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L986:
	.align	2, 0
.L985:
	.word 0x3d4ccccd	@ float 5.00000007450580596924e-2
	.word	gUnknown_0203AB88
	.word	sub_8143C90
.Lfe82:
	.size	 sub_8143FA4,.Lfe82-sub_8143FA4
	.align	2, 0
	.type	 sub_8144050,function
	.thumb_func
sub_8144050:
	push	{r4, lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x32]
	add	r1, r0, #0x1
	strh	r1, [r3, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2c
	bgt	.L988	@cond_branch
	ldrh	r4, [r3, #0x26]
	sub	r0, r4, #0x1
	strh	r0, [r3, #0x26]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2d
	bne	.L991	@cond_branch
	ldr	r2, .L997
	ldr	r0, .L997+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L991	@cond_branch
	strh	r4, [r3, #0x26]
	b	.L991
.L998:
	.align	2, 0
.L997:
	.word	gSprites
	.word	gUnknown_0203AB88
.L988:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x3c
	ldrsh	r1, [r3, r2]
	cmp	r0, r1
	bge	.L992	@cond_branch
	ldr	r2, .L999
	ldr	r0, .L999+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	add	r0, r1, #0
	add	r0, r0, #0x2c
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bne	.L991	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L994	@cond_branch
	ldrh	r0, [r3, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x26]
	b	.L991
.L1000:
	.align	2, 0
.L999:
	.word	gSprites
	.word	gUnknown_0203AB88
.L994:
	ldrh	r0, [r3, #0x26]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x26]
	b	.L991
.L992:
	add	r2, r3, #0
	add	r2, r2, #0x2c
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	add	r1, r3, #0
	add	r1, r1, #0x2a
	mov	r2, #0x0
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x3f
	add	r0, r0, r3
	mov	ip, r0
	ldrb	r0, [r0]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	strh	r2, [r3, #0x32]
	ldr	r0, .L1001
	str	r0, [r3, #0x1c]
	mov	r0, #0x3d
	bl	m4aSongNumStart
.L991:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1002:
	.align	2, 0
.L1001:
	.word	sub_8143FA4
.Lfe83:
	.size	 sub_8144050,.Lfe83-sub_8144050
	.align	2, 0
	.type	 sub_8144128,function
	.thumb_func
sub_8144128:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_8143B84
	mov	r0, #0x34
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x5a
	beq	.L1005	@cond_branch
	mov	r0, #0x87
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1007	@cond_branch
	b	.L1004
.L1005:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1004	@cond_branch
	b	.L1011
.L1007:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1004	@cond_branch
.L1011:
	ldr	r0, .L1012
	str	r0, [r4, #0x1c]
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
.L1004:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1013:
	.align	2, 0
.L1012:
	.word	sub_8144050
.Lfe84:
	.size	 sub_8144128,.Lfe84-sub_8144128
	.align	2, 0
	.type	 sub_8144168,function
	.thumb_func
sub_8144168:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_8143B84
	ldr	r0, .L1021
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	cmp	r0, #0
	beq	.L1017	@cond_branch
	cmp	r0, #0x1
	beq	.L1018	@cond_branch
.L1017:
	add	r0, r4, #0
	bl	sub_81446DC
	ldr	r0, .L1021+0x4
	b	.L1020
.L1022:
	.align	2, 0
.L1021:
	.word	gUnknown_0203AB88
	.word	sub_8143E14
.L1018:
	add	r0, r4, #0
	bl	sub_81448B8
	ldr	r0, .L1023
.L1020:
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1024:
	.align	2, 0
.L1023:
	.word	sub_8144128
.Lfe85:
	.size	 sub_8144168,.Lfe85-sub_8144168
	.align	2, 0
	.type	 prev_quest_read_x24_hm_usage,function
	.thumb_func
prev_quest_read_x24_hm_usage:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_8143B84
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf
	bne	.L1026	@cond_branch
	ldr	r0, .L1030
	ldr	r4, [r0]
	add	r4, r4, #0x98
	ldr	r0, [r4]
	ldr	r1, .L1030+0x4
	bl	__mulsf3
	str	r0, [r4]
.L1026:
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L1027	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L1028	@cond_branch
	ldr	r2, .L1030
	ldr	r0, [r2]
	add	r0, r0, #0x7d
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r2, [r2]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	add	r0, r5, #0
	bl	sub_8143B14
	mov	r0, #0x1e
	strh	r0, [r5, #0x36]
	add	r0, r5, #0
	bl	sub_8143AC8
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r5, #0x3a]
	ldr	r0, .L1030+0x8
	str	r0, [r5, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	b	.L1027
.L1031:
	.align	2, 0
.L1030:
	.word	gUnknown_0203AB88
	.word 0xbf800000	@ float -1.00000000000000000000e0
	.word	sub_8143C90
.L1028:
	add	r0, r5, #0
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x38
	bl	m4aSongNumStart
	add	r0, r5, #0
	bl	sub_8144A24
.L1027:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 prev_quest_read_x24_hm_usage,.Lfe86-prev_quest_read_x24_hm_usage
	.align	2, 0
	.type	 sub_8144264,function
	.thumb_func
sub_8144264:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	sub_8143B84
	mov	r0, #0x0
	strh	r0, [r6, #0x32]
	add	r0, r6, #0
	bl	sub_8143B14
	ldr	r1, .L1044
	ldr	r4, .L1044+0x4
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r2, #0x8]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1033	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x7d
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r0, r6, #0
	add	r0, r0, #0x2b
	ldrb	r1, [r0]
	add	r1, r1, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	StartSpriteAnim
	add	r0, r6, #0
	bl	sub_8143B14
	mov	r0, #0x1e
	strh	r0, [r6, #0x36]
	add	r0, r6, #0
	bl	sub_8143AC8
	mov	r1, #0x3a
	ldrsh	r0, [r6, r1]
	mov	r1, #0x1e
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0xf
	strh	r1, [r6, #0x3a]
	ldr	r0, .L1044+0x8
	str	r0, [r6, #0x1c]
	mov	r0, #0x47
	bl	m4aSongNumStartOrChange
	b	.L1034
.L1045:
	.align	2, 0
.L1044:
	.word	gUnknown_085B62E4
	.word	gUnknown_0203AB88
	.word	sub_8143C90
.L1033:
	mov	r0, #0x38
	bl	m4aSongNumStart
	bl	Random
	mov	r1, #0x1
	mov	r8, r1
	and	r1, r1, r0
	mov	r8, r1
	cmp	r1, #0
	beq	.L1035	@cond_branch
	ldr	r4, [r4]
	add	r1, r4, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1046
	str	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	add	r0, r0, #0x1
	mov	r1, #0xc
	bl	__modsi3
	lsl	r1, r0, #0x18
	lsr	r2, r1, #0x18
	add	r1, r4, #0
	add	r1, r1, #0x7f
	strb	r0, [r1]
	ldr	r5, .L1046+0x4
	b	.L1036
.L1047:
	.align	2, 0
.L1046:
	.word 0x0	@ float 0.00000000000000000000e0
	.word	gUnknown_085B6348
.L1035:
	ldr	r7, [r4]
	add	r4, r7, #0
	add	r4, r4, #0x8c
	ldr	r5, .L1048
	ldrb	r0, [r7, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r1, #0
	bl	__addsf3
	str	r0, [r4]
	add	r0, r7, #0
	add	r0, r0, #0x7e
	ldrb	r4, [r0]
	add	r0, r4, #0
	add	r0, r0, #0xb
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r7, #0
	add	r0, r0, #0x7f
	strb	r4, [r0]
.L1036:
	ldr	r0, .L1048+0x4
	lsl	r1, r2, #0x3
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r2, .L1048+0x8
	ldr	r3, [r2]
	ldr	r1, [r1]
	ldr	r0, [r3, #0x8]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1037	@cond_branch
	mov	r0, #0x1
	strh	r0, [r6, #0x2e]
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x2]
	strh	r0, [r6, #0x32]
	b	.L1038
.L1049:
	.align	2, 0
.L1048:
	.word	gUnknown_085B6348
	.word	gUnknown_085B62E4
	.word	gUnknown_0203AB88
.L1037:
	strh	r1, [r6, #0x2e]
	ldrb	r1, [r3, #0x4]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1039	@cond_branch
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1]
	strh	r0, [r6, #0x32]
	b	.L1038
.L1039:
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r5
	ldrb	r0, [r0, #0x2]
	strh	r0, [r6, #0x32]
	mov	r0, r8
	cmp	r0, #0
	beq	.L1041	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1050
	b	.L1043
.L1051:
	.align	2, 0
.L1050:
	.word 0x3f000000	@ float 5.00000000000000000000e-1
.L1041:
	add	r1, r3, #0
	add	r1, r1, #0x8c
	ldr	r0, .L1052
.L1043:
	str	r0, [r1]
.L1038:
	ldr	r0, [r2]
	add	r0, r0, #0x98
	ldr	r1, .L1052+0x4
	str	r1, [r0]
	ldr	r0, .L1052+0x8
	str	r0, [r6, #0x1c]
	mov	r0, #0x5
	strh	r0, [r6, #0x30]
.L1034:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1053:
	.align	2, 0
.L1052:
	.word 0xbfc00000	@ float -1.50000000000000000000e0
	.word 0x3dae147b	@ float 8.50000008940696716309e-2
	.word	prev_quest_read_x24_hm_usage
.Lfe87:
	.size	 sub_8144264,.Lfe87-sub_8144264
	.align	2, 0
	.type	 sub_8144410,function
	.thumb_func
sub_8144410:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	bl	sub_8143B84
	ldr	r4, .L1061
	ldr	r0, [r4]
	add	r0, r0, #0x8c
	ldr	r0, [r0]
	ldr	r1, .L1061+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1054	@cond_branch
	add	r0, r6, #0
	bl	sub_8143B14
	add	r0, r6, #0
	bl	sub_8143B48
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1056	@cond_branch
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x90
	ldr	r0, .L1061+0x8
	str	r0, [r1]
	mov	r0, #0x8c
	add	r0, r0, r2
	mov	r8, r0
	ldr	r1, .L1061+0xc
	mov	r9, r1
	ldrb	r0, [r2, #0x4]
	lsl	r7, r0, #0x1e
	lsr	r0, r7, #0x19
	add	r0, r0, r9
	mov	r4, #0x3
	ldrsb	r4, [r0, r4]
	add	r0, r4, #0
	bl	__floatsisf
	add	r5, r0, #0
	cmp	r4, #0
	bge	.L1057	@cond_branch
	ldr	r1, .L1061+0x10
	bl	__addsf3
	add	r5, r0, #0
.L1057:
	lsr	r0, r7, #0x19
	add	r0, r0, r9
	ldrb	r0, [r0, #0x4]
	add	r0, r0, #0x1
	bl	__floatsisf
	add	r1, r0, #0
	add	r0, r5, #0
	bl	__divsf3
	add	r1, r0, #0
	mov	r2, r8
	ldr	r0, [r2]
	bl	__subsf3
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x4
	strh	r0, [r6, #0x30]
	ldr	r0, .L1061+0x14
	str	r0, [r6, #0x1c]
	b	.L1054
.L1062:
	.align	2, 0
.L1061:
	.word	gUnknown_0203AB88
	.word 0x3f000000	@ float 5.00000000000000000000e-1
	.word 0x0	@ float 0.00000000000000000000e0
	.word	gUnknown_085B6348
	.word 0x43800000	@ float 2.56000000000000000000e2
	.word	sub_8144264
.L1056:
	ldr	r4, [r4]
	add	r7, r4, #0
	add	r7, r7, #0x90
	ldr	r0, [r7]
	ldr	r6, .L1063
	add	r1, r6, #0
	bl	__nesf2
	cmp	r0, #0
	beq	.L1054	@cond_branch
	add	r5, r4, #0
	add	r5, r5, #0x8c
	ldr	r0, [r5]
	add	r1, r6, #0
	bl	__ltsf2
	cmp	r0, #0
	bge	.L1054	@cond_branch
	str	r6, [r7]
	str	r6, [r5]
	add	r4, r4, #0x98
	ldr	r0, [r4]
	bl	__extendsfdf2
	ldr	r2, .L1063+0x4		@ created by thumb_load_double_from_address
	ldr	r3, .L1063+0x8		@ created by thumb_load_double_from_address
	bl	__divdf3
	bl	__truncdfsf2
	str	r0, [r4]
.L1054:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1064:
	.align	2, 0
.L1063:
	.word 0x0	@ float 0.00000000000000000000e0
	.long 0x3ff33333, 0x33333333	@ double 1.19999999999999995559e0
.Lfe88:
	.size	 sub_8144410,.Lfe88-sub_8144410
	.align	2, 0
	.type	 sub_8144514,function
	.thumb_func
sub_8144514:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	sub_8143B84
	ldr	r0, .L1069
	ldr	r5, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x94
	ldr	r0, [r0]
	ldr	r1, .L1069+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1065	@cond_branch
	mov	r0, #0x98
	add	r0, r0, r5
	mov	r8, r0
	add	r7, r5, #0
	add	r7, r7, #0x86
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1067	@cond_branch
	ldr	r1, .L1069+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1067:
	ldr	r0, .L1069+0xc
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x90
	add	r0, r0, r5
	mov	r8, r0
	add	r5, r5, #0x8c
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1068	@cond_branch
	ldr	r1, .L1069+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1068:
	ldr	r0, [r5]
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x2a
	mov	r0, #0x2
	strb	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x3f
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	strh	r0, [r6, #0x30]
	ldr	r0, .L1069+0x10
	str	r0, [r6, #0x1c]
.L1065:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1070:
	.align	2, 0
.L1069:
	.word	gUnknown_0203AB88
	.word 0x42200000	@ float 4.00000000000000000000e1
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x40800000	@ float 4.00000000000000000000e0
	.word	sub_8144410
.Lfe89:
	.size	 sub_8144514,.Lfe89-sub_8144514
	.align	2, 0
	.type	 sub_81445D8,function
	.thumb_func
sub_81445D8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	sub_8143B84
	ldr	r4, .L1075
	ldr	r0, [r4]
	add	r0, r0, #0x94
	ldr	r0, [r0]
	ldr	r1, .L1075+0x4
	bl	__gtsf2
	cmp	r0, #0
	bgt	.L1071	@cond_branch
	mov	r0, #0x5d
	bl	m4aSongNumStartOrChange
	ldr	r5, [r4]
	mov	r0, #0x98
	add	r0, r0, r5
	mov	r8, r0
	add	r7, r5, #0
	add	r7, r7, #0x84
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1073	@cond_branch
	ldr	r1, .L1075+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1073:
	ldr	r0, .L1075+0xc
	add	r1, r2, #0
	bl	__divsf3
	bl	__negsf2
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x90
	add	r0, r0, r5
	mov	r8, r0
	add	r0, r5, #0
	add	r0, r0, #0x8c
	ldr	r1, [r0]
	ldr	r0, .L1075+0x10
	bl	__subsf3
	add	r5, r0, #0
	mov	r1, #0x0
	ldrsh	r4, [r7, r1]
	add	r0, r4, #0
	bl	__floatsisf
	add	r2, r0, #0
	cmp	r4, #0
	bge	.L1074	@cond_branch
	ldr	r1, .L1075+0x8
	bl	__addsf3
	add	r2, r0, #0
.L1074:
	add	r0, r5, #0
	add	r1, r2, #0
	bl	__divsf3
	mov	r1, r8
	str	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x2a
	mov	r0, #0x1
	strb	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x3f
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	mov	r1, #0x11
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x2
	strh	r0, [r6, #0x30]
	ldr	r0, .L1075+0x14
	str	r0, [r6, #0x1c]
.L1071:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1076:
	.align	2, 0
.L1075:
	.word	gUnknown_0203AB88
	.word 0x42700000	@ float 6.00000000000000000000e1
	.word 0x47800000	@ float 6.55360000000000000000e4
	.word 0x41a00000	@ float 2.00000000000000000000e1
	.word 0x3f800000	@ float 1.00000000000000000000e0
	.word	sub_8144514
.Lfe90:
	.size	 sub_81445D8,.Lfe90-sub_81445D8
	.align	2, 0
	.type	 sub_81446AC,function
	.thumb_func
sub_81446AC:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	mov	r0, #0x1
	strh	r0, [r4, #0x30]
	strh	r1, [r4, #0x32]
	add	r0, r4, #0
	bl	sub_8143B84
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L1078
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1079:
	.align	2, 0
.L1078:
	.word	sub_81445D8
.Lfe91:
	.size	 sub_81446AC,.Lfe91-sub_81446AC
	.section .rodata
	.align	1, 0
.LC368:
	.short	0x74
	.short	0x2c
	.short	0x74
	.short	0x70
.text
	.align	2, 0
	.type	 sub_81446DC,function
	.thumb_func
sub_81446DC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r8, r0
	ldr	r1, .L1086
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	mov	r1, r8
	ldrh	r0, [r1, #0x3c]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r5, .L1086+0x4
	ldr	r0, .L1086+0x8
	mov	r2, #0xc
	neg	r2, r2
	mov	r1, #0x24
	mov	r3, #0x32
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x73
	strb	r0, [r1]
	ldr	r4, .L1086+0xc
	mov	r3, r8
	mov	r0, #0x2e
	ldrsh	r2, [r3, r0]
	lsl	r2, r2, #0x2
	mov	r1, sp
	add	r0, r1, r2
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	mov	r0, sp
	add	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	add	r0, r4, #0
	mov	r3, #0x3b
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x74
	strb	r0, [r1]
	add	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x24
	mov	r2, #0x8c
	mov	r3, #0x33
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x75
	strb	r0, [r1]
	ldr	r3, .L1086+0x10
	ldr	r0, [r5]
	add	r0, r0, #0x75
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	mov	r7, #0x0
	add	r6, r3, #0
	ldr	r0, .L1086+0x14
	mov	ip, r0
	mov	sl, r5
.L1084:
	ldr	r0, [r5]
	add	r3, r7, #0
	add	r3, r3, #0x37
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x3c
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r4, [r5]
	add	r2, r4, #0
	add	r2, r2, #0x3c
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x73
	ldrb	r1, [r1]
	strh	r1, [r0, #0x36]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x74
	ldrb	r1, [r1]
	strh	r1, [r0, #0x38]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x75
	ldrb	r1, [r1]
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r9
	strh	r1, [r0, #0x32]
	ldrb	r0, [r2]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	mov	r0, r8
	mov	r1, #0x3c
	ldrsh	r3, [r0, r1]
	ldrb	r1, [r4, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r0, r1, #0x19
	add	r0, r0, ip
	ldrb	r0, [r0, #0x1]
	mul	r3, r3, r0
	lsr	r1, r1, #0x19
	add	r1, r1, ip
	ldrb	r0, [r1, #0x2]
	ldr	r1, .L1086+0x18
	add	r0, r0, r1
	add	r3, r3, r0
	strh	r3, [r2, #0x34]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L1086+0x10
	cmp	r7, #0x2
	bls	.L1084	@cond_branch
	mov	r3, sl
	ldr	r0, [r3]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r3]
	mov	r1, r8
	str	r1, [r0, #0x38]
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1087:
	.align	2, 0
.L1086:
	.word	.LC368
	.word	gUnknown_0203AB88
	.word	gSpriteTemplate_85B79F8
	.word	gSpriteTemplate_85B7ABC
	.word	gSprites
	.word	gUnknown_085B6348
	.word	0xffff
.Lfe92:
	.size	 sub_81446DC,.Lfe92-sub_81446DC
	.section .rodata
	.align	1, 0
.LC376:
	.short	0x100
	.short	0x54
	.short	-0x10
	.short	0x54
.text
	.align	2, 0
	.type	 sub_81448B8,function
	.thumb_func
sub_81448B8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	mov	r0, #0x0
	mov	r8, r0
	ldr	r1, .L1094
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	ldrh	r0, [r7, #0x3c]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r0, .L1094+0x4
	mov	r1, #0x2e
	ldrsh	r2, [r7, r1]
	lsl	r2, r2, #0x2
	mov	r3, sp
	add	r1, r3, r2
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r4, sp
	add	r4, r4, #0x2
	add	r2, r4, r2
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r3, #0x32
	bl	CreateSprite
	ldr	r5, .L1094+0x8
	ldr	r1, [r5]
	add	r1, r1, #0x73
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L1094+0xc
	add	r0, r0, r6
	ldrh	r1, [r7, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldr	r0, .L1094+0x10
	mov	r1, #0x2e
	ldrsh	r2, [r7, r1]
	lsl	r2, r2, #0x2
	mov	r3, sp
	add	r1, r3, r2
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	add	r4, r4, r2
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x33
	bl	CreateSprite
	ldr	r1, [r5]
	add	r1, r1, #0x74
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, r9
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	ldr	r3, .L1094+0x14
	ldr	r0, [r5]
	ldrb	r1, [r0, #0x4]
	lsl	r1, r1, #0x1e
	lsr	r0, r1, #0x19
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	mul	r2, r2, r0
	lsr	r1, r1, #0x19
	add	r1, r1, r3
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x2d
	add	r2, r2, r0
	strh	r2, [r7, #0x3c]
.L1092:
	ldr	r0, .L1094+0x8
	ldr	r4, [r0]
	mov	r1, r8
	add	r2, r4, r1
	add	r2, r2, #0x73
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r1, r4, #0
	add	r1, r1, #0x73
	ldrb	r1, [r1]
	strh	r1, [r0, #0x36]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	add	r3, r4, #0
	add	r3, r3, #0x74
	ldrb	r1, [r3]
	strh	r1, [r0, #0x38]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r3]
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r3, r9
	strh	r3, [r0, #0x32]
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrh	r0, [r7, #0x3c]
	sub	r0, r0, #0x2d
	strh	r0, [r1, #0x34]
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x1
	bls	.L1092	@cond_branch
	str	r7, [r4, #0x38]
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1095:
	.align	2, 0
.L1094:
	.word	.LC376
	.word	gSpriteTemplate_85B7A10
	.word	gUnknown_0203AB88
	.word	gSprites
	.word	gUnknown_085B7AEC
	.word	gUnknown_085B6348
.Lfe93:
	.size	 sub_81448B8,.Lfe93-sub_81448B8
	.align	2, 0
	.type	 sub_8144A24,function
	.thumb_func
sub_8144A24:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	mov	r0, #0x0
	mov	r9, r0
	mov	r1, #0x5
	mov	r8, r1
	str	r0, [sp, #0xc]
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0xa
	bl	memset
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x10]
	ldr	r3, .L1125
	ldr	r0, [r3]
	add	r0, r0, #0x7d
	mov	r5, #0x1
	strb	r5, [r0]
	ldr	r2, [r3]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r0, [r3]
	add	r0, r0, #0x7e
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r6, [r3]
	add	r4, r6, #0
	add	r4, r4, #0x88
	mov	r1, #0x34
	ldrsh	r0, [r7, r1]
	bl	__floatsisf
	str	r0, [r4]
	add	r1, r6, #0
	add	r1, r1, #0x98
	ldr	r0, .L1125+0x4
	str	r0, [r1]
	add	r2, r6, #0
	add	r2, r2, #0x8c
	ldr	r1, .L1125+0x8
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldrb	r0, [r6, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0x21
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	sub	r5, r5, r0
	lsl	r0, r5, #0x4
	sub	r0, r0, r5
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r5, r9
	mov	r0, #0x34
	ldrsh	r2, [r7, r0]
.L1100:
	cmp	r1, r2
	bge	.L1101	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x5a
	cmp	r2, r0
	ble	.L1121	@cond_branch
.L1101:
	cmp	r5, #0x3
	beq	.L1122	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x5a
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L1100	@cond_branch
.L1098:
	ldr	r0, .L1125
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x3]
	mov	r0, #0x1f
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1104	@cond_branch
	mov	r1, #0x2e
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L1105	@cond_branch
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
	b	.L1107
.L1126:
	.align	2, 0
.L1125:
	.word	gUnknown_0203AB88
	.word 0x0	@ float 0.00000000000000000000e0
	.word	gUnknown_085B6348
.L1122:
	mov	r0, #0x1
	strh	r0, [r7, #0x2e]
	ldr	r0, .L1127
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	b	.L1098
.L1128:
	.align	2, 0
.L1127:
	.word	gUnknown_0203AB88
.L1121:
	lsr	r0, r5, #0x1
	strh	r0, [r7, #0x2e]
	ldr	r0, .L1129
	ldr	r3, [r0]
	mov	r1, #0x1
	and	r1, r1, r5
	ldrb	r2, [r3, #0x3]
	mov	r0, #0x20
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x3]
	b	.L1098
.L1130:
	.align	2, 0
.L1129:
	.word	gUnknown_0203AB88
.L1105:
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	bl	PlayCry1
	b	.L1107
.L1104:
	mov	r0, #0x99
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
.L1107:
	mov	r0, #0x2
	mov	sl, r0
	ldr	r4, .L1131
	ldr	r5, [r4]
	add	r0, r5, #0
	add	r0, r0, #0x7f
	ldrb	r0, [r0]
	add	r0, r0, #0x2
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrb	r1, [r5, #0x3]
	mov	r0, #0x1f
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1108	@cond_branch
	ldrb	r1, [r5, #0x4]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1108	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x6
	b	.L1123
.L1132:
	.align	2, 0
.L1131:
	.word	gUnknown_0203AB88
.L1108:
	mov	r0, r8
	add	r0, r0, sl
.L1123:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r5, sl
	cmp	r5, r8
	bcs	.L1111	@cond_branch
	ldr	r1, .L1133
	mov	sl, r1
.L1113:
	ldr	r3, [r4]
	lsl	r0, r6, #0x3
	ldr	r1, .L1133+0x4
	add	r0, r0, r1
	ldr	r1, [r3, #0x8]
	ldr	r2, [r0]
	and	r1, r1, r2
	cmp	r1, #0
	bne	.L1114	@cond_branch
	mov	r0, r9
	add	r1, r0, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	add	r0, r0, sp
	strb	r5, [r0]
	ldr	r0, [sp, #0xc]
	cmp	r0, #0
	bne	.L1114	@cond_branch
	ldrb	r1, [r3, #0x1a]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r3, #0
	add	r0, r0, #0x1b
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldr	r0, [r0]
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L1114	@cond_branch
	str	r5, [sp, #0xc]
.L1114:
	add	r0, r6, #0x1
	mov	r1, #0xc
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r8
	bcc	.L1113	@cond_branch
.L1111:
	ldr	r0, [r4]
	ldrb	r1, [r0, #0x3]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1b
	add	r1, r1, #0x1
	ldrb	r0, [r0, #0x2]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1117	@cond_branch
	ldr	r1, [sp, #0xc]
	cmp	r1, #0
	beq	.L1118	@cond_branch
	mov	r0, #0xff
	ldr	r1, [sp, #0x10]
	and	r0, r0, r1
	cmp	r0, #0xbf
	bhi	.L1118	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0, #0xc]
	b	.L1124
.L1134:
	.align	2, 0
.L1133:
	.word	gUnknown_085B6154+0xc
	.word	gUnknown_085B62E4+0x4
.L1118:
.L1117:
	ldr	r0, [sp, #0x10]
	mov	r1, r9
	bl	__modsi3
	add	r0, r0, sp
	ldrb	r0, [r0]
.L1124:
	strh	r0, [r7, #0x3c]
	ldr	r1, .L1135
	str	r1, [r7, #0x1c]
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1136:
	.align	2, 0
.L1135:
	.word	sub_8144168
.Lfe94:
	.size	 sub_8144A24,.Lfe94-sub_8144A24
	.section .rodata
	.align	1, 0
	.type	 gUnknown_085B7B1A,object
gUnknown_085B7B1A:
	.short	0x907
	.short	0x808
	.short	0x709
	.short	0x60a
	.short	0x50b
	.short	0x40c
	.short	0x30d
	.short	0x20e
	.short	0x10f
	.short	0x10
	.size	 gUnknown_085B7B1A,20
.text
	.align	2, 0
	.type	 sub_8144C70,function
	.thumb_func
sub_8144C70:
	push	{r4, lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	add	r1, r0, #0x1
	strh	r1, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r2, r3]
	cmp	r0, r1
	blt	.L1138	@cond_branch
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x2
	strh	r0, [r2, #0x20]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x10
	neg	r1, r1
	cmp	r0, r1
	bge	.L1138	@cond_branch
	ldr	r4, .L1141
	ldr	r3, [r4]
	ldrb	r1, [r3, #0x3]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1140	@cond_branch
	mov	r0, #0x40
	orr	r0, r0, r1
	strb	r0, [r3, #0x3]
.L1140:
	add	r0, r2, #0
	bl	DestroySprite
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	ldr	r1, [r4]
	ldr	r0, .L1141+0x4
	ldrh	r0, [r0]
	strh	r0, [r1, #0x34]
.L1138:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1142:
	.align	2, 0
.L1141:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B7B1A
.Lfe95:
	.size	 sub_8144C70,.Lfe95-sub_8144C70
	.section .rodata
	.align	1, 0
.LC393:
	.short	0xffff
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0xfffe
	.short	0x0
	.short	0x2
	.short	0x0
	.short	0xfffd
	.short	0x0
	.short	0x3
	.short	0x0
.text
	.align	2, 0
	.type	 sub_8144CD0,function
	.thumb_func
sub_8144CD0:
	push	{r4, lr}
	add	sp, sp, #-0x18
	add	r4, r0, #0
	ldr	r1, .L1148
	mov	r0, sp
	mov	r2, #0x18
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	add	r2, r0, #0x1
	strh	r2, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x34
	ldrsh	r1, [r4, r3]
	cmp	r0, r1
	bge	.L1144	@cond_branch
	mov	r0, #0x1
	and	r2, r2, r0
	cmp	r2, #0
	beq	.L1145	@cond_branch
	ldr	r3, .L1148+0x4
	mov	r0, #0x3c
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x1
	mov	r1, #0x32
	ldrsh	r0, [r4, r1]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r2, r2, r0
	mov	r1, sp
	add	r0, r1, r2
	ldrh	r0, [r0]
	strh	r0, [r3]
	mov	r3, #0x3c
	ldrsh	r2, [r4, r3]
	add	r1, r2, #0x1
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L1146	@cond_branch
	add	r0, r2, #0x4
.L1146:
	asr	r0, r0, #0x2
	lsl	r0, r0, #0x2
	sub	r0, r1, r0
	strh	r0, [r4, #0x3c]
.L1145:
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	b	.L1147
.L1149:
	.align	2, 0
.L1148:
	.word	.LC393
	.word	gSpriteCoordOffsetY
.L1144:
	ldr	r1, .L1150
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r2, .L1150+0x4
	ldr	r0, .L1150+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x73
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2c
	ldrb	r2, [r0]
	mov	r1, #0x41
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	add	r0, r4, #0
	bl	DestroySprite
.L1147:
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.L1151:
	.align	2, 0
.L1150:
	.word	gSpriteCoordOffsetY
	.word	gSprites
	.word	gUnknown_0203AB88
.Lfe96:
	.size	 sub_8144CD0,.Lfe96-sub_8144CD0
	.align	2, 0
	.type	 sub_8144D94,function
	.thumb_func
sub_8144D94:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrh	r0, [r5, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x30]
	mov	r1, #0x30
	ldrsh	r0, [r5, r1]
	bl	__floatsisf
	add	r4, r0, #0
	ldr	r1, .L1155
	bl	__mulsf3
	add	r1, r4, #0
	bl	__mulsf3
	bl	__fixsfsi
	strh	r0, [r5, #0x26]
	ldr	r0, .L1155+0x4
	ldr	r3, [r0]
	ldr	r2, .L1155+0x8
	ldrb	r0, [r3, #0x1]
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r3, #0x34]
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0x12
	bhi	.L1153	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r3, #0x1]
.L1153:
	mov	r1, #0x30
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3c
	ble	.L1154	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x30]
	ldr	r3, .L1155+0xc
	str	r3, [r5, #0x1c]
	ldr	r2, .L1155+0x10
	mov	r0, #0x3a
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r2, #0
	add	r4, r4, #0x1c
	add	r0, r0, r4
	str	r3, [r0]
	mov	r0, #0x3a
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L1155+0x14
	strh	r1, [r0, #0x30]
	mov	r0, #0x38
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x38
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r1, .L1155+0x18
	str	r1, [r0]
	mov	r0, #0xd6
	bl	m4aSongNumStart
.L1154:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1156:
	.align	2, 0
.L1155:
	.word 0x3d1fbe77	@ float 3.90000008046627044678e-2
	.word	gUnknown_0203AB88
	.word	gUnknown_085B7B1A
	.word	sub_8144C70
	.word	gSprites
	.word	0xfffe
	.word	sub_8144CD0
.Lfe97:
	.size	 sub_8144D94,.Lfe97-sub_8144D94
	.align	2, 0
	.type	 sub_8144E60,function
	.thumb_func
sub_8144E60:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1158	@cond_branch
	ldr	r0, .L1171
	ldr	r3, [r0]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1159	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1171+0x4
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	b	.L1169
.L1172:
	.align	2, 0
.L1171:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6348
.L1159:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1173
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	add	r0, r0, #0xb4
.L1169:
	cmp	r2, r0
	bne	.L1157	@cond_branch
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	mov	r0, #0x2b
	bl	m4aSongNumStart
	ldr	r2, .L1173+0x4
	ldr	r1, [r2]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	ldr	r1, [r2]
	ldr	r0, .L1173+0x8
	ldrh	r0, [r0]
	strh	r0, [r1, #0x34]
	b	.L1157
.L1174:
	.align	2, 0
.L1173:
	.word	gUnknown_085B6348
	.word	gUnknown_0203AB88
	.word	gUnknown_085B7B1A
.L1158:
	ldr	r5, .L1175
	ldr	r3, [r5]
	ldr	r2, .L1175+0x4
	ldrb	r0, [r3, #0x1]
	sub	r0, r0, #0x1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r3, #0x34]
	ldrb	r0, [r3, #0x1]
	cmp	r0, #0x12
	bhi	.L1164	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r3, #0x1]
.L1164:
	ldr	r3, [r5]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1165	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1175+0x8
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0xa]
	b	.L1170
.L1176:
	.align	2, 0
.L1175:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B7B1A
	.word	gUnknown_085B6348
.L1165:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1177
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0xa]
	add	r0, r0, #0xb4
.L1170:
	cmp	r2, r0
	bne	.L1157	@cond_branch
	ldr	r2, .L1177+0x4
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1177+0x8
	str	r1, [r0]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L1177+0xc
	str	r0, [r4, #0x1c]
	mov	r0, #0x0
	strh	r0, [r4, #0x3c]
.L1157:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1178:
	.align	2, 0
.L1177:
	.word	gUnknown_085B6348
	.word	gSprites
	.word	sub_8144D94
	.word	SpriteCallbackDummy
.Lfe98:
	.size	 sub_8144E60,.Lfe98-sub_8144E60
	.align	2, 0
	.type	 sub_8144F94,function
	.thumb_func
sub_8144F94:
	add	r0, r0, #0x3e
	ldrb	r3, [r0]
	lsl	r1, r3, #0x1d
	lsr	r1, r1, #0x1f
	mov	r2, #0x1
	eor	r2, r2, r1
	lsl	r2, r2, #0x2
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0]
	bx	lr
.Lfe99:
	.size	 sub_8144F94,.Lfe99-sub_8144F94
	.align	2, 0
	.type	 sub_8144FB0,function
	.thumb_func
sub_8144FB0:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r2, [r4, #0x22]
	mov	r0, #0x22
	ldrsh	r1, [r4, r0]
	mov	r0, #0x10
	neg	r0, r0
	cmp	r1, r0
	ble	.L1181	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r4, #0x22]
	b	.L1182
.L1181:
	ldr	r0, .L1183
	str	r0, [r4, #0x1c]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r0, [r2]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x5e
	bl	m4aSongNumStop
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r5, .L1183+0x4
	ldr	r4, .L1183+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
.L1182:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1184:
	.align	2, 0
.L1183:
	.word	SpriteCallbackDummy
	.word	gSprites
	.word	gUnknown_0203AB88
.Lfe100:
	.size	 sub_8144FB0,.Lfe100-sub_8144FB0
	.align	2, 0
	.type	 sub_8145030,function
	.thumb_func
sub_8145030:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x30]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	blt	.L1186	@cond_branch
	sub	r1, r1, #0x1
	strh	r1, [r4, #0x30]
	ldrh	r0, [r4, #0x22]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x22]
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bne	.L1188	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1188	@cond_branch
	b	.L1194
.L1186:
	ldrh	r1, [r4, #0x34]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	blt	.L1189	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x34]
	add	r0, r4, #0
	add	r0, r0, #0x2c
	ldrb	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1188	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1191	@cond_branch
.L1194:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	b	.L1188
.L1191:
	ldrh	r0, [r4, #0x26]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	b	.L1188
.L1189:
	mov	r0, #0x2b
	bl	m4aSongNumStart
	ldr	r0, .L1195
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L1195+0x4
	str	r0, [r4, #0x1c]
	ldr	r2, .L1195+0x8
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x2c
	ldrb	r2, [r0]
	mov	r1, #0x7f
	and	r1, r1, r2
	strb	r1, [r0]
.L1188:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1196:
	.align	2, 0
.L1195:
	.word	gUnknown_0203AB88
	.word	sub_8144FB0
	.word	gSprites
.Lfe101:
	.size	 sub_8145030,.Lfe101-sub_8145030
	.section .rodata
.LC417:
	.byte	-0x1
	.byte	0x1
.LC419:
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x1
	.byte	0x2
	.byte	-0x2
	.byte	0x2
	.byte	-0x2
.text
	.align	2, 0
	.type	 sub_81450D8,function
	.thumb_func
sub_81450D8:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	ldr	r1, .L1205
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	add	r5, sp, #0x4
	ldr	r1, .L1205+0x4
	add	r0, r5, #0
	mov	r2, #0x10
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L1198	@cond_branch
	ldr	r0, .L1205+0x8
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	add	r0, r0, sp
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1200	@cond_branch
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r4, #0x74
	sub	r4, r4, r0
	lsr	r0, r4, #0x1f
	add	r4, r4, r0
	asr	r4, r4, #0x1
	neg	r4, r4
	ldr	r0, .L1205+0xc
	ldr	r5, .L1205+0x10
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	m4aMPlayPanpotControl
	ldr	r0, .L1205+0x14
	add	r1, r5, #0
	add	r2, r4, #0
	bl	m4aMPlayPanpotControl
	b	.L1200
.L1206:
	.align	2, 0
.L1205:
	.word	.LC417
	.word	.LC419
	.word	gUnknown_0203AB88
	.word	gMPlayInfo_SE1
	.word	0xffff
	.word	gMPlayInfo_SE2
.L1198:
	lsl	r0, r1, #0x10
	cmp	r0, #0
	blt	.L1201	@cond_branch
	ldr	r0, .L1207
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r0, r2]
	add	r0, r0, sp
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r1, #0x7
	sub	r0, r1, r0
	lsl	r0, r0, #0x1
	add	r0, r5, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mul	r0, r0, r2
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, sp
	add	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
	b	.L1200
.L1208:
	.align	2, 0
.L1207:
	.word	gUnknown_0203AB88
.L1201:
	mov	r0, #0x5e
	bl	m4aSongNumStartOrChange
	ldr	r0, .L1209
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bne	.L1203	@cond_branch
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	bl	PlayCry1
	b	.L1204
.L1210:
	.align	2, 0
.L1209:
	.word	gUnknown_0203AB88
.L1203:
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	mov	r1, #0x3f
	neg	r1, r1
	bl	PlayCry1
.L1204:
	ldr	r0, .L1211
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	mov	r0, #0x2d
	strh	r0, [r4, #0x30]
	ldr	r0, .L1211+0x4
	str	r0, [r4, #0x1c]
.L1200:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1212:
	.align	2, 0
.L1211:
	.word	gUnknown_0203AB88
	.word	sub_8145030
.Lfe102:
	.size	 sub_81450D8,.Lfe102-sub_81450D8
	.align	2, 0
	.type	 sub_8145218,function
	.thumb_func
sub_8145218:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldr	r1, .L1216
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	ldrh	r0, [r4, #0x30]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0x30]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	blt	.L1214	@cond_branch
	ldr	r0, .L1216+0x4
	ldr	r0, [r0]
	ldr	r0, [r0, #0x38]
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	add	r0, r0, sp
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x1
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	ldr	r1, .L1216+0x8
	mov	r2, #0x3a
	ldrsh	r0, [r4, r2]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	add	r2, r2, #0x3e
	ldrb	r3, [r2]
	lsl	r0, r3, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	b	.L1215
.L1217:
	.align	2, 0
.L1216:
	.word	.LC417
	.word	gUnknown_0203AB88
	.word	gSprites
.L1214:
	ldr	r0, .L1218
	str	r0, [r4, #0x1c]
.L1215:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1219:
	.align	2, 0
.L1218:
	.word	sub_8144F94
.Lfe103:
	.size	 sub_8145218,.Lfe103-sub_8145218
	.align	2, 0
	.type	 sub_8145294,function
	.thumb_func
sub_8145294:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L1228
	ldr	r3, [r0]
	ldr	r1, [r3, #0x38]
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L1221	@cond_branch
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1228+0x4
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	add	r0, r0, #0x5a
	cmp	r2, r0
	bne	.L1220	@cond_branch
	ldr	r2, .L1228+0x8
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x34
	b	.L1227
.L1229:
	.align	2, 0
.L1228:
	.word	gUnknown_0203AB88
	.word	gUnknown_085B6348
	.word	gSprites
.L1221:
	mov	r0, #0x34
	ldrsh	r2, [r1, r0]
	ldr	r1, .L1230
	ldrb	r0, [r3, #0x4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r0, r1
	ldrh	r0, [r0, #0x14]
	mov	r1, #0x87
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	cmp	r2, r0
	bne	.L1220	@cond_branch
	ldr	r2, .L1230+0x4
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r3, #0x2e
.L1227:
	strh	r3, [r0, #0x30]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r3, [r0, #0x30]
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L1230+0x8
	str	r1, [r0]
	mov	r0, #0x36
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L1230+0xc
	str	r1, [r0]
	mov	r0, #0x2b
	bl	m4aSongNumStart
.L1220:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1231:
	.align	2, 0
.L1230:
	.word	gUnknown_085B6348
	.word	gSprites
	.word	sub_8145218
	.word	sub_81450D8
.Lfe104:
	.size	 sub_8145294,.Lfe104-sub_8145294
.text
	.align	2, 0

