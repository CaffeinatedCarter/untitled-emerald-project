@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sVariableDmgMoves,object
sVariableDmgMoves:
	.short	0x44
	.short	0x5a
	.short	0x75
	.short	0xf3
	.short	0x20
	.short	0xaf
	.short	0xb3
	.short	0xed
	.short	0x149
	.short	0x108
	.short	0x11c
	.short	0x143
	.short	0x8a
	.short	0x137
	.short	0xad
	.short	0xdc
	.short	0xc
	.short	0xda
	.short	0xd8
	.short	0x11b
	.short	0xd9
	.short	0x117
	.short	0xffff
	.short	0xde
	.short	0x95
	.short	0xffff
	.size	 sVariableDmgMoves,52
	.align	1, 0
	.type	 sUnknown_0860A4E0,object
sUnknown_0860A4E0:
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x0
	.short	0x5
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x5
	.short	0x5
	.short	0x4
	.short	0x5
	.short	0x1
	.short	0x3
	.short	0x1
	.short	0x3
	.short	0x5
	.short	0x1
	.short	0x7
	.short	0x1
	.short	0x7
	.short	0x7
	.short	0x1
	.short	0x5
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x5
	.short	0x1
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x0
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x7
	.short	0x4
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x5
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x4
	.short	0x1
	.short	0x7
	.short	0x2
	.short	0x1
	.short	0x5
	.short	0x7
	.short	0x3
	.short	0x3
	.short	0x4
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x5
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x5
	.short	0x3
	.short	0x1
	.short	0x2
	.short	0x1
	.short	0x5
	.short	0x4
	.short	0x3
	.short	0x6
	.short	0x4
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x5
	.short	0x1
	.short	0x1
	.short	0x7
	.short	0x2
	.short	0x2
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x1
	.short	0x4
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x7
	.short	0x7
	.short	0x6
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x4
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x1
	.short	0x4
	.short	0x7
	.short	0x7
	.short	0x5
	.short	0x7
	.short	0x1
	.short	0x7
	.short	0x1
	.short	0x5
	.short	0x0
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x2
	.short	0x2
	.short	0x6
	.short	0x3
	.short	0x6
	.short	0x4
	.short	0x4
	.short	0x2
	.short	0x5
	.short	0x2
	.short	0x1
	.short	0x1
	.short	0x6
	.short	0x6
	.short	0x6
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x2
	.short	0x6
	.short	0x1
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x4
	.short	0x1
	.short	0x1
	.short	0x3
	.size	 sUnknown_0860A4E0,428
	.align	1, 0
	.type	 sUnknown_0860A68C,object
sUnknown_0860A68C:
	.short	0x4
	.short	0xfffd
	.short	0xfffa
	.size	 sUnknown_0860A68C,6
	.align	1, 0
	.type	 sUnknown_0860A692,object
sUnknown_0860A692:
	.short	0x4
	.short	0x4
	.short	0x6
	.short	0x6
	.short	0x7
	.short	0x6
	.short	0x2
	.size	 sUnknown_0860A692,14
	.align	1, 0
	.type	 sUnknown_0860A6A0,object
sUnknown_0860A6A0:
	.short	0x91
	.short	0x3
	.short	0xfa
	.short	0x3
	.short	0xbe
	.short	0x3
	.short	0x80
	.short	0x3
	.short	0x6e
	.short	0x3
	.short	0x98
	.short	0x3
	.short	0x143
	.short	0x3
	.short	0x123
	.short	0x3
	.short	0x7f
	.short	0x3
	.short	0x14a
	.short	0x3
	.short	0x39
	.short	0x3
	.short	0x134
	.short	0x3
	.short	0x38
	.short	0x3
	.short	0x3d
	.short	0x3
	.short	0x15a
	.short	0x0
	.short	0x37
	.short	0x3
	.short	0x160
	.short	0x3
	.short	0x137
	.short	0x3
	.short	0x57
	.short	0x3
	.short	0x4c
	.short	0xfffc
	.short	0x13b
	.short	0xfffc
	.short	0xac
	.short	0xfffc
	.short	0x35
	.short	0xfffc
	.short	0xdd
	.short	0xfffc
	.short	0x7e
	.short	0xfffc
	.short	0x101
	.short	0xfffc
	.short	0x34
	.short	0xfffc
	.short	0x133
	.short	0xfffc
	.short	0x12b
	.short	0xfffc
	.short	0x11c
	.short	0xfffc
	.short	0x53
	.short	0xfffc
	.short	0x7
	.short	0xfffc
	.short	0x4c
	.short	0xfffc
	.short	0xffff
	.short	0x0
	.size	 sUnknown_0860A6A0,136
	.align	1, 0
	.type	 sUnknown_0860A728,object
sUnknown_0860A728:
	.short	0x13b
	.short	0x3
	.short	0xac
	.short	0x3
	.short	0x35
	.short	0x3
	.short	0xdd
	.short	0x3
	.short	0x7e
	.short	0x3
	.short	0x101
	.short	0x3
	.short	0x34
	.short	0x3
	.short	0x133
	.short	0x3
	.short	0x12b
	.short	0x3
	.short	0x11c
	.short	0x3
	.short	0x53
	.short	0x3
	.short	0x7
	.short	0x3
	.short	0x4c
	.short	0x5
	.short	0xeb
	.short	0x3
	.short	0xea
	.short	0x3
	.short	0xec
	.short	0x3
	.short	0x137
	.short	0x3
	.short	0xffff
	.short	0x0
	.size	 sUnknown_0860A728,72
	.align	1, 0
	.type	 sUnknown_0860A770,object
sUnknown_0860A770:
	.short	0x137
	.short	0x3
	.short	0x4c
	.short	0xfffd
	.short	0xffff
	.short	0x0
	.size	 sUnknown_0860A770,12
	.align	1, 0
	.type	 sUnknown_0860A77C,object
sUnknown_0860A77C:
	.short	0x137
	.short	0x3
	.short	0x4c
	.short	0xfffd
	.short	0xffff
	.short	0x0
	.size	 sUnknown_0860A77C,12
	.align	1, 0
	.type	 sUnknown_0860A788,object
sUnknown_0860A788:
	.short	0x55
	.short	0x3
	.short	0x9
	.short	0x3
	.short	0xd1
	.short	0x3
	.short	0x54
	.short	0x3
	.short	0xc0
	.short	0x3
	.short	0x15f
	.short	0x3
	.short	0x56
	.short	0x0
	.short	0x57
	.short	0x3
	.short	0x158
	.short	0x3
	.short	0xffff
	.short	0x0
	.size	 sUnknown_0860A788,40
	.align	1, 0
	.type	 sUnknown_0860A7B0,object
sUnknown_0860A7B0:
	.short	0x5
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.size	 sUnknown_0860A7B0,14
	.align	1, 0
	.type	 sUnknown_0860A7BE,object
sUnknown_0860A7BE:
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.size	 sUnknown_0860A7BE,10
	.align	1, 0
	.type	 sUnknown_0860A7C8,object
sUnknown_0860A7C8:
	.short	0x4
	.size	 sUnknown_0860A7C8,2
	.align	1, 0
	.type	 sUnknown_0860A7CA,object
sUnknown_0860A7CA:
	.short	0x5
	.size	 sUnknown_0860A7CA,2
	.align	1, 0
	.type	 sUnknown_0860A7CC,object
sUnknown_0860A7CC:
	.short	0x5
	.size	 sUnknown_0860A7CC,2
	.align	1, 0
	.type	 sUnknown_0860A7CE,object
sUnknown_0860A7CE:
	.short	0x3
	.size	 sUnknown_0860A7CE,2
	.align	1, 0
	.type	 sUnknown_0860A7D0,object
sUnknown_0860A7D0:
	.short	0x3
	.size	 sUnknown_0860A7D0,2
	.align	1, 0
	.type	 sUnknown_0860A7D2,object
sUnknown_0860A7D2:
	.short	0x4
	.size	 sUnknown_0860A7D2,2
	.align	1, 0
	.type	 sUnknown_0860A7D4,object
sUnknown_0860A7D4:
	.short	0x3
	.size	 sUnknown_0860A7D4,2
	.align	1, 0
	.type	 sUnknown_0860A7D6,object
sUnknown_0860A7D6:
	.short	0x6
	.size	 sUnknown_0860A7D6,2
	.align	1, 0
	.type	 sUnknown_0860A7D8,object
sUnknown_0860A7D8:
	.short	0x6
	.size	 sUnknown_0860A7D8,2
	.align	1, 0
	.type	 sUnknown_0860A7DA,object
sUnknown_0860A7DA:
	.short	0x6
	.size	 sUnknown_0860A7DA,2
	.align	1, 0
	.type	 sUnknown_0860A7DC,object
sUnknown_0860A7DC:
	.short	0x4
	.size	 sUnknown_0860A7DC,2
	.align	1, 0
	.type	 sUnknown_0860A7DE,object
sUnknown_0860A7DE:
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.size	 sUnknown_0860A7DE,14
	.align	1, 0
	.type	 sUnknown_0860A7EC,object
sUnknown_0860A7EC:
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.size	 sUnknown_0860A7EC,14
	.align	1, 0
	.type	 sUnknown_0860A7FA,object
sUnknown_0860A7FA:
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.short	0xffff
	.size	 sUnknown_0860A7FA,14
	.align	1, 0
	.type	 sUnknown_0860A808,object
sUnknown_0860A808:
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.size	 sUnknown_0860A808,14
	.align	1, 0
	.type	 sUnknown_0860A816,object
sUnknown_0860A816:
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.size	 sUnknown_0860A816,14
	.align	1, 0
	.type	 sUnknown_0860A824,object
sUnknown_0860A824:
	.short	0xfffe
	.short	0xfffe
	.short	0xfffe
	.short	0xfffe
	.short	0xfffe
	.short	0xfffe
	.short	0xfffe
	.size	 sUnknown_0860A824,14
	.align	2, 0
	.type	 sPointsArray,object
sPointsArray:
	.word	sUnknown_0860A4E0
	.word	sUnknown_0860A68C
	.word	sUnknown_0860A692
	.word	sUnknown_0860A6A0
	.word	sUnknown_0860A728
	.word	sUnknown_0860A770
	.word	sUnknown_0860A77C
	.word	sUnknown_0860A788
	.word	sUnknown_0860A7B0
	.word	sUnknown_0860A7BE
	.word	sUnknown_0860A7C8
	.word	sUnknown_0860A7CA
	.word	sUnknown_0860A7CC
	.word	sUnknown_0860A7CE
	.word	sUnknown_0860A7D0
	.word	sUnknown_0860A7D2
	.word	sUnknown_0860A7D4
	.word	sUnknown_0860A7D6
	.word	sUnknown_0860A7D8
	.word	sUnknown_0860A7DA
	.word	sUnknown_0860A7DA
	.word	sUnknown_0860A7DC
	.word	sUnknown_0860A7DE
	.word	sUnknown_0860A7EC
	.word	sUnknown_0860A7FA
	.word	sUnknown_0860A808
	.word	sUnknown_0860A816
	.word	sUnknown_0860A824
	.size	 sPointsArray,112
	.align	1, 0
	.type	 sUnknown_0860A8A4,object
sUnknown_0860A8A4:
	.short	0x97
	.short	0xb2
	.short	0xbc
	.short	0x8c
	.short	0xb4
	.short	0xb5
	.short	0x93
	.short	0x6a
	.short	0x91
	.short	0x5e
	.short	0x30
	.short	0x2a
	.short	0x95
	.short	0x1c
	.short	0x1d
	.short	0x64
	.short	0x60
	.short	0xffff
	.size	 sUnknown_0860A8A4,36
.text
	.align	2, 0
	.globl	BattleTv_SetDataBasedOnString
	.type	 BattleTv_SetDataBasedOnString,function
	.thumb_func
BattleTv_SetDataBasedOnString:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp]
	ldr	r0, .L151
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r0, [sp]
	cmp	r0, #0x1b
	beq	.L3	@cond_branch
	cmp	r0, #0xdd
	beq	.LCB21
	bl	.L2	@far jump
.LCB21:
.L3:
	ldr	r0, .L151+0x4
	ldr	r0, [r0]
	mov	r1, #0x81
	lsl	r1, r1, #0x2
	add	r7, r0, r1
	ldr	r5, .L151+0x8
	ldrb	r0, [r5]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L151+0xc
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L151+0x10
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L151+0x14
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x7]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	cmp	r4, #0
	bne	.L4	@cond_branch
	ldr	r2, .L151+0x18
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L151+0x1c
	b	.L128
.L152:
	.align	2, 0
.L151:
	.word	gBattleTypeFlags
	.word	gBattleStruct
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	gEffectBattler
	.word	gBattleMsgDataPtr
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.L4:
	ldr	r2, .L153
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L153+0x4
.L128:
	add	r1, r1, r0
	str	r1, [sp, #0x8]
	cmp	r6, #0
	bne	.L6	@cond_branch
	ldr	r0, .L153+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L153+0xc
	b	.L129
.L154:
	.align	2, 0
.L153:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gBattlerTarget
	.word	gPlayerParty
.L6:
	ldr	r0, .L155
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L155+0x4
.L129:
	add	r1, r1, r0
	str	r1, [sp, #0xc]
	ldr	r0, .L155+0x8
	ldrb	r0, [r0]
	ldr	r1, .L155+0xc
	ldr	r1, [r1]
	ldrh	r1, [r1]
	bl	GetBattlerMoveSlotId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	cmp	r0, #0x3
	bls	.L8	@cond_branch
	ldr	r0, [sp]
	bl	sub_817E0B8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L8	@cond_branch
	ldr	r2, [sp]
	cmp	r2, #0xc
	bls	.L8	@cond_branch
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r1, [r0]
	mov	r2, #0x1e
	bl	.L130	@ far jump
.L156:
	.align	2, 0
.L155:
	.word	gBattlerTarget
	.word	gEnemyParty
	.word	gBattlerAttacker
	.word	gBattleMsgDataPtr
.L8:
	ldr	r0, .L157
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x19
	mov	r8, r0
	ldr	r0, .L157+0x4
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x19
	ldr	r0, .L157+0x8
	ldrb	r0, [r0]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x19
	ldr	r1, [sp]
	sub	r1, r1, #0x2
	mov	r0, #0xb0
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.LCB218
	bl	.L2	@far jump
.LCB218:
	lsl	r0, r1, #0x2
	ldr	r1, .L157+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L158:
	.align	2, 0
.L157:
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	gEffectBattler
	.word	.L126
	.align	2, 0
	.align	2, 0
.L126:
	.word	.L99
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L10
	.word	.L98
	.word	.L102
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L83
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L71
	.word	.L2
	.word	.L73
	.word	.L2
	.word	.L72
	.word	.L2
	.word	.L67
	.word	.L2
	.word	.L68
	.word	.L86
	.word	.L2
	.word	.L87
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L80
	.word	.L2
	.word	.L81
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L89
	.word	.L2
	.word	.L77
	.word	.L2
	.word	.L78
	.word	.L2
	.word	.L2
	.word	.L121
	.word	.L2
	.word	.L2
	.word	.L108
	.word	.L106
	.word	.L113
	.word	.L114
	.word	.L116
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L64
	.word	.L64
	.word	.L64
	.word	.L64
	.word	.L65
	.word	.L2
	.word	.L125
	.word	.L117
	.word	.L118
	.word	.L2
	.word	.L125
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L54
	.word	.L2
	.word	.L55
	.word	.L84
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L33
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L25
	.word	.L26
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L57
	.word	.L58
	.word	.L51
	.word	.L52
	.word	.L92
	.word	.L93
	.word	.L2
	.word	.L18
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L95
	.word	.L2
	.word	.L15
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L20
	.word	.L28
	.word	.L29
	.word	.L31
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L22
	.word	.L23
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L35
	.word	.L39
	.word	.L45
	.word	.L47
	.word	.L34
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L12
	.word	.L14
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L90
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L17
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L97
	.word	.L96
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L64
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L16
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L2
	.word	.L109
	.word	.L106
	.word	.L108
	.word	.L120
.L10:
	mov	r0, #0x1
	mov	r1, sl
	mov	r2, #0x2
	mov	r3, #0x0
	bl	AddMovePoints
	ldr	r0, .L159
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB250
	bl	.L2	@far jump
.LCB250:
	bl	TrySetBattleSeminarShow
	bl	.L2	@ far jump
.L160:
	.align	2, 0
.L159:
	.word	gBattleTypeFlags
.L12:
	mov	r0, #0x1
	mov	r1, sl
	mov	r2, #0x1
	mov	r3, #0x0
	bl	AddMovePoints
	ldr	r0, .L161
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB271
	bl	.L2	@far jump
.LCB271:
	ldr	r0, [sp, #0xc]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB278
	bl	.L2	@far jump
.LCB278:
	bl	TrySetBattleSeminarShow
	bl	.L2	@ far jump
.L162:
	.align	2, 0
.L161:
	.word	gBattleTypeFlags
.L14:
	mov	r0, #0x1
	mov	r1, sl
	mov	r2, #0x0
	b	.L131
.L15:
	lsl	r3, r4, #0x1
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	add	r3, r7, r3
	ldr	r1, .L163
	ldr	r0, .L163+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	lsl	r0, r0, #0xf
	ldr	r1, [r3, #0x50]
	ldr	r2, .L163+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [r3, #0x50]
	add	r3, r3, #0x55
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r3]
	mov	r0, #0xd
	neg	r0, r0
	bl	.L132	@ far jump
.L164:
	.align	2, 0
.L163:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	-0x38001
.L16:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L165
	ldr	r0, .L165+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x52
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r4]
	mov	r0, #0x1d
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x55
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r2]
	mov	r0, #0x31
	neg	r0, r0
	bl	.L133	@ far jump
.L166:
	.align	2, 0
.L165:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L17:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r5, r7, r0
	ldr	r1, .L167
	ldr	r0, .L167+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r3, r5, #0
	add	r3, r3, #0x52
	lsl	r1, r1, #0x5
	ldrb	r2, [r3]
	mov	r0, #0x1f
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	add	r4, r5, #0
	add	r4, r4, #0x55
	mov	r0, sl
	lsl	r2, r0, #0x6
	ldrb	r1, [r4]
	mov	r0, #0x3f
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4]
	add	r2, r5, #0
	add	r2, r2, #0x58
	ldrb	r0, [r2]
	mov	r1, #0x40
	bl	.L134	@ far jump
.L168:
	.align	2, 0
.L167:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L18:
	ldr	r1, .L169
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.LCB423
	bl	.L2	@far jump
.LCB423:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x14
	bl	.L130	@ far jump
.L170:
	.align	2, 0
.L169:
	.word	gBattleTextBuff1+0x4
.L20:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r3, r7, r0
	add	r0, r3, #0
	add	r0, r0, #0x53
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB454
	bl	.L2	@far jump
.LCB454:
	add	r2, r6, #0
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x56
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	bl	.L135	@ far jump
.L22:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L171
	ldr	r0, .L171+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x53
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r4]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x56
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0xd
	neg	r0, r0
	bl	.L133	@ far jump
.L172:
	.align	2, 0
.L171:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L23:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r3, r7, r0
	add	r0, r3, #0
	add	r0, r0, #0x53
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB526
	bl	.L2	@far jump
.LCB526:
	add	r2, r6, #0
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x56
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	bl	.L136	@ far jump
.L25:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L173
	ldr	r0, .L173+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r2, r2, #0x56
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r2]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x7
	ldrh	r3, [r2]
	ldr	r0, .L173+0x8
	and	r0, r0, r3
	orr	r0, r0, r1
	strh	r0, [r2]
	bl	.L2	@ far jump
.L174:
	.align	2, 0
.L173:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	-0x181
.L26:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x56
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB598
	bl	.L2	@far jump
.LCB598:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x16
	bl	.L130	@ far jump
.L28:
	mov	r2, r8
	lsl	r3, r2, #0x3
	lsl	r0, r4, #0x4
	add	r3, r3, r0
	add	r3, r7, r3
	ldr	r1, .L175
	ldr	r0, .L175+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r3, r3, #0x35
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r2, [r3]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r2, #0x3
	mov	r1, sl
	and	r1, r1, r2
	lsl	r1, r1, #0x3
	mov	r2, #0x19
	neg	r2, r2
	bl	.L132	@ far jump
.L176:
	.align	2, 0
.L175:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L29:
	mov	r1, r8
	lsl	r0, r1, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r0, r7, r0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB662
	bl	.L2	@far jump
.LCB662:
	add	r2, r4, #0
	b	.L137
.L31:
	lsl	r0, r5, #0x3
	lsl	r1, r6, #0x4
	add	r0, r0, r1
	add	r0, r7, r0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB680
	bl	.L2	@far jump
.LCB680:
	add	r2, r6, #0
.L137:
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	lsl	r3, r1, #0x1b
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	mov	r1, #0x6
	bl	AddMovePoints
	bl	.L2	@ far jump
.L33:
	ldr	r0, .L177
	ldr	r0, [r0]
	add	r0, r0, #0xb3
	mov	r1, #0x1
	bl	.L138	@ far jump
.L178:
	.align	2, 0
.L177:
	.word	gBattleStruct
.L34:
	mov	r0, #0x12
	mov	r1, sl
	mov	r2, #0x0
	b	.L131
.L35:
	ldr	r0, .L179
	ldrb	r2, [r0, #0x2]
	cmp	r2, #0
	bne	.LCB724
	bl	.L2	@far jump
.LCB724:
	ldr	r1, .L179+0x4
	ldrh	r0, [r1]
	cmp	r0, #0xd1
	bne	.L37	@cond_branch
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x17
	b	.L139
.L180:
	.align	2, 0
.L179:
	.word	gBattleTextBuff1
	.word	gBattleTextBuff2+0x2
.L37:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x16
	b	.L139
.L39:
	ldr	r0, .L181
	ldrb	r2, [r0, #0x2]
	cmp	r2, #0
	bne	.LCB760
	bl	.L2	@far jump
.LCB760:
	ldr	r0, .L181+0x4
	ldr	r1, .L181+0x8
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L41	@cond_branch
	ldr	r1, .L181+0xc
	ldrh	r0, [r1]
	cmp	r0, #0xd1
	bne	.L42	@cond_branch
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x17
	b	.L139
.L182:
	.align	2, 0
.L181:
	.word	gBattleTextBuff1
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	gBattleTextBuff2+0x2
.L42:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x16
	b	.L139
.L41:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x1b
	b	.L139
.L45:
	ldr	r0, .L183
	ldrb	r2, [r0, #0x2]
	cmp	r2, #0
	bne	.LCB819
	bl	.L2	@far jump
.LCB819:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x18
	b	.L139
.L184:
	.align	2, 0
.L183:
	.word	gBattleTextBuff1
.L47:
	ldr	r0, .L185
	ldrb	r2, [r0, #0x2]
	cmp	r2, #0
	bne	.LCB839
	bl	.L2	@far jump
.LCB839:
	ldr	r1, .L185+0x4
	ldrh	r0, [r1]
	cmp	r0, #0xd3
	bne	.L49	@cond_branch
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x1a
	b	.L139
.L186:
	.align	2, 0
.L185:
	.word	gBattleTextBuff1
	.word	gBattleTextBuff2+0x2
.L49:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x19
.L139:
	mov	r1, sl
.L131:
	mov	r3, #0x0
	bl	AddMovePoints
	bl	.L2	@ far jump
.L51:
	lsl	r2, r5, #0x3
	lsl	r0, r6, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L187
	ldr	r0, .L187+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x30
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r3, [r4]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x32
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0xd
	neg	r0, r0
	bl	.L133	@ far jump
.L188:
	.align	2, 0
.L187:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L52:
	ldr	r0, [sp, #0x8]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB922
	bl	.L2	@far jump
.LCB922:
	mov	r2, r8
	lsl	r0, r2, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB934
	bl	.L2	@far jump
.LCB934:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	mov	r0, #0x8
	mov	r1, #0x0
	bl	AddMovePoints
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r1, r1, #0x57
	ldrb	r2, [r1]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x2
	b	.L140
.L54:
	lsl	r2, r5, #0x3
	lsl	r0, r6, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L189
	ldr	r0, .L189+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x30
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r4]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x32
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r2]
	mov	r0, #0x31
	neg	r0, r0
	bl	.L133	@ far jump
.L190:
	.align	2, 0
.L189:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L55:
	mov	r1, r8
	lsl	r0, r1, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1020
	bl	.L2	@far jump
.LCB1020:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	mov	r0, #0x8
	mov	r1, #0x1
	bl	AddMovePoints
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r1, r1, #0x57
	ldrb	r2, [r1]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	b	.L140
.L57:
	lsl	r2, r5, #0x3
	lsl	r0, r6, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L191
	ldr	r0, .L191+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x6
	ldrh	r3, [r2, #0x30]
	ldr	r0, .L191+0x8
	and	r0, r0, r3
	orr	r0, r0, r1
	strh	r0, [r2, #0x30]
	add	r2, r2, #0x32
	bl	.L141	@ far jump
.L192:
	.align	2, 0
.L191:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	-0x1c1
.L58:
	ldr	r0, [sp, #0x8]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB1091
	bl	.L2	@far jump
.LCB1091:
	mov	r1, r8
	lsl	r0, r1, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	ldrh	r0, [r1, #0x30]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1101
	bl	.L2	@far jump
.LCB1101:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	mov	r0, #0x8
	mov	r1, #0x5
	bl	AddMovePoints
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r1, r1, #0x57
	ldrb	r2, [r1]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0xa
	b	.L140
.L64:
	lsl	r2, r5, #0x3
	lsl	r0, r6, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L193
	ldr	r0, .L193+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x31
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r3, [r4]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x33
	bl	.L142	@ far jump
.L194:
	.align	2, 0
.L193:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L65:
	ldr	r0, [sp, #0x8]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB1175
	bl	.L2	@far jump
.LCB1175:
	mov	r1, r8
	lsl	r0, r1, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x31
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1187
	bl	.L2	@far jump
.LCB1187:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x33
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0x8
	mov	r1, #0x6
	bl	AddMovePoints
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r1, r1, #0x57
	ldrb	r2, [r1]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0xc
.L140:
	orr	r0, r0, r2
	mov	r2, r8
	lsl	r3, r2, #0x5
	mov	r2, #0x1f
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
	bl	.L2	@ far jump
.L67:
	ldr	r5, .L195
	ldr	r6, .L195+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	lsl	r2, r2, #0x2
	mov	r0, r9
	lsl	r4, r0, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r2, r2, r4
	add	r2, r7, r2
	ldr	r0, .L195+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x6
	ldrh	r3, [r2]
	ldr	r0, .L195+0xc
	and	r0, r0, r3
	orr	r0, r0, r1
	strh	r0, [r2]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r2, sl
	lsl	r3, r2, #0x6
	ldrb	r2, [r1, #0x2]
	mov	r0, #0x3f
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x2]
	bl	.L2	@ far jump
.L196:
	.align	2, 0
.L195:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
	.word	-0x1c1
.L68:
	ldr	r0, [sp, #0x8]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB1288
	bl	.L2	@far jump
.LCB1288:
	ldr	r6, .L197
	ldr	r5, .L197+0x4
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	lsl	r1, r4, #0x1
	add	r4, r1, r4
	lsl	r1, r4, #0x3
	add	r0, r0, r1
	add	r1, r7, r0
	ldrh	r0, [r1]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L70	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x2]
	lsr	r3, r3, #0x6
	mov	r0, #0x8
	mov	r1, #0x4
	bl	AddMovePoints
.L70:
	lsl	r3, r4, #0x2
	add	r3, r7, r3
	add	r3, r3, #0x57
	ldrb	r0, [r3]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x8
	orr	r1, r1, r0
	strb	r1, [r3]
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	b	.L143
.L198:
	.align	2, 0
.L197:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L71:
	ldr	r5, .L199
	ldr	r6, .L199+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	lsl	r2, r2, #0x2
	mov	r0, r9
	lsl	r4, r0, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r2, r2, r4
	add	r2, r7, r2
	ldr	r0, .L199+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r0, #0x3
	mov	r2, sl
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x2]
	mov	r0, #0xd
	neg	r0, r0
	b	.L144
.L200:
	.align	2, 0
.L199:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
.L72:
	ldr	r5, .L201
	ldr	r6, .L201+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	lsl	r2, r2, #0x2
	mov	r1, r9
	lsl	r4, r1, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r2, r2, r4
	add	r2, r7, r2
	ldr	r0, .L201+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r2]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r0, #0x3
	mov	r2, sl
	and	r2, r2, r0
	lsl	r2, r2, #0x4
	ldrb	r3, [r1, #0x2]
	mov	r0, #0x31
	neg	r0, r0
.L144:
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x2]
	bl	.L2	@ far jump
.L202:
	.align	2, 0
.L201:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
.L73:
	ldr	r0, [sp, #0x8]
	mov	r1, #0x39
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB1466
	bl	.L2	@far jump
.LCB1466:
	ldr	r2, .L203
	mov	r8, r2
	ldr	r6, .L203+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	lsl	r1, r4, #0x1
	add	r5, r1, r4
	lsl	r4, r5, #0x3
	add	r0, r0, r4
	add	r1, r7, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L75	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x2]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	mov	r0, #0x8
	mov	r1, #0x2
	bl	AddMovePoints
.L75:
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r1, r7, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L76	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x2]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	mov	r0, #0x8
	mov	r1, #0x3
	bl	AddMovePoints
.L76:
	lsl	r3, r5, #0x2
	add	r3, r7, r3
	add	r3, r3, #0x57
	ldrb	r0, [r3]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x6
	orr	r1, r1, r0
	strb	r1, [r3]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
.L143:
	ldrh	r0, [r0]
	lsl	r0, r0, #0x5
	mov	r2, #0x1f
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3]
	b	.L2
.L204:
	.align	2, 0
.L203:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L77:
	lsl	r2, r5, #0x3
	lsl	r0, r6, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L205
	ldr	r0, .L205+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x31
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r4]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x33
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0xd
	neg	r0, r0
	b	.L133
.L206:
	.align	2, 0
.L205:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L78:
	mov	r1, r8
	lsl	r0, r1, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x31
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1614
	b	.L2	@long jump
.LCB1614:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x33
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	mov	r0, #0x9
	b	.L145
.L80:
	ldr	r5, .L207
	ldr	r6, .L207+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	lsl	r2, r2, #0x2
	mov	r0, r9
	lsl	r4, r0, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r2, r2, r4
	add	r2, r7, r2
	ldr	r0, .L207+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r3, [r2, #0x1]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r0, #0x3
	mov	r2, sl
	and	r2, r2, r0
	ldrb	r3, [r1, #0x3]
	mov	r0, #0x4
	neg	r0, r0
	b	.L146
.L208:
	.align	2, 0
.L207:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
.L81:
	ldr	r1, .L209
	ldr	r0, .L209+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r1, r7, r1
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1702
	b	.L2	@long jump
.LCB1702:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x3]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0x9
	mov	r1, #0x2
	bl	AddMovePoints
	b	.L2
.L210:
	.align	2, 0
.L209:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L83:
	ldr	r5, .L211
	ldr	r6, .L211+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	lsl	r2, r2, #0x2
	mov	r1, r9
	lsl	r4, r1, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r2, r2, r4
	add	r2, r7, r2
	ldr	r0, .L211+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r2, #0x1]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r0, #0x3
	mov	r2, sl
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x3]
	mov	r0, #0xd
	neg	r0, r0
	b	.L146
.L212:
	.align	2, 0
.L211:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
.L84:
	ldr	r1, .L213
	ldr	r0, .L213+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r1, r7, r1
	ldrb	r0, [r1, #0x1]
	lsl	r0, r0, #0x19
	lsr	r2, r0, #0x1d
	cmp	r2, #0
	bne	.LCB1798
	b	.L2	@long jump
.LCB1798:
	ldr	r0, .L213+0x8
	ldr	r0, [r0]
	ldrh	r0, [r0]
	cmp	r0, #0xad
	bne	.LCB1805
	b	.L2	@long jump
.LCB1805:
	cmp	r0, #0xd6
	bne	.LCB1807
	b	.L2	@long jump
.LCB1807:
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x3]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	mov	r0, #0x9
.L135:
	mov	r1, #0x3
	bl	AddMovePoints
	b	.L2
.L214:
	.align	2, 0
.L213:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	gBattleMsgDataPtr
.L86:
	ldr	r5, .L215
	ldr	r6, .L215+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r3, [r0]
	lsl	r3, r3, #0x2
	mov	r2, r9
	lsl	r4, r2, #0x1
	add	r4, r4, r9
	lsl	r4, r4, #0x3
	add	r3, r3, r4
	add	r3, r7, r3
	ldr	r0, .L215+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	lsl	r0, r0, #0xf
	ldr	r1, [r3]
	ldr	r2, .L215+0xc
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [r3]
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r7, r1
	mov	r0, #0x3
	mov	r2, sl
	and	r2, r2, r0
	lsl	r2, r2, #0x4
	ldrb	r3, [r1, #0x3]
	mov	r0, #0x31
	neg	r0, r0
.L146:
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x3]
	b	.L2
.L216:
	.align	2, 0
.L215:
	.word	gBattlerPartyIndexes
	.word	gEffectBattler
	.word	gBattlerAttacker
	.word	-0x38001
.L87:
	ldr	r1, .L217
	ldr	r0, .L217+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r1, r7, r1
	ldr	r0, [r1]
	lsl	r0, r0, #0xe
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB1908
	b	.L2	@long jump
.LCB1908:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r1, #0x3]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	mov	r0, #0x9
.L136:
	mov	r1, #0x4
	bl	AddMovePoints
	b	.L2
.L218:
	.align	2, 0
.L217:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L89:
	lsl	r3, r3, #0x3
	mov	r1, r9
	lsl	r0, r1, #0x4
	add	r3, r3, r0
	add	r3, r7, r3
	ldr	r1, .L219
	ldr	r0, .L219+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	lsl	r0, r0, #0xf
	ldr	r1, [r3, #0x30]
	ldr	r2, .L219+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [r3, #0x30]
	add	r3, r3, #0x33
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r2, [r3]
	mov	r0, #0x31
	neg	r0, r0
.L132:
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	b	.L2
.L220:
	.align	2, 0
.L219:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	-0x38001
.L90:
	mov	r2, r8
	lsl	r0, r2, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r3, r7, r0
	ldr	r0, [r3, #0x30]
	lsl	r0, r0, #0xe
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L91	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r3, #0
	add	r0, r0, #0x33
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	mov	r0, #0x9
	mov	r1, #0x1
	bl	AddMovePoints
.L91:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x18
	b	.L130
.L92:
	lsl	r2, r6, #0x1
	add	r2, r2, r6
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L221
	ldr	r0, .L221+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x50
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r3, [r4]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x54
	b	.L142
.L222:
	.align	2, 0
.L221:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L93:
	ldr	r1, [sp, #0x4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r7, r0
	add	r0, r4, #0
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r2, r0, #0x1d
	cmp	r2, #0
	bne	.LCB2065
	b	.L2	@long jump
.LCB2065:
	mov	r0, #0x1
	eor	r1, r1, r0
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r0, r0, #0x54
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0xa
	bl	AddMovePoints
	add	r2, r4, #0
	add	r2, r2, #0x57
	ldrb	r1, [r2]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0xe
	b	.L134
.L95:
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r3, r1, #0
	add	r3, r3, #0x50
	ldrb	r2, [r3]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x54
	ldrb	r2, [r1]
	mov	r0, #0x4
	neg	r0, r0
	b	.L147
.L96:
	mov	r0, r8
	lsl	r2, r0, #0x3
	lsl	r0, r4, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L223
	ldr	r0, .L223+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x34
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r3, [r4]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x33
	mov	r1, sl
	lsl	r3, r1, #0x6
	b	.L148
.L224:
	.align	2, 0
.L223:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L97:
	mov	r0, r8
	lsl	r2, r0, #0x3
	lsl	r0, r4, #0x4
	add	r2, r2, r0
	add	r2, r7, r2
	ldr	r1, .L225
	ldr	r0, .L225+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r2, r2, #0x34
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r2]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, sl
	lsl	r3, r1, #0x6
	mov	r1, #0x3f
	b	.L149
.L226:
	.align	2, 0
.L225:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L98:
	mov	r0, #0x0
	bl	AddPointsOnFainting
.L99:
	mov	r2, r8
	lsl	r0, r2, #0x3
	b	.L150
.L102:
	mov	r0, #0x1
	bl	AddPointsOnFainting
	lsl	r0, r5, #0x3
.L150:
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r1, r7, r0
	add	r4, r1, #0
	add	r4, r4, #0x34
	ldrb	r5, [r4]
	lsl	r0, r5, #0x1d
	cmp	r0, #0
	beq	.L103	@cond_branch
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r5
	strb	r0, [r4]
	add	r2, r1, #0
	add	r2, r2, #0x33
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
.L103:
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB2237
	b	.L2	@long jump
.LCB2237:
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x3f
	and	r0, r0, r1
	strb	r0, [r4]
	b	.L2
.L106:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L227
	ldr	r0, .L227+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x50
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r4]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x54
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0xd
	neg	r0, r0
	b	.L133
.L228:
	.align	2, 0
.L227:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L108:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L229
	ldr	r0, .L229+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x50
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x6
	ldrh	r3, [r4]
	ldr	r0, .L229+0x8
	and	r0, r0, r3
	orr	r0, r0, r1
	strh	r0, [r4]
	add	r2, r2, #0x54
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r2]
	mov	r0, #0x31
	neg	r0, r0
	b	.L133
.L230:
	.align	2, 0
.L229:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	-0x1c1
.L109:
	ldr	r1, .L231
	ldrh	r0, [r1]
	cmp	r0, #0x73
	bne	.L110	@cond_branch
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r3, r1, #0
	add	r3, r3, #0x50
	ldrb	r2, [r3]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x54
	ldrb	r2, [r1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
.L110:
	ldr	r2, .L231
	ldrh	r0, [r2]
	cmp	r0, #0x71
	bne	.L111	@cond_branch
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r3, r1, #0
	add	r3, r3, #0x50
	ldrh	r2, [r3]
	ldr	r0, .L231+0x4
	and	r0, r0, r2
	strh	r0, [r3]
	add	r1, r1, #0x54
	ldrb	r2, [r1]
	mov	r0, #0x31
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
.L111:
	ldr	r1, .L231
	ldrh	r0, [r1]
	cmp	r0, #0x36
	beq	.LCB2392
	b	.L2	@long jump
.LCB2392:
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r4, r1, #0
	add	r4, r4, #0x51
	ldrb	r2, [r4]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r4]
	add	r1, r1, #0x55
	ldrb	r2, [r1]
	mov	r0, #0x4
	neg	r0, r0
	b	.L147
.L232:
	.align	2, 0
.L231:
	.word	gBattleTextBuff1+0x2
	.word	-0x1c1
.L113:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L233
	ldr	r0, .L233+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x51
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	ldrb	r3, [r4]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x54
.L141:
	mov	r0, sl
	lsl	r3, r0, #0x6
.L148:
	ldrb	r1, [r2]
	mov	r0, #0x3f
.L149:
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2]
	b	.L2
.L234:
	.align	2, 0
.L233:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L114:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x51
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB2475
	b	.L2	@long jump
.LCB2475:
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x54
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	mov	r0, #0xf
	b	.L145
.L116:
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r4, r1, #0
	add	r4, r4, #0x51
	ldrb	r2, [r4]
	mov	r0, #0xf
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r4]
	add	r1, r1, #0x54
	ldrb	r2, [r1]
	mov	r0, #0x3f
.L147:
	and	r0, r0, r2
	strb	r0, [r1]
	b	.L2
.L117:
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r2, r7, r2
	ldr	r1, .L235
	ldr	r0, .L235+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x51
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x4
	ldrb	r3, [r4]
	mov	r0, #0x71
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r2, r2, #0x55
.L142:
	mov	r0, #0x3
	mov	r1, sl
	and	r1, r1, r0
	ldrb	r3, [r2]
	mov	r0, #0x4
	neg	r0, r0
.L133:
	and	r0, r0, r3
.L134:
	orr	r0, r0, r1
	strb	r0, [r2]
	b	.L2
.L236:
	.align	2, 0
.L235:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L118:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r1, r7, r0
	add	r0, r1, #0
	add	r0, r0, #0x51
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L2	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r1, #0
	add	r0, r0, #0x55
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0x10
	b	.L145
.L120:
	lsl	r1, r6, #0x1
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r1, r7, r1
	add	r3, r1, #0
	add	r3, r3, #0x50
	ldrb	r2, [r3]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r3]
	add	r1, r1, #0x54
	ldrb	r2, [r1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldrh	r2, [r3]
	ldr	r0, .L237
	and	r0, r0, r2
	strh	r0, [r3]
	ldrb	r2, [r1]
	mov	r0, #0x31
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, .L237+0x4
	ldr	r0, .L237+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r0, #0x11
	mov	r1, #0x0
	mov	r3, sl
	bl	AddMovePoints
	b	.L2
.L238:
	.align	2, 0
.L237:
	.word	-0x1c1
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L121:
	lsl	r0, r4, #0x4
	add	r4, r7, r0
	add	r0, r4, #0
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	lsr	r0, r0, #0x5
	cmp	r0, #0
	beq	.L122	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r0, r0, #0x36
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0x15
	mov	r1, #0x0
	bl	AddMovePoints
.L122:
	add	r0, r4, #0
	add	r0, r0, #0x3d
	ldrb	r0, [r0]
	lsr	r0, r0, #0x5
	cmp	r0, #0
	beq	.L2	@cond_branch
	sub	r2, r0, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r0, r0, #0x3e
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	mov	r0, #0x15
.L145:
	mov	r1, #0x0
	bl	AddMovePoints
	b	.L2
.L125:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x1c
.L130:
	orr	r1, r1, r2
.L138:
	strb	r1, [r0]
.L2:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 BattleTv_SetDataBasedOnString,.Lfe1-BattleTv_SetDataBasedOnString
	.align	2, 0
	.type	 sub_817E0B8,function
	.thumb_func
sub_817E0B8:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r3, #0x0
	ldr	r4, .L249
	ldr	r6, .L249+0x4
	add	r2, r4, #0
	add	r1, r4, #0
.L240:
	ldrh	r0, [r1]
	cmp	r0, r5
	beq	.L241	@cond_branch
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	add	r3, r3, #0x1
	ldrh	r0, [r2]
	cmp	r0, r6
	bne	.L240	@cond_branch
.L241:
	lsl	r0, r3, #0x1
	add	r0, r0, r4
	ldrh	r1, [r0]
	ldr	r0, .L249+0x4
	cmp	r1, r0
	beq	.L246	@cond_branch
	mov	r0, #0x0
	b	.L248
.L250:
	.align	2, 0
.L249:
	.word	sUnknown_0860A8A4
	.word	0xffff
.L246:
	mov	r0, #0x1
.L248:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 sub_817E0B8,.Lfe2-sub_817E0B8
	.align	2, 0
	.globl	BattleTv_SetDataBasedOnMove
	.type	 BattleTv_SetDataBasedOnMove,function
	.thumb_func
BattleTv_SetDataBasedOnMove:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	str	r2, [sp, #0x4]
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	ldr	r0, .L258
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2804
	b	.L251	@long jump
.LCB2804:
	ldr	r0, .L258+0x4
	ldr	r0, [r0]
	mov	r1, #0x81
	lsl	r1, r1, #0x2
	add	r1, r0, r1
	str	r1, [sp, #0x8]
	ldr	r2, .L258+0x8
	mov	sl, r2
	ldrb	r0, [r2]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L258+0xc
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, sl
	ldrb	r0, [r1]
	add	r1, r7, #0
	bl	GetBattlerMoveSlotId
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L253	@cond_branch
	mov	r2, r9
	lsl	r0, r2, #0x1
	add	r0, r0, r9
	lsl	r0, r0, #0x2
	ldr	r1, [sp, #0x8]
	add	r0, r1, r0
	add	r0, r0, #0x57
	ldrb	r1, [r0]
	mov	r2, #0x1e
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L251
.L259:
	.align	2, 0
.L258:
	.word	gBattleTypeFlags
	.word	gBattleStruct
	.word	gBattlerAttacker
	.word	gBattlerTarget
.L253:
	mov	r2, sl
	ldrb	r0, [r2]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x19
	lsl	r0, r0, #0x3
	lsl	r4, r4, #0x4
	add	r0, r0, r4
	ldr	r1, [sp, #0x8]
	add	r0, r1, r0
	mov	r2, sl
	ldrb	r1, [r2]
	lsl	r1, r1, #0x1
	ldr	r2, .L260
	add	r1, r1, r2
	ldrh	r2, [r1]
	add	r2, r2, #0x1
	add	r0, r0, #0x35
	lsl	r2, r2, #0x5
	ldrb	r3, [r0]
	mov	r1, #0x1f
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r1, sl
	ldrb	r0, [r1]
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x19
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r2, [sp, #0x8]
	add	r0, r2, r0
	add	r0, r0, #0x36
	mov	r1, #0x3
	mov	r8, r6
	mov	r2, r8
	and	r2, r2, r1
	mov	r8, r2
	ldrb	r2, [r0]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, r8
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r1, r9
	lsl	r0, r1, #0x1
	add	r0, r0, r9
	lsl	r0, r0, #0x2
	ldr	r2, [sp, #0x8]
	add	r0, r2, r0
	str	r0, [sp, #0xc]
	add	r5, r0, #0
	add	r5, r5, #0x53
	lsl	r2, r6, #0x6
	ldrb	r1, [r5]
	mov	r0, #0x3f
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r5]
	ldr	r1, .L260+0x4
	lsl	r4, r7, #0x1
	add	r0, r4, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r0, #0x0
	add	r1, r6, #0
	mov	r3, #0x0
	bl	AddMovePoints
	ldr	r0, [sp]
	add	r1, r7, #0
	add	r2, r6, #0
	bl	AddPointsBasedOnWeather
	ldr	r0, [sp, #0x4]
	ldrb	r1, [r0, #0x12]
	mov	r0, #0xf
	and	r0, r0, r1
	str	r4, [sp, #0x10]
	cmp	r0, #0
	beq	.L254	@cond_branch
	mov	r0, #0x7
	add	r1, r7, #0
	add	r2, r6, #0
	mov	r3, #0x0
	bl	AddMovePoints
.L254:
	ldr	r0, .L260+0x8
	cmp	r7, r0
	bne	.L255	@cond_branch
	mov	r1, sl
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1
	ldr	r2, .L260
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	mov	r0, #0x7
	and	r1, r1, r0
	ldrb	r2, [r5]
	mov	r0, #0x8
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5]
	ldr	r2, [sp, #0xc]
	add	r2, r2, #0x56
	ldrb	r1, [r2]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, r8
	orr	r0, r0, r1
	strb	r0, [r2]
.L255:
	cmp	r7, #0x78
	beq	.L257	@cond_branch
	cmp	r7, #0x99
	bne	.L256	@cond_branch
.L257:
	mov	r0, #0x1
	mov	r2, r9
	eor	r0, r0, r2
	lsl	r2, r0, #0x1
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, [sp, #0x8]
	add	r2, r0, r2
	mov	r1, sl
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1
	ldr	r1, .L260
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x58
	mov	r0, #0x7
	and	r1, r1, r0
	lsl	r1, r1, #0x3
	ldrb	r3, [r4]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, r8
	lsl	r3, r1, #0x1
	mov	r1, #0x7
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r4]
	add	r2, r2, #0x57
	ldrb	r1, [r2]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1a
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4]
.L256:
	ldr	r1, .L260+0x4
	ldr	r2, [sp, #0x10]
	add	r0, r2, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x2]
	ldrb	r5, [r0, #0x1]
	mov	r0, #0xd
	add	r1, r4, #0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddMovePoints
	mov	r0, #0xe
	add	r1, r4, #0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddMovePoints
	mov	r0, #0xb
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AddMovePoints
	mov	r0, #0xc
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AddMovePoints
.L251:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L261:
	.align	2, 0
.L260:
	.word	gBattlerPartyIndexes
	.word	gBattleMoves
	.word	0x111
.Lfe3:
	.size	 BattleTv_SetDataBasedOnMove,.Lfe3-BattleTv_SetDataBasedOnMove
	.align	2, 0
	.globl	BattleTv_SetDataBasedOnAnimation
	.type	 BattleTv_SetDataBasedOnAnimation,function
	.thumb_func
BattleTv_SetDataBasedOnAnimation:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L272
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L262	@cond_branch
	ldr	r0, .L272+0x4
	ldr	r0, [r0]
	mov	r1, #0x81
	lsl	r1, r1, #0x2
	add	r4, r0, r1
	ldr	r0, .L272+0x8
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r5, #0x12
	beq	.L265	@cond_branch
	cmp	r5, #0x13
	beq	.L267	@cond_branch
	b	.L262
.L273:
	.align	2, 0
.L272:
	.word	gBattleTypeFlags
	.word	gBattleStruct
	.word	gBattlerAttacker
.L265:
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r4, r4, r0
	ldr	r0, [r4, #0x50]
	lsl	r0, r0, #0xe
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L262	@cond_branch
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x55
	ldrb	r3, [r1]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	mov	r1, #0x0
	bl	AddMovePoints
	add	r2, r4, #0
	add	r2, r2, #0x57
	ldrb	r1, [r2]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x10
	b	.L271
.L267:
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r4, r4, r0
	add	r0, r4, #0
	add	r0, r0, #0x52
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L262	@cond_branch
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x55
	ldrb	r3, [r1]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	bl	AddMovePoints
	add	r2, r4, #0
	add	r2, r2, #0x57
	ldrb	r1, [r2]
	mov	r0, #0x1f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x12
.L271:
	orr	r0, r0, r1
	strb	r0, [r2]
.L262:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 BattleTv_SetDataBasedOnAnimation,.Lfe4-BattleTv_SetDataBasedOnAnimation
	.align	2, 0
	.globl	TryPutLinkBattleTvShowOnAir
	.type	 TryPutLinkBattleTvShowOnAir,function
	.thumb_func
TryPutLinkBattleTvShowOnAir:
	.syntax unified
push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x20
    movs r0, 0
    str r0, [sp]
    movs r1, 0
    str r1, [sp, 0x4]
    movs r2, 0
    str r2, [sp, 0x8]
    ldr r3, =0x00007fff
    str r3, [sp, 0xC]
    movs r4, 0
    str r4, [sp, 0x10]
    movs r7, 0
    str r7, [sp, 0x14]
    mov r8, r0
    ldr r0, =gBattleStruct
    ldr r1, [r0]
    adds r0, r1, 0
    adds r0, 0xB3
    ldrb r0, [r0]
    cmp r0, 0
    beq _0817E42A
    b _0817E670
_0817E42A:
    movs r2, 0xD2
    lsls r2, 1
    adds r2, r1
    mov r10, r2
    movs r6, 0
_0817E434:
    movs r0, 0x64
    adds r4, r6, 0
    muls r4, r0
    ldr r0, =gPlayerParty
    adds r0, r4, r0
    movs r1, 0xB
    movs r2, 0
    bl GetMonData
    cmp r0, 0
    beq _0817E454
    mov r0, r8
    adds r0, 0x1
    lsls r0, 24
    lsrs r0, 24
    mov r8, r0
_0817E454:
    ldr r5, =gEnemyParty
    adds r0, r4, r5
    movs r1, 0xB
    movs r2, 0
    bl GetMonData
    cmp r0, 0
    beq _0817E46A
    adds r0, r7, 0x1
    lsls r0, 24
    lsrs r7, r0, 24
_0817E46A:
    adds r6, 0x1
    cmp r6, 0x5
    ble _0817E434
    ldr r0, =gBattleTypeFlags
    ldr r0, [r0]
    movs r1, 0x2
    ands r0, r1
    cmp r0, 0
    bne _0817E47E
    b _0817E670
_0817E47E:
    cmp r8, r7
    beq _0817E484
    b _0817E670
_0817E484:
    movs r6, 0
    lsls r3, r6, 1
    str r3, [sp, 0x18]
    movs r4, 0x64
    mov r8, r4
_0817E48E:
    mov r1, r8
    muls r1, r6
    ldr r0, =gPlayerParty
    adds r4, r1, r0
    adds r0, r4, 0
    movs r1, 0xB
    movs r2, 0
    bl GetMonData
    lsls r0, 16
    lsrs r7, r0, 16
    adds r0, r6, 0x1
    mov r9, r0
    cmp r7, 0
    beq _0817E4EE
    adds r0, r4, 0
    movs r1, 0x2D
    movs r2, 0
    bl GetMonData
    cmp r0, 0
    bne _0817E4EE
    movs r4, 0
    lsls r0, r6, 3
    mov r2, r10
    adds r1, r0, r2
    movs r3, 0x3
_0817E4C4:
    lsls r0, r4, 16
    asrs r0, 16
    ldrh r4, [r1]
    adds r0, r4
    lsls r0, 16
    lsrs r4, r0, 16
    adds r1, 0x2
    subs r3, 0x1
    cmp r3, 0
    bge _0817E4C4
    ldr r1, [sp, 0x8]
    lsls r0, r1, 16
    lsls r1, r4, 16
    cmp r0, r1
    bge _0817E4EE
    lsls r0, r6, 24
    lsrs r0, 24
    str r0, [sp, 0x10]
    lsrs r1, 16
    str r1, [sp, 0x8]
    str r7, [sp]
_0817E4EE:
    mov r0, r8
    muls r0, r6
    ldr r2, =gEnemyParty
    adds r4, r0, r2
    adds r0, r4, 0
    movs r1, 0xB
    movs r2, 0
    bl GetMonData
    lsls r0, 16
    lsrs r7, r0, 16
    ldr r3, [sp, 0x8]
    lsls r3, 16
    str r3, [sp, 0x1C]
    cmp r7, 0
    beq _0817E5A0
    adds r0, r4, 0
    movs r1, 0x2D
    movs r2, 0
    bl GetMonData
    cmp r0, 0
    bne _0817E5A0
    movs r4, 0
    ldr r0, [sp, 0xC]
    lsls r2, r0, 16
    movs r3, 0x1
    lsls r1, r3, 1
    adds r1, 0x1
    lsls r1, 4
    lsls r0, r6, 3
    adds r0, r1
    mov r3, r10
    adds r1, r0, r3
    movs r3, 0x3
_0817E534:
    lsls r0, r4, 16
    asrs r0, 16
    ldrh r4, [r1]
    adds r0, r4
    lsls r0, 16
    lsrs r4, r0, 16
    adds r1, 0x2
    subs r3, 0x1
    cmp r3, 0
    bge _0817E534
    asrs r1, r2, 16
    lsls r5, r4, 16
    asrs r0, r5, 16
    cmp r1, r0
    bne _0817E590
    mov r0, r8
    muls r0, r6
    ldr r1, =gEnemyParty
    adds r0, r1
    movs r1, 0x19
    movs r2, 0
    bl GetMonData
    adds r4, r0, 0
    ldr r2, [sp, 0x14]
    mov r0, r8
    muls r0, r2
    ldr r3, =gEnemyParty
    adds r0, r3
    movs r1, 0x19
    movs r2, 0
    bl GetMonData
    cmp r4, r0
    bls _0817E5A0
    b _0817E594
    .pool
_0817E590:
    cmp r1, r0
    ble _0817E5A0
_0817E594:
    lsls r0, r6, 24
    lsrs r0, 24
    str r0, [sp, 0x14]
    lsrs r5, 16
    str r5, [sp, 0xC]
    str r7, [sp, 0x4]
_0817E5A0:
    mov r6, r9
    cmp r6, 0x5
    bgt _0817E5A8
    b _0817E48E
_0817E5A8:
    movs r4, 0
    movs r6, 0
    movs r3, 0
    ldr r5, =gPlayerParty
    ldr r7, [sp, 0x10]
    lsls r0, r7, 3
    mov r1, r10
    adds r2, r0, r1
_0817E5B8:
    lsls r0, r4, 16
    asrs r0, 16
    movs r7, 0
    ldrsh r1, [r2, r7]
    cmp r0, r1
    bge _0817E5C8
    ldrh r4, [r2]
    adds r6, r3, 0
_0817E5C8:
    adds r2, 0x2
    adds r3, 0x1
    cmp r3, 0x3
    ble _0817E5B8
    movs r0, 0x64
    ldr r1, [sp, 0x10]
    muls r0, r1
    adds r0, r5
    adds r1, r6, 0
    adds r1, 0xD
    movs r2, 0
    bl GetMonData
    lsls r0, 16
    lsrs r4, r0, 16
    ldr r2, [sp, 0x1C]
    cmp r2, 0
    beq _0817E670
    cmp r4, 0
    beq _0817E670
    ldr r0, =gBattleTypeFlags
    ldr r0, [r0]
    movs r1, 0x40
    ands r0, r1
    cmp r0, 0
    beq _0817E65C
    ldr r3, [sp, 0x10]
    cmp r3, 0x2
    bhi _0817E620
    ldr r0, =gBattleScripting
    adds r0, 0x25
    ldrb r0, [r0]
    bl GetLinkTrainerFlankId
    lsls r0, 16
    cmp r0, 0
    beq _0817E630
    b _0817E670
    .pool
_0817E620:
    ldr r0, =gBattleScripting
    adds r0, 0x25
    ldrb r0, [r0]
    bl GetLinkTrainerFlankId
    lsls r0, 16
    cmp r0, 0
    beq _0817E670
_0817E630:
    movs r3, 0
    ldr r7, [sp, 0x14]
    cmp r7, 0x2
    bls _0817E63A
    movs r3, 0x1
_0817E63A:
    lsls r0, r3, 24
    lsrs r0, 24
    ldr r1, =gBattleScripting
    adds r1, 0x25
    ldrb r1, [r1]
    bl sub_806EF84
    lsls r0, 24
    lsrs r0, 24
    adds r1, r4, 0
    ldr r2, [sp]
    ldr r3, [sp, 0x4]
    bl PutBattleUpdateOnTheAir
    b _0817E670
    .pool
_0817E65C:
    ldr r0, =gBattleScripting
    adds r0, 0x25
    ldrb r1, [r0]
    movs r0, 0x1
    eors r0, r1
    adds r1, r4, 0
    ldr r2, [sp]
    ldr r3, [sp, 0x4]
    bl PutBattleUpdateOnTheAir
_0817E670:
    add sp, 0x20
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .pool
.syntax divided
	.code	16
.Lfe5:
	.size	 TryPutLinkBattleTvShowOnAir,.Lfe5-TryPutLinkBattleTvShowOnAir
	.align	2, 0
	.type	 AddMovePoints,function
	.thumb_func
AddMovePoints:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r9, r3
	ldr	r0, .L316
	ldr	r0, [r0]
	mov	r1, #0xd2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	mov	r8, r1
	mov	r2, #0x81
	lsl	r2, r2, #0x2
	add	r7, r0, r2
	ldr	r0, .L316+0x4
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L316+0x8
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	mov	r0, sl
	cmp	r0, #0x1b
	bls	.LCB3284
	b	.L276	@long jump
.LCB3284:
	lsl	r0, r0, #0x2
	ldr	r1, .L316+0xc
	add	r1, r0, r1
	ldr	r1, [r1]
	mov	ip, r0
	mov	pc, r1
.L317:
	.align	2, 0
.L316:
	.word	gBattleStruct
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	.L310
	.align	2, 0
	.align	2, 0
.L310:
	.word	.L280
	.word	.L280
	.word	.L290
	.word	.L281
	.word	.L281
	.word	.L281
	.word	.L281
	.word	.L281
	.word	.L296
	.word	.L296
	.word	.L297
	.word	.L298
	.word	.L302
	.word	.L306
	.word	.L308
	.word	.L296
	.word	.L296
	.word	.L291
	.word	.L280
	.word	.L288
	.word	.L289
	.word	.L296
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
.L280:
	ldr	r1, .L318
	ldr	r0, .L318+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L318+0x8
	add	r0, r0, ip
	ldr	r2, [r0]
	lsl	r0, r5, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L319:
	.align	2, 0
.L318:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
	.word	sPointsArray
.L281:
	ldr	r1, .L320
	add	r1, r1, ip
	ldr	r7, .L320+0x4
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r2, r0, #0x4
	ldr	r4, .L320+0x8
	ldr	r1, [r1]
	ldr	r3, .L320+0xc
	ldrh	r0, [r1]
	cmp	r6, r0
	bne	.L285	@cond_branch
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	add	r0, r0, r8
	ldrh	r1, [r1, #0x2]
	ldrh	r2, [r0]
	add	r1, r1, r2
	strh	r1, [r0]
	b	.L276
.L321:
	.align	2, 0
.L320:
	.word	sPointsArray
	.word	gBattlerPartyIndexes
	.word	0xffff
	.word	gBattlerAttacker
.L285:
	add	r1, r1, #0x4
	ldrh	r0, [r1]
	cmp	r0, r4
	bne	.LCB3392
	b	.L276	@long jump
.LCB3392:
	cmp	r6, r0
	bne	.L285	@cond_branch
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	add	r0, r0, r8
	ldrh	r1, [r1, #0x2]
	ldrh	r5, [r0]
	add	r1, r1, r5
	strh	r1, [r0]
	b	.L276
.L288:
	mov	r0, #0x1
	add	r1, r5, #0
	eor	r1, r1, r0
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	mov	r0, r9
	lsl	r1, r0, #0x1
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L322
	add	r0, r0, ip
	ldr	r2, [r0]
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L323:
	.align	2, 0
.L322:
	.word	sPointsArray
.L289:
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r7, r0
	add	r0, r0, #0x57
	ldrb	r2, [r0]
	mov	r1, #0x1f
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L290:
	mov	r0, r9
	lsl	r1, r0, #0x1
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L324
	add	r0, r0, ip
	ldr	r2, [r0]
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L325:
	.align	2, 0
.L324:
	.word	sPointsArray
.L291:
	lsl	r1, r5, #0x2
	add	r1, r1, r9
	lsl	r1, r1, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L326
	add	r0, r0, ip
	ldr	r2, [r0]
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	b	.L314
.L327:
	.align	2, 0
.L326:
	.word	sPointsArray
.L296:
	lsl	r2, r5, #0x2
	add	r2, r2, r9
	lsl	r2, r2, #0x1
	mov	r1, #0x1
	eor	r1, r1, r4
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r2, r2, r0
	add	r2, r2, r8
	ldr	r0, .L328
	add	r0, r0, ip
	ldr	r1, [r0]
	lsl	r0, r6, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldrh	r1, [r2]
	add	r0, r0, r1
	strh	r0, [r2]
	b	.L276
.L329:
	.align	2, 0
.L328:
	.word	sPointsArray
.L297:
	lsl	r1, r5, #0x2
	add	r1, r1, r9
	lsl	r1, r1, #0x1
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L330
	add	r0, r0, ip
	ldr	r0, [r0]
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L331:
	.align	2, 0
.L330:
	.word	sPointsArray
.L298:
	lsl	r0, r3, #0x4
	add	r2, r7, r0
	add	r0, r2, #0
	add	r0, r0, #0x34
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r1, r0, #0x1d
	add	r4, r2, #0
	add	r4, r4, #0x3c
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmn	r1, r0
	bne	.LCB3592
	b	.L276	@long jump
.LCB3592:
	cmp	r6, #0xa
	beq	.LCB3594
	b	.L276	@long jump
.LCB3594:
	cmp	r1, #0
	beq	.L300	@cond_branch
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x33
	ldrb	r0, [r0]
	lsr	r0, r0, #0x6
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L332
	add	r0, r0, ip
	ldr	r0, [r0]
	ldrh	r0, [r0]
	ldrh	r5, [r1]
	add	r0, r0, r5
	strh	r0, [r1]
.L300:
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB3628
	b	.L276	@long jump
.LCB3628:
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x3b
	ldrb	r0, [r0]
	lsr	r0, r0, #0x6
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L332
	add	r0, r0, ip
	ldr	r0, [r0]
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L333:
	.align	2, 0
.L332:
	.word	sPointsArray
.L302:
	lsl	r1, r3, #0x4
	add	r1, r7, r1
	add	r0, r1, #0
	add	r0, r0, #0x34
	ldrb	r4, [r0]
	lsl	r0, r4, #0x1a
	lsr	r2, r0, #0x1d
	add	r5, r1, #0
	add	r5, r5, #0x3c
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1d
	cmn	r2, r0
	beq	.L276	@cond_branch
	cmp	r6, #0xd
	bne	.L276	@cond_branch
	cmp	r2, #0
	beq	.L304	@cond_branch
	sub	r1, r2, #0x1
	lsl	r1, r1, #0x2
	lsr	r0, r4, #0x6
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L334
	add	r0, r0, ip
	ldr	r0, [r0]
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	strh	r0, [r1]
.L304:
	ldrb	r2, [r5]
	lsl	r0, r2, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L276	@cond_branch
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	lsr	r0, r2, #0x6
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x4
	b	.L315
.L335:
	.align	2, 0
.L334:
	.word	sPointsArray
.L306:
	cmp	r6, #0x8
	bhi	.L276	@cond_branch
	cmp	r5, #0
	beq	.L276	@cond_branch
	lsl	r0, r3, #0x1
	add	r3, r0, r3
	lsl	r0, r3, #0x2
	add	r2, r7, r0
	add	r0, r2, #0
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L276	@cond_branch
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x54
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x4
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L336
	add	r0, r0, ip
	ldr	r0, [r0]
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	b	.L313
.L337:
	.align	2, 0
.L336:
	.word	sPointsArray
.L308:
	cmp	r6, #0x8
	bls	.L276	@cond_branch
	cmp	r5, #0
	beq	.L276	@cond_branch
	lsl	r0, r3, #0x1
	add	r3, r0, r3
	lsl	r0, r3, #0x2
	add	r2, r7, r0
	add	r0, r2, #0
	add	r0, r0, #0x50
	ldrh	r0, [r0]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L276	@cond_branch
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x54
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	lsl	r0, r3, #0x4
.L315:
	add	r1, r1, r0
	add	r1, r1, r8
	ldr	r0, .L338
	add	r0, r0, ip
	ldr	r0, [r0]
.L314:
	ldrh	r0, [r0]
	ldrh	r5, [r1]
	add	r0, r0, r5
.L313:
	strh	r0, [r1]
.L276:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	sPointsArray
.Lfe6:
	.size	 AddMovePoints,.Lfe6-AddMovePoints
	.align	2, 0
	.type	 AddPointsOnFainting,function
	.thumb_func
AddPointsOnFainting:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L392
	ldr	r0, [r0]
	mov	r1, #0x81
	lsl	r1, r1, #0x2
	add	r5, r0, r1
	ldr	r3, .L392+0x4
	mov	r8, r3
	ldrb	r0, [r3]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L392+0x8
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r6, r5, r0
	add	r0, r6, #0
	add	r0, r0, #0x57
	ldrb	r0, [r0]
	lsr	r3, r0, #0x5
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1c
	cmp	r0, #0
	bne	.LCB3872
	b	.L341	@long jump
.LCB3872:
	sub	r0, r0, #0x1
	cmp	r0, #0xe
	bls	.LCB3876
	b	.L382	@long jump
.LCB3876:
	lsl	r0, r0, #0x2
	ldr	r1, .L392+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L393:
	.align	2, 0
.L392:
	.word	gBattleStruct
	.word	gBattlerAttacker
	.word	gBattlerTarget
	.word	.L380
	.align	2, 0
	.align	2, 0
.L380:
	.word	.L343
	.word	.L345
	.word	.L347
	.word	.L350
	.word	.L352
	.word	.L354
	.word	.L356
	.word	.L358
	.word	.L360
	.word	.L362
	.word	.L365
	.word	.L367
	.word	.L374
	.word	.L377
	.word	.L382
.L343:
	lsl	r0, r3, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB3908
	b	.L382	@long jump
.LCB3908:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1c
	b	.L386
.L345:
	lsl	r0, r3, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB3936
	b	.L382	@long jump
.LCB3936:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1a
	b	.L386
.L347:
	lsl	r0, r3, #0x2
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	add	r5, r5, r0
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1d
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	beq	.L348	@cond_branch
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x2
	ldrb	r3, [r5, #0x2]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x13
	mov	r1, #0x0
	bl	AddMovePoints
.L348:
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1a
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB3990
	b	.L382	@long jump
.LCB3990:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x2
	ldrb	r3, [r5, #0x2]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	b	.L387
.L350:
	lsl	r0, r3, #0x2
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	add	r1, r5, r0
	ldrh	r0, [r1]
	lsl	r0, r0, #0x17
	lsr	r3, r0, #0x1d
	cmp	r3, #0
	bne	.LCB4018
	b	.L382	@long jump
.LCB4018:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x2
	ldrb	r3, [r1, #0x2]
	lsr	r3, r3, #0x6
	add	r3, r3, r0
	b	.L387
.L352:
	lsl	r0, r3, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r3, r5, r0
	ldrh	r0, [r3, #0x30]
	lsl	r0, r0, #0x17
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB4044
	b	.L382	@long jump
.LCB4044:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x32
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	b	.L388
.L354:
	lsl	r0, r3, #0x3
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x31
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1c
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB4073
	b	.L382	@long jump
.LCB4073:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x33
	b	.L389
.L356:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	bne	.LCB4099
	b	.L382	@long jump
.LCB4099:
	mov	r0, #0x1
	add	r2, r4, #0
	b	.L390
.L358:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r5, r0
	ldr	r0, [r3, #0x50]
	lsl	r0, r0, #0xe
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB4118
	b	.L382	@long jump
.LCB4118:
	add	r2, r4, #0
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x55
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1e
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x14
	b	.L391
.L360:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x52
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	bne	.LCB4148
	b	.L382	@long jump
.LCB4148:
	add	r2, r4, #0
	sub	r1, r0, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x55
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x14
	b	.L391
.L362:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x58
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	cmp	r0, #0
	bge	.L363	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x52
	ldrb	r0, [r0]
	lsr	r0, r0, #0x5
	sub	r6, r0, #0x1
	ldr	r1, .L394
	ldr	r0, .L394+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r6, r0
	beq	.L363	@cond_branch
	add	r2, r4, #0
	lsl	r1, r6, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x55
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x13
	mov	r1, #0x0
	bl	AddMovePoints
.L363:
	mov	r1, #0x1
	eor	r1, r1, r4
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	add	r0, r1, #0
	add	r0, r0, #0x58
	ldrb	r0, [r0]
	lsl	r0, r0, #0x19
	cmp	r0, #0
	blt	.LCB4225
	b	.L382	@long jump
.LCB4225:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	add	r0, r1, #0
	add	r0, r0, #0x52
	ldrb	r0, [r0]
	lsr	r0, r0, #0x5
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x55
	ldrb	r3, [r1]
	lsr	r3, r3, #0x6
	add	r3, r3, r0
	b	.L387
.L395:
	.align	2, 0
.L394:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L365:
	mov	r0, #0x1
	eor	r0, r0, r4
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r5, r1
	add	r1, r1, #0x56
	ldrb	r0, [r1]
	lsl	r0, r0, #0x19
	lsr	r5, r0, #0x1d
	cmp	r5, #0
	bne	.LCB4267
	b	.L382	@long jump
.LCB4267:
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	ldrh	r3, [r1]
	lsl	r3, r3, #0x17
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	b	.L387
.L367:
	lsl	r2, r4, #0x4
	mov	r1, #0x1
	add	r0, r4, #0
	eor	r0, r0, r1
	lsl	r6, r0, #0x18
	add	r0, r5, #0
	add	r0, r0, #0x30
	add	r4, r2, r0
	mov	r5, #0x1
.L371:
	ldr	r0, [r4]
	lsl	r0, r0, #0xe
	lsr	r0, r0, #0x1d
	cmp	r0, #0
	beq	.L370	@cond_branch
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	ldrb	r3, [r4, #0x3]
	lsl	r3, r3, #0x1a
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x13
	mov	r1, #0x0
	lsr	r2, r6, #0x18
	bl	AddMovePoints
.L370:
	add	r4, r4, #0x8
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L371	@cond_branch
	b	.L382
.L374:
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	add	r0, r0, #0x58
	ldrb	r3, [r0]
	lsl	r0, r3, #0x1f
	cmp	r0, #0
	beq	.L375	@cond_branch
	add	r2, r4, #0
	lsl	r0, r3, #0x1a
	lsr	r0, r0, #0x1d
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	lsl	r3, r3, #0x1d
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x13
	mov	r1, #0x0
	bl	AddMovePoints
.L375:
	mov	r0, #0x1
	eor	r0, r0, r4
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r5, r1
	add	r1, r1, #0x58
	ldrb	r1, [r1]
	lsl	r0, r1, #0x1f
	cmp	r0, #0
	beq	.L382	@cond_branch
	mov	r0, #0x1
	add	r2, r4, #0
	eor	r2, r2, r0
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1d
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	lsl	r3, r1, #0x1d
	lsr	r3, r3, #0x1e
	add	r3, r3, r0
	b	.L387
.L377:
	cmp	r7, #0x1
	bne	.L382	@cond_branch
	add	r2, r4, #0
	ldr	r1, .L396
	ldr	r0, .L396+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r5, r0
	add	r0, r0, #0x53
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x14
	b	.L391
.L397:
	.align	2, 0
.L396:
	.word	gBattlerPartyIndexes
	.word	gBattlerAttacker
.L341:
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r5, r0
	add	r0, r3, #0
	add	r0, r0, #0x57
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1c
	cmp	r0, #0x7
	bne	.L383	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	lsr	r1, r0, #0x1d
	cmp	r1, #0
	beq	.L382	@cond_branch
	mov	r0, #0x1
.L390:
	eor	r2, r2, r0
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r0, r3, #0
	add	r0, r0, #0x54
.L389:
	ldrb	r3, [r0]
	lsl	r3, r3, #0x1e
.L386:
	lsr	r3, r3, #0x1e
.L388:
	add	r3, r3, r1
.L387:
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x13
.L391:
	mov	r1, #0x0
	bl	AddMovePoints
	b	.L382
.L383:
	add	r2, r4, #0
	ldr	r1, .L398
	mov	r3, r8
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x2
	add	r0, r6, #0
	add	r0, r0, #0x53
	ldrb	r3, [r0]
	lsr	r3, r3, #0x6
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x14
	mov	r1, #0x0
	bl	AddMovePoints
.L382:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	gBattlerPartyIndexes
.Lfe7:
	.size	 AddPointsOnFainting,.Lfe7-AddPointsOnFainting
	.align	2, 0
	.type	 TrySetBattleSeminarShow,function
	.thumb_func
TrySetBattleSeminarShow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x28
	ldr	r7, .L445
	ldr	r0, [r7]
	ldr	r1, .L445+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB4527
	b	.L400	@long jump
.LCB4527:
	ldr	r4, .L445+0x8
	ldrb	r0, [r4]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB4536
	b	.L400	@long jump
.LCB4536:
	ldr	r5, .L445+0xc
	ldrb	r4, [r4]
	mov	r1, #0x58
	mov	r6, r4
	mul	r6, r6, r1
	add	r0, r6, r5
	ldrb	r0, [r0, #0x1e]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x5
	bgt	.LCB4546
	b	.L400	@long jump
.LCB4546:
	ldr	r0, .L445+0x10
	ldrb	r0, [r0]
	mul	r0, r0, r1
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1f]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x6
	ble	.LCB4555
	b	.L400	@long jump
.LCB4555:
	ldr	r0, .L445+0x14
	ldrh	r1, [r0]
	cmp	r1, #0xed
	bne	.LCB4561
	b	.L400	@long jump
.LCB4561:
	ldr	r0, .L445+0x18
	cmp	r1, r0
	bne	.LCB4566
	b	.L400	@long jump
.LCB4566:
	ldr	r0, [r7]
	mov	r1, #0xc8
	lsl	r1, r1, #0xe
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB4572
	b	.L400	@long jump
.LCB4572:
	ldr	r3, .L445+0x1c
	ldr	r2, .L445+0x20
	add	r0, r4, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	add	r1, r5, #0
	add	r1, r1, #0xc
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x1]
	add	r6, r2, #0
	cmp	r0, #0
	bne	.LCB4592
	b	.L400	@long jump
.LCB4592:
	mov	r5, #0x0
	str	r1, [sp, #0x24]
	ldr	r1, .L445+0x24
	ldr	r4, .L445+0x28
	add	r3, r1, #0
	add	r2, r1, #0
.L415:
	ldr	r0, [sp, #0x24]
	ldrh	r7, [r2]
	cmp	r0, r7
	beq	.L416	@cond_branch
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	add	r5, r5, #0x1
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L415	@cond_branch
.L416:
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L445+0x28
	cmp	r1, r0
	beq	.LCB4630
	b	.L400	@long jump
.LCB4630:
	ldr	r2, .L445+0x8
	ldrb	r0, [r2]
	add	r0, r0, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	mov	r1, sp
	add	r1, r1, r0
	add	r1, r1, #0x10
	ldr	r0, .L445+0x2c
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r0, .L445+0x14
	ldrh	r1, [r0]
	str	r1, [sp, #0x24]
	mov	r5, #0x0
	add	r3, sp, #0x20
	mov	sl, r3
	mov	r8, r0
	add	r7, sp, #0x10
	ldr	r4, .L445+0x10
	mov	r9, r4
.L425:
	lsl	r1, r5, #0x1
	ldr	r6, .L445+0x8
	ldrb	r0, [r6]
	mov	r2, #0x58
	mul	r0, r0, r2
	add	r1, r1, r0
	ldr	r0, .L445+0xc
	add	r0, r0, #0xc
	add	r1, r1, r0
	ldrh	r0, [r1]
	mov	r3, r8
	strh	r0, [r3]
	mov	r6, #0x0
	mov	r4, sl
	strh	r6, [r4]
	ldrh	r0, [r3]
	add	r1, r7, #0
	mov	r2, sl
	bl	ShouldCalculateDamage
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L424	@cond_branch
	ldr	r4, .L445+0x30
	mov	r1, r9
	ldrb	r0, [r1]
	bl	GetBattlerPosition
	mov	r1, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r4
	ldrh	r3, [r1]
	ldr	r2, .L445+0x8
	ldrb	r0, [r2]
	mov	r4, #0x58
	mul	r0, r0, r4
	ldr	r6, .L445+0xc
	add	r0, r0, r6
	mov	r2, r9
	ldrb	r1, [r2]
	mul	r1, r1, r4
	add	r1, r1, r6
	mov	r4, r8
	ldrh	r2, [r4]
	mov	r6, sl
	ldrh	r4, [r6]
	str	r4, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r6, .L445+0x8
	ldrb	r4, [r6]
	str	r4, [sp, #0x8]
	mov	r6, r9
	ldrb	r4, [r6]
	str	r4, [sp, #0xc]
	bl	CalculateBaseDamage
	add	r3, r0, #0
	ldr	r4, .L445+0x2c
	str	r3, [r4]
	ldr	r1, .L445+0x34
	ldr	r2, .L445+0x8
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L427	@cond_branch
	ldr	r2, .L445+0x1c
	mov	r6, r8
	ldrh	r1, [r6]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0xd
	bne	.L427	@cond_branch
	lsl	r0, r3, #0x1
	str	r0, [r4]
.L427:
	ldr	r0, .L445+0x38
	ldr	r6, .L445+0x8
	ldrb	r1, [r6]
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	bge	.L428	@cond_branch
	ldr	r4, .L445+0x2c
	ldr	r1, [r4]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	mov	r1, #0xa
	bl	__divsi3
	str	r0, [r4]
.L428:
	mov	r1, r8
	ldrh	r0, [r1]
	ldrb	r1, [r6]
	mov	r3, r9
	ldrb	r2, [r3]
	bl	TypeCalc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L445+0x2c
	ldr	r0, [r0]
	str	r0, [r7]
	cmp	r0, #0
	bne	.L424	@cond_branch
	mov	r0, #0x29
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L424	@cond_branch
	mov	r0, #0x1
	str	r0, [r7]
.L424:
	add	r7, r7, #0x4
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L425	@cond_branch
	mov	r5, #0x0
	ldr	r3, .L445+0x8
	ldr	r6, .L445+0x20
	ldr	r4, .L445+0x3c
	mov	r8, r4
	mov	r7, #0x64
	mov	r9, r7
	mov	sl, r6
.L434:
	ldrb	r0, [r3]
	add	r0, r0, r6
	ldrb	r2, [r0]
	cmp	r5, r2
	bne	.LCB4840
	b	.L433	@long jump
.LCB4840:
	lsl	r0, r5, #0x2
	mov	r1, sp
	add	r1, r1, r0
	add	r1, r1, #0x10
	lsl	r0, r2, #0x2
	add	r0, r0, sp
	add	r0, r0, #0x10
	ldr	r1, [r1]
	ldr	r0, [r0]
	cmp	r1, r0
	ble	.L433	@cond_branch
	mov	r7, #0x1
	cmp	r2, #0
	beq	.L436	@cond_branch
	mov	r7, #0x0
.L436:
	mov	r5, #0x0
	ldr	r4, .L445+0x10
	ldr	r6, .L445+0x40
	ldr	r0, .L445+0x8
	ldrb	r0, [r0]
	add	r0, r0, sl
	ldrb	r3, [r0]
	add	r2, sp, #0x10
.L441:
	cmp	r5, r3
	beq	.L440	@cond_branch
	lsl	r0, r7, #0x2
	add	r0, r0, sp
	add	r0, r0, #0x10
	ldr	r1, [r2]
	ldr	r0, [r0]
	cmp	r1, r0
	ble	.L440	@cond_branch
	add	r7, r5, #0
.L440:
	add	r2, r2, #0x4
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L441	@cond_branch
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	ldr	r2, .L445+0x8
	ldrb	r0, [r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	r3, r9
	mul	r3, r3, r0
	add	r0, r3, #0
	ldr	r1, .L445+0x44
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r4, .L445+0x8
	ldrb	r3, [r4]
	mov	r2, sl
	add	r0, r3, r2
	ldrb	r2, [r0]
	mov	r0, #0x58
	mov	r4, r3
	mul	r4, r4, r0
	ldr	r5, .L445+0x48
	add	r3, r4, r5
	lsl	r0, r7, #0x1
	add	r0, r0, r4
	add	r0, r0, r5
	ldrh	r0, [r0]
	str	r0, [sp]
	add	r0, r6, #0
	bl	sub_80EE35C
	b	.L432
.L446:
	.align	2, 0
.L445:
	.word	gBattleTypeFlags
	.word	0x2000003
	.word	gBattlerAttacker
	.word	gBattleMons
	.word	gBattlerTarget
	.word	gCurrentMove
	.word	0x137
	.word	gBattleMoves
	.word	gMoveSelectionCursor
	.word	sVariableDmgMoves
	.word	0xffff
	.word	gBattleMoveDamage
	.word	gSideStatuses
	.word	gStatuses3
	.word	gProtectStructs
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gPlayerParty
	.word	gBattleMons+0xc
.L433:
	add	r5, r5, #0x1
	cmp	r5, #0x3
	bgt	.LCB4976
	b	.L434	@long jump
.LCB4976:
.L432:
	ldr	r2, .L447
	ldr	r1, .L447+0x4
	ldr	r0, .L447+0x8
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	add	r0, r0, #0x10
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r0, .L447+0xc
	mov	r3, sp
	ldrh	r3, [r3, #0x24]
	strh	r3, [r0]
.L400:
	add	sp, sp, #0x28
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	gBattleMoveDamage
	.word	gMoveSelectionCursor
	.word	gBattlerAttacker
	.word	gCurrentMove
.Lfe8:
	.size	 TrySetBattleSeminarShow,.Lfe8-TrySetBattleSeminarShow
	.align	2, 0
	.type	 ShouldCalculateDamage,function
	.thumb_func
ShouldCalculateDamage:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	mov	ip, r2
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r1, .L467
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L465	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L467+0x4
	ldr	r7, .L467+0x8
	add	r3, r5, #0
	add	r1, r5, #0
.L452:
	ldrh	r0, [r1]
	cmp	r2, r0
	beq	.L453	@cond_branch
	add	r3, r3, #0x2
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	ldrh	r0, [r3]
	cmp	r0, r7
	bne	.L452	@cond_branch
.L453:
	lsl	r0, r4, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	ldr	r0, .L467+0x8
	cmp	r1, r0
	beq	.L458	@cond_branch
	mov	r0, #0x0
	str	r0, [r6]
	b	.L464
.L468:
	.align	2, 0
.L467:
	.word	gBattleMoves
	.word	sVariableDmgMoves
	.word	0xffff
.L458:
	cmp	r2, #0x95
	bne	.L460	@cond_branch
	ldr	r2, .L469
	ldr	r0, .L469+0x4
	ldrb	r1, [r0]
	mov	r0, #0x58
	mul	r0, r0, r1
	add	r0, r0, r2
	add	r0, r0, #0x2a
	ldrb	r0, [r0]
	asr	r0, r0, #0x1
.L465:
	str	r0, [r6]
	mov	r0, #0x0
	b	.L464
.L470:
	.align	2, 0
.L469:
	.word	gBattleMons
	.word	gBattlerAttacker
.L460:
	cmp	r2, #0xde
	bne	.L466	@cond_branch
	mov	r0, #0xa
	mov	r1, ip
	strh	r0, [r1]
.L466:
	mov	r0, #0x1
.L464:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 ShouldCalculateDamage,.Lfe9-ShouldCalculateDamage
	.align	2, 0
	.globl	BattleTv_ClearExplosionFaintCause
	.type	 BattleTv_ClearExplosionFaintCause,function
	.thumb_func
BattleTv_ClearExplosionFaintCause:
	push	{r4, r5, lr}
	ldr	r0, .L473
	ldr	r0, [r0]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L472	@cond_branch
	ldr	r0, .L473+0x4
	ldr	r3, [r0]
	ldr	r0, .L473+0x8
	add	r4, r3, r0
	ldrb	r2, [r4]
	sub	r1, r1, #0x21
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r4]
	ldr	r0, .L473+0xc
	add	r2, r3, r0
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	ldrb	r5, [r4]
	mov	r1, #0x1f
	add	r0, r1, #0
	and	r0, r0, r5
	strb	r0, [r4]
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	mov	r0, #0x97
	lsl	r0, r0, #0x2
	add	r4, r3, r0
	ldrb	r2, [r4]
	mov	r1, #0x39
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r4]
	mov	r0, #0x9a
	lsl	r0, r0, #0x2
	add	r3, r3, r0
	ldrb	r0, [r3]
	and	r1, r1, r0
	strb	r1, [r3]
	ldrb	r2, [r4]
	mov	r1, #0x7
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r4]
	ldrb	r0, [r3]
	and	r1, r1, r0
	strb	r1, [r3]
	ldrb	r2, [r4]
	mov	r1, #0x2
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r4]
	ldrb	r0, [r3]
	and	r1, r1, r0
	strb	r1, [r3]
.L472:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	gBattleTypeFlags
	.word	gBattleStruct
	.word	0x25b
	.word	0x267
.Lfe10:
	.size	 BattleTv_ClearExplosionFaintCause,.Lfe10-BattleTv_ClearExplosionFaintCause
	.align	2, 0
	.globl	GetBattlerMoveSlotId
	.type	 GetBattlerMoveSlotId,function
	.thumb_func
GetBattlerMoveSlotId:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r5, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	ldr	r6, .L484
	cmp	r0, #0
	bne	.L476	@cond_branch
	ldr	r6, .L484+0x4
.L476:
	mov	r4, #0x0
	ldr	r1, .L484+0x8
	lsl	r0, r5, #0x1
	add	r5, r0, r1
	b	.L480
.L485:
	.align	2, 0
.L484:
	.word	gEnemyParty
	.word	gPlayerParty
	.word	gBattlerPartyIndexes
.L482:
	add	r4, r4, #0x1
.L480:
	cmp	r4, #0x3
	bgt	.L479	@cond_branch
	ldrh	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r1
	add	r0, r6, r0
	add	r1, r4, #0
	add	r1, r1, #0xd
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, r7
	bne	.L482	@cond_branch
.L479:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 GetBattlerMoveSlotId,.Lfe11-GetBattlerMoveSlotId
	.align	2, 0
	.type	 AddPointsBasedOnWeather,function
	.thumb_func
AddPointsBasedOnWeather:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r4, r3, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r6, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r5, r2, #0
	mov	r0, #0x7
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L487	@cond_branch
	mov	r0, #0x3
	b	.L494
.L487:
	mov	r0, #0x60
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L489	@cond_branch
	mov	r0, #0x4
	b	.L494
.L489:
	mov	r0, #0x18
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L491	@cond_branch
	mov	r0, #0x5
.L494:
	mov	r3, #0x0
	bl	AddMovePoints
	b	.L488
.L491:
	mov	r0, #0x80
	and	r4, r4, r0
	cmp	r4, #0
	beq	.L488	@cond_branch
	mov	r0, #0x6
	add	r1, r6, #0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddMovePoints
.L488:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 AddPointsBasedOnWeather,.Lfe12-AddPointsBasedOnWeather
.text
	.align	2, 0

