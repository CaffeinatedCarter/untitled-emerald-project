@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sHatchedEggLevelUpMoves,object
	.size	 sHatchedEggLevelUpMoves,100
sHatchedEggLevelUpMoves:
	.short	0x0
	.space	98
	.align	1, 0
	.type	 sHatchedEggFatherMoves,object
	.size	 sHatchedEggFatherMoves,8
sHatchedEggFatherMoves:
	.short	0x0
	.space	6
	.align	1, 0
	.type	 sHatchedEggFinalMoves,object
	.size	 sHatchedEggFinalMoves,8
sHatchedEggFinalMoves:
	.short	0x0
	.space	6
	.align	1, 0
	.type	 sHatchedEggEggMoves,object
	.size	 sHatchedEggEggMoves,20
sHatchedEggEggMoves:
	.short	0x0
	.space	18
	.align	1, 0
	.type	 sHatchedEggMotherMoves,object
	.size	 sHatchedEggMotherMoves,8
sHatchedEggMotherMoves:
	.short	0x0
	.space	6
	.globl	gEggMoves
	.section .rodata
	.align	1, 0
	.type	 gEggMoves,object
gEggMoves:
	.short	0x4e21
	.short	0x71
	.short	0x82
	.short	0xdb
	.short	0xcc
	.short	0x50
	.short	0x159
	.short	0x140
	.short	0xae
	.short	0x4e24
	.short	0xbb
	.short	0xf6
	.short	0x9d
	.short	0x2c
	.short	0xc8
	.short	0xfb
	.short	0xe
	.short	0x15d
	.short	0x4e27
	.short	0xf3
	.short	0x72
	.short	0x36
	.short	0xc1
	.short	0xaf
	.short	0x11f
	.short	0x12c
	.short	0x119
	.short	0x4e30
	.short	0xe4
	.short	0xb9
	.short	0xc1
	.short	0xd3
	.short	0x13a
	.short	0x4e33
	.short	0x67
	.short	0xac
	.short	0x9a
	.short	0x2c
	.short	0x44
	.short	0xb3
	.short	0xfd
	.short	0xcf
	.short	0x4e35
	.short	0xb9
	.short	0xce
	.short	0xb8
	.short	0x62
	.short	0xa1
	.short	0x136
	.short	0x8f
	.short	0x4e37
	.short	0xe4
	.short	0x15
	.short	0xb4
	.short	0xfb
	.short	0x131
	.short	0x4e3b
	.short	0xaf
	.short	0xdb
	.short	0x44
	.short	0xe5
	.short	0x9d
	.short	0xe8
	.short	0xe
	.short	0x132
	.short	0x4e3d
	.short	0x30
	.short	0x32
	.short	0x24
	.short	0x74
	.short	0xcc
	.short	0x44
	.short	0xfb
	.short	0x4e40
	.short	0x44
	.short	0x32
	.short	0x30
	.short	0x24
	.short	0x85
	.short	0x5d
	.short	0xfb
	.short	0x4e45
	.short	0xb9
	.short	0x5f
	.short	0xaf
	.short	0xb4
	.short	0x32
	.short	0x150
	.short	0xf4
	.short	0x101
	.short	0x4e49
	.short	0x62
	.short	0xe4
	.short	0xb9
	.short	0x10
	.short	0x12
	.short	0xae
	.short	0x4e4b
	.short	0xe
	.short	0x4b
	.short	0xaf
	.short	0xeb
	.short	0xcc
	.short	0x113
	.short	0x4e4e
	.short	0xce
	.short	0x67
	.short	0x44
	.short	0x3c
	.short	0xaf
	.short	0xe6
	.short	0x71
	.short	0xe4
	.short	0x4e50
	.short	0xe2
	.short	0x67
	.short	0xca
	.short	0x144
	.short	0x4e52
	.short	0xb9
	.short	0x67
	.short	0xf6
	.short	0xe4
	.short	0xfb
	.short	0xfd
	.short	0x9d
	.short	0x4e54
	.short	0xb4
	.short	0xcc
	.short	0x5f
	.short	0x85
	.short	0xf4
	.short	0x112
	.short	0x4e56
	.short	0x5f
	.short	0x3c
	.short	0xc1
	.short	0x71
	.short	0xf8
	.short	0x5e
	.short	0xee
	.short	0x11f
	.short	0x4e58
	.short	0x9d
	.short	0xc1
	.short	0x60
	.short	0x44
	.short	0xb3
	.short	0xfb
	.short	0x117
	.short	0x109
	.short	0x4e5a
	.short	0x22
	.short	0xdb
	.short	0xf2
	.short	0x25
	.short	0x53
	.short	0x150
	.short	0x101
	.short	0x4e5c
	.short	0x36
	.short	0x96
	.short	0x3d
	.short	0x72
	.short	0xaa
	.short	0x15a
	.short	0x12d
	.short	0x4e5f
	.short	0xe3
	.short	0x70
	.short	0x11a
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0x4e62
	.short	0x71
	.short	0x60
	.short	0x1b
	.short	0xe3
	.short	0x109
	.short	0x44
	.short	0x9d
	.short	0x4e65
	.short	0xe
	.short	0xe3
	.short	0x73
	.short	0xeb
	.short	0x8d
	.short	0x113
	.short	0x159
	.short	0x4e68
	.short	0x3e
	.short	0xf3
	.short	0xe5
	.short	0x72
	.short	0xdb
	.short	0x6d
	.short	0x4e6a
	.short	0x5
	.short	0x9d
	.short	0x14f
	.short	0x4e6d
	.short	0xac
	.short	0x25
	.short	0x18
	.short	0x5f
	.short	0xcc
	.short	0x26
	.short	0x4e6f
	.short	0xdb
	.short	0xbb
	.short	0xf8
	.short	0x17
	.short	0x12c
	.short	0xd6
	.short	0xad
	.short	0x4e73
	.short	0xd3
	.short	0xc1
	.short	0x77
	.short	0x10
	.short	0x62
	.short	0xaf
	.short	0x129
	.short	0xae
	.short	0x4e74
	.short	0x62
	.short	0x30
	.short	0x72
	.short	0xb9
	.short	0xaf
	.short	0x11b
	.short	0x4e76
	.short	0x7a
	.short	0xc3
	.short	0x32
	.short	0x20
	.short	0x15
	.short	0xe3
	.short	0xfc
	.short	0x14d
	.short	0x4e78
	.short	0x72
	.short	0xd4
	.short	0x7a
	.short	0x11e
	.short	0xae
	.short	0x145
	.short	0x99
	.short	0x4e7a
	.short	0x3d
	.short	0x24
	.short	0x70
	.short	0xe5
	.short	0x67
	.short	0x14d
	.short	0x4e7c
	.short	0x95
	.short	0xc3
	.short	0x72
	.short	0x136
	.short	0x105
	.short	0x120
	.short	0x99
	.short	0x4e7f
	.short	0x9d
	.short	0xaf
	.short	0x99
	.short	0x14f
	.short	0x4e80
	.short	0x70
	.short	0x112
	.short	0x110
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0x4e82
	.short	0x5b
	.short	0x72
	.short	0x85
	.short	0xaf
	.short	0x15
	.short	0x11a
	.short	0xe
	.short	0x4e86
	.short	0xeb
	.short	0xec
	.short	0x73
	.short	0xf6
	.short	0xf4
	.short	0x113
	.short	0xae
	.short	0x4e88
	.short	0x9d
	.short	0xf6
	.short	0xbb
	.short	0x67
	.short	0x82
	.short	0xc3
	.short	0xe
	.short	0x4e8c
	.short	0xbb
	.short	0xde
	.short	0x22
	.short	0xae
	.short	0x109
	.short	0xd6
	.short	0xad
	.short	0xa4
	.short	0x4e8d
	.short	0x67
	.short	0x95
	.short	0x3c
	.short	0xc2
	.short	0xdc
	.short	0x105
	.short	0x4e8f
	.short	0xf2
	.short	0xb3
	.short	0x9d
	.short	0x44
	.short	0xde
	.short	0xe
	.short	0xae
	.short	0x132
	.short	0x4e91
	.short	0xd9
	.short	0x76
	.short	0xd7
	.short	0x138
	.short	0xa4
	.short	0x4e92
	.short	0xaf
	.short	0x5d
	.short	0x48
	.short	0x73
	.short	0x85
	.short	0x49
	.short	0x10b
	.short	0x4e93
	.short	0x17
	.short	0xc1
	.short	0x74
	.short	0xdb
	.short	0x32
	.short	0x44
	.short	0x132
	.short	0xa4
	.short	0x4e94
	.short	0xaf
	.short	0x3e
	.short	0xbe
	.short	0x32
	.short	0x96
	.short	0x52
	.short	0xe1
	.short	0x4e96
	.short	0x3c
	.short	0x72
	.short	0x38
	.short	0xd6
	.short	0x12c
	.short	0x4e9a
	.short	0xf8
	.short	0x5f
	.short	0x66
	.short	0xf4
	.short	0xfc
	.short	0x10f
	.short	0x4e9b
	.short	0x44
	.short	0xdb
	.short	0xe2
	.short	0xd
	.short	0xb3
	.short	0x71
	.short	0xcb
	.short	0x13e
	.short	0x4e9f
	.short	0x1f
	.short	0xaf
	.short	0xce
	.short	0xb9
	.short	0x4ea3
	.short	0xc1
	.short	0xa4
	.short	0x141
	.short	0x11f
	.short	0x15d
	.short	0xae
	.short	0xd6
	.short	0x20
	.short	0x4ea5
	.short	0xcc
	.short	0xaf
	.short	0xcb
	.short	0xae
	.short	0x141
	.short	0x111
	.short	0x4eaa
	.short	0x3d
	.short	0x3e
	.short	0x15
	.short	0x30
	.short	0x72
	.short	0x9d
	.short	0xbf
	.short	0x4eac
	.short	0x3d
	.short	0x3e
	.short	0xe5
	.short	0x5b
	.short	0xaf
	.short	0x11a
	.short	0x6d
	.short	0x4eae
	.short	0x12
	.short	0xe4
	.short	0xc1
	.short	0xd3
	.short	0xe1
	.short	0xae
	.short	0x4eaf
	.short	0x7a
	.short	0xcc
	.short	0x26
	.short	0xae
	.short	0x5a
	.short	0xa4
	.short	0x4eb3
	.short	0x71
	.short	0x36
	.short	0x72
	.short	0x30
	.short	0xe1
	.short	0x15d
	.short	0x4eb8
	.short	0x16
	.short	0x49
	.short	0x44
	.short	0xf6
	.short	0xaf
	.short	0x10b
	.short	0x113
	.short	0x140
	.short	0x4ebb
	.short	0x9a
	.short	0x62
	.short	0xb3
	.short	0x25
	.short	0xc1
	.short	0x157
	.short	0x150
	.short	0x132
	.short	0x4ebe
	.short	0xf2
	.short	0x25
	.short	0x38
	.short	0xf6
	.short	0x9d
	.short	0x12c
	.short	0x15a
	.short	0x151
	.short	0x4ec1
	.short	0x26
	.short	0xe4
	.short	0xa3
	.short	0x74
	.short	0xb3
	.short	0xa4
	.short	0x10f
	.short	0x112
	.short	0x4ec3
	.short	0x77
	.short	0x30
	.short	0xb9
	.short	0x11
	.short	0x12
	.short	0x8f
	.short	0x129
	.short	0x4ec5
	.short	0x3c
	.short	0x75
	.short	0x13e
	.short	0x4ec7
	.short	0x3c
	.short	0x32
	.short	0x31
	.short	0xe2
	.short	0xe4
	.short	0x144
	.short	0x4eca
	.short	0xaf
	.short	0x67
	.short	0x85
	.short	0x4ecc
	.short	0xb3
	.short	0x75
	.short	0xd9
	.short	0xe3
	.short	0x3
	.short	0x111
	.short	0x10c
	.short	0x4ecd
	.short	0xd9
	.short	0x76
	.short	0x85
	.short	0xbb
	.short	0x96
	.short	0x66
	.short	0x111
	.short	0xa4
	.short	0x4ece
	.short	0xc3
	.short	0xd9
	.short	0xb9
	.short	0x111
	.short	0x139
	.short	0x4ecf
	.short	0xd9
	.short	0x77
	.short	0x40
	.short	0xc1
	.short	0xf8
	.short	0xa4
	.short	0xf4
	.short	0x4ed1
	.short	0x72
	.short	0x41
	.short	0x62
	.short	0xb9
	.short	0xd3
	.short	0xf4
	.short	0x129
	.short	0x11f
	.short	0x4ed3
	.short	0x24
	.short	0x22
	.short	0xdb
	.short	0x67
	.short	0x73
	.short	0x13c
	.short	0x10c
	.short	0x4ed7
	.short	0x71
	.short	0xd9
	.short	0x85
	.short	0xf8
	.short	0xbb
	.short	0xc3
	.short	0x30
	.short	0xa4
	.short	0x4ed9
	.short	0x78
	.short	0x4edb
	.short	0x5d
	.short	0xe3
	.short	0x26
	.short	0x73
	.short	0x85
	.short	0x10e
	.short	0xf4
	.short	0x4ede
	.short	0x44
	.short	0x67
	.short	0xe4
	.short	0x61
	.short	0xb4
	.short	0x15
	.short	0x3
	.short	0xfb
	.short	0x4edf
	.short	0x140
	.short	0xe3
	.short	0x49
	.short	0x10b
	.short	0xae
	.short	0x10e
	.short	0x4ee1
	.short	0x12
	.short	0xb3
	.short	0x8d
	.short	0x144
	.short	0x13e
	.short	0x4ee2
	.short	0x22
	.short	0xf6
	.short	0xdb
	.short	0xae
	.short	0x12c
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x4ee6
	.short	0x12
	.short	0x41
	.short	0x77
	.short	0x11
	.short	0x8f
	.short	0x6d
	.short	0x129
	.short	0xc3
	.short	0x4ee8
	.short	0x67
	.short	0xc2
	.short	0xf4
	.short	0x11e
	.short	0x4eeb
	.short	0x24
	.short	0x85
	.short	0xc1
	.short	0xf8
	.short	0xfb
	.short	0xf4
	.short	0x111
	.short	0x115
	.short	0x4eec
	.short	0x73
	.short	0x2a
	.short	0xaf
	.short	0x81
	.short	0x44
	.short	0x148
	.short	0x4eee
	.short	0x75
	.short	0xf6
	.short	0x9d
	.short	0x2c
	.short	0x1d
	.short	0x136
	.short	0xae
	.short	0x4eef
	.short	0xe8
	.short	0x11
	.short	0xd
	.short	0x44
	.short	0x148
	.short	0x4ef1
	.short	0x76
	.short	0xb9
	.short	0x73
	.short	0xd9
	.short	0xf2
	.short	0xd7
	.short	0xad
	.short	0x109
	.short	0x4ef3
	.short	0xaf
	.short	0x72
	.short	0x3d
	.short	0x30
	.short	0x136
	.short	0x4ef5
	.short	0xe6
	.short	0x4ef6
	.short	0x6a
	.short	0x75
	.short	0xaf
	.short	0xce
	.short	0x4ef7
	.short	0x44
	.short	0xb4
	.short	0xc1
	.short	0x73
	.short	0x2c
	.short	0x132
	.short	0xfc
	.short	0x4ef8
	.short	0xf2
	.short	0x24
	.short	0x45
	.short	0x44
	.short	0xe8
	.short	0x139
	.short	0x119
	.short	0xd6
	.short	0x4efa
	.short	0x97
	.short	0x101
	.short	0x4efc
	.short	0x24
	.short	0x2c
	.short	0x22
	.short	0x9d
	.short	0xf6
	.short	0x155
	.short	0x14d
	.short	0x26
	.short	0x4efe
	.short	0x9d
	.short	0x67
	.short	0x36
	.short	0x85
	.short	0x70
	.short	0x113
	.short	0x6d
	.short	0x14d
	.short	0x4eff
	.short	0x3e
	.short	0xbe
	.short	0x30
	.short	0x72
	.short	0x67
	.short	0x56
	.short	0x15e
	.short	0x4f01
	.short	0x3e
	.short	0x62
	.short	0xf8
	.short	0x96
	.short	0xe5
	.short	0x12d
	.short	0x4f02
	.short	0xef
	.short	0x38
	.short	0x72
	.short	0x15
	.short	0x12c
	.short	0x9d
	.short	0x4f03
	.short	0x41
	.short	0xe4
	.short	0x12
	.short	0x8f
	.short	0xae
	.short	0x4f04
	.short	0x53
	.short	0x63
	.short	0xe4
	.short	0x44
	.short	0xb4
	.short	0xb3
	.short	0xfb
	.short	0x105
	.short	0x4f07
	.short	0x74
	.short	0x22
	.short	0xf6
	.short	0xad
	.short	0x44
	.short	0x5a
	.short	0x4f0a
	.short	0xb4
	.short	0x32
	.short	0x2c
	.short	0xcf
	.short	0xf4
	.short	0x146
	.short	0x4f0c
	.short	0xe5
	.short	0x88
	.short	0xb7
	.short	0xaa
	.short	0x10e
	.short	0x4f0e
	.short	0x60
	.short	0xf4
	.short	0xfc
	.short	0x111
	.short	0x8
	.short	0x4f0f
	.short	0x2
	.short	0x70
	.short	0x1b
	.short	0x60
	.short	0xee
	.short	0x7
	.short	0x8
	.short	0x4f10
	.short	0x2
	.short	0x5
	.short	0x70
	.short	0x67
	.short	0xee
	.short	0x9
	.short	0x4f11
	.short	0xd9
	.short	0xb3
	.short	0x45
	.short	0xcb
	.short	0xf4
	.short	0xae
	.short	0x10e
	.short	0xd6
	.short	0x4f16
	.short	0xe4
	.short	0x17
	.short	0xc8
	.short	0x74
	.short	0xf6
	.short	0x15d
	.short	0xae
	.short	0x4f35
	.short	0xf2
	.short	0x12c
	.short	0x11b
	.short	0x49
	.short	0xe1
	.short	0x132
	.short	0x4f38
	.short	0x44
	.short	0xb3
	.short	0xcb
	.short	0xcf
	.short	0x9d
	.short	0x109
	.short	0x4f3b
	.short	0x11f
	.short	0xfd
	.short	0xae
	.short	0x17
	.short	0x12d
	.short	0xf3
	.short	0x4f3e
	.short	0x136
	.short	0x131
	.short	0x157
	.short	0x2b
	.short	0x119
	.short	0x4f40
	.short	0xcc
	.short	0xe4
	.short	0xa4
	.short	0x141
	.short	0x10f
	.short	0x4f47
	.short	0xeb
	.short	0x4b
	.short	0xe6
	.short	0x49
	.short	0xaf
	.short	0x37
	.short	0x4f4a
	.short	0x49
	.short	0x85
	.short	0x62
	.short	0xd
	.short	0x24
	.short	0xce
	.short	0x4f4d
	.short	0xcb
	.short	0xb9
	.short	0x10
	.short	0x13e
	.short	0x4f50
	.short	0xe4
	.short	0x30
	.short	0x11f
	.short	0x77
	.short	0x63
	.short	0x8f
	.short	0x4f52
	.short	0x139
	.short	0xcf
	.short	0xcc
	.short	0xce
	.short	0x10e
	.short	0x4f54
	.short	0xe3
	.short	0x9d
	.short	0x112
	.short	0x32
	.short	0xe2
	.short	0x111
	.short	0x10f
	.short	0x109
	.short	0x4f55
	.short	0x36
	.short	0xef
	.short	0x61
	.short	0x10
	.short	0x15a
	.short	0x4f57
	.short	0xc1
	.short	0x155
	.short	0x3c
	.short	0x38
	.short	0xaa
	.short	0x4f59
	.short	0x26
	.short	0x25
	.short	0xcf
	.short	0xad
	.short	0xd6
	.short	0xae
	.short	0x5a
	.short	0x141
	.short	0x4f5b
	.short	0x10e
	.short	0xf4
	.short	0xfd
	.short	0x139
	.short	0x111
	.short	0xe2
	.short	0xa4
	.short	0x141
	.short	0x4f5d
	.short	0x32
	.short	0x115
	.short	0x10f
	.short	0x4f60
	.short	0xde
	.short	0xcd
	.short	0x99
	.short	0x4f61
	.short	0x11c
	.short	0xcb
	.short	0xd6
	.short	0x119
	.short	0x4f62
	.short	0xf4
	.short	0x69
	.short	0xec
	.short	0x4f63
	.short	0x25
	.short	0xfa
	.short	0xd1
	.short	0x4f65
	.short	0x96
	.short	0x30
	.short	0x15a
	.short	0x12c
	.short	0x4f66
	.short	0x12c
	.short	0x11b
	.short	0x22
	.short	0xf6
	.short	0x4f68
	.short	0xf3
	.short	0xe1
	.short	0x12c
	.short	0x5f
	.short	0x71
	.short	0x6d
	.short	0x4f6a
	.short	0x38
	.short	0x26
	.short	0x25
	.short	0x4f6c
	.short	0x74
	.short	0x62
	.short	0x10
	.short	0x4f6f
	.short	0xb9
	.short	0xc5
	.short	0xc1
	.short	0x10e
	.short	0xee
	.short	0x117
	.short	0xdf
	.short	0x44
	.short	0x4f71
	.short	0xf2
	.short	0x1d
	.short	0xfd
	.short	0xae
	.short	0x81
	.short	0x4f73
	.short	0x150
	.short	0xb8
	.short	0x22
	.short	0xcd
	.short	0x6f
	.short	0x17
	.short	0x4f75
	.short	0x15a
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x119
	.short	0x9d
	.short	0xae
	.short	0x5a
	.short	0x4f78
	.short	0x140
	.short	0x33
	.short	0x12a
	.short	0xdf
	.short	0x44
	.short	0x4f7a
	.short	0x14f
	.short	0xbf
	.short	0x4f7e
	.short	0xe3
	.short	0x2f
	.short	0x11f
	.short	0x15
	.short	0x141
	.short	0x4f7f
	.short	0xf8
	.short	0x146
	.short	0xa4
	.short	0x10f
	.short	0x4f81
	.short	0xa4
	.short	0x111
	.short	0x4f82
	.short	0xa4
	.short	0x111
	.short	0x4f83
	.short	0xe
	.short	0xce
	.short	0x131
	.short	0xf4
	.short	0xf6
	.short	0x141
	.short	0x4f84
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0xc1
	.short	0xfc
	.short	0xe2
	.short	0xdf
	.short	0x4f86
	.short	0x61
	.short	0x72
	.short	0xe4
	.short	0x63
	.short	0x4f89
	.short	0x11e
	.short	0xc2
	.short	0xdc
	.short	0x120
	.short	0x106
	.short	0xb9
	.short	0x4f8b
	.short	0xbf
	.short	0xeb
	.short	0x2a
	.short	0xb2
	.short	0x4f8c
	.short	0xe4
	.short	0xa3
	.short	0x22
	.short	0xad
	.short	0x132
	.short	0xae
	.short	0xd6
	.short	0x4f8f
	.short	0x8a
	.short	0x97
	.short	0x7b
	.short	0xdc
	.short	0x4f91
	.short	0x1d
	.short	0x15
	.short	0xd
	.short	0x49
	.short	0x10b
	.short	0x4f92
	.short	0x24
	.short	0xad
	.short	0xcf
	.short	0x146
	.short	0x109
	.short	0x4f95
	.short	0x11f
	.short	0x12c
	.short	0x22
	.short	0x30
	.short	0x70
	.short	0x6d
	.short	0x4f98
	.short	0xe2
	.short	0xb9
	.short	0x26
	.short	0x115
	.short	0xae
	.short	0xa4
	.short	0x4f99
	.short	0x32
	.short	0xc2
	.short	0xc1
	.short	0x136
	.short	0x11e
	.short	0x4f9b
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x22
	.short	0x4f9c
	.short	0xaf
	.short	0x18
	.short	0xd
	.short	0x44
	.short	0x2e
	.short	0xae
	.short	0x4f9d
	.short	0xde
	.short	0x82
	.short	0x15a
	.short	0x85
	.short	0xd6
	.short	0x9d
	.short	0x4f9e
	.short	0x11b
	.short	0x22
	.short	0x17
	.short	0x109
	.short	0x4fa1
	.short	0xf8
	.short	0xf4
	.short	0x4fa2
	.short	0xe2
	.short	0x13e
	.short	0x10f
	.short	0x4fa3
	.short	0xe2
	.short	0x13e
	.short	0x4a
	.short	0x4fa4
	.short	0x70
	.short	0x69
	.short	0xf3
	.short	0x9d
	.short	0x4fa6
	.short	0xe5
	.short	0x11a
	.short	0xe
	.short	0x9d
	.short	0x4fa8
	.short	0x32
	.short	0x105
	.short	0xd4
	.short	0x106
	.short	0xc2
	.short	0x4fab
	.short	0x38
	.short	0x25
	.short	0x52
	.short	0xef
	.short	0x15d
	.short	0x4fbb
	.short	0x32
	.short	0xae
	.short	0x5f
	.short	0x8a
	.short	0xffff
	.size	 gEggMoves,2278
	.align	2, 0
	.type	 sDaycareLevelMenuWindowTemplate,object
	.size	 sDaycareLevelMenuWindowTemplate,8
sDaycareLevelMenuWindowTemplate:
	.byte	0x0
	.byte	0xf
	.byte	0x1
	.byte	0xe
	.byte	0x6
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sLevelMenuItems,object
sLevelMenuItems:
	.word	gText_ExpandedPlaceholder_Empty
	.word	0x0
	.word	gText_ExpandedPlaceholder_Empty
	.word	0x1
	.word	gText_Exit
	.word	0x5
	.size	 sLevelMenuItems,24
	.align	2, 0
	.type	 sDaycareListMenuLevelTemplate,object
	.size	 sDaycareListMenuLevelTemplate,24
sDaycareListMenuLevelTemplate:
	.word	sLevelMenuItems
	.word	ListMenuDefaultCursorMoveFunc
	.word	DaycarePrintMonInfo
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x1
	.byte	0x1
	.align	2, 0
	.type	 sCompatibilityMessages,object
sCompatibilityMessages:
	.word	gDaycareText_GetAlongVeryWell
	.word	gDaycareText_GetAlong
	.word	gDaycareText_DontLikeOther
	.word	gDaycareText_PlayOther
	.size	 sCompatibilityMessages,16
	.type	 sJapaneseEggNickname,object
sJapaneseEggNickname:
	.byte	0x60
	.byte	0x6f
	.byte	0x8b
	.byte	0xff
	.size	 sJapaneseEggNickname,4
.text
	.align	2, 0
	.globl	GetMonNickname2
	.type	 GetMonNickname2,function
	.thumb_func
GetMonNickname2:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r4, r1, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy10
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 GetMonNickname2,.Lfe1-GetMonNickname2
	.align	2, 0
	.globl	GetBoxMonNickname
	.type	 GetBoxMonNickname,function
	.thumb_func
GetBoxMonNickname:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r4, r1, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetBoxMonData
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy10
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetBoxMonNickname,.Lfe2-GetBoxMonNickname
	.align	2, 0
	.globl	CountPokemonInDaycare
	.type	 CountPokemonInDaycare,function
	.thumb_func
CountPokemonInDaycare:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r5, #0x0
	mov	r4, #0x0
.L8:
	mov	r0, #0x8c
	mul	r0, r0, r4
	add	r0, r6, r0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L7	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L7:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L8	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 CountPokemonInDaycare,.Lfe3-CountPokemonInDaycare
	.align	2, 0
	.globl	InitDaycareMailRecordMixing
	.type	 InitDaycareMailRecordMixing,function
	.thumb_func
InitDaycareMailRecordMixing:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	mov	sl, r1
	mov	r7, #0x0
	mov	r5, #0x0
	mov	r6, sl
	add	r6, r6, #0x74
	mov	r0, #0x1
	mov	r8, r0
.L15:
	mov	r0, #0x8c
	mul	r0, r0, r5
	mov	r1, r9
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L16	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L17	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r6, r0
	b	.L21
.L17:
.L16:
	lsl	r0, r5, #0x1
	add	r0, r6, r0
	mov	r1, r8
.L21:
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L15	@cond_branch
	mov	r0, sl
	str	r7, [r0, #0x70]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 InitDaycareMailRecordMixing,.Lfe4-InitDaycareMailRecordMixing
	.align	2, 0
	.type	 Daycare_FindEmptySpot,function
	.thumb_func
Daycare_FindEmptySpot:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r4, #0x0
.L26:
	mov	r0, #0x8c
	mul	r0, r0, r4
	add	r0, r5, r0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L25	@cond_branch
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	b	.L29
.L25:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L26	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L29:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 Daycare_FindEmptySpot,.Lfe5-Daycare_FindEmptySpot
	.align	2, 0
	.type	 StorePokemonInDaycare,function
	.thumb_func
StorePokemonInDaycare:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	bl	MonHasMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L31	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x74
	ldr	r1, .L32
	ldr	r1, [r1]
	bl	StringCopy
	add	r4, r5, #0
	add	r4, r4, #0x7c
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GetMonNickname2
	add	r0, r4, #0
	bl	StripExtCtrlCodes
	add	r4, r4, #0xb
	ldrb	r1, [r4]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4]
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetMonData
	lsl	r0, r0, #0x4
	ldrb	r2, [r4]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4]
	add	r0, r6, #0
	mov	r1, #0x40
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L32+0x4
	ldr	r1, [r1]
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	add	r0, r5, #0
	add	r0, r0, #0x50
	ldr	r2, .L32+0x8
	add	r1, r1, r2
	ldmia	r1!, {r2, r3, r4}
	stmia	r0!, {r2, r3, r4}
	ldmia	r1!, {r2, r3, r4}
	stmia	r0!, {r2, r3, r4}
	ldmia	r1!, {r2, r3, r4}
	stmia	r0!, {r2, r3, r4}
	add	r0, r6, #0
	bl	TakeMailFromMon
.L31:
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r5, #0
	bl	BoxMonRestorePP
	add	r1, r5, #0
	add	r1, r1, #0x88
	mov	r0, #0x0
	str	r0, [r1]
	add	r0, r6, #0
	bl	ZeroMonData
	bl	CompactPartySlots
	bl	CalculatePlayerPartyCount
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
	.word	0x2be0
.Lfe6:
	.size	 StorePokemonInDaycare,.Lfe6-StorePokemonInDaycare
	.align	2, 0
	.type	 StorePokemonInEmptyDaycareSlot,function
	.thumb_func
StorePokemonInEmptyDaycareSlot:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	bl	Daycare_FindEmptySpot
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x8c
	mul	r0, r0, r1
	add	r4, r4, r0
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StorePokemonInDaycare
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 StorePokemonInEmptyDaycareSlot,.Lfe7-StorePokemonInEmptyDaycareSlot
	.align	2, 0
	.globl	StoreSelectedPokemonInDaycare
	.type	 StoreSelectedPokemonInDaycare,function
	.thumb_func
StoreSelectedPokemonInDaycare:
	push	{lr}
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L36
	add	r0, r0, r1
	ldr	r1, .L36+0x4
	ldr	r1, [r1]
	ldr	r2, .L36+0x8
	add	r1, r1, r2
	bl	StorePokemonInEmptyDaycareSlot
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gPlayerParty
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe8:
	.size	 StoreSelectedPokemonInDaycare,.Lfe8-StoreSelectedPokemonInDaycare
	.align	2, 0
	.type	 ShiftDaycareSlots,function
	.thumb_func
ShiftDaycareSlots:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r5, #0
	add	r4, r4, #0x8c
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L39	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	add	r6, r0, #0
	cmp	r6, #0
	bne	.L39	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r4, #0
	bl	ZeroBoxMonData
	add	r4, r4, #0x50
	add	r0, r5, #0
	add	r0, r0, #0x50
	add	r1, r4, #0
	mov	r2, #0x38
	bl	memcpy
	add	r2, r5, #0
	add	r2, r2, #0x88
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	add	r1, r5, r0
	ldr	r0, [r1]
	str	r0, [r2]
	str	r6, [r1]
	add	r0, r4, #0
	bl	ClearDaycareMonMail
.L39:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 ShiftDaycareSlots,.Lfe9-ShiftDaycareSlots
	.align	2, 0
	.type	 ApplyDaycareExperience,function
	.thumb_func
ApplyDaycareExperience:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	mov	r5, #0x0
	ldr	r7, .L53
.L44:
	add	r0, r4, #0
	bl	TryIncrementMonLevel
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L42	@cond_branch
	mov	r6, #0x1
	add	r5, r5, #0x1
	b	.L46
.L54:
	.align	2, 0
.L53:
	.word	0xffff
.L48:
	mov	r6, #0x0
	cmp	r0, r7
	bne	.L46	@cond_branch
	ldr	r0, .L55
	ldrh	r1, [r0]
	add	r0, r4, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
.L46:
	add	r0, r4, #0
	add	r1, r6, #0
	bl	MonTryLearningNewMove
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L48	@cond_branch
	cmp	r5, #0x63
	ble	.L44	@cond_branch
.L42:
	add	r0, r4, #0
	bl	CalculateMonStats
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gMoveToLearn
.Lfe10:
	.size	 ApplyDaycareExperience,.Lfe10-ApplyDaycareExperience
	.align	2, 0
	.type	 TakeSelectedPokemonFromDaycare,function
	.thumb_func
TakeSelectedPokemonFromDaycare:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x68
	add	r5, r0, #0
	ldr	r1, .L60
	bl	GetBoxMonNickname
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	add	r0, r5, #0
	mov	r1, sp
	bl	BoxMonToMon
	mov	r0, sp
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x64
	beq	.L58	@cond_branch
	mov	r0, sp
	mov	r1, #0x19
	bl	GetMonData
	add	r1, r5, #0
	add	r1, r1, #0x88
	ldr	r1, [r1]
	add	r0, r0, r1
	str	r0, [sp, #0x64]
	add	r2, sp, #0x64
	mov	r0, sp
	mov	r1, #0x19
	bl	SetMonData
	mov	r0, sp
	bl	ApplyDaycareExperience
.L58:
	ldr	r0, .L60+0x4
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r6, r0, r1
	add	r0, r6, #0
	mov	r1, sp
	mov	r2, #0x64
	bl	memcpy
	add	r0, r5, #0
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L59	@cond_branch
	add	r4, r5, #0
	add	r4, r4, #0x50
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GiveMailToMon2
	add	r0, r4, #0
	bl	ClearDaycareMonMail
.L59:
	add	r0, r5, #0
	bl	ZeroBoxMonData
	add	r1, r5, #0
	add	r1, r1, #0x88
	mov	r0, #0x0
	str	r0, [r1]
	bl	CompactPartySlots
	bl	CalculatePlayerPartyCount
	add	r0, r7, #0
	add	sp, sp, #0x68
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L61:
	.align	2, 0
.L60:
	.word	gStringVar1
	.word	gPlayerParty
.Lfe11:
	.size	 TakeSelectedPokemonFromDaycare,.Lfe11-TakeSelectedPokemonFromDaycare
	.align	2, 0
	.type	 TakeSelectedPokemonMonFromDaycareShiftSlots,function
	.thumb_func
TakeSelectedPokemonMonFromDaycareShiftSlots:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r5, r0
	bl	TakeSelectedPokemonFromDaycare
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r5, #0
	bl	ShiftDaycareSlots
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 TakeSelectedPokemonMonFromDaycareShiftSlots,.Lfe12-TakeSelectedPokemonMonFromDaycareShiftSlots
	.align	2, 0
	.globl	TakePokemonFromDaycare
	.type	 TakePokemonFromDaycare,function
	.thumb_func
TakePokemonFromDaycare:
	push	{lr}
	ldr	r0, .L64
	ldr	r0, [r0]
	ldr	r1, .L64+0x4
	add	r0, r0, r1
	ldr	r1, .L64+0x8
	ldrb	r1, [r1]
	bl	TakeSelectedPokemonMonFromDaycareShiftSlots
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L65:
	.align	2, 0
.L64:
	.word	gSaveBlock1Ptr
	.word	0x3030
	.word	gSpecialVar_0x8004
.Lfe13:
	.size	 TakePokemonFromDaycare,.Lfe13-TakePokemonFromDaycare
	.align	2, 0
	.type	 GetLevelAfterDaycareSteps,function
	.thumb_func
GetLevelAfterDaycareSteps:
	push	{r4, r5, lr}
	add	sp, sp, #-0x54
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r4, #0
	mov	r1, #0x19
	bl	GetBoxMonData
	add	r0, r0, r5
	str	r0, [sp, #0x50]
	add	r2, sp, #0x50
	mov	r0, sp
	mov	r1, #0x19
	bl	SetBoxMonData
	mov	r0, sp
	bl	GetLevelFromBoxMonExp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x54
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 GetLevelAfterDaycareSteps,.Lfe14-GetLevelAfterDaycareSteps
	.align	2, 0
	.type	 GetNumLevelsGainedFromSteps,function
	.thumb_func
GetNumLevelsGainedFromSteps:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	GetLevelFromBoxMonExp
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	add	r0, r0, #0x88
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	GetLevelAfterDaycareSteps
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 GetNumLevelsGainedFromSteps,.Lfe15-GetNumLevelsGainedFromSteps
	.align	2, 0
	.type	 GetNumLevelsGainedForDaycareMon,function
	.thumb_func
GetNumLevelsGainedForDaycareMon:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	GetNumLevelsGainedFromSteps
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L69
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L69+0x4
	add	r0, r5, #0
	bl	GetBoxMonNickname
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L70:
	.align	2, 0
.L69:
	.word	gStringVar2
	.word	gStringVar1
.Lfe16:
	.size	 GetNumLevelsGainedForDaycareMon,.Lfe16-GetNumLevelsGainedForDaycareMon
	.align	2, 0
	.type	 GetDaycareCostForSelectedMon,function
	.thumb_func
GetDaycareCostForSelectedMon:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	GetNumLevelsGainedFromSteps
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L72
	add	r0, r5, #0
	bl	GetBoxMonNickname
	mov	r0, #0x64
	mul	r4, r4, r0
	add	r4, r4, #0x64
	ldr	r0, .L72+0x4
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L73:
	.align	2, 0
.L72:
	.word	gStringVar1
	.word	gStringVar2
.Lfe17:
	.size	 GetDaycareCostForSelectedMon,.Lfe17-GetDaycareCostForSelectedMon
	.align	2, 0
	.type	 GetDaycareCostForMon,function
	.thumb_func
GetDaycareCostForMon:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x8c
	mul	r1, r1, r2
	add	r0, r0, r1
	bl	GetDaycareCostForSelectedMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 GetDaycareCostForMon,.Lfe18-GetDaycareCostForMon
	.align	2, 0
	.globl	GetDaycareCost
	.type	 GetDaycareCost,function
	.thumb_func
GetDaycareCost:
	push	{lr}
	ldr	r0, .L76
	ldr	r0, [r0]
	ldr	r1, .L76+0x4
	add	r0, r0, r1
	ldr	r1, .L76+0x8
	ldrb	r1, [r1]
	bl	GetDaycareCostForMon
	ldr	r1, .L76+0xc
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gSaveBlock1Ptr
	.word	0x3030
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.Lfe19:
	.size	 GetDaycareCost,.Lfe19-GetDaycareCost
	.align	2, 0
	.type	 Debug_AddDaycareSteps,function
	.thumb_func
Debug_AddDaycareSteps:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L79
	ldr	r2, [r1]
	ldr	r1, .L79+0x4
	add	r3, r2, r1
	ldr	r1, [r3]
	add	r1, r1, r0
	str	r1, [r3]
	ldr	r1, .L79+0x8
	add	r2, r2, r1
	ldr	r1, [r2]
	add	r1, r1, r0
	str	r1, [r2]
	bx	lr
.L80:
	.align	2, 0
.L79:
	.word	gSaveBlock1Ptr
	.word	0x30b8
	.word	0x3144
.Lfe20:
	.size	 Debug_AddDaycareSteps,.Lfe20-Debug_AddDaycareSteps
	.align	2, 0
	.globl	GetNumLevelsGainedFromDaycare
	.type	 GetNumLevelsGainedFromDaycare,function
	.thumb_func
GetNumLevelsGainedFromDaycare:
	push	{r4, r5, r6, lr}
	ldr	r6, .L84
	ldr	r5, .L84+0x4
	ldrh	r0, [r5]
	mov	r4, #0x8c
	mov	r1, r0
	mul	r1, r1, r4
	ldr	r0, .L84+0x8
	add	r1, r1, r0
	ldr	r0, [r6]
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L82	@cond_branch
	mov	r0, #0x0
	b	.L83
.L85:
	.align	2, 0
.L84:
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8004
	.word	0x3030
.L82:
	ldrh	r0, [r5]
	mov	r1, r0
	mul	r1, r1, r4
	ldr	r0, .L86
	add	r1, r1, r0
	ldr	r0, [r6]
	add	r0, r0, r1
	bl	GetNumLevelsGainedForDaycareMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L83:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L87:
	.align	2, 0
.L86:
	.word	0x3030
.Lfe21:
	.size	 GetNumLevelsGainedFromDaycare,.Lfe21-GetNumLevelsGainedFromDaycare
	.align	2, 0
	.type	 ClearDaycareMonMail,function
	.thumb_func
ClearDaycareMonMail:
	push	{lr}
	mov	r3, #0x0
	mov	r2, #0x7
	add	r1, r0, #0
	add	r1, r1, #0x2b
.L92:
	strb	r3, [r1]
	sub	r1, r1, #0x1
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L92	@cond_branch
	add	r2, r0, #0
	add	r2, r2, #0x2c
	mov	r3, #0x0
	add	r1, r0, #0
	add	r1, r1, #0x36
.L97:
	strb	r3, [r1]
	sub	r1, r1, #0x1
	cmp	r1, r2
	bge	.L97	@cond_branch
	bl	ClearMailStruct
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 ClearDaycareMonMail,.Lfe22-ClearDaycareMonMail
	.align	2, 0
	.type	 ClearDaycareMon,function
	.thumb_func
ClearDaycareMon:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ZeroBoxMonData
	add	r1, r4, #0
	add	r1, r1, #0x88
	mov	r0, #0x0
	str	r0, [r1]
	add	r4, r4, #0x50
	add	r0, r4, #0
	bl	ClearDaycareMonMail
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 ClearDaycareMon,.Lfe23-ClearDaycareMon
	.align	2, 0
	.type	 ClearAllDaycareData,function
	.thumb_func
ClearAllDaycareData:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	mov	r6, #0x8c
.L104:
	mov	r0, r4
	mul	r0, r0, r6
	add	r0, r5, r0
	bl	ClearDaycareMon
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L104	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	mov	r1, #0x0
	str	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r5, r2
	strb	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 ClearAllDaycareData,.Lfe24-ClearAllDaycareData
	.align	2, 0
	.type	 GetEggSpecies,function
	.thumb_func
GetEggSpecies:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r0, #0x0
	mov	r8, r0
	ldr	r0, .L125
	mov	ip, r0
.L110:
	mov	r7, #0x0
	mov	r6, #0x1
	mov	r4, #0x80
	lsl	r4, r4, #0x9
	mov	r5, #0x28
	mov	r3, ip
	add	r3, r3, #0x28
.L114:
	mov	r1, #0x0
	ldrh	r0, [r3, #0x4]
	cmp	r0, r2
	bne	.L117	@cond_branch
	lsr	r2, r4, #0x10
	b	.L112
.L126:
	.align	2, 0
.L125:
	.word	gEvolutionTable
.L117:
	add	r1, r1, #0x1
	cmp	r1, #0x4
	bgt	.L116	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r5
	add	r0, r0, ip
	ldrh	r0, [r0, #0x4]
	cmp	r0, r2
	bne	.L117	@cond_branch
	lsr	r2, r4, #0x10
	mov	r7, #0x1
.L116:
	cmp	r7, #0
	bne	.L112	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	add	r4, r4, r0
	add	r5, r5, #0x28
	add	r3, r3, #0x28
	add	r6, r6, #0x1
	ldr	r0, .L127
	cmp	r6, r0
	ble	.L114	@cond_branch
.L112:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r6, r0
	beq	.L108	@cond_branch
	mov	r0, #0x1
	add	r8, r8, r0
	mov	r0, r8
	cmp	r0, #0x4
	ble	.L110	@cond_branch
.L108:
	add	r0, r2, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L128:
	.align	2, 0
.L127:
	.word	0x19b
.Lfe25:
	.size	 GetEggSpecies,.Lfe25-GetEggSpecies
	.align	2, 0
	.type	 GetParentToInheritNature,function
	.thumb_func
GetParentToInheritNature:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	mov	r7, #0x1
	neg	r7, r7
	mov	r4, #0x0
.L133:
	mov	r0, #0x8c
	mul	r0, r0, r4
	add	r0, r6, r0
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	bne	.L132	@cond_branch
	add	r7, r4, #0
.L132:
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L133	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x0
.L139:
	mov	r0, #0x8c
	mul	r0, r0, r4
	add	r0, r6, r0
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r1, r4, #0x2
	add	r1, r1, sp
	str	r0, [r1]
	cmp	r0, #0x84
	bne	.L138	@cond_branch
	add	r5, r5, #0x1
	add	r7, r4, #0
.L138:
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L139	@cond_branch
	cmp	r5, #0x2
	bne	.L142	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	ldr	r1, .L148
	mov	r7, #0x1
	cmp	r0, r1
	bls	.L142	@cond_branch
	mov	r7, #0x0
.L142:
	mov	r0, #0x8c
	mul	r0, r0, r7
	add	r0, r6, r0
	mov	r1, #0xc
	bl	GetBoxMonData
	cmp	r0, #0xc3
	bne	.L146	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	ldr	r1, .L148
	cmp	r0, r1
	bls	.L145	@cond_branch
.L146:
	mov	r0, #0x1
	neg	r0, r0
	b	.L147
.L149:
	.align	2, 0
.L148:
	.word	0x7ffe0000
.L145:
	add	r0, r7, #0
.L147:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 GetParentToInheritNature,.Lfe26-GetParentToInheritNature
	.align	2, 0
	.type	 _TriggerPendingDaycareEgg,function
	.thumb_func
_TriggerPendingDaycareEgg:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r6, #0x0
	ldr	r0, .L159
	ldrh	r0, [r0, #0x24]
	bl	SeedRng2
	add	r0, r5, #0
	bl	GetParentToInheritNature
	add	r1, r0, #0
	cmp	r1, #0
	bge	.L151	@cond_branch
	bl	Random2
	add	r4, r0, #0
	bl	Random
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r5, r5, r1
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L159+0x4
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r0, r0, #0x1
	orr	r4, r4, r0
	str	r4, [r5]
	b	.L152
.L160:
	.align	2, 0
.L159:
	.word	gMain
	.word	0xfffe
.L151:
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r5, r0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetBoxMonData
	bl	GetNatureFromPersonality
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L153:
	bl	Random2
	add	r4, r0, #0
	bl	Random
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	orr	r4, r4, r0
	add	r0, r4, #0
	bl	GetNatureFromPersonality
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r7, r0
	bne	.L156	@cond_branch
	cmp	r4, #0
	bne	.L154	@cond_branch
.L156:
	add	r6, r6, #0x1
	mov	r0, #0x96
	lsl	r0, r0, #0x4
	cmp	r6, r0
	ble	.L153	@cond_branch
.L154:
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	str	r4, [r0]
.L152:
	mov	r0, #0x86
	bl	FlagSet
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 _TriggerPendingDaycareEgg,.Lfe27-_TriggerPendingDaycareEgg
	.align	2, 0
	.type	 _TriggerPendingDaycareMaleEgg,function
	.thumb_func
_TriggerPendingDaycareMaleEgg:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Random
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	add	r1, r2, #0
	orr	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [r4]
	mov	r0, #0x86
	bl	FlagSet
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 _TriggerPendingDaycareMaleEgg,.Lfe28-_TriggerPendingDaycareMaleEgg
	.align	2, 0
	.globl	TriggerPendingDaycareEgg
	.type	 TriggerPendingDaycareEgg,function
	.thumb_func
TriggerPendingDaycareEgg:
	push	{lr}
	ldr	r0, .L163
	ldr	r0, [r0]
	ldr	r1, .L163+0x4
	add	r0, r0, r1
	bl	_TriggerPendingDaycareEgg
	pop	{r0}
	bx	r0
.L164:
	.align	2, 0
.L163:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe29:
	.size	 TriggerPendingDaycareEgg,.Lfe29-TriggerPendingDaycareEgg
	.align	2, 0
	.type	 TriggerPendingDaycareMaleEgg,function
	.thumb_func
TriggerPendingDaycareMaleEgg:
	push	{lr}
	ldr	r0, .L166
	ldr	r0, [r0]
	ldr	r1, .L166+0x4
	add	r0, r0, r1
	bl	_TriggerPendingDaycareMaleEgg
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe30:
	.size	 TriggerPendingDaycareMaleEgg,.Lfe30-TriggerPendingDaycareMaleEgg
	.align	2, 0
	.type	 RemoveIVIndexFromList,function
	.thumb_func
RemoveIVIndexFromList:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r1, r4, r1
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r2, #0x0
.L172:
	mov	r1, sp
	add	r0, r1, r2
	add	r1, r4, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L172	@cond_branch
	mov	r3, #0x0
	mov	r2, #0x0
.L177:
	mov	r1, sp
	add	r0, r1, r2
	ldrb	r1, [r0]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L176	@cond_branch
	add	r0, r4, r3
	strb	r1, [r0]
	add	r3, r3, #0x1
.L176:
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L177	@cond_branch
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 RemoveIVIndexFromList,.Lfe31-RemoveIVIndexFromList
	.align	2, 0
	.type	 InheritIVs,function
	.thumb_func
InheritIVs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	mov	r9, r0
	mov	r8, r1
	mov	r5, #0x0
	add	r1, sp, #0x4
	add	r7, sp, #0xc
	add	r2, r1, #0
.L184:
	add	r0, r2, r5
	strb	r5, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L184	@cond_branch
	mov	r5, #0x0
	add	r6, r1, #0
.L189:
	bl	Random
	mov	r1, sp
	add	r4, r1, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	sub	r1, r1, r5
	bl	__modsi3
	add	r0, r6, r0
	ldrb	r0, [r0]
	strb	r0, [r4]
	add	r0, r6, #0
	add	r1, r5, #0
	bl	RemoveIVIndexFromList
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L189	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x1
.L194:
	bl	Random
	add	r1, r7, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	and	r0, r0, r4
	strb	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L194	@cond_branch
	mov	r5, #0x0
.L199:
	mov	r1, sp
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L198	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L211
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L212:
	.align	2, 0
.L211:
	.word	.L207
	.align	2, 0
	.align	2, 0
.L207:
	.word	.L201
	.word	.L202
	.word	.L203
	.word	.L204
	.word	.L205
	.word	.L206
.L201:
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x27
	bl	GetBoxMonData
	add	r2, sp, #0x10
	strb	r0, [r2]
	mov	r0, r9
	mov	r1, #0x27
	bl	SetMonData
	b	.L198
.L202:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x28
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x28
	b	.L210
.L203:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x29
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x29
	b	.L210
.L204:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x2a
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2a
	b	.L210
.L205:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x2b
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2b
.L210:
	add	r2, r4, #0
	bl	SetMonData
	b	.L198
.L206:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r0, r8
	mov	r1, #0x2c
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2c
	add	r2, r4, #0
	bl	SetMonData
.L198:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L199	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 InheritIVs,.Lfe32-InheritIVs
	.align	2, 0
	.type	 GetEggMoves,function
	.thumb_func
GetEggMoves:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	mov	r6, #0x0
	mov	r4, #0x0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	ldr	r5, .L226
	ldrh	r1, [r5]
	ldr	r7, .L226+0x4
	add	r0, r3, r7
	cmp	r1, r0
	bne	.L216	@cond_branch
	mov	r4, #0x1
	b	.L215
.L227:
	.align	2, 0
.L226:
	.word	gEggMoves
	.word	0x4e20
.L216:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L228
	ldr	r5, .L228+0x4
	cmp	r2, r0
	bhi	.L215	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	ldr	r7, .L228+0x8
	add	r0, r3, r7
	cmp	r1, r0
	bne	.L216	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L215:
	mov	r2, #0x0
	lsl	r0, r4, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	ldr	r1, .L228+0x8
	cmp	r0, r1
	bhi	.L221	@cond_branch
	add	r7, r5, #0
	add	r3, r1, #0
.L224:
	lsl	r1, r2, #0x1
	add	r1, r1, r8
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x9
	bhi	.L221	@cond_branch
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	cmp	r0, r3
	bls	.L224	@cond_branch
.L221:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L229:
	.align	2, 0
.L228:
	.word	0x471
	.word	gEggMoves
	.word	0x4e20
.Lfe33:
	.size	 GetEggMoves,.Lfe33-GetEggMoves
	.align	2, 0
	.type	 BuildEggMoveset,function
	.thumb_func
BuildEggMoveset:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	add	r7, r0, #0
	mov	sl, r1
	mov	r9, r2
	mov	r0, #0x0
	str	r0, [sp]
	mov	r6, #0x0
	ldr	r5, .L303
	mov	r2, #0x0
	ldr	r4, .L303+0x4
	ldr	r3, .L303+0x8
.L234:
	lsl	r1, r6, #0x1
	add	r0, r1, r5
	strh	r2, [r0]
	add	r0, r1, r4
	strh	r2, [r0]
	add	r1, r1, r3
	strh	r2, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L234	@cond_branch
	mov	r6, #0x0
	ldr	r2, .L303+0xc
	mov	r1, #0x0
.L239:
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	strh	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x9
	bls	.L239	@cond_branch
	mov	r6, #0x0
	ldr	r2, .L303+0x10
	mov	r1, #0x0
.L244:
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	strh	r1, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x31
	bls	.L244	@cond_branch
	add	r0, r7, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L303+0x10
	bl	GetLevelUpMovesBySpecies
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r6, #0x0
	ldr	r1, .L303+0x4
	mov	r8, r1
.L249:
	add	r5, r6, #0
	add	r5, r5, #0xd
	mov	r0, sl
	add	r1, r5, #0
	bl	GetBoxMonData
	lsl	r4, r6, #0x1
	mov	r2, r8
	add	r1, r4, r2
	strh	r0, [r1]
	mov	r0, r9
	add	r1, r5, #0
	bl	GetBoxMonData
	ldr	r1, .L303
	add	r4, r4, r1
	strh	r0, [r4]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L249	@cond_branch
	ldr	r1, .L303+0xc
	add	r0, r7, #0
	bl	GetEggMoves
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r6, #0x0
.L254:
	ldr	r0, .L303+0x4
	lsl	r1, r6, #0x1
	add	r2, r1, r0
	ldrh	r1, [r2]
	mov	r9, r0
	cmp	r1, #0
	beq	.L252	@cond_branch
	mov	r5, #0x0
	cmp	r5, r8
	bcs	.L253	@cond_branch
	add	r4, r2, #0
	ldr	r2, .L303+0x14
.L259:
	ldr	r0, .L303+0xc
	lsl	r1, r5, #0x1
	add	r1, r1, r0
	ldrh	r0, [r4]
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.L258	@cond_branch
	add	r1, r0, #0
	add	r0, r7, #0
	str	r2, [sp, #0x8]
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, [sp, #0x8]
	cmp	r0, r2
	bne	.L253	@cond_branch
	ldrh	r1, [r4]
	add	r0, r7, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
	b	.L253
.L304:
	.align	2, 0
.L303:
	.word	sHatchedEggMotherMoves
	.word	sHatchedEggFatherMoves
	.word	sHatchedEggFinalMoves
	.word	sHatchedEggEggMoves
	.word	sHatchedEggLevelUpMoves
	.word	0xffff
.L258:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, r8
	bcc	.L259	@cond_branch
.L253:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r3, .L305
	mov	r9, r3
	cmp	r6, #0x3
	bls	.L254	@cond_branch
.L252:
	mov	r6, #0x0
.L268:
	lsl	r0, r6, #0x1
	mov	r2, r9
	add	r1, r0, r2
	ldrh	r1, [r1]
	add	r2, r0, #0
	add	r6, r6, #0x1
	mov	r8, r6
	cmp	r1, #0
	beq	.L267	@cond_branch
	mov	r5, #0x0
	ldr	r0, .L305
	add	r4, r2, r0
	ldr	r6, .L305+0x4
	mov	r9, r0
.L273:
	ldr	r3, .L305+0x8
	add	r0, r5, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	ItemIdToBattleMoveId
	ldrh	r1, [r4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L272	@cond_branch
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	add	r0, r7, #0
	bl	CanMonLearnTMHM
	cmp	r0, #0
	beq	.L272	@cond_branch
	ldrh	r1, [r4]
	add	r0, r7, #0
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r6
	bne	.L272	@cond_branch
	ldrh	r1, [r4]
	add	r0, r7, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
.L272:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x39
	bls	.L273	@cond_branch
.L267:
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L268	@cond_branch
	mov	r6, #0x0
	mov	r2, r9
	ldrh	r0, [r2]
	ldr	r3, .L305+0xc
	mov	sl, r3
	cmp	r0, #0
	beq	.L279	@cond_branch
	mov	r4, r9
	ldr	r0, .L305+0x10
	mov	r9, r0
	mov	ip, sl
.L282:
	mov	r5, #0x0
	lsl	r2, r6, #0x1
	add	r6, r6, #0x1
	mov	r8, r6
	add	r3, r2, r4
.L286:
	lsl	r0, r5, #0x1
	add	r0, r0, r9
	ldrh	r2, [r3]
	add	r1, r2, #0
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L285	@cond_branch
	cmp	r1, #0
	beq	.L285	@cond_branch
	ldr	r1, [sp]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp]
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	strh	r2, [r1]
.L285:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x3
	bls	.L286	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bhi	.L279	@cond_branch
	lsl	r0, r6, #0x1
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L282	@cond_branch
.L279:
	mov	r6, #0x0
	mov	r2, sl
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L291	@cond_branch
.L294:
	mov	r5, #0x0
	add	r3, r6, #0x1
	mov	r8, r3
	ldr	r0, [sp, #0x4]
	cmp	r5, r0
	bcs	.L292	@cond_branch
	ldr	r2, .L305+0x4
.L298:
	ldr	r1, .L305+0x14
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L297	@cond_branch
	lsl	r0, r6, #0x1
	mov	r3, sl
	add	r4, r0, r3
	ldrh	r0, [r4]
	cmp	r0, r1
	bne	.L297	@cond_branch
	add	r1, r0, #0
	add	r0, r7, #0
	str	r2, [sp, #0x8]
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, [sp, #0x8]
	cmp	r0, r2
	bne	.L292	@cond_branch
	ldrh	r1, [r4]
	add	r0, r7, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
	b	.L292
.L306:
	.align	2, 0
.L305:
	.word	sHatchedEggFatherMoves
	.word	0xffff
	.word	0x121
	.word	sHatchedEggFinalMoves
	.word	sHatchedEggMotherMoves
	.word	sHatchedEggLevelUpMoves
.L297:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, [sp, #0x4]
	cmp	r5, r0
	bcc	.L298	@cond_branch
.L292:
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bhi	.L291	@cond_branch
	ldr	r0, .L307
	lsl	r1, r6, #0x1
	add	r1, r1, r0
	ldrh	r1, [r1]
	mov	sl, r0
	cmp	r1, #0
	bne	.L294	@cond_branch
.L291:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L308:
	.align	2, 0
.L307:
	.word	sHatchedEggFinalMoves
.Lfe34:
	.size	 BuildEggMoveset,.Lfe34-BuildEggMoveset
	.align	2, 0
	.type	 RemoveEggFromDayCare,function
	.thumb_func
RemoveEggFromDayCare:
	add	r2, r0, #0
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	mov	r1, #0x0
	str	r1, [r0]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strb	r1, [r0]
	bx	lr
.Lfe35:
	.size	 RemoveEggFromDayCare,.Lfe35-RemoveEggFromDayCare
	.align	2, 0
	.globl	RejectEggFromDayCare
	.type	 RejectEggFromDayCare,function
	.thumb_func
RejectEggFromDayCare:
	push	{lr}
	ldr	r0, .L311
	ldr	r0, [r0]
	ldr	r1, .L311+0x4
	add	r0, r0, r1
	bl	RemoveEggFromDayCare
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe36:
	.size	 RejectEggFromDayCare,.Lfe36-RejectEggFromDayCare
	.align	2, 0
	.type	 AlterEggSpeciesWithIncenseItem,function
	.thumb_func
AlterEggSpeciesWithIncenseItem:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrh	r1, [r4]
	mov	r7, #0xb4
	lsl	r7, r7, #0x1
	cmp	r1, r7
	beq	.L315	@cond_branch
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L314	@cond_branch
.L315:
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r5, #0
	add	r0, r0, #0x8c
	mov	r1, #0xc
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldrh	r0, [r4]
	cmp	r0, r7
	bne	.L316	@cond_branch
	cmp	r6, #0xdd
	beq	.L316	@cond_branch
	cmp	r2, #0xdd
	beq	.L316	@cond_branch
	mov	r0, #0xca
	strh	r0, [r4]
.L316:
	ldrh	r1, [r4]
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L314	@cond_branch
	cmp	r6, #0xdc
	beq	.L314	@cond_branch
	cmp	r2, #0xdc
	beq	.L314	@cond_branch
	mov	r0, #0xb7
	strh	r0, [r4]
.L314:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 AlterEggSpeciesWithIncenseItem,.Lfe37-AlterEggSpeciesWithIncenseItem
	.align	2, 0
	.type	 GiveVoltTackleIfLightBall,function
	.thumb_func
GiveVoltTackleIfLightBall:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	add	r5, r0, #0
	add	r4, r4, #0x8c
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	cmp	r5, #0xca
	beq	.L320	@cond_branch
	cmp	r0, #0xca
	bne	.L319	@cond_branch
.L320:
	mov	r4, #0xac
	lsl	r4, r4, #0x1
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GiveMoveToMon
	lsl	r0, r0, #0x10
	ldr	r1, .L322
	cmp	r0, r1
	bne	.L319	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
.L319:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	-0x10000
.Lfe38:
	.size	 GiveVoltTackleIfLightBall,.Lfe38-GiveVoltTackleIfLightBall
	.align	2, 0
	.type	 DetermineEggSpeciesAndParentSlots,function
	.thumb_func
DetermineEggSpeciesAndParentSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r7, r0, #0
	add	r6, r1, #0
	mov	r4, #0x0
	mov	r0, #0x1
	mov	r8, r0
.L328:
	mov	r0, #0x8c
	mul	r0, r0, r4
	add	r5, r7, r0
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r1, r4, #0x1
	add	r1, r1, sp
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x84
	bne	.L329	@cond_branch
	add	r0, r4, #0
	mov	r1, r8
	eor	r0, r0, r1
	strb	r0, [r6]
	strb	r4, [r6, #0x1]
	b	.L327
.L329:
	add	r0, r5, #0
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	bne	.L327	@cond_branch
	strb	r4, [r6]
	add	r0, r4, #0
	mov	r1, r8
	eor	r0, r0, r1
	strb	r0, [r6, #0x1]
.L327:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L328	@cond_branch
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	bl	GetEggSpecies
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1d
	bne	.L333	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r7, r1
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L333	@cond_branch
	mov	r4, #0x20
.L333:
	ldr	r0, .L336
	cmp	r4, r0
	bne	.L334	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r7, r1
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	mov	r4, #0xc1
	lsl	r4, r4, #0x1
.L334:
	ldrb	r0, [r6, #0x1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	cmp	r0, #0x84
	bne	.L335	@cond_branch
	ldrb	r1, [r6]
	mov	r0, #0x8c
	mul	r0, r0, r1
	add	r0, r7, r0
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	beq	.L335	@cond_branch
	ldrb	r1, [r6, #0x1]
	ldrb	r0, [r6]
	strb	r0, [r6, #0x1]
	strb	r1, [r6]
.L335:
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L337:
	.align	2, 0
.L336:
	.word	0x183
.Lfe39:
	.size	 DetermineEggSpeciesAndParentSlots,.Lfe39-DetermineEggSpeciesAndParentSlots
	.align	2, 0
	.type	 _GiveEggFromDaycare,function
	.thumb_func
_GiveEggFromDaycare:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x6c
	add	r6, r0, #0
	add	r5, sp, #0x64
	add	r1, r5, #0
	bl	DetermineEggSpeciesAndParentSlots
	add	r4, sp, #0x68
	strh	r0, [r4]
	add	r0, r4, #0
	add	r1, r6, #0
	bl	AlterEggSpeciesWithIncenseItem
	ldrh	r1, [r4]
	mov	r0, sp
	add	r2, r6, #0
	bl	SetInitialEggData
	mov	r0, sp
	add	r1, r6, #0
	bl	InheritIVs
	ldrb	r0, [r5, #0x1]
	mov	r2, #0x8c
	mov	r1, r0
	mul	r1, r1, r2
	add	r1, r6, r1
	ldrb	r0, [r5]
	mul	r2, r2, r0
	add	r2, r6, r2
	mov	r0, sp
	bl	BuildEggMoveset
	ldrh	r0, [r4]
	cmp	r0, #0xac
	bne	.L339	@cond_branch
	mov	r0, sp
	add	r1, r6, #0
	bl	GiveVoltTackleIfLightBall
.L339:
	mov	r2, sp
	add	r2, r2, #0x6a
	mov	r0, #0x1
	strb	r0, [r2]
	mov	r0, sp
	mov	r1, #0x2d
	bl	SetMonData
	ldr	r0, .L340
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, sp
	mov	r2, #0x64
	bl	memcpy
	bl	CompactPartySlots
	bl	CalculatePlayerPartyCount
	add	r0, r6, #0
	bl	RemoveEggFromDayCare
	add	sp, sp, #0x6c
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gPlayerParty
.Lfe40:
	.size	 _GiveEggFromDaycare,.Lfe40-_GiveEggFromDaycare
	.align	2, 0
	.globl	CreateEgg
	.type	 CreateEgg,function
	.thumb_func
CreateEgg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	add	r7, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	add	r1, r5, #0
	mov	r2, #0x5
	mov	r3, #0x20
	bl	CreateMon
	mov	r0, #0x12
	add	r0, r0, sp
	mov	r8, r0
	strb	r4, [r0]
	mov	r1, #0x4
	add	r0, sp, #0x10
	strh	r1, [r0]
	mov	r4, sp
	add	r4, r4, #0x13
	mov	r0, #0x1
	mov	r9, r0
	mov	r0, r9
	strb	r0, [r4]
	add	r0, r7, #0
	mov	r1, #0x26
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L344
	add	r0, r7, #0
	mov	r1, #0x2
	bl	SetMonData
	lsl	r2, r5, #0x3
	sub	r2, r2, r5
	lsl	r2, r2, #0x2
	ldr	r0, .L344+0x4
	add	r2, r2, r0
	add	r0, r7, #0
	mov	r1, #0x20
	bl	SetMonData
	add	r0, r7, #0
	mov	r1, #0x24
	mov	r2, r8
	bl	SetMonData
	add	r0, r7, #0
	mov	r1, #0x3
	add	r2, r4, #0
	bl	SetMonData
	cmp	r6, #0
	beq	.L343	@cond_branch
	add	r2, sp, #0x14
	mov	r0, #0xfd
	strb	r0, [r2]
	add	r0, r7, #0
	mov	r1, #0x23
	bl	SetMonData
.L343:
	mov	r2, sp
	add	r2, r2, #0x15
	mov	r0, r9
	strb	r0, [r2]
	add	r0, r7, #0
	mov	r1, #0x2d
	bl	SetMonData
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L345:
	.align	2, 0
.L344:
	.word	sJapaneseEggNickname
	.word	gBaseStats+0x11
.Lfe41:
	.size	 CreateEgg,.Lfe41-CreateEgg
	.align	2, 0
	.type	 SetInitialEggData,function
	.thumb_func
SetInitialEggData:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	add	r5, r1, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, #0x8c
	lsl	r0, r0, #0x1
	add	r2, r2, r0
	ldr	r0, [r2]
	mov	r1, #0x1
	mov	r8, r1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, #0x5
	mov	r3, #0x20
	bl	CreateMon
	mov	r0, #0x12
	add	r0, r0, sp
	mov	r9, r0
	strb	r4, [r0]
	mov	r1, #0x4
	add	r0, sp, #0x10
	strh	r1, [r0]
	mov	r4, sp
	add	r4, r4, #0x13
	mov	r1, r8
	strb	r1, [r4]
	add	r0, r6, #0
	mov	r1, #0x26
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L347
	add	r0, r6, #0
	mov	r1, #0x2
	bl	SetMonData
	lsl	r2, r5, #0x3
	sub	r2, r2, r5
	lsl	r2, r2, #0x2
	ldr	r0, .L347+0x4
	add	r2, r2, r0
	add	r0, r6, #0
	mov	r1, #0x20
	bl	SetMonData
	add	r0, r6, #0
	mov	r1, #0x24
	mov	r2, r9
	bl	SetMonData
	add	r0, r6, #0
	mov	r1, #0x3
	add	r2, r4, #0
	bl	SetMonData
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L348:
	.align	2, 0
.L347:
	.word	sJapaneseEggNickname
	.word	gBaseStats+0x11
.Lfe42:
	.size	 SetInitialEggData,.Lfe42-SetInitialEggData
	.align	2, 0
	.globl	GiveEggFromDaycare
	.type	 GiveEggFromDaycare,function
	.thumb_func
GiveEggFromDaycare:
	push	{lr}
	ldr	r0, .L350
	ldr	r0, [r0]
	ldr	r1, .L350+0x4
	add	r0, r0, r1
	bl	_GiveEggFromDaycare
	pop	{r0}
	bx	r0
.L351:
	.align	2, 0
.L350:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe43:
	.size	 GiveEggFromDaycare,.Lfe43-GiveEggFromDaycare
	.align	2, 0
	.type	 TryProduceOrHatchEgg,function
	.thumb_func
TryProduceOrHatchEgg:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	mov	r7, #0x0
	mov	r5, #0x0
.L356:
	mov	r0, #0x8c
	mov	r4, r5
	mul	r4, r4, r0
	add	r0, r6, r4
	mov	r1, #0x5
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L355	@cond_branch
	add	r1, r6, #0
	add	r1, r1, #0x88
	add	r1, r1, r4
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	add	r7, r7, #0x1
.L355:
	add	r5, r5, #0x1
	cmp	r5, #0x1
	bls	.L356	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r6, r1
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L359	@cond_branch
	cmp	r7, #0x2
	bne	.L359	@cond_branch
	sub	r1, r1, #0x4
	add	r0, r6, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L359	@cond_branch
	add	r0, r6, #0
	bl	GetDaycareCompatibilityScore
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L375
	bl	__udivsi3
	cmp	r4, r0
	bls	.L359	@cond_branch
	bl	TriggerPendingDaycareEgg
.L359:
	mov	r0, #0x8e
	lsl	r0, r0, #0x1
	add	r1, r6, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L361	@cond_branch
	bl	GetEggCyclesToSubtract
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	ldr	r0, .L375+0x4
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L361	@cond_branch
	ldr	r4, .L375+0x8
.L365:
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L364	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x4
	bl	GetMonData
	cmp	r0, #0
	bne	.L364	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	add	r1, r0, #0
	str	r1, [sp]
	cmp	r0, #0
	beq	.L368	@cond_branch
	cmp	r0, r6
	bcc	.L369	@cond_branch
	sub	r0, r0, r6
	b	.L374
.L376:
	.align	2, 0
.L375:
	.word	0xffff
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L369:
	sub	r0, r1, #0x1
.L374:
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x20
	mov	r2, sp
	bl	SetMonData
	b	.L364
.L368:
	ldr	r0, .L377
	strh	r5, [r0]
	mov	r0, #0x1
	b	.L373
.L378:
	.align	2, 0
.L377:
	.word	gSpecialVar_0x8004
.L364:
	add	r4, r4, #0x64
	add	r5, r5, #0x1
	ldr	r0, .L379
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L365	@cond_branch
.L361:
	mov	r0, #0x0
.L373:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L380:
	.align	2, 0
.L379:
	.word	gPlayerPartyCount
.Lfe44:
	.size	 TryProduceOrHatchEgg,.Lfe44-TryProduceOrHatchEgg
	.align	2, 0
	.globl	ShouldEggHatch
	.type	 ShouldEggHatch,function
	.thumb_func
ShouldEggHatch:
	push	{lr}
	ldr	r0, .L382
	ldr	r0, [r0]
	ldr	r1, .L382+0x4
	add	r0, r0, r1
	bl	TryProduceOrHatchEgg
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L383:
	.align	2, 0
.L382:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe45:
	.size	 ShouldEggHatch,.Lfe45-ShouldEggHatch
	.align	2, 0
	.type	 IsEggPending,function
	.thumb_func
IsEggPending:
	push	{lr}
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L385	@cond_branch
	mov	r0, #0x1
.L385:
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 IsEggPending,.Lfe46-IsEggPending
	.align	2, 0
	.type	 _GetDaycareMonNicknames,function
	.thumb_func
_GetDaycareMonNicknames:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L387	@cond_branch
	ldr	r1, .L389
	add	r0, r4, #0
	bl	GetBoxMonNickname
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, sp
	bl	GetBoxMonData
	ldr	r0, .L389+0x4
	mov	r1, sp
	bl	StringCopy
.L387:
	add	r4, r4, #0x8c
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L388	@cond_branch
	ldr	r1, .L389+0x8
	add	r0, r4, #0
	bl	GetBoxMonNickname
.L388:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L390:
	.align	2, 0
.L389:
	.word	gStringVar1
	.word	gStringVar3
	.word	gStringVar2
.Lfe47:
	.size	 _GetDaycareMonNicknames,.Lfe47-_GetDaycareMonNicknames
	.align	2, 0
	.globl	GetSelectedMonNicknameAndSpecies
	.type	 GetSelectedMonNicknameAndSpecies,function
	.thumb_func
GetSelectedMonNicknameAndSpecies:
	push	{r4, r5, lr}
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L392
	add	r0, r0, r4
	ldr	r1, .L392+0x4
	bl	GetBoxMonNickname
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L393:
	.align	2, 0
.L392:
	.word	gPlayerParty
	.word	gStringVar1
.Lfe48:
	.size	 GetSelectedMonNicknameAndSpecies,.Lfe48-GetSelectedMonNicknameAndSpecies
	.align	2, 0
	.globl	GetDaycareMonNicknames
	.type	 GetDaycareMonNicknames,function
	.thumb_func
GetDaycareMonNicknames:
	push	{lr}
	ldr	r0, .L395
	ldr	r0, [r0]
	ldr	r1, .L395+0x4
	add	r0, r0, r1
	bl	_GetDaycareMonNicknames
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe49:
	.size	 GetDaycareMonNicknames,.Lfe49-GetDaycareMonNicknames
	.align	2, 0
	.globl	GetDaycareState
	.type	 GetDaycareState,function
	.thumb_func
GetDaycareState:
	push	{r4, lr}
	ldr	r4, .L401
	ldr	r0, [r4]
	ldr	r1, .L401+0x4
	add	r0, r0, r1
	bl	IsEggPending
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L398	@cond_branch
	mov	r0, #0x1
	b	.L400
.L402:
	.align	2, 0
.L401:
	.word	gSaveBlock1Ptr
	.word	0x3030
.L398:
	ldr	r0, [r4]
	ldr	r1, .L403
	add	r0, r0, r1
	bl	CountPokemonInDaycare
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L399	@cond_branch
	mov	r0, #0x0
	b	.L400
.L404:
	.align	2, 0
.L403:
	.word	0x3030
.L399:
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L400:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 GetDaycareState,.Lfe50-GetDaycareState
	.align	2, 0
	.type	 GetDaycarePokemonCount,function
	.thumb_func
GetDaycarePokemonCount:
	push	{lr}
	ldr	r0, .L408
	ldr	r0, [r0]
	ldr	r1, .L408+0x4
	add	r0, r0, r1
	bl	CountPokemonInDaycare
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L407	@cond_branch
	mov	r0, #0x0
.L407:
	pop	{r1}
	bx	r1
.L409:
	.align	2, 0
.L408:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe51:
	.size	 GetDaycarePokemonCount,.Lfe51-GetDaycarePokemonCount
	.align	2, 0
	.type	 EggGroupsOverlap,function
	.thumb_func
EggGroupsOverlap:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	mov	r4, #0x0
	add	r1, r0, #0
.L414:
	mov	r3, #0x0
	ldrh	r0, [r1]
	add	r2, r5, #0
.L418:
	ldrh	r6, [r2]
	cmp	r0, r6
	bne	.L417	@cond_branch
	mov	r0, #0x1
	b	.L422
.L417:
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x1
	ble	.L418	@cond_branch
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L414	@cond_branch
	mov	r0, #0x0
.L422:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 EggGroupsOverlap,.Lfe52-EggGroupsOverlap
	.align	2, 0
	.type	 GetDaycareCompatibilityScore,function
	.thumb_func
GetDaycareCompatibilityScore:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x30
	str	r0, [sp, #0x1c]
	mov	r7, #0x0
	mov	r0, sp
	add	r0, r0, #0x8
	str	r0, [sp, #0x20]
	add	r1, sp, #0xc
	mov	r9, r1
	mov	r2, sp
	add	r2, r2, #0x14
	str	r2, [sp, #0x24]
	sub	r0, r0, #0x6
	ldr	r1, .L449
	mov	sl, r1
	ldr	r5, [sp, #0x20]
	mov	r8, r0
	mov	r6, sp
	str	r2, [sp, #0x28]
	mov	r2, r9
	str	r2, [sp, #0x2c]
.L427:
	mov	r0, #0x8c
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r0, [sp, #0x1c]
	add	r4, r0, r4
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	strh	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetBoxMonData
	ldr	r1, [sp, #0x2c]
	stmia	r1!, {r0}
	str	r1, [sp, #0x2c]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetBoxMonData
	add	r1, r0, #0
	ldrh	r0, [r5]
	bl	GetGenderFromSpeciesAndPersonality
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, [sp, #0x28]
	stmia	r2!, {r0}
	str	r2, [sp, #0x28]
	ldrh	r1, [r5]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldrb	r0, [r0, #0x14]
	strh	r0, [r6]
	ldrh	r1, [r5]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	ldrb	r0, [r0, #0x15]
	mov	r1, r8
	strh	r0, [r1]
	add	r5, r5, #0x2
	mov	r2, #0x4
	add	r8, r8, r2
	add	r6, r6, #0x4
	add	r7, r7, #0x1
	cmp	r7, #0x1
	bls	.L427	@cond_branch
	mov	r0, sp
	ldrh	r1, [r0]
	cmp	r1, #0xf
	beq	.L448	@cond_branch
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0xf
	beq	.L448	@cond_branch
	cmp	r1, #0xd
	bne	.L445	@cond_branch
	cmp	r0, #0xd
	bne	.L433	@cond_branch
.L448:
	mov	r0, #0x0
	b	.L444
.L450:
	.align	2, 0
.L449:
	.word	gBaseStats
.L445:
	cmp	r0, #0xd
	bne	.L432	@cond_branch
.L433:
	ldr	r1, [sp, #0xc]
	mov	r2, r9
	ldr	r0, [r2, #0x4]
	cmp	r1, r0
	beq	.L447	@cond_branch
	b	.L443
.L432:
	ldr	r0, [sp, #0x14]
	ldr	r2, [sp, #0x24]
	ldr	r1, [r2, #0x4]
	cmp	r0, r1
	beq	.L448	@cond_branch
	cmp	r0, #0xff
	beq	.L448	@cond_branch
	cmp	r1, #0xff
	beq	.L448	@cond_branch
	add	r1, sp, #0x4
	mov	r0, sp
	bl	EggGroupsOverlap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L448	@cond_branch
	ldr	r0, [sp, #0x20]
	ldrh	r1, [r0, #0x2]
	ldrh	r0, [r0]
	cmp	r0, r1
	bne	.L440	@cond_branch
	ldr	r1, [sp, #0xc]
	mov	r2, r9
	ldr	r0, [r2, #0x4]
	cmp	r1, r0
	beq	.L443	@cond_branch
	mov	r0, #0x46
	b	.L444
.L440:
	ldr	r1, [sp, #0xc]
	mov	r2, r9
	ldr	r0, [r2, #0x4]
	cmp	r1, r0
	bne	.L443	@cond_branch
.L447:
	mov	r0, #0x14
	b	.L444
.L443:
	mov	r0, #0x32
.L444:
	add	sp, sp, #0x30
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe53:
	.size	 GetDaycareCompatibilityScore,.Lfe53-GetDaycareCompatibilityScore
	.align	2, 0
	.type	 GetDaycareCompatibilityScoreFromSave,function
	.thumb_func
GetDaycareCompatibilityScoreFromSave:
	push	{lr}
	ldr	r0, .L452
	ldr	r0, [r0]
	ldr	r1, .L452+0x4
	add	r0, r0, r1
	bl	GetDaycareCompatibilityScore
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L453:
	.align	2, 0
.L452:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe54:
	.size	 GetDaycareCompatibilityScoreFromSave,.Lfe54-GetDaycareCompatibilityScoreFromSave
	.align	2, 0
	.globl	SetDaycareCompatibilityString
	.type	 SetDaycareCompatibilityString,function
	.thumb_func
SetDaycareCompatibilityString:
	push	{lr}
	bl	GetDaycareCompatibilityScoreFromSave
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	mov	r1, #0x0
	cmp	r0, #0
	bne	.L455	@cond_branch
	mov	r1, #0x3
.L455:
	cmp	r0, #0x14
	bne	.L456	@cond_branch
	mov	r1, #0x2
.L456:
	cmp	r0, #0x32
	bne	.L457	@cond_branch
	mov	r1, #0x1
.L457:
	cmp	r2, #0x46
	bne	.L458	@cond_branch
	mov	r1, #0x0
.L458:
	ldr	r0, .L459
	ldr	r2, .L459+0x4
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	pop	{r0}
	bx	r0
.L460:
	.align	2, 0
.L459:
	.word	gStringVar4
	.word	sCompatibilityMessages
.Lfe55:
	.size	 SetDaycareCompatibilityString,.Lfe55-SetDaycareCompatibilityString
	.align	2, 0
	.globl	NameHasGenderSymbol
	.type	 NameHasGenderSymbol,function
	.thumb_func
NameHasGenderSymbol:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r2, sp
	mov	r1, sp
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	strb	r0, [r2]
	mov	r3, #0x0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L463	@cond_branch
.L465:
	add	r1, r4, r3
	ldrb	r0, [r1]
	cmp	r0, #0xb5
	bne	.L466	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
.L466:
	ldrb	r0, [r1]
	cmp	r0, #0xb6
	bne	.L464	@cond_branch
	ldrb	r0, [r2, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r2, #0x1]
.L464:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r4, r3
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L465	@cond_branch
.L463:
	cmp	r5, #0
	bne	.L469	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L469	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L472	@cond_branch
.L469:
	cmp	r5, #0xfe
	bne	.L470	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L470	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L470	@cond_branch
.L472:
	mov	r0, #0x1
	b	.L471
.L470:
	mov	r0, #0x0
.L471:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 NameHasGenderSymbol,.Lfe56-NameHasGenderSymbol
	.align	2, 0
	.type	 AppendGenderSymbol,function
	.thumb_func
AppendGenderSymbol:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	bne	.L474	@cond_branch
	mov	r1, #0x0
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L476	@cond_branch
	ldr	r1, .L483
	b	.L481
.L484:
	.align	2, 0
.L483:
	.word	gText_MaleSymbol4
.L474:
	cmp	r1, #0xfe
	bne	.L476	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xfe
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L476	@cond_branch
	ldr	r1, .L485
	b	.L481
.L486:
	.align	2, 0
.L485:
	.word	gText_FemaleSymbol4
.L476:
	ldr	r1, .L487
.L481:
	add	r0, r4, #0
	bl	StringAppend
	pop	{r4}
	pop	{r1}
	bx	r1
.L488:
	.align	2, 0
.L487:
	.word	gText_GenderlessSymbol
.Lfe57:
	.size	 AppendGenderSymbol,.Lfe57-AppendGenderSymbol
	.align	2, 0
	.type	 AppendMonGenderSymbol,function
	.thumb_func
AppendMonGenderSymbol:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	bl	GetBoxMonGender
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	AppendGenderSymbol
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 AppendMonGenderSymbol,.Lfe58-AppendMonGenderSymbol
	.align	2, 0
	.type	 GetDaycareLevelMenuText,function
	.thumb_func
GetDaycareLevelMenuText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x28
	mov	r8, r0
	add	r7, r1, #0
	mov	r0, #0xff
	strb	r0, [r7]
	mov	r6, #0x0
	add	r0, sp, #0x14
	mov	r9, r0
.L494:
	mov	r0, #0x8c
	mov	r4, r6
	mul	r4, r4, r0
	add	r4, r4, r8
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	mov	r1, sp
	add	r5, r1, r0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetBoxMonNickname
	add	r0, r5, #0
	add	r1, r4, #0
	bl	AppendMonGenderSymbol
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x1
	bls	.L494	@cond_branch
	add	r0, r7, #0
	mov	r1, sp
	bl	StringCopy
	ldr	r4, .L496
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringAppend
	add	r0, r7, #0
	mov	r1, r9
	bl	StringAppend
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringAppend
	ldr	r1, .L496+0x4
	add	r0, r7, #0
	bl	StringAppend
	add	sp, sp, #0x28
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L497:
	.align	2, 0
.L496:
	.word	gText_NewLine2
	.word	gText_Exit4
.Lfe59:
	.size	 GetDaycareLevelMenuText,.Lfe59-GetDaycareLevelMenuText
	.align	2, 0
	.type	 GetDaycareLevelMenuLevelText,function
	.thumb_func
GetDaycareLevelMenuLevelText:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r5, #0x0
.L502:
	add	r0, r4, #0
	ldr	r1, .L504
	bl	StringAppend
	mov	r0, #0x8c
	mov	r2, r5
	mul	r2, r2, r0
	add	r0, r6, r2
	add	r1, r6, #0
	add	r1, r1, #0x88
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	GetLevelAfterDaycareSteps
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	mov	r1, sp
	bl	StringAppend
	add	r0, r4, #0
	ldr	r1, .L504+0x4
	bl	StringAppend
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L502	@cond_branch
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L505:
	.align	2, 0
.L504:
	.word	gText_Lv
	.word	gText_NewLine2
.Lfe60:
	.size	 GetDaycareLevelMenuLevelText,.Lfe60-GetDaycareLevelMenuLevelText
	.align	2, 0
	.type	 DaycareAddTextPrinter,function
	.thumb_func
DaycareAddTextPrinter:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	str	r1, [sp]
	mov	r1, sp
	mov	r5, #0x0
	strb	r0, [r1, #0x4]
	mov	r0, sp
	mov	r6, #0x1
	mov	r4, #0x1
	strb	r4, [r0, #0x5]
	strb	r2, [r0, #0x6]
	strb	r3, [r0, #0x7]
	strb	r2, [r0, #0x8]
	strb	r3, [r0, #0x9]
	mov	r3, sp
	ldrb	r1, [r3, #0xc]
	mov	r2, #0x10
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r1
	strb	r0, [r3, #0xc]
	ldr	r3, .L507
	ldrb	r1, [r3]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	mov	r0, sp
	strb	r5, [r0, #0xa]
	strb	r4, [r0, #0xb]
	mov	r3, sp
	ldrb	r1, [r3, #0xc]
	mov	r4, #0xf
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r3, #0xc]
	mov	r1, sp
	ldrb	r0, [r1, #0xd]
	and	r2, r2, r0
	orr	r2, r2, r6
	strb	r2, [r1, #0xd]
	and	r2, r2, r4
	mov	r0, #0x30
	orr	r2, r2, r0
	strb	r2, [r1, #0xd]
	mov	r0, sp
	mov	r1, #0xff
	mov	r2, #0x0
	bl	AddTextPrinter
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L508:
	.align	2, 0
.L507:
	.word	gTextFlags
.Lfe61:
	.size	 DaycareAddTextPrinter,.Lfe61-DaycareAddTextPrinter
	.align	2, 0
	.type	 DaycarePrintMonNickname,function
	.thumb_func
DaycarePrintMonNickname:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r3, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x8c
	mul	r0, r0, r2
	add	r5, r5, r0
	add	r0, r5, #0
	mov	r1, sp
	bl	GetBoxMonNickname
	mov	r0, sp
	add	r1, r5, #0
	bl	AppendMonGenderSymbol
	add	r0, r4, #0
	mov	r1, sp
	mov	r2, #0x8
	add	r3, r6, #0
	bl	DaycareAddTextPrinter
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 DaycarePrintMonNickname,.Lfe62-DaycarePrintMonNickname
	.align	2, 0
	.type	 DaycarePrintMonLvl,function
	.thumb_func
DaycarePrintMonLvl:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	mov	r8, r3
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L511
	mov	r0, sp
	bl	StringCopy
	mov	r0, #0x8c
	mov	r1, r6
	mul	r1, r1, r0
	add	r0, r4, r1
	add	r4, r4, #0x88
	add	r4, r4, r1
	ldr	r1, [r4]
	bl	GetLevelAfterDaycareSteps
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r4, sp, #0xc
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, #0x1
	mov	r1, sp
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	add	r0, r5, #0
	mov	r1, sp
	mov	r3, r8
	bl	DaycareAddTextPrinter
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L512:
	.align	2, 0
.L511:
	.word	gText_Lv
.Lfe63:
	.size	 DaycarePrintMonLvl,.Lfe63-DaycarePrintMonLvl
	.align	2, 0
	.type	 DaycarePrintMonInfo,function
	.thumb_func
DaycarePrintMonInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	cmp	r6, #0x1
	bhi	.L514	@cond_branch
	ldr	r0, .L515
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r4, .L515+0x4
	add	r0, r0, r4
	add	r1, r7, #0
	add	r2, r6, #0
	add	r3, r5, #0
	bl	DaycarePrintMonNickname
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r4
	add	r1, r7, #0
	add	r2, r6, #0
	add	r3, r5, #0
	bl	DaycarePrintMonLvl
.L514:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gSaveBlock1Ptr
	.word	0x3030
.Lfe64:
	.size	 DaycarePrintMonInfo,.Lfe64-DaycarePrintMonInfo
	.align	2, 0
	.type	 Task_HandleDaycareLevelMenuInput,function
	.thumb_func
Task_HandleDaycareLevelMenuInput:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L527
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4, #0x8]
	bl	ListMenu_ProcessInput
	add	r1, r0, #0
	ldr	r0, .L527+0x4
	ldrh	r2, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L518	@cond_branch
	cmp	r1, #0x1
	bls	.L521	@cond_branch
	cmp	r1, #0x5
	beq	.L522	@cond_branch
	b	.L519
.L528:
	.align	2, 0
.L527:
	.word	gTasks
	.word	gMain
.L521:
	ldr	r0, .L529
	strh	r1, [r0]
	b	.L519
.L530:
	.align	2, 0
.L529:
	.word	gSpecialVar_Result
.L522:
	ldr	r1, .L531
	mov	r0, #0x2
	strh	r0, [r1]
.L519:
	ldr	r0, .L531+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xa]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	b	.L525
.L532:
	.align	2, 0
.L531:
	.word	gSpecialVar_Result
	.word	gTasks
.L518:
	mov	r1, #0x2
	add	r0, r1, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L525	@cond_branch
	ldr	r0, .L533
	strh	r1, [r0]
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xa]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L525:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	gSpecialVar_Result
.Lfe65:
	.size	 Task_HandleDaycareLevelMenuInput,.Lfe65-Task_HandleDaycareLevelMenuInput
	.align	2, 0
	.globl	ShowDaycareLevelMenu
	.type	 ShowDaycareLevelMenu,function
	.thumb_func
ShowDaycareLevelMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x18
	ldr	r0, .L536
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	mov	r1, sp
	ldr	r0, .L536+0x4
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	mov	r0, sp
	strb	r4, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L536+0x8
	mov	r1, #0x3
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L536+0xc
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0x8]
	strh	r4, [r1, #0xa]
	add	sp, sp, #0x18
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L537:
	.align	2, 0
.L536:
	.word	sDaycareLevelMenuWindowTemplate
	.word	sDaycareListMenuLevelTemplate
	.word	Task_HandleDaycareLevelMenuInput
	.word	gTasks
.Lfe66:
	.size	 ShowDaycareLevelMenu,.Lfe66-ShowDaycareLevelMenu
	.align	2, 0
	.globl	ChooseSendDaycareMon
	.type	 ChooseSendDaycareMon,function
	.thumb_func
ChooseSendDaycareMon:
	push	{lr}
	bl	ChooseMonForDaycare
	ldr	r1, .L539
	ldr	r0, .L539+0x4
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L540:
	.align	2, 0
.L539:
	.word	gMain
	.word	CB2_ReturnToField
.Lfe67:
	.size	 ChooseSendDaycareMon,.Lfe67-ChooseSendDaycareMon
.text
	.align	2, 0

