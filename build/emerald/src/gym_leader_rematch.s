@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 GymLeaderRematches_AfterNewMauville,object
GymLeaderRematches_AfterNewMauville:
	.short	0x41
	.short	0x42
	.short	0x43
	.short	0x44
	.short	0x45
	.short	0x46
	.short	0x47
	.short	0x48
	.size	 GymLeaderRematches_AfterNewMauville,16
	.align	1, 0
	.type	 GymLeaderRematches_BeforeNewMauville,object
GymLeaderRematches_BeforeNewMauville:
	.short	0x41
	.short	0x42
	.short	0x44
	.short	0x45
	.short	0x46
	.short	0x47
	.short	0x48
	.size	 GymLeaderRematches_BeforeNewMauville,14
.text
	.align	2, 0
	.globl	UpdateGymLeaderRematch
	.type	 UpdateGymLeaderRematch,function
	.thumb_func
UpdateGymLeaderRematch:
	push	{lr}
	ldr	r0, .L6
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L3	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1e
	bhi	.L3	@cond_branch
	mov	r0, #0x5b
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldr	r0, .L6+0x4
	mov	r1, #0x8
	mov	r2, #0x5
	bl	UpdateGymLeaderRematchFromArray
	b	.L3
.L7:
	.align	2, 0
.L6:
	.word	0x864
	.word	GymLeaderRematches_AfterNewMauville
.L4:
	ldr	r0, .L8
	mov	r1, #0x7
	mov	r2, #0x1
	bl	UpdateGymLeaderRematchFromArray
.L3:
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	GymLeaderRematches_BeforeNewMauville
.Lfe1:
	.size	 UpdateGymLeaderRematch,.Lfe1-UpdateGymLeaderRematch
	.align	2, 0
	.type	 UpdateGymLeaderRematchFromArray,function
	.thumb_func
UpdateGymLeaderRematchFromArray:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r9, r0
	add	r7, r1, #0
	mov	sl, r2
	mov	r6, #0x0
	mov	r0, #0x5
	mov	r8, r0
	mov	r5, #0x0
	cmp	r5, r7
	bcs	.L12	@cond_branch
	mov	r4, r9
.L14:
	ldr	r0, .L35
	ldr	r0, [r0]
	ldrh	r1, [r4]
	ldr	r2, .L35+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L13	@cond_branch
	add	r0, r1, #0
	bl	GetRematchIndex
	cmp	r8, r0
	ble	.L16	@cond_branch
	mov	r8, r0
.L16:
	add	r6, r6, #0x1
.L13:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, r7
	bcc	.L14	@cond_branch
.L12:
	cmp	r6, #0
	beq	.L18	@cond_branch
	cmp	r8, sl
	bhi	.L18	@cond_branch
	mov	r6, #0x0
	mov	r5, #0x0
	cmp	r5, r7
	bcs	.L20	@cond_branch
	mov	r4, r9
.L22:
	ldr	r0, .L35
	ldr	r0, [r0]
	ldrh	r1, [r4]
	ldr	r2, .L35+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L21	@cond_branch
	add	r0, r1, #0
	bl	GetRematchIndex
	cmp	r0, r8
	bne	.L21	@cond_branch
	add	r6, r6, #0x1
.L21:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, r7
	bcc	.L22	@cond_branch
.L20:
	cmp	r6, #0
	beq	.L18	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	add	r6, r0, #0
	mov	r5, #0x0
	cmp	r5, r7
	bcs	.L18	@cond_branch
	ldr	r2, .L35
	ldr	r3, .L35+0x4
	mov	r4, r9
.L30:
	ldr	r0, [r2]
	ldrh	r1, [r4]
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L29	@cond_branch
	add	r0, r1, #0
	str	r2, [sp]
	str	r3, [sp, #0x4]
	bl	GetRematchIndex
	ldr	r2, [sp]
	ldr	r3, [sp, #0x4]
	cmp	r0, r8
	bne	.L29	@cond_branch
	cmp	r6, #0
	bne	.L33	@cond_branch
	ldr	r0, [r2]
	add	r0, r0, r3
	ldrh	r4, [r4]
	add	r0, r0, r4
	mov	r1, r8
	strb	r1, [r0]
	b	.L18
.L36:
	.align	2, 0
.L35:
	.word	gSaveBlock1Ptr
	.word	0x9ca
.L33:
	sub	r6, r6, #0x1
.L29:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, r7
	bcc	.L30	@cond_branch
.L18:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 UpdateGymLeaderRematchFromArray,.Lfe2-UpdateGymLeaderRematchFromArray
	.align	2, 0
	.type	 GetRematchIndex,function
	.thumb_func
GetRematchIndex:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r6, .L45
.L41:
	lsl	r0, r4, #0x1
	lsl	r1, r5, #0x4
	add	r0, r0, r1
	add	r0, r0, r6
	ldrh	r0, [r0]
	bl	HasTrainerBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L40	@cond_branch
	add	r0, r4, #0
	b	.L44
.L46:
	.align	2, 0
.L45:
	.word	gRematchTable
.L40:
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L41	@cond_branch
	mov	r0, #0x5
.L44:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetRematchIndex,.Lfe3-GetRematchIndex
.text
	.align	2, 0

