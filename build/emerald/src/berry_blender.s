@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sBerryBlenderData,object
	.size	 sBerryBlenderData,4
sBerryBlenderData:
	.word	0x0
	.align	2, 0
	.type	 sUnknown_020322A8,object
	.size	 sUnknown_020322A8,20
sUnknown_020322A8:
	.word	0x0
	.space	16
	.align	2, 0
	.type	 sUnknown_020322BC,object
	.size	 sUnknown_020322BC,20
sUnknown_020322BC:
	.word	0x0
	.space	16
	.align	2, 0
	.type	 sUnknown_020322D0,object
	.size	 sUnknown_020322D0,4
sUnknown_020322D0:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 sBlenderCenterPal,object
sBlenderCenterPal:
	.short	0x0
	.short	0x7fff
	.short	0x7f19
	.short	0x6e95
	.short	0x5e31
	.short	0x4dad
	.short	0x3d49
	.short	0x2ce5
	.short	0x5f7a
	.short	0x4ef6
	.short	0x3e72
	.short	0x2dee
	.short	0x3ebf
	.short	0x29de
	.short	0x14fd
	.short	0x73
	.size	 sBlenderCenterPal,32
	.type	 sBlenderCenterMap,object
sBlenderCenterMap:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x13
	.byte	0x14
	.byte	0x15
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x29
	.byte	0x2a
	.byte	0x2b
	.byte	0x2c
	.byte	0x2d
	.byte	0x2e
	.byte	0x2f
	.byte	0x30
	.byte	0x31
	.byte	0x32
	.byte	0x33
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x35
	.byte	0x36
	.byte	0x37
	.byte	0x38
	.byte	0x39
	.byte	0x3a
	.byte	0x3b
	.byte	0x3c
	.byte	0x3d
	.byte	0x3e
	.byte	0x3f
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x41
	.byte	0x42
	.byte	0x43
	.byte	0x44
	.byte	0x45
	.byte	0x46
	.byte	0x47
	.byte	0x48
	.byte	0x49
	.byte	0x4a
	.byte	0x4b
	.byte	0x4c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4d
	.byte	0x4e
	.byte	0x4f
	.byte	0x50
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x59
	.byte	0x5a
	.byte	0x1a
	.byte	0x5b
	.byte	0x5c
	.byte	0x5d
	.byte	0x5e
	.byte	0x5f
	.byte	0x60
	.byte	0x15
	.byte	0x61
	.byte	0x62
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x64
	.byte	0x65
	.byte	0x66
	.byte	0x67
	.byte	0x68
	.byte	0x69
	.byte	0x6a
	.byte	0x6b
	.byte	0x6c
	.byte	0x6d
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6f
	.byte	0x70
	.byte	0x71
	.byte	0x72
	.byte	0x73
	.byte	0x74
	.byte	0x75
	.byte	0x76
	.byte	0x77
	.byte	0x78
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x79
	.byte	0x7a
	.byte	0x7b
	.byte	0x7c
	.byte	0x7d
	.byte	0x7e
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sBlenderCenterMap,1024
	.align	1, 0
	.type	 sBlenderOuterPal,object
sBlenderOuterPal:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x66df
	.short	0x31df
	.short	0xdf
	.short	0x2119
	.short	0xc77
	.short	0x61f2
	.short	0x44e9
	.short	0x2801
	.size	 sBlenderOuterPal,32
	.align	1, 0
	.type	 sUnknownPal_0,object
sUnknownPal_0:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x679f
	.short	0x329f
	.short	0x1bf
	.short	0x51b
	.short	0xc77
	.short	0x1ad
	.short	0x51b
	.short	0xc77
	.size	 sUnknownPal_0,32
	.align	1, 0
	.type	 sUnknownArray_1,object
	.size	 sUnknownArray_1,448
sUnknownArray_1:
	.short	0x0
	.space	446
	.type	 sUnusedText_YesNo,object
sUnusedText_YesNo:
	.byte	0xd3
	.byte	0xbf
	.byte	0xcd
	.byte	0xfe
	.byte	0xc8
	.byte	0xc9
	.byte	0xff
	.size	 sUnusedText_YesNo,7
	.type	 sUnusedText_2,object
sUnusedText_2:
	.byte	0xef
	.byte	0xff
	.size	 sUnusedText_2,2
	.type	 sUnusedText_Space,object
sUnusedText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sUnusedText_Space,2
	.type	 sUnusedText_Terminating,object
sUnusedText_Terminating:
	.byte	0xce
	.byte	0xd9
	.byte	0xe6
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sUnusedText_Terminating,13
	.type	 sUnusedText_LinkPartnerNotFound,object
sUnusedText_LinkPartnerNotFound:
	.byte	0xc6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x5c
	.byte	0xe7
	.byte	0x5d
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xd8
	.byte	0xad
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xdb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sUnusedText_LinkPartnerNotFound,46
	.type	 sText_BerryBlenderStart,object
sText_BerryBlenderStart:
	.byte	0xcd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xfb
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xc1
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_BerryBlenderStart,97
	.type	 sText_NewParagraph,object
sText_NewParagraph:
	.byte	0xfb
	.byte	0xff
	.size	 sText_NewParagraph,2
	.type	 sText_WasMade,object
sText_WasMade:
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xab
	.byte	0xff
	.size	 sText_WasMade,11
	.type	 sText_Mister,object
sText_Mister:
	.byte	0xc7
	.byte	0xc3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xcc
	.byte	0xff
	.size	 sText_Mister,7
	.type	 sText_Laddie,object
sText_Laddie:
	.byte	0xc6
	.byte	0xbb
	.byte	0xbe
	.byte	0xbe
	.byte	0xc3
	.byte	0xbf
	.byte	0xff
	.size	 sText_Laddie,7
	.type	 sText_Lassie,object
sText_Lassie:
	.byte	0xc6
	.byte	0xbb
	.byte	0xcd
	.byte	0xcd
	.byte	0xc3
	.byte	0xbf
	.byte	0xff
	.size	 sText_Lassie,7
	.type	 sText_Master,object
sText_Master:
	.byte	0xc7
	.byte	0xbb
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xcc
	.byte	0xff
	.size	 sText_Master,7
	.type	 sText_Dude,object
sText_Dude:
	.byte	0xbe
	.byte	0xcf
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_Dude,5
	.type	 sText_Miss,object
sText_Miss:
	.byte	0xc7
	.byte	0xc3
	.byte	0xcd
	.byte	0xcd
	.byte	0xff
	.size	 sText_Miss,5
	.align	2, 0
	.type	 sBlenderOpponentsNames,object
sBlenderOpponentsNames:
	.word	sText_Mister
	.word	sText_Laddie
	.word	sText_Lassie
	.word	sText_Master
	.word	sText_Dude
	.word	sText_Miss
	.size	 sBlenderOpponentsNames,24
	.type	 sText_PressAToStart,object
sText_PressAToStart:
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbb
	.byte	0x0
	.byte	0xbc
	.byte	0xe9
	.byte	0xe8
	.byte	0xe8
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_PressAToStart,29
	.type	 sText_PleaseWaitAWhile,object
sText_PleaseWaitAWhile:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_PleaseWaitAWhile,21
	.type	 sText_CommunicationStandby,object
sText_CommunicationStandby:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0xd6
	.byte	0xed
	.byte	0xb0
	.byte	0xff
	.size	 sText_CommunicationStandby,23
	.type	 sText_WouldLikeToBlendAnotherBerry,object
sText_WouldLikeToBlendAnotherBerry:
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0xac
	.byte	0xff
	.size	 sText_WouldLikeToBlendAnotherBerry,39
	.type	 sText_RunOutOfBerriesForBlending,object
sText_RunOutOfBerriesForBlending:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xc3
	.byte	0xbf
	.byte	0xcd
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RunOutOfBerriesForBlending,62
	.type	 sText_YourPokeblockCaseIsFull,object
sText_YourPokeblockCaseIsFull:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x59
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcd
	.byte	0xbf
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_YourPokeblockCaseIsFull,26
	.type	 sText_HasNoBerriesToPut,object
sText_HasNoBerriesToPut:
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xc3
	.byte	0xbf
	.byte	0xcd
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_HasNoBerriesToPut,45
	.type	 sText_ApostropheSPokeblockCaseIsFull,object
sText_ApostropheSPokeblockCaseIsFull:
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x59
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcd
	.byte	0xbf
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe0
	.byte	0xe0
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ApostropheSPokeblockCaseIsFull,24
	.type	 sText_BlendingResults,object
sText_BlendingResults:
	.byte	0xcc
	.byte	0xbf
	.byte	0xcd
	.byte	0xcf
	.byte	0xc6
	.byte	0xce
	.byte	0xcd
	.byte	0x0
	.byte	0xc9
	.byte	0xc0
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xff
	.size	 sText_BlendingResults,20
	.type	 sText_BerryUsed,object
sText_BerryUsed:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xcf
	.byte	0xcd
	.byte	0xbf
	.byte	0xbe
	.byte	0xff
	.size	 sText_BerryUsed,11
	.type	 sText_SpaceBerry,object
sText_SpaceBerry:
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0xff
	.size	 sText_SpaceBerry,7
	.type	 sText_Time,object
sText_Time:
	.byte	0xce
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xf0
	.byte	0xff
	.size	 sText_Time,6
	.type	 sText_Min,object
sText_Min:
	.byte	0x0
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0x0
	.byte	0xff
	.size	 sText_Min,7
	.type	 sText_Sec,object
sText_Sec:
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd7
	.byte	0xad
	.byte	0xff
	.size	 sText_Sec,6
	.type	 sText_MaximumSpeed,object
sText_MaximumSpeed:
	.byte	0xc7
	.byte	0xbb
	.byte	0xd2
	.byte	0xc3
	.byte	0xc7
	.byte	0xcf
	.byte	0xc7
	.byte	0x0
	.byte	0xcd
	.byte	0xca
	.byte	0xbf
	.byte	0xbf
	.byte	0xbe
	.byte	0xff
	.size	 sText_MaximumSpeed,14
	.type	 sText_RPM,object
sText_RPM:
	.byte	0x0
	.byte	0xcc
	.byte	0xca
	.byte	0xc7
	.byte	0xff
	.size	 sText_RPM,5
	.type	 sText_Dot,object
sText_Dot:
	.byte	0xad
	.byte	0xff
	.size	 sText_Dot,2
	.type	 sText_NewLine,object
sText_NewLine:
	.byte	0xfe
	.byte	0xff
	.size	 sText_NewLine,2
	.type	 sText_Space,object
sText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sText_Space,2
	.type	 sText_Ranking,object
sText_Ranking:
	.byte	0xcc
	.byte	0xbb
	.byte	0xc8
	.byte	0xc5
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xff
	.size	 sText_Ranking,8
	.type	 sText_TheLevelIs,object
sText_TheLevelIs:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe0
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xff
	.size	 sText_TheLevelIs,14
	.type	 sText_TheFeelIs,object
sText_TheFeelIs:
	.byte	0xb8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xff
	.size	 sText_TheFeelIs,19
	.type	 sText_Dot2,object
sText_Dot2:
	.byte	0xad
	.byte	0xff
	.size	 sText_Dot2,2
	.align	2, 0
	.type	 sBerryBlenderBgTemplates,object
	.size	 sBerryBlenderBgTemplates,12
sBerryBlenderBgTemplates:
	.byte	0xfc
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xc9
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x82
	.byte	0xa
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sBerryBlender_WindowTemplates,object
sBerryBlender_WindowTemplates:
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x28
	.byte	0x0
	.byte	0x16
	.byte	0x6
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x36
	.byte	0x0
	.byte	0x1
	.byte	0xc
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x44
	.byte	0x0
	.byte	0x16
	.byte	0xc
	.byte	0x7
	.byte	0x2
	.byte	0xe
	.short	0x52
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xe
	.short	0x60
	.byte	0x0
	.byte	0x5
	.byte	0x3
	.byte	0x15
	.byte	0xe
	.byte	0xe
	.short	0x60
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sBerryBlender_WindowTemplates,56
	.align	2, 0
	.type	 sBlender_YesNoWindowTemplate,object
	.size	 sBlender_YesNoWindowTemplate,8
sBlender_YesNoWindowTemplate:
	.byte	0x0
	.byte	0x15
	.byte	0x9
	.byte	0x5
	.byte	0x4
	.byte	0xe
	.short	0xcc
	.type	 sUnknown_083399C0,object
sUnknown_083399C0:
	.byte	-0x1
	.byte	-0x1
	.byte	0x1
	.byte	-0x1
	.byte	-0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.size	 sUnknown_083399C0,8
	.type	 sBlenderSyncArrowsPos,object
	.size	 sBlenderSyncArrowsPos,8
sBlenderSyncArrowsPos:
	.byte	0x48
	.byte	0x20
	.byte	0xa8
	.byte	0x20
	.byte	0x48
	.byte	0x80
	.byte	0xa8
	.byte	0x80
	.type	 sUnknown_083399D0,object
	.size	 sUnknown_083399D0,12
sUnknown_083399D0:
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.align	1, 0
	.type	 sUnknown_083399DC,object
sUnknown_083399DC:
	.short	0x0
	.short	0xc000
	.short	0x4000
	.short	0x8000
	.size	 sUnknown_083399DC,8
	.type	 sUnknown_083399E4,object
sUnknown_083399E4:
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.size	 sUnknown_083399E4,3
	.type	 sUnknown_083399E7,object
sUnknown_083399E7:
	.byte	0x20
	.byte	0xe0
	.byte	0x60
	.byte	0xa0
	.byte	0x0
	.size	 sUnknown_083399E7,5
	.align	2, 0
	.type	 sUnknown_083399EC,object
sUnknown_083399EC:
	.word	sub_8080EA4
	.word	sub_8080FD0
	.word	sub_80810F8
	.size	 sUnknown_083399EC,12
	.align	2, 0
	.type	 sOamData_8216314,object
	.size	 sOamData_8216314,8
sOamData_8216314:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821631C,object
sSpriteAnim_821631C:
	.short	0x10
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821631C,8
	.align	2, 0
	.type	 sSpriteAnim_8216324,object
sSpriteAnim_8216324:
	.short	0x10
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216324,8
	.align	2, 0
	.type	 sSpriteAnim_821632C,object
sSpriteAnim_821632C:
	.short	0x10
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821632C,8
	.align	2, 0
	.type	 sSpriteAnim_8216334,object
sSpriteAnim_8216334:
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216334,8
	.align	2, 0
	.type	 sSpriteAnim_821633C,object
sSpriteAnim_821633C:
	.short	0x30
	.byte	0xc2
	.space	1
	.short	0x20
	.byte	0xc5
	.space	1
	.short	0x30
	.byte	0xc3
	.space	1
	.short	0x10
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821633C,20
	.align	2, 0
	.type	 sSpriteAnim_8216350,object
sSpriteAnim_8216350:
	.short	0x30
	.byte	0x82
	.space	1
	.short	0x20
	.byte	0x85
	.space	1
	.short	0x30
	.byte	0x83
	.space	1
	.short	0x10
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216350,20
	.align	2, 0
	.type	 sSpriteAnim_8216364,object
sSpriteAnim_8216364:
	.short	0x30
	.byte	0x42
	.space	1
	.short	0x20
	.byte	0x45
	.space	1
	.short	0x30
	.byte	0x43
	.space	1
	.short	0x10
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216364,20
	.align	2, 0
	.type	 sSpriteAnim_8216378,object
sSpriteAnim_8216378:
	.short	0x30
	.byte	0x2
	.space	1
	.short	0x20
	.byte	0x5
	.space	1
	.short	0x30
	.byte	0x3
	.space	1
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216378,20
	.align	2, 0
	.type	 sSpriteAnim_821638C,object
sSpriteAnim_821638C:
	.short	0x0
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821638C,8
	.align	2, 0
	.type	 sSpriteAnim_8216394,object
sSpriteAnim_8216394:
	.short	0x0
	.byte	0x85
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216394,8
	.align	2, 0
	.type	 sSpriteAnim_821639C,object
sSpriteAnim_821639C:
	.short	0x0
	.byte	0x45
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821639C,8
	.align	2, 0
	.type	 sSpriteAnim_82163A4,object
sSpriteAnim_82163A4:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_82163A4,8
	.align	2, 0
	.type	 sSpriteAnimTable_82163AC,object
sSpriteAnimTable_82163AC:
	.word	sSpriteAnim_821631C
	.word	sSpriteAnim_8216324
	.word	sSpriteAnim_821632C
	.word	sSpriteAnim_8216334
	.word	sSpriteAnim_821633C
	.word	sSpriteAnim_8216350
	.word	sSpriteAnim_8216364
	.word	sSpriteAnim_8216378
	.word	sSpriteAnim_821638C
	.word	sSpriteAnim_8216394
	.word	sSpriteAnim_821639C
	.word	sSpriteAnim_82163A4
	.size	 sSpriteAnimTable_82163AC,48
	.align	2, 0
	.type	 sSpriteSheet_BlenderArrow,object
	.size	 sSpriteSheet_BlenderArrow,8
sSpriteSheet_BlenderArrow:
	.word	gBerryBlenderArrowTiles
	.short	0x800
	.short	0xb5d1
	.align	2, 0
	.type	 sSpritePal_BlenderMisc,object
	.size	 sSpritePal_BlenderMisc,8
sSpritePal_BlenderMisc:
	.word	gBerryBlenderMiscPalette
	.short	0xb5d2
	.space	2
	.align	2, 0
	.type	 sSpritePal_BlenderArrow,object
	.size	 sSpritePal_BlenderArrow,8
sSpritePal_BlenderArrow:
	.word	gBerryBlenderArrowPalette
	.short	0x3018
	.space	2
	.align	2, 0
	.type	 sBlenderSyncArrow_SpriteTemplate,object
	.size	 sBlenderSyncArrow_SpriteTemplate,24
sBlenderSyncArrow_SpriteTemplate:
	.short	0xb5d1
	.short	0x3018
	.word	sOamData_8216314
	.word	sSpriteAnimTable_82163AC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80833F8
	.align	2, 0
	.type	 sOamData_821640C,object
	.size	 sOamData_821640C,8
sOamData_821640C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_8216414,object
sSpriteAnim_8216414:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216414,8
	.align	2, 0
	.type	 sSpriteAnim_821641C,object
sSpriteAnim_821641C:
	.short	0x4
	.byte	0x54
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821641C,8
	.align	2, 0
	.type	 sSpriteAnim_8216424,object
sSpriteAnim_8216424:
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216424,24
	.align	2, 0
	.type	 sSpriteAnim_821643C,object
sSpriteAnim_821643C:
	.short	0x8
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821643C,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216444,object
sSpriteAnimTable_8216444:
	.word	sSpriteAnim_8216414
	.word	sSpriteAnim_821641C
	.word	sSpriteAnim_8216424
	.word	sSpriteAnim_821643C
	.size	 sSpriteAnimTable_8216444,16
	.align	2, 0
	.type	 sUnknown_08339B38,object
	.size	 sUnknown_08339B38,8
sUnknown_08339B38:
	.word	gBerryBlenderMarubatsuTiles
	.short	0x200
	.short	0xbef8
	.align	2, 0
	.type	 sUnknown_08339B40,object
	.size	 sUnknown_08339B40,24
sUnknown_08339B40:
	.short	0xbef8
	.short	0xb5d2
	.word	sOamData_821640C
	.word	sSpriteAnimTable_8216444
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8082F68
	.align	2, 0
	.type	 sOamData_8216474,object
	.size	 sOamData_8216474,8
sOamData_8216474:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821647C,object
sSpriteAnim_821647C:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x5
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821647C,24
	.align	2, 0
	.type	 sSpriteAnim_8216494,object
sSpriteAnim_8216494:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216494,24
	.align	2, 0
	.type	 sSpriteAnim_82164AC,object
sSpriteAnim_82164AC:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x0
	.byte	0x2
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_82164AC,36
	.align	2, 0
	.type	 sSpriteAnim_82164D0,object
sSpriteAnim_82164D0:
	.short	0x5
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_82164D0,8
	.align	2, 0
	.type	 sSpriteAnim_82164D8,object
sSpriteAnim_82164D8:
	.short	0x6
	.byte	0xc5
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_82164D8,8
	.align	2, 0
	.type	 sSpriteAnimTable_82164E0,object
sSpriteAnimTable_82164E0:
	.word	sSpriteAnim_821647C
	.word	sSpriteAnim_8216494
	.word	sSpriteAnim_82164AC
	.word	sSpriteAnim_82164D0
	.word	sSpriteAnim_82164D8
	.size	 sSpriteAnimTable_82164E0,20
	.align	2, 0
	.type	 sUnknown_08339BD8,object
	.size	 sUnknown_08339BD8,8
sUnknown_08339BD8:
	.word	gBerryBlenderParticlesTiles
	.short	0xe0
	.short	0x5ba0
	.align	2, 0
	.type	 sUnknown_08339BE0,object
	.size	 sUnknown_08339BE0,24
sUnknown_08339BE0:
	.short	0x5ba0
	.short	0xb5d2
	.word	sOamData_8216474
	.word	sSpriteAnimTable_82164E0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_8216514,object
	.size	 sOamData_8216514,8
sOamData_8216514:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821651C,object
sSpriteAnim_821651C:
	.short	0x20
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821651C,8
	.align	2, 0
	.type	 sSpriteAnim_8216524,object
sSpriteAnim_8216524:
	.short	0x10
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216524,8
	.align	2, 0
	.type	 sSpriteAnim_821652C,object
sSpriteAnim_821652C:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_821652C,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216534,object
sSpriteAnimTable_8216534:
	.word	sSpriteAnim_821651C
	.word	sSpriteAnim_8216524
	.word	sSpriteAnim_821652C
	.size	 sSpriteAnimTable_8216534,12
	.align	2, 0
	.type	 sUnknown_08339C24,object
	.size	 sUnknown_08339C24,8
sUnknown_08339C24:
	.word	gBerryBlenderCountdownNumbersTiles
	.short	0x600
	.short	0x3039
	.align	2, 0
	.type	 sUnknown_08339C2C,object
	.size	 sUnknown_08339C2C,24
sUnknown_08339C2C:
	.short	0x3039
	.short	0xb5d2
	.word	sOamData_8216514
	.word	sSpriteAnimTable_8216534
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8083010
	.align	2, 0
	.type	 sOamData_8216560,object
	.size	 sOamData_8216560,8
sOamData_8216560:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_8216568,object
sSpriteAnim_8216568:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_8216568,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216570,object
sSpriteAnimTable_8216570:
	.word	sSpriteAnim_8216568
	.size	 sSpriteAnimTable_8216570,4
	.align	2, 0
	.type	 sUnknown_08339C58,object
	.size	 sUnknown_08339C58,8
sUnknown_08339C58:
	.word	gBerryBlenderStartTiles
	.short	0x400
	.short	0x303a
	.align	2, 0
	.type	 sUnknown_08339C60,object
	.size	 sUnknown_08339C60,24
sUnknown_08339C60:
	.short	0x303a
	.short	0xb5d2
	.word	sOamData_8216560
	.word	sSpriteAnimTable_8216570
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80830C0
	.align	1, 0
	.type	 sUnknown_08339C78,object
sUnknown_08339C78:
	.short	-0xa
	.short	0x14
	.short	0xa
	.short	0x2
	.short	0x1
	.short	0xfa
	.short	0x14
	.short	0xa
	.short	-0x2
	.short	0x1
	.short	-0xa
	.short	0x8c
	.short	0xa
	.short	0x2
	.short	-0x1
	.short	0xfa
	.short	0x8c
	.short	0xa
	.short	-0x2
	.short	-0x1
	.size	 sUnknown_08339C78,40
	.type	 sOpponentBerrySets,object
sOpponentBerrySets:
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x4
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.size	 sOpponentBerrySets,30
	.type	 sSpecialOpponentBerrySets,object
sSpecialOpponentBerrySets:
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.size	 sSpecialOpponentBerrySets,5
	.type	 sUnknown_08339CC3,object
sUnknown_08339CC3:
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.size	 sUnknown_08339CC3,5
	.type	 sUnknown_08339CC8,object
sUnknown_08339CC8:
	.byte	0x1c
	.byte	0x16
	.byte	0x13
	.byte	0x1a
	.byte	0x19
	.byte	0xe
	.byte	0xd
	.byte	0xb
	.byte	0x7
	.byte	0x15
	.size	 sUnknown_08339CC8,10
	.type	 sUnknown_08339CD2,object
sUnknown_08339CD2:
	.byte	0xfe
	.byte	0x2
	.byte	0x2
	.byte	0xce
	.byte	0xd0
	.byte	0x37
	.byte	0x44
	.byte	0x7
	.byte	0x1f
	.byte	0xc
	.byte	0x10
	.byte	0x0
	.byte	0xff
	.byte	0xfe
	.byte	0x91
	.byte	0x72
	.byte	0xce
	.byte	0xd0
	.byte	0x37
	.byte	0x44
	.byte	0x7
	.byte	0x1f
	.byte	0xc
	.byte	0x10
	.byte	0x0
	.byte	0xff
	.byte	0x6
	.byte	0x27
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0xc
	.byte	0x48
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0x16
	.byte	0x37
	.byte	0x2
	.byte	0xff
	.byte	0x0
	.byte	0xd
	.byte	0x50
	.byte	0x4b
	.byte	0x2
	.byte	0xff
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x5
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.size	 sUnknown_08339CD2,66
	.align	2, 0
	.type	 sBlenderRecordWindowTemplate,object
	.size	 sBlenderRecordWindowTemplate,8
sBlenderRecordWindowTemplate:
	.byte	0x0
	.byte	0x6
	.byte	0x4
	.byte	0x12
	.byte	0xb
	.byte	0xf
	.short	0x8
.text
	.align	2, 0
	.type	 Blender_ControlHitPitch,function
	.thumb_func
Blender_ControlHitPitch:
	push	{lr}
	ldr	r0, .L3
	ldr	r1, .L3+0x4
	ldr	r2, .L3+0x8
	ldr	r2, [r2]
	add	r2, r2, #0x4c
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	sub	r2, r2, #0x80
	lsl	r2, r2, #0x11
	asr	r2, r2, #0x10
	bl	m4aMPlayPitchControl
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gMPlayInfo_SE2
	.word	0xffff
	.word	sBerryBlenderData
.Lfe1:
	.size	 Blender_ControlHitPitch,.Lfe1-Blender_ControlHitPitch
	.align	2, 0
	.type	 VBlankCB0_BerryBlender,function
	.thumb_func
VBlankCB0_BerryBlender:
	push	{r4, lr}
	add	sp, sp, #-0x10
	bl	BerryBlender_SetBackgroundsPos
	ldr	r0, .L6
	ldr	r0, [r0]
	mov	ip, r0
	mov	r0, #0xa0
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldr	r1, [r0]
	mov	r0, #0xa2
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldr	r2, [r0]
	mov	r0, #0xa4
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r3, [r0, r4]
	mov	r0, #0xa5
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp]
	mov	r0, #0xa6
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp, #0x4]
	mov	r0, #0xa7
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	str	r0, [sp, #0x8]
	mov	r0, #0xa8
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r0, [r0]
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	bl	SetBgAffine
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	sBerryBlenderData
.Lfe2:
	.size	 VBlankCB0_BerryBlender,.Lfe2-VBlankCB0_BerryBlender
	.align	2, 0
	.type	 LoadBerryBlenderGfx,function
	.thumb_func
LoadBerryBlenderGfx:
	push	{r4, r5, lr}
	ldr	r1, .L25
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x1]
	add	r5, r1, #0
	cmp	r0, #0x9
	bls	.LCB111
	b	.L9	@long jump
.LCB111:
	lsl	r0, r0, #0x2
	ldr	r1, .L25+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L26:
	.align	2, 0
.L25:
	.word	sBerryBlenderData
	.word	.L20
	.align	2, 0
	.align	2, 0
.L20:
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
.L10:
	ldr	r5, .L27
	add	r0, r5, #0
	bl	GetDecompressedDataSize
	add	r0, r0, #0x64
	bl	AllocZeroed
	add	r1, r0, #0
	ldr	r4, .L27+0x4
	ldr	r0, [r4]
	ldr	r2, .L27+0x8
	add	r0, r0, r2
	str	r1, [r0]
	add	r0, r5, #0
	bl	LZDecompressWram
	ldr	r1, [r4]
	b	.L23
.L28:
	.align	2, 0
.L27:
	.word	sBlenderCenterGfx
	.word	sBerryBlenderData
	.word	0x11bc
.L11:
	ldr	r1, .L29
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	mov	r0, #0x2
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L29+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	b	.L24
.L30:
	.align	2, 0
.L29:
	.word	sBlenderCenterMap
	.word	sBlenderCenterPal
.L12:
	ldr	r0, [r5]
	ldr	r1, .L31
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L31+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x2
	add	r1, r4, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r5]
	b	.L23
.L32:
	.align	2, 0
.L31:
	.word	0x11bc
	.word	sBlenderCenterGfx
.L13:
	ldr	r0, .L33
	ldr	r1, [r5]
	ldr	r2, .L33+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	LZDecompressWram
	ldr	r1, [r5]
	b	.L23
.L34:
	.align	2, 0
.L33:
	.word	gUnknown_08D91DB8
	.word	0x11bc
.L14:
	ldr	r0, [r5]
	ldr	r1, .L35
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L35+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r5]
	b	.L23
.L36:
	.align	2, 0
.L35:
	.word	0x11bc
	.word	gUnknown_08D91DB8
.L15:
	ldr	r0, .L37
	ldr	r1, [r5]
	ldr	r2, .L37+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	LZDecompressWram
	ldr	r1, [r5]
	b	.L23
.L38:
	.align	2, 0
.L37:
	.word	gUnknown_08D927EC
	.word	0x11bc
.L16:
	ldr	r0, [r5]
	ldr	r1, .L39
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r0, .L39+0x4
	bl	GetDecompressedDataSize
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [r5]
	b	.L23
.L40:
	.align	2, 0
.L39:
	.word	0x11bc
	.word	gUnknown_08D927EC
.L17:
	ldr	r0, .L41
	mov	r1, #0x80
	mov	r2, #0x20
	bl	LoadPalette
	b	.L24
.L42:
	.align	2, 0
.L41:
	.word	sBlenderOuterPal
.L18:
	ldr	r0, .L43
	bl	LoadSpriteSheet
	ldr	r0, .L43+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L43+0x8
	bl	LoadSpriteSheet
.L24:
	ldr	r0, .L43+0xc
	ldr	r1, [r0]
.L23:
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	b	.L9
.L44:
	.align	2, 0
.L43:
	.word	sSpriteSheet_BlenderArrow
	.word	sUnknown_08339BD8
	.word	sUnknown_08339B38
	.word	sBerryBlenderData
.L19:
	ldr	r0, .L45
	bl	LoadSpriteSheet
	ldr	r0, .L45+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L45+0x8
	bl	LoadSpritePalette
	ldr	r0, .L45+0xc
	bl	LoadSpritePalette
	ldr	r4, .L45+0x10
	ldr	r0, [r4]
	ldr	r2, .L45+0x14
	add	r0, r0, r2
	ldr	r0, [r0]
	bl	Free
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	b	.L22
.L46:
	.align	2, 0
.L45:
	.word	sUnknown_08339C24
	.word	sUnknown_08339C58
	.word	sSpritePal_BlenderArrow
	.word	sSpritePal_BlenderMisc
	.word	sBerryBlenderData
	.word	0x11bc
.L9:
	mov	r0, #0x0
.L22:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 LoadBerryBlenderGfx,.Lfe3-LoadBerryBlenderGfx
	.align	2, 0
	.type	 sub_807F9D0,function
	.thumb_func
sub_807F9D0:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuRegBits
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_807F9D0,.Lfe4-sub_807F9D0
	.align	2, 0
	.type	 InitBerryBlenderWindows,function
	.thumb_func
InitBerryBlenderWindows:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L55
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L49	@cond_branch
	bl	DeactivateAllTextPrinters
	mov	r4, #0x0
.L53:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L53	@cond_branch
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0xe0
	bl	Menu_LoadStdPalAt
.L49:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	sBerryBlender_WindowTemplates
.Lfe5:
	.size	 InitBerryBlenderWindows,.Lfe5-InitBerryBlenderWindows
	.align	2, 0
	.globl	DoBerryBlending
	.type	 DoBerryBlending,function
	.thumb_func
DoBerryBlending:
	push	{r4, lr}
	ldr	r4, .L59
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L58	@cond_branch
	mov	r0, #0x8f
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	str	r0, [r4]
.L58:
	ldr	r0, [r4]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x63
	strb	r1, [r0]
	ldr	r0, .L59+0x4
	ldrb	r0, [r0]
	bl	Blender_SetPlayerNamesLocal
	ldr	r0, .L59+0x8
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L60:
	.align	2, 0
.L59:
	.word	sBerryBlenderData
	.word	gSpecialVar_0x8004
	.word	sub_807FAC8
.Lfe6:
	.size	 DoBerryBlending,.Lfe6-DoBerryBlending
	.align	2, 0
	.type	 sub_807FAC8,function
	.thumb_func
sub_807FAC8:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L84
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0x6
	bls	.LCB568
	b	.L62	@long jump
.LCB568:
	lsl	r0, r0, #0x2
	ldr	r1, .L84+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L85:
	.align	2, 0
.L84:
	.word	sBerryBlenderData
	.word	.L80
	.align	2, 0
	.align	2, 0
.L80:
	.word	.L63
	.word	.L64
	.word	.L72
	.word	.L73
	.word	.L75
	.word	.L77
	.word	.L78
.L63:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L86
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L86+0x4
	ldr	r1, [r4]
	mov	r0, #0xdc
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L86+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	bl	InitBerryBlenderWindows
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r3, [r4]
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	mov	r1, #0x0
	strh	r2, [r0]
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	strh	r2, [r0]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r4, r3, r0
	mov	r0, #0x50
	strh	r0, [r4]
	mov	r4, #0x8e
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	strh	r2, [r0]
	add	r4, r4, #0x2
	add	r0, r3, r4
	strh	r2, [r0]
	strb	r1, [r3, #0x1]
	bl	sub_8082D28
	b	.L62
.L87:
	.align	2, 0
.L86:
	.word	sBerryBlenderBgTemplates
	.word	sBerryBlenderData
	.word	0x9b8
.L64:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB677
	b	.L62	@long jump
.LCB677:
	mov	r4, #0x0
	ldr	r5, .L88
	ldr	r6, .L88+0x4
.L69:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L88+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x50
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x50
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L88+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L69	@cond_branch
	ldr	r0, .L88+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L71	@cond_branch
	ldr	r0, .L88+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L71	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
.L71:
	ldr	r0, .L88+0x18
	bl	SetVBlankCallback
	b	.L82
.L89:
	.align	2, 0
.L88:
	.word	sBlenderSyncArrowsPos
	.word	sBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	VBlankCB0_BerryBlender
.L72:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	bl	sub_8082D28
	b	.L82
.L73:
	bl	sub_807F9D0
	ldr	r0, .L90
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L62	@cond_branch
	b	.L82
.L91:
	.align	2, 0
.L90:
	.word	gPaletteFade
.L75:
	ldr	r4, [r6]
	ldr	r0, .L92
	add	r4, r4, r0
	ldr	r5, .L92+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L62	@cond_branch
	ldr	r1, [r6]
	b	.L83
.L93:
	.align	2, 0
.L92:
	.word	0x11b8
	.word	sText_BerryBlenderStart
.L77:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L82:
	ldr	r0, .L94
	ldr	r1, [r0]
.L83:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L62
.L95:
	.align	2, 0
.L94:
	.word	sBerryBlenderData
.L78:
	ldr	r0, .L96
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L62	@cond_branch
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L96+0x4
	bl	ChooseBerrySetCallback
	ldr	r0, .L96+0x8
	ldr	r0, [r0]
	strb	r4, [r0]
.L62:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gPaletteFade
	.word	sub_807FFA4
	.word	sBerryBlenderData
.Lfe7:
	.size	 sub_807FAC8,.Lfe7-sub_807FAC8
	.align	2, 0
	.type	 sub_807FD08,function
	.thumb_func
sub_807FD08:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x3a]
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x30]
	ldrh	r1, [r4, #0x32]
	ldrh	r2, [r4, #0x36]
	sub	r1, r1, r2
	ldrh	r0, [r4, #0x3c]
	add	r1, r1, r0
	strh	r1, [r4, #0x32]
	ldrh	r3, [r4, #0x2e]
	add	r0, r0, r3
	strh	r0, [r4, #0x2e]
	sub	r2, r2, #0x1
	strh	r2, [r4, #0x36]
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	cmp	r0, r1
	bge	.L99	@cond_branch
	ldrh	r0, [r4, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x36]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	ble	.L100	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	b	.L99
.L100:
	mov	r0, #0x74
	bl	PlaySE
.L99:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x32]
	strh	r0, [r4, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 sub_807FD08,.Lfe8-sub_807FD08
	.align	2, 0
	.type	 sub_807FD64,function
	.thumb_func
sub_807FD64:
	push	{r4, r5, r6, lr}
	ldr	r5, [sp, #0x10]
	ldr	r6, [sp, #0x14]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r4, #0x0
	strh	r2, [r0, #0x2e]
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
	strh	r3, [r0, #0x34]
	mov	r1, #0xa
	strh	r1, [r0, #0x36]
	strh	r4, [r0, #0x38]
	strh	r5, [r0, #0x3a]
	strh	r6, [r0, #0x3c]
	ldr	r1, .L103
	str	r1, [r0, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	sub_807FD08
.Lfe9:
	.size	 sub_807FD64,.Lfe9-sub_807FD64
	.align	2, 0
	.type	 sub_807FD90,function
	.thumb_func
sub_807FD90:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r6, r1, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r0, r0, #0x18
	mov	r1, #0xf6
	lsl	r1, r1, #0x17
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	mov	r3, #0x1
	and	r3, r3, r6
	mov	r1, #0x0
	mov	r2, #0x50
	bl	LoadSpinningBerryPicGfx
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	mov	r8, r2
	add	r8, r8, r0
	mov	r3, r8
	lsl	r3, r3, #0x2
	mov	r8, r3
	ldr	r0, .L106
	add	r8, r8, r0
	ldr	r5, .L106+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x1
	add	r0, r4, r5
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	add	r0, r5, #0x2
	add	r0, r4, r0
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	add	r0, r5, #0x4
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r3, [r0, r6]
	add	r0, r5, #0x6
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r0, [r0, r6]
	str	r0, [sp]
	add	r5, r5, #0x8
	add	r4, r4, r5
	mov	r5, #0x0
	ldrsh	r0, [r4, r5]
	str	r0, [sp, #0x4]
	mov	r0, r8
	bl	sub_807FD64
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gSprites
	.word	sUnknown_08339C78
.Lfe10:
	.size	 sub_807FD90,.Lfe10-sub_807FD90
	.align	2, 0
	.type	 Blender_CopyBerryData,function
	.thumb_func
Blender_CopyBerryData:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r5, r1, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	add	r0, r0, #0x7c
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBerryInfo
	add	r4, r0, #0
	strh	r5, [r6]
	add	r0, r6, #0x2
	add	r1, r4, #0
	bl	StringCopy
	ldrb	r0, [r4, #0x15]
	strb	r0, [r6, #0x9]
	ldrb	r0, [r4, #0x16]
	strb	r0, [r6, #0xa]
	ldrb	r0, [r4, #0x17]
	strb	r0, [r6, #0xb]
	ldrb	r0, [r4, #0x18]
	strb	r0, [r6, #0xc]
	ldrb	r0, [r4, #0x19]
	strb	r0, [r6, #0xd]
	ldrb	r0, [r4, #0x1a]
	strb	r0, [r6, #0xe]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 Blender_CopyBerryData,.Lfe11-Blender_CopyBerryData
	.align	2, 0
	.type	 Blender_SetPlayerNamesLocal,function
	.thumb_func
Blender_SetPlayerNamesLocal:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	beq	.L112	@cond_branch
	cmp	r5, #0x1
	bgt	.L119	@cond_branch
	cmp	r5, #0
	beq	.L111	@cond_branch
	b	.L110
.L119:
	cmp	r5, #0x2
	beq	.L115	@cond_branch
	cmp	r5, #0x3
	beq	.L116	@cond_branch
	b	.L110
.L111:
	ldr	r0, .L120
	strb	r5, [r0]
	b	.L110
.L121:
	.align	2, 0
.L120:
	.word	gInGameOpponentsNo
.L112:
	ldr	r0, .L122
	strb	r5, [r0]
	ldr	r0, .L122+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r4, .L122+0x8
	ldr	r0, .L122+0xc
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L113	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r1, .L122+0x10
	ldr	r1, [r1, #0xc]
	bl	StringCopy
	b	.L114
.L123:
	.align	2, 0
.L122:
	.word	gInGameOpponentsNo
	.word	sBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.L113:
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r1, .L124
	ldr	r1, [r1]
	bl	StringCopy
.L114:
	ldr	r1, .L124+0x4
	mov	r0, #0x2
	strh	r0, [r1, #0x1a]
	strh	r0, [r1, #0x36]
	b	.L110
.L125:
	.align	2, 0
.L124:
	.word	sBlenderOpponentsNames
	.word	gLinkPlayers
.L115:
	ldr	r0, .L126
	strb	r5, [r0]
	ldr	r0, .L126+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r6, .L126+0x8
	ldr	r0, .L126+0xc
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0x1c
	ldr	r4, .L126+0x10
	ldr	r1, [r4, #0x10]
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0x38
	ldr	r1, [r4, #0x8]
	bl	StringCopy
	add	r0, r6, #0
	sub	r0, r0, #0x8
	strh	r5, [r0, #0x1a]
	strh	r5, [r0, #0x36]
	add	r0, r0, #0x52
	strh	r5, [r0]
	b	.L110
.L127:
	.align	2, 0
.L126:
	.word	gInGameOpponentsNo
	.word	sBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.L116:
	ldr	r0, .L128
	strb	r5, [r0]
	ldr	r0, .L128+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	mov	r1, #0x4
	strb	r1, [r0]
	ldr	r5, .L128+0x8
	ldr	r0, .L128+0xc
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x1c
	ldr	r4, .L128+0x10
	ldr	r1, [r4, #0x14]
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x38
	ldr	r1, [r4, #0x4]
	bl	StringCopy
	add	r0, r5, #0
	add	r0, r0, #0x54
	ldr	r1, [r4, #0x8]
	bl	StringCopy
	add	r0, r5, #0
	sub	r0, r0, #0x8
	mov	r1, #0x2
	strh	r1, [r0, #0x1a]
	strh	r1, [r0, #0x36]
	add	r0, r0, #0x52
	strh	r1, [r0]
	add	r0, r0, #0x1c
	strh	r1, [r0]
.L110:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gInGameOpponentsNo
	.word	sBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2Ptr
	.word	sBlenderOpponentsNames
.Lfe12:
	.size	 Blender_SetPlayerNamesLocal,.Lfe12-Blender_SetPlayerNamesLocal
	.align	2, 0
	.type	 sub_807FFA4,function
	.thumb_func
sub_807FFA4:
	push	{r4, r5, lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r4, .L139
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L131	@cond_branch
	mov	r0, #0x8f
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	str	r0, [r4]
.L131:
	ldr	r0, [r4]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	mov	r2, #0x86
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	str	r1, [r0]
	mov	r2, #0x0
	ldr	r5, .L139+0x4
	mov	r3, #0x0
.L135:
	ldr	r0, [r4]
	lsl	r1, r2, #0x1
	add	r0, r0, #0x74
	add	r0, r0, r1
	strh	r3, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L135	@cond_branch
	ldrb	r0, [r5]
	bl	Blender_SetPlayerNamesLocal
	ldrh	r0, [r5]
	cmp	r0, #0
	bne	.L137	@cond_branch
	ldr	r0, .L139+0x8
	bl	SetMainCallback2
	b	.L138
.L140:
	.align	2, 0
.L139:
	.word	sBerryBlenderData
	.word	gSpecialVar_0x8004
	.word	sub_8080018
.L137:
	ldr	r0, .L141
	bl	SetMainCallback2
.L138:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	sub_80808D4
.Lfe13:
	.size	 sub_807FFA4,.Lfe13-sub_807FFA4
	.align	2, 0
	.type	 sub_8080018,function
	.thumb_func
sub_8080018:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L211
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x15
	bls	.LCB1412
	b	.L144	@long jump
.LCB1412:
	lsl	r0, r0, #0x2
	ldr	r1, .L211+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L212:
	.align	2, 0
.L211:
	.word	sBerryBlenderData
	.word	.L205
	.align	2, 0
	.align	2, 0
.L205:
	.word	.L145
	.word	.L156
	.word	.L158
	.word	.L165
	.word	.L166
	.word	.L168
	.word	.L144
	.word	.L144
	.word	.L169
	.word	.L170
	.word	.L173
	.word	.L181
	.word	.L188
	.word	.L192
	.word	.L194
	.word	.L196
	.word	.L198
	.word	.L144
	.word	.L209
	.word	.L200
	.word	.L201
	.word	.L203
.L145:
	bl	sub_8080588
	ldr	r1, .L213
	ldr	r2, .L213+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r2, .L213+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x72
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r5, #0x0
	mov	r6, #0x0
	mov	r7, #0x92
	lsl	r7, r7, #0x1
.L149:
	ldr	r0, [r2]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r6, [r0]
	add	r4, r5, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x1
	mov	r3, #0x2
.L153:
	ldr	r0, [r2]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L153	@cond_branch
	add	r5, r4, #0
	cmp	r5, #0x3
	ble	.L149	@cond_branch
	ldr	r3, .L213+0x8
	ldr	r4, [r3]
	add	r1, r4, #0
	add	r1, r1, #0x70
	mov	r2, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	sub	r1, r1, #0x22
	strh	r0, [r1]
	strb	r2, [r4, #0x1]
	ldr	r1, [r3]
	b	.L208
.L214:
	.align	2, 0
.L213:
	.word	gLinkType
	.word	0x4422
	.word	sBerryBlenderData
.L156:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1516
	b	.L144	@long jump
.LCB1516:
	ldr	r0, .L215
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_8082D28
	b	.L144
.L216:
	.align	2, 0
.L215:
	.word	sBerryBlenderData
.L158:
	mov	r5, #0x0
	ldr	r4, .L217
	ldr	r6, .L217+0x4
.L162:
	ldrb	r1, [r4]
	ldrb	r2, [r4, #0x1]
	ldr	r0, .L217+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x54
	add	r1, r1, r5
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x54
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L217+0xc
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L162	@cond_branch
	ldr	r0, .L217+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1583
	b	.L209	@long jump
.LCB1583:
	ldr	r0, .L217+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB1589
	b	.L209	@long jump
.LCB1589:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L209
.L218:
	.align	2, 0
.L217:
	.word	sBlenderSyncArrowsPos
	.word	sBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L165:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L209
.L166:
	bl	sub_807F9D0
	ldr	r0, .L219
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1630
	b	.L144	@long jump
.LCB1630:
	b	.L209
.L220:
	.align	2, 0
.L219:
	.word	gPaletteFade
.L168:
	ldr	r4, .L221
	ldr	r0, [r4]
	ldr	r3, .L221+0x4
	add	r0, r0, r3
	ldr	r1, .L221+0x8
	mov	r2, #0x0
	bl	Blender_PrintText
	ldr	r1, [r4]
	mov	r2, #0x0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r2, [r0]
	b	.L144
.L222:
	.align	2, 0
.L221:
	.word	sBerryBlenderData
	.word	0x11b8
	.word	sText_CommunicationStandby
.L169:
	ldr	r4, .L223
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r6, #0x0
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r2, #0x8a
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	strb	r6, [r0]
	ldr	r0, [r4]
	mov	r5, #0xac
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	ldr	r1, .L223+0x4
	ldrh	r1, [r1]
	bl	Blender_CopyBerryData
	ldr	r0, .L223+0x8
	ldr	r1, [r4]
	add	r1, r1, r5
	mov	r2, #0x10
	bl	memcpy
	bl	sub_800ADF8
	ldr	r0, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	str	r6, [r0]
	b	.L144
.L224:
	.align	2, 0
.L223:
	.word	sBerryBlenderData
	.word	gSpecialVar_ItemId
	.word	gBlockSendBuffer
.L170:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1723
	b	.L144	@long jump
.LCB1723:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1731
	b	.L209	@long jump
.LCB1731:
	mov	r0, #0x4
	bl	sub_800A4D8
	b	.L209
.L173:
	ldr	r6, .L225
	ldr	r1, [r6]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB1748
	b	.L144	@long jump
.LCB1748:
	mov	r0, #0x4
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	sub_800A9D8
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.LCB1762
	b	.L144	@long jump
.LCB1762:
	mov	r5, #0x0
	add	r7, r6, #0
	mov	r6, #0xac
	lsl	r6, r6, #0x1
	b	.L176
.L226:
	.align	2, 0
.L225:
	.word	sBerryBlenderData
.L179:
	ldr	r0, [r7]
	lsl	r4, r5, #0x4
	add	r0, r4, r0
	add	r0, r0, r6
	lsl	r1, r5, #0x8
	ldr	r2, .L227
	add	r1, r1, r2
	mov	r2, #0x10
	bl	memcpy
	ldr	r0, [r7]
	lsl	r2, r5, #0x1
	add	r1, r0, #0
	add	r1, r1, #0x74
	add	r1, r1, r2
	add	r0, r0, r4
	add	r0, r0, r6
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r5, r5, #0x1
.L176:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L179	@cond_branch
	bl	ResetBlockReceivedFlags
	b	.L209
.L228:
	.align	2, 0
.L227:
	.word	gBlockRecvBuffer
.L207:
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x74
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	bl	sub_807FD90
	b	.L183
.L181:
	bl	GetLinkPlayerCount
	ldr	r2, .L229
	ldr	r1, [r2]
	add	r1, r1, #0x7c
	strb	r0, [r1]
	mov	r5, #0x0
	ldr	r2, [r2]
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r4, r2, r1
	ldr	r1, .L229+0x4
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	ldrb	r3, [r4]
	add	r0, r0, r1
.L185:
	ldrb	r1, [r0]
	cmp	r3, r1
	beq	.L207	@cond_branch
	add	r0, r0, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L185	@cond_branch
.L183:
	ldr	r3, .L229
	ldr	r1, [r3]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r2, #0x8a
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	b	.L208
.L230:
	.align	2, 0
.L229:
	.word	sBerryBlenderData
	.word	sUnknown_083399D0
.L188:
	ldr	r3, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB1912
	b	.L144	@long jump
.LCB1912:
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	add	r1, r3, #0
	add	r1, r1, #0x7c
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L190	@cond_branch
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
	ldr	r2, [r2]
	ldr	r3, .L231
	ldr	r1, .L231+0x4
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldr	r3, .L231+0x8
	add	r1, r3, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r2, r2, #0x4a
	strh	r1, [r2]
	b	.L191
.L232:
	.align	2, 0
.L231:
	.word	sUnknown_083399DC
	.word	sUnknown_083399E4
	.word	-0x5800
.L190:
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
	strb	r0, [r3]
.L191:
	ldr	r0, .L233
	ldr	r0, [r0]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	str	r1, [r0]
	b	.L144
.L234:
	.align	2, 0
.L233:
	.word	sBerryBlenderData
.L192:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1989
	b	.L144	@long jump
.LCB1989:
	ldr	r2, .L235
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	bl	sub_8082CB4
	mov	r0, #0x2b
	bl	PlaySE
	mov	r0, #0x2
	bl	ShowBg
	b	.L144
.L236:
	.align	2, 0
.L235:
	.word	sBerryBlenderData
.L194:
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldr	r4, .L237
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r3, [r1]
	add	r0, r0, r3
	strh	r0, [r1]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L195	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x2
	bl	SetGpuRegBits
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r3, [r4]
	mov	r2, #0x8d
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L237+0x4
	ldr	r1, .L237+0x8
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x4a
	strh	r0, [r1]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x34
	bl	PlaySE
	bl	sub_808074C
	bl	Blender_PrintPlayerNames
.L195:
	ldr	r0, [r4]
	b	.L210
.L238:
	.align	2, 0
.L237:
	.word	sBerryBlenderData
	.word	sUnknown_083399DC
	.word	sUnknown_083399E4
.L196:
	bl	sub_8083380
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L197	@cond_branch
	ldr	r0, .L239
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L197:
	ldr	r0, .L239
	ldr	r0, [r0]
.L210:
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_8082CB4
	b	.L144
.L240:
	.align	2, 0
.L239:
	.word	sBerryBlenderData
.L198:
	ldr	r0, .L241
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
	b	.L209
.L242:
	.align	2, 0
.L241:
	.word	sUnknown_08339C2C
.L200:
	bl	sub_800ADF8
	b	.L209
.L201:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L144	@cond_branch
	bl	sub_800A418
.L209:
	ldr	r0, .L243
	ldr	r1, [r0]
.L208:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L144
.L244:
	.align	2, 0
.L243:
	.word	sBerryBlenderData
.L203:
	ldr	r5, .L245
	ldr	r3, [r5]
	add	r1, r3, #0
	add	r1, r1, #0x4c
	mov	r2, #0x0
	mov	r0, #0x80
	strh	r0, [r1]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	str	r2, [r0]
	ldr	r0, .L245+0x4
	bl	SetMainCallback2
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L245+0x8
	cmp	r0, r4
	beq	.L204	@cond_branch
	bl	GetCurrentMapMusic
	ldr	r1, [r5]
	mov	r2, #0xaa
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	strh	r0, [r1]
.L204:
	add	r0, r4, #0
	bl	PlayBGM
.L144:
	ldr	r0, .L245
	ldr	r1, [r0]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r3, r3, #0x2
	add	r1, r1, r3
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	sBerryBlenderData
	.word	sub_8081898
	.word	0x193
.Lfe14:
	.size	 sub_8080018,.Lfe14-sub_8080018
	.align	2, 0
	.type	 sub_8080588,function
	.thumb_func
sub_8080588:
	push	{r4, lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L248
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L248+0x4
	mov	r0, #0x1
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r4, .L248+0x8
	ldr	r1, [r4]
	mov	r0, #0xdc
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r3, .L248+0xc
	add	r1, r1, r3
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	bl	InitBerryBlenderWindows
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x44
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x8
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	VBlankCB0_BerryBlender
	.word	sBerryBlenderBgTemplates
	.word	sBerryBlenderData
	.word	0x9b8
.Lfe15:
	.size	 sub_8080588,.Lfe15-sub_8080588
	.align	2, 0
	.type	 sub_8080624,function
	.thumb_func
sub_8080624:
	push	{lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	add	r2, r2, #0x18
	ldr	r0, .L255
	ldr	r0, [r0]
	lsr	r1, r1, #0x17
	add	r0, r0, #0x96
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L255+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r2, r1
	bcc	.L251	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x30
	cmp	r2, r0
	bcs	.L251	@cond_branch
	sub	r0, r0, #0x1c
	cmp	r2, r0
	bcc	.L252	@cond_branch
	add	r0, r0, #0x8
	cmp	r2, r0
	bcs	.L252	@cond_branch
	mov	r0, #0x2
	b	.L254
.L256:
	.align	2, 0
.L255:
	.word	sBerryBlenderData
	.word	sUnknown_083399E7
.L252:
	mov	r0, #0x1
	b	.L254
.L251:
	mov	r0, #0x0
.L254:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 sub_8080624,.Lfe16-sub_8080624
	.align	2, 0
	.type	 Blender_SetOpponentsBerryData,function
	.thumb_func
Blender_SetOpponentsBerryData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r6, #0x0
	cmp	r5, #0xaf
	bne	.L258	@cond_branch
	mov	r4, #0x0
	sub	r7, r1, #0x1
	add	r2, r2, #0x9
.L262:
	add	r0, r2, r6
	add	r1, r2, r4
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L261	@cond_branch
	add	r6, r4, #0
.L261:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L262	@cond_branch
	add	r0, r6, #0x5
	b	.L274
.L258:
	add	r0, r5, #0
	sub	r0, r0, #0x85
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	sub	r7, r1, #0x1
	cmp	r6, #0x4
	bls	.L265	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x5
	bl	__umodsi3
	add	r0, r0, #0x5
.L274:
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L265:
	mov	r4, #0x0
	cmp	r4, r7
	bge	.L268	@cond_branch
	ldr	r0, .L275
	mov	r9, r0
	add	r0, r5, #0
	sub	r0, r0, #0xa3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
.L270:
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	add	r0, r4, r0
	add	r0, r0, r9
	ldrb	r5, [r0]
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L271	@cond_branch
	ldr	r0, .L275+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L271	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L275+0x8
	add	r0, r6, r0
	ldrb	r5, [r0]
	mov	r0, r8
	cmp	r0, #0x4
	bhi	.L271	@cond_branch
	sub	r0, r5, #0x5
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L271:
	add	r4, r4, #0x1
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	add	r1, r1, #0x85
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Blender_SetParticipantBerryData
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, r7
	blt	.L270	@cond_branch
.L268:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	sOpponentBerrySets
	.word	gSpecialVar_0x8004
	.word	sSpecialOpponentBerrySets
.Lfe17:
	.size	 Blender_SetOpponentsBerryData,.Lfe17-Blender_SetOpponentsBerryData
	.align	2, 0
	.type	 sub_808074C,function
	.thumb_func
sub_808074C:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r7, .L294
	mov	r6, #0xff
	ldr	r5, .L294+0x4
.L281:
	ldr	r3, [r7]
	lsl	r2, r4, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x96
	add	r0, r0, r2
	strh	r6, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x8e
	add	r1, r1, r2
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	strh	r0, [r1]
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L281	@cond_branch
	mov	r3, #0x0
	ldr	r7, .L294
.L286:
	mov	r4, #0x0
	add	r6, r3, #0x1
	lsl	r5, r3, #0x1
.L290:
	ldr	r2, [r7]
	lsl	r0, r4, #0x1
	add	r1, r2, #0
	add	r1, r1, #0x8e
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L289	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x96
	add	r0, r0, r5
	strh	r4, [r0]
.L289:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L290	@cond_branch
	add	r3, r6, #0
	cmp	r3, #0x3
	ble	.L286	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	sBerryBlenderData
	.word	sUnknown_083399D0
.Lfe18:
	.size	 sub_808074C,.Lfe18-sub_808074C
	.align	2, 0
	.type	 Blender_PrintPlayerNames,function
	.thumb_func
Blender_PrintPlayerNames:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	mov	r0, #0x0
	mov	sl, r0
	ldr	r0, .L306
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L297	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L297:
	mov	r6, #0x0
	ldr	r7, .L306+0x4
	mov	r8, r6
.L301:
	ldr	r2, [r7]
	lsl	r5, r6, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x8e
	add	r3, r0, r5
	ldrh	r0, [r3]
	cmp	r0, #0xff
	beq	.L300	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x50
	ldrh	r3, [r3]
	add	r1, r1, r3
	add	r0, r2, #0
	add	r0, r0, #0x54
	add	r0, r0, r6
	ldrb	r0, [r0]
	mov	r2, #0x0
	mov	r9, r2
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r1, r0, #0
	add	r1, r1, #0x8e
	add	r1, r1, r5
	add	r0, r0, #0x50
	ldrh	r1, [r1]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L306+0x8
	add	r0, r0, r1
	mov	r1, r8
	lsr	r4, r1, #0x18
	add	r1, r4, #0
	bl	StartSpriteAnim
	add	r1, sp, #0x8
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x8e
	add	r0, r0, r5
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L306+0xc
	add	r1, r1, r0
	add	r0, sp, #0x8
	bl	StringCopy
	mov	r0, #0x1
	add	r1, sp, #0x8
	mov	r2, #0x38
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	ldr	r0, [r7]
	add	r0, r0, #0x8e
	add	r0, r0, r5
	mov	r5, r8
	ldrh	r0, [r0]
	cmp	sl, r0
	bne	.L303	@cond_branch
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, r9
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	add	r1, sp, #0x8
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	b	.L304
.L307:
	.align	2, 0
.L306:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlenderData
	.word	gSprites
	.word	gLinkPlayers+0x8
.L303:
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, r9
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	add	r1, sp, #0x8
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
.L304:
	lsr	r4, r5, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L300:
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r8, r8, r2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L301	@cond_branch
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 Blender_PrintPlayerNames,.Lfe19-Blender_PrintPlayerNames
	.align	2, 0
	.type	 sub_80808D4,function
	.thumb_func
sub_80808D4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L371
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x15
	bls	.LCB2824
	b	.L309	@long jump
.LCB2824:
	lsl	r0, r0, #0x2
	ldr	r1, .L371+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L372:
	.align	2, 0
.L371:
	.word	sBerryBlenderData
	.word	.L365
	.align	2, 0
	.align	2, 0
.L365:
	.word	.L310
	.word	.L321
	.word	.L323
	.word	.L329
	.word	.L330
	.word	.L309
	.word	.L309
	.word	.L309
	.word	.L333
	.word	.L309
	.word	.L309
	.word	.L334
	.word	.L341
	.word	.L345
	.word	.L346
	.word	.L348
	.word	.L350
	.word	.L309
	.word	.L353
	.word	.L352
	.word	.L353
	.word	.L354
.L310:
	bl	sub_800B4C0
	bl	sub_8080588
	ldr	r4, .L373
	ldrh	r1, [r4]
	mov	r0, #0x0
	bl	Blender_SetParticipantBerryData
	ldr	r5, .L373+0x4
	ldr	r0, [r5]
	mov	r6, #0xac
	lsl	r6, r6, #0x1
	add	r0, r0, r6
	ldrh	r1, [r4]
	bl	Blender_CopyBerryData
	ldrh	r0, [r4]
	ldr	r2, [r5]
	add	r1, r2, #0
	add	r1, r1, #0x7c
	ldrb	r1, [r1]
	add	r2, r2, r6
	bl	Blender_SetOpponentsBerryData
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r0, .L373+0x8
	mov	ip, r0
	mov	r7, #0x92
	lsl	r7, r7, #0x1
.L314:
	ldr	r0, [r5]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r6, [r0]
	add	r3, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x1
	mov	r2, #0x2
.L318:
	ldr	r0, [r5]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L318	@cond_branch
	add	r4, r3, #0
	cmp	r4, #0x3
	ble	.L314	@cond_branch
	ldr	r4, .L373+0x4
	ldr	r3, [r4]
	add	r1, r3, #0
	add	r1, r1, #0x70
	mov	r2, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	strb	r2, [r3, #0x1]
	ldr	r1, .L373+0xc
	add	r0, r1, #0
	mov	r2, ip
	strh	r0, [r2]
	ldr	r1, [r4]
	b	.L368
.L374:
	.align	2, 0
.L373:
	.word	gSpecialVar_ItemId
	.word	sBerryBlenderData
	.word	gLinkType
	.word	0x4422
.L321:
	bl	LoadBerryBlenderGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2949
	b	.L309	@long jump
.LCB2949:
	ldr	r0, .L375
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_8082D28
	b	.L309
.L376:
	.align	2, 0
.L375:
	.word	sBerryBlenderData
.L323:
	mov	r4, #0x0
	ldr	r5, .L377
	ldr	r6, .L377+0x4
.L327:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L377+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x54
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x54
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L377+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L327	@cond_branch
	b	.L353
.L378:
	.align	2, 0
.L377:
	.word	sBlenderSyncArrowsPos
	.word	sBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
.L329:
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L379
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	str	r4, [r0]
	b	.L309
.L380:
	.align	2, 0
.L379:
	.word	sBerryBlenderData
.L330:
	ldr	r4, .L381
	ldr	r1, [r4]
	mov	r5, #0x84
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x2
	bne	.L331	@cond_branch
	bl	sub_807F9D0
.L331:
	ldr	r0, .L381+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB3073
	b	.L309	@long jump
.LCB3073:
	ldr	r1, [r4]
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L309
.L382:
	.align	2, 0
.L381:
	.word	sBerryBlenderData
	.word	gPaletteFade
.L333:
	ldr	r2, .L383
	ldr	r1, [r2]
	mov	r3, #0x0
	mov	r0, #0xb
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x8a
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strb	r3, [r0]
	b	.L309
.L384:
	.align	2, 0
.L383:
	.word	sBerryBlenderData
.L367:
	lsl	r1, r1, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x74
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	sub_807FD90
	b	.L336
.L334:
	mov	r4, #0x0
	ldr	r2, .L385
	ldr	r0, .L385+0x4
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	mov	r5, #0x8a
	lsl	r5, r5, #0x1
	add	r1, r3, r5
	ldrb	r1, [r1]
	add	r0, r0, r2
.L338:
	ldrb	r2, [r0]
	cmp	r1, r2
	beq	.L367	@cond_branch
	add	r0, r0, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L338	@cond_branch
.L336:
	ldr	r3, .L385+0x4
	ldr	r1, [r3]
	mov	r5, #0x84
	lsl	r5, r5, #0x1
	add	r2, r1, r5
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r0, #0x8a
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	b	.L368
.L386:
	.align	2, 0
.L385:
	.word	sUnknown_083399D0
	.word	sBerryBlenderData
.L341:
	ldr	r3, [r2]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB3190
	b	.L309	@long jump
.LCB3190:
	mov	r5, #0x8a
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	add	r4, r3, #0
	add	r4, r4, #0x7c
	ldrb	r0, [r0]
	ldrb	r1, [r4]
	cmp	r0, r1
	bcc	.L343	@cond_branch
	ldr	r2, .L387
	ldr	r1, .L387+0x4
	ldrb	r0, [r4]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldr	r2, .L387+0x8
	add	r1, r2, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r0, r3, #0
	add	r0, r0, #0x4a
	strh	r1, [r0]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	b	.L369
.L388:
	.align	2, 0
.L387:
	.word	sUnknown_083399DC
	.word	sUnknown_083399E4
	.word	-0x5800
.L343:
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
.L369:
	strb	r0, [r3]
	ldr	r0, .L389
	ldr	r0, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	mov	r1, #0x0
	str	r1, [r0]
	b	.L309
.L390:
	.align	2, 0
.L389:
	.word	sBerryBlenderData
.L345:
	ldr	r4, .L391
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_808074C
	mov	r0, #0x2b
	bl	PlaySE
	ldr	r0, [r4]
	mov	r5, #0xa0
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	bl	sub_8082CB4
	mov	r0, #0x2
	bl	ShowBg
	b	.L309
.L392:
	.align	2, 0
.L391:
	.word	sBerryBlenderData
.L346:
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	mov	r0, #0x0
	bl	SetGpuRegBits
	ldr	r4, .L393
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r5, [r1]
	add	r0, r0, r5
	strh	r0, [r1]
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L347	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldr	r3, [r4]
	mov	r2, #0x8d
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L393+0x4
	ldr	r1, .L393+0x8
	add	r0, r3, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	strh	r1, [r0]
	mov	r0, #0xc
	mov	r1, #0x2
	bl	SetGpuRegBits
	ldr	r0, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	mov	r1, #0x0
	str	r1, [r0]
	mov	r0, #0x34
	bl	PlaySE
	bl	Blender_PrintPlayerNames
.L347:
	ldr	r0, [r4]
	mov	r5, #0xa0
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	bl	sub_8082CB4
	b	.L309
.L394:
	.align	2, 0
.L393:
	.word	sBerryBlenderData
	.word	sUnknown_083399DC
	.word	sUnknown_083399E4
.L348:
	bl	sub_8083380
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L349	@cond_branch
	ldr	r0, .L395
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L349:
	ldr	r0, .L395
	ldr	r0, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_8082CB4
	b	.L309
.L396:
	.align	2, 0
.L395:
	.word	sBerryBlenderData
.L350:
	ldr	r0, .L397
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
.L352:
.L353:
	ldr	r0, .L397+0x4
	ldr	r1, [r0]
.L368:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L309
.L398:
	.align	2, 0
.L397:
	.word	sUnknown_08339C2C
	.word	sBerryBlenderData
.L354:
	bl	sub_8080DF8
	ldr	r5, .L399
	ldr	r4, [r5]
	add	r1, r4, #0
	add	r1, r1, #0x4c
	mov	r3, #0x0
	mov	r2, #0x0
	mov	r0, #0x80
	strh	r0, [r1]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r4, r1
	str	r2, [r0]
	ldr	r2, .L399+0x4
	add	r0, r4, r2
	strb	r3, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x72
	strb	r3, [r0]
	ldr	r0, .L399+0x8
	bl	SetMainCallback2
	ldr	r0, .L399+0xc
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L355	@cond_branch
	mov	r0, #0xd0
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L356	@cond_branch
	ldr	r0, .L399+0x10
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, [r5]
	mov	r3, #0x90
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	b	.L370
.L400:
	.align	2, 0
.L399:
	.word	sBerryBlenderData
	.word	0x123
	.word	sub_8081898
	.word	gSpecialVar_0x8004
	.word	sub_8081224
.L356:
	ldr	r0, .L401
	ldr	r0, [r0]
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, [r5]
	mov	r5, #0x90
	lsl	r5, r5, #0x1
	add	r1, r1, r5
.L370:
	strb	r0, [r1]
.L355:
	ldr	r1, .L401+0x4
	ldrh	r0, [r1]
	cmp	r0, #0x1
	bls	.L358	@cond_branch
	mov	r4, #0x0
	ldrh	r1, [r1]
	cmp	r4, r1
	bge	.L358	@cond_branch
	mov	r5, #0xa0
	lsl	r5, r5, #0x14
	ldr	r6, .L401
.L362:
	ldmia	r6!, {r0}
	lsr	r1, r5, #0x18
	bl	CreateTask
	ldr	r1, .L401+0x8
	ldr	r1, [r1]
	mov	r2, #0x90
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	mov	r3, #0x80
	lsl	r3, r3, #0x11
	add	r5, r5, r3
	add	r4, r4, #0x1
	ldr	r0, .L401+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	blt	.L362	@cond_branch
.L358:
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L401+0xc
	cmp	r0, r4
	beq	.L364	@cond_branch
	bl	GetCurrentMapMusic
	ldr	r1, .L401+0x8
	ldr	r1, [r1]
	mov	r5, #0xaa
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	strh	r0, [r1]
.L364:
	add	r0, r4, #0
	bl	PlayBGM
	mov	r0, #0x35
	bl	PlaySE
	bl	Blender_ControlHitPitch
.L309:
	ldr	r0, .L401+0x8
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	sUnknown_083399EC
	.word	gSpecialVar_0x8004
	.word	sBerryBlenderData
	.word	0x193
.Lfe20:
	.size	 sub_80808D4,.Lfe20-sub_80808D4
	.align	2, 0
	.type	 sub_8080DF8,function
	.thumb_func
sub_8080DF8:
	push	{lr}
	ldr	r3, .L409
	mov	r0, #0x0
	ldr	r1, .L409+0x4
	mov	r2, #0x3
.L407:
	strh	r0, [r3]
	strh	r0, [r3, #0x4]
	strh	r0, [r1]
	strh	r0, [r1, #0x4]
	add	r1, r1, #0x10
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L407	@cond_branch
	pop	{r0}
	bx	r0
.L410:
	.align	2, 0
.L409:
	.word	gSendCmd
	.word	gRecvCmds
.Lfe21:
	.size	 sub_8080DF8,.Lfe21-sub_8080DF8
	.align	2, 0
	.type	 sub_8080E20,function
	.thumb_func
sub_8080E20:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L413
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r4, #0xa
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	ble	.L412	@cond_branch
	ldr	r0, .L413+0x4
	mov	r4, #0xc
	ldrsh	r1, [r2, r4]
	lsl	r1, r1, #0x4
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L413+0x8
	strh	r0, [r1]
	add	r0, r3, #0
	bl	DestroyTask
.L412:
	pop	{r4}
	pop	{r0}
	bx	r0
.L414:
	.align	2, 0
.L413:
	.word	gTasks
	.word	gRecvCmds
	.word	0x2345
.Lfe22:
	.size	 sub_8080E20,.Lfe22-sub_8080E20
	.align	2, 0
	.type	 sub_8080E6C,function
	.thumb_func
sub_8080E6C:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L416
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L416+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L417:
	.align	2, 0
.L416:
	.word	sub_8080E20
	.word	gTasks
.Lfe23:
	.size	 sub_8080E6C,.Lfe23-sub_8080E6C
	.align	2, 0
	.type	 sub_8080EA4,function
	.thumb_func
sub_8080EA4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L444
	ldr	r0, [r4]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	sub_8080624
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.LCB3761
	b	.L419	@long jump
.LCB3761:
	ldr	r2, .L444+0x4
	lsl	r1, r5, #0x2
	add	r0, r1, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r6, r1, #0
	cmp	r0, #0
	beq	.LCB3773
	b	.L439	@long jump
.LCB3773:
	ldr	r0, [r4]
	ldr	r1, .L444+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L421	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L444+0xc
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r3, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	mov	r4, #0x0
	ldrsh	r2, [r0, r4]
	ldr	r0, .L444+0x10
	cmp	r2, r0
	bgt	.L422	@cond_branch
	cmp	r1, #0x4b
	bls	.L423	@cond_branch
	ldr	r1, .L444+0x14
	ldr	r0, .L444+0x18
	b	.L440
.L445:
	.align	2, 0
.L444:
	.word	sBerryBlenderData
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L423:
	ldr	r1, .L446
	ldr	r0, .L446+0x4
.L440:
	strh	r0, [r1, #0x14]
	ldr	r0, .L446+0x4
	b	.L441
.L447:
	.align	2, 0
.L446:
	.word	gRecvCmds
	.word	0x5432
.L422:
	ldr	r0, .L448
	cmp	r2, r0
	bgt	.L426	@cond_branch
	cmp	r1, #0x50
	bhi	.L421	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L429	@cond_branch
	ldr	r1, .L448+0x4
	ldr	r0, .L448+0x8
	b	.L441
.L449:
	.align	2, 0
.L448:
	.word	0x5db
	.word	gRecvCmds
	.word	0x5432
.L429:
	cmp	r1, #0x9
	bhi	.L438	@cond_branch
	b	.L442
.L426:
	cmp	r1, #0x5a
	bhi	.L433	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x47
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L434	@cond_branch
	ldr	r1, .L450
	ldr	r0, .L450+0x4
	b	.L441
.L451:
	.align	2, 0
.L450:
	.word	gRecvCmds
	.word	0x5432
.L434:
	cmp	r3, #0x1d
	bhi	.L438	@cond_branch
.L442:
	mov	r0, #0x1
	mov	r1, #0x5
	bl	sub_8080E6C
	b	.L438
.L433:
.L421:
	ldr	r1, .L452
	ldr	r0, .L452+0x4
.L441:
	strh	r0, [r1, #0x14]
.L438:
	ldr	r0, .L452+0x8
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L443
.L453:
	.align	2, 0
.L452:
	.word	gRecvCmds
	.word	0x4523
	.word	gTasks
.L419:
	ldr	r0, .L454
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L443:
	strh	r0, [r1, #0x8]
.L439:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L455:
	.align	2, 0
.L454:
	.word	gTasks
.Lfe24:
	.size	 sub_8080EA4,.Lfe24-sub_8080EA4
	.align	2, 0
	.type	 sub_8080FD0,function
	.thumb_func
sub_8080FD0:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L470
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L470+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0x9a
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L470+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L457	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L457	@cond_branch
	ldr	r2, .L470+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r5, #0x8
	ldrsh	r0, [r2, r5]
	add	r5, r1, #0
	cmp	r0, #0
	bne	.L468	@cond_branch
	ldr	r1, .L470+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L459	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L470+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r3, r2, #0
	ldr	r0, [r6]
	add	r0, r0, #0x4c
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	ldr	r0, .L470+0x18
	cmp	r1, r0
	bgt	.L460	@cond_branch
	cmp	r2, #0x42
	bls	.L461	@cond_branch
	ldr	r1, .L470+0x1c
	ldr	r0, .L470+0x20
	strh	r0, [r1, #0x24]
	b	.L463
.L471:
	.align	2, 0
.L470:
	.word	sBerryBlenderData
	.word	0xffff
	.word	sUnknown_083399E7
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L461:
	ldr	r1, .L472
	ldr	r0, .L472+0x4
	strh	r0, [r1, #0x24]
	b	.L463
.L473:
	.align	2, 0
.L472:
	.word	gRecvCmds
	.word	0x5432
.L460:
	cmp	r2, #0x41
	bls	.L464	@cond_branch
	ldr	r1, .L474
	ldr	r0, .L474+0x4
	strh	r0, [r1, #0x24]
.L464:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x18
	bhi	.L465	@cond_branch
	ldr	r1, .L474
	ldr	r0, .L474+0x8
	strh	r0, [r1, #0x24]
.L465:
	cmp	r3, #0x9
	bhi	.L463	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x5
	bl	sub_8080E6C
.L463:
	ldr	r0, .L474+0xc
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L469
.L475:
	.align	2, 0
.L474:
	.word	gRecvCmds
	.word	0x4523
	.word	0x5432
	.word	gTasks
.L459:
	ldr	r0, .L476
	ldr	r1, .L476+0x4
	strh	r1, [r0, #0x24]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L468
.L477:
	.align	2, 0
.L476:
	.word	gRecvCmds
	.word	0x4523
.L457:
	ldr	r0, .L478
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L469:
	strh	r0, [r1, #0x8]
.L468:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	gTasks
.Lfe25:
	.size	 sub_8080FD0,.Lfe25-sub_8080FD0
	.align	2, 0
	.type	 sub_80810F8,function
	.thumb_func
sub_80810F8:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L496
	ldr	r3, [r5]
	add	r0, r3, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L496+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0x9c
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L496+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L481	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L481	@cond_branch
	ldr	r2, .L496+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r6, #0x8
	ldrsh	r0, [r2, r6]
	add	r6, r1, #0
	cmp	r0, #0
	bne	.L493	@cond_branch
	ldr	r1, .L496+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L483	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L496+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, [r5]
	add	r0, r0, #0x4c
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr	r0, .L496+0x18
	cmp	r1, r0
	bgt	.L484	@cond_branch
	cmp	r2, #0x58
	bls	.L485	@cond_branch
	ldr	r1, .L496+0x1c
	ldr	r0, .L496+0x20
	strh	r0, [r1, #0x34]
	b	.L487
.L497:
	.align	2, 0
.L496:
	.word	sBerryBlenderData
	.word	0xffff
	.word	sUnknown_083399E7
	.word	gTasks
	.word	0x123
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L485:
	ldr	r1, .L498
	ldr	r0, .L498+0x4
	strh	r0, [r1, #0x34]
	b	.L487
.L499:
	.align	2, 0
.L498:
	.word	gRecvCmds
	.word	0x5432
.L484:
	cmp	r2, #0x3c
	bls	.L488	@cond_branch
	ldr	r1, .L500
	ldr	r0, .L500+0x4
	b	.L494
.L501:
	.align	2, 0
.L500:
	.word	gRecvCmds
	.word	0x4523
.L488:
	add	r0, r2, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L489	@cond_branch
	ldr	r1, .L502
	ldr	r0, .L502+0x4
.L494:
	strh	r0, [r1, #0x34]
.L489:
	cmp	r2, #0x4
	bhi	.L487	@cond_branch
	mov	r0, #0x3
	mov	r1, #0x5
	bl	sub_8080E6C
.L487:
	ldr	r0, .L502+0x8
	add	r1, r6, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L495
.L503:
	.align	2, 0
.L502:
	.word	gRecvCmds
	.word	0x5432
	.word	gTasks
.L483:
	ldr	r0, .L504
	ldr	r1, .L504+0x4
	strh	r1, [r0, #0x34]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L493
.L505:
	.align	2, 0
.L504:
	.word	gRecvCmds
	.word	0x4523
.L481:
	ldr	r0, .L506
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L495:
	strh	r0, [r1, #0x8]
.L493:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	gTasks
.Lfe26:
	.size	 sub_80810F8,.Lfe26-sub_80810F8
	.align	2, 0
	.type	 sub_8081224,function
	.thumb_func
sub_8081224:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L512
	ldr	r0, [r0]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	sub_8080624
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L509	@cond_branch
	ldr	r0, .L512+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r2, r1, r0
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L511	@cond_branch
	ldr	r0, .L512+0x8
	ldr	r1, .L512+0xc
	strh	r1, [r0, #0x14]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L511
.L513:
	.align	2, 0
.L512:
	.word	sBerryBlenderData
	.word	gTasks
	.word	gRecvCmds
	.word	0x4523
.L509:
	ldr	r0, .L514
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
.L511:
	pop	{r4}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gTasks
.Lfe27:
	.size	 sub_8081224,.Lfe27-sub_8081224
	.align	2, 0
	.type	 sub_8081288,function
	.thumb_func
sub_8081288:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r8, r7
	lsl	r1, r1, #0x18
	ldr	r0, .L522
	ldr	r4, .L522+0x4
	lsr	r1, r1, #0x17
	add	r2, r1, r4
	ldrb	r6, [r2]
	ldr	r5, .L522+0x8
	add	r2, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r2, r3]
	lsl	r2, r3, #0x2
	add	r2, r2, r3
	lsl	r2, r2, #0x1
	sub	r6, r6, r2
	add	r4, r4, #0x1
	add	r4, r1, r4
	ldrb	r2, [r4]
	add	r5, r5, #0x1
	add	r1, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x1
	sub	r2, r2, r1
	add	r1, r6, #0
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	ldr	r0, .L522+0xc
	cmp	r7, r0
	bne	.L517	@cond_branch
	lsl	r4, r1, #0x4
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	ldr	r5, .L522+0x10
	add	r0, r4, r5
	mov	r1, #0x2
	bl	StartSpriteAnim
	add	r5, r5, #0x1c
	add	r4, r4, r5
	ldr	r0, .L522+0x14
	str	r0, [r4]
	mov	r0, #0x28
	bl	PlaySE
	b	.L518
.L523:
	.align	2, 0
.L522:
	.word	sUnknown_08339B40
	.word	sBlenderSyncArrowsPos
	.word	sUnknown_083399C0
	.word	0x4523
	.word	gSprites
	.word	sub_8082F9C
.L517:
	ldr	r0, .L524
	cmp	r7, r0
	bne	.L519	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L524+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r0, #0x1f
	bl	PlaySE
	b	.L518
.L525:
	.align	2, 0
.L524:
	.word	0x5432
	.word	gSprites
.L519:
	ldr	r0, .L526
	cmp	r8, r0
	bne	.L518	@cond_branch
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r1, .L526+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	mov	r0, #0x20
	bl	PlaySE
.L518:
	bl	sub_8082E84
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L527:
	.align	2, 0
.L526:
	.word	0x2345
	.word	gSprites
.Lfe28:
	.size	 sub_8081288,.Lfe28-sub_8081288
	.align	2, 0
	.type	 sub_8081370,function
	.thumb_func
sub_8081370:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r5, r4, #0
	bl	Blender_ControlHitPitch
	ldr	r0, .L541
	cmp	r4, r0
	beq	.L530	@cond_branch
	cmp	r4, r0
	bgt	.L539	@cond_branch
	ldr	r0, .L541+0x4
	cmp	r4, r0
	beq	.L535	@cond_branch
	b	.L529
.L542:
	.align	2, 0
.L541:
	.word	0x4523
	.word	0x2345
.L539:
	ldr	r0, .L543
	cmp	r5, r0
	beq	.L533	@cond_branch
	b	.L529
.L544:
	.align	2, 0
.L543:
	.word	0x5432
.L530:
	ldr	r7, .L545
	ldr	r4, [r7]
	add	r5, r4, #0
	add	r5, r5, #0x4c
	ldrh	r6, [r5]
	mov	r0, #0x0
	ldrsh	r1, [r5, r0]
	ldr	r0, .L545+0x4
	cmp	r1, r0
	bgt	.L531	@cond_branch
	ldr	r1, .L545+0x8
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	b	.L529
.L546:
	.align	2, 0
.L545:
	.word	sBerryBlenderData
	.word	0x5db
	.word	sUnknown_08339CC3
.L531:
	ldr	r1, .L547
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_80832BC
	ldr	r0, [r7]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x4c
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_80832BC
	b	.L529
.L548:
	.align	2, 0
.L547:
	.word	sUnknown_08339CC3
.L533:
	ldr	r0, .L549
	ldr	r2, [r0]
	add	r4, r2, #0
	add	r4, r4, #0x4c
	ldrh	r5, [r4]
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr	r0, .L549+0x4
	cmp	r1, r0
	bgt	.L529	@cond_branch
	ldr	r1, .L549+0x8
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r5, r0
	b	.L540
.L550:
	.align	2, 0
.L549:
	.word	sBerryBlenderData
	.word	0x5db
	.word	sUnknown_08339CC3
.L535:
	ldr	r0, .L551
	ldr	r0, [r0]
	add	r4, r0, #0
	add	r4, r4, #0x4c
	ldr	r1, .L551+0x4
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	ldrh	r1, [r4]
	sub	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7f
	bgt	.L529	@cond_branch
	mov	r0, #0x80
.L540:
	strh	r0, [r4]
.L529:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	sBerryBlenderData
	.word	sUnknown_08339CC3
.Lfe29:
	.size	 sub_8081370,.Lfe29-sub_8081370
	.align	2, 0
	.type	 sub_80814B0,function
	.thumb_func
sub_80814B0:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L559
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L554	@cond_branch
	ldr	r0, .L559+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L554	@cond_branch
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r3
	cmp	r0, r2
	bne	.L556	@cond_branch
	mov	r0, #0x1
	b	.L558
.L560:
	.align	2, 0
.L559:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L554:
	cmp	r3, r1
	bne	.L556	@cond_branch
	mov	r0, #0x1
	b	.L558
.L556:
	mov	r0, #0x0
.L558:
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 sub_80814B0,.Lfe30-sub_80814B0
	.align	2, 0
	.type	 sub_80814F4,function
	.thumb_func
sub_80814F4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	ldr	r0, .L595
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L562	@cond_branch
	ldr	r3, .L595+0x4
	ldrh	r0, [r3, #0x4]
	ldr	r2, .L595+0x8
	cmp	r0, #0
	beq	.L563	@cond_branch
	mov	r1, #0x0
	strh	r0, [r2, #0x4]
	ldr	r0, .L595+0xc
	strh	r0, [r2]
	strh	r1, [r3, #0x4]
.L563:
	ldr	r0, .L595+0x8
	ldr	r3, .L595+0xc
	add	r1, r2, #0
	add	r1, r1, #0x10
	add	r2, r0, #0
	add	r2, r2, #0x14
	mov	r7, #0x2
.L567:
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L566	@cond_branch
	strh	r3, [r1]
.L566:
	add	r1, r1, #0x10
	add	r2, r2, #0x10
	sub	r7, r7, #0x1
	cmp	r7, #0
	bge	.L567	@cond_branch
.L562:
	mov	r7, #0x0
	ldr	r1, .L595+0x10
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.LCB4955
	b	.L571	@long jump
.LCB4955:
	ldr	r0, .L595+0x8
	add	r2, r0, #0
	add	r2, r2, #0x20
	str	r2, [sp]
	mov	r1, #0x0
	mov	r9, r1
	mov	r2, #0x0
	str	r2, [sp, #0x4]
	mov	r8, r0
	ldr	r0, .L595+0x14
	mov	sl, r0
.L573:
	mov	r1, r8
	ldrh	r0, [r1]
	ldr	r1, .L595+0xc
	mov	r2, #0x88
	lsl	r2, r2, #0x7
	bl	sub_80814B0
	cmp	r0, #0
	bne	.LCB4983
	b	.L572	@long jump
.LCB4983:
	ldr	r6, .L595+0x10
	ldr	r0, [r6]
	add	r0, r0, #0x96
	ldr	r2, [sp, #0x4]
	add	r0, r0, r2
	ldrh	r5, [r0]
	mov	r0, r8
	ldrh	r4, [r0, #0x4]
	ldr	r1, .L595+0x18
	cmp	r4, r1
	bne	.L575	@cond_branch
	add	r0, r1, #0
	bl	sub_8081370
	ldr	r0, [r6]
	mov	r2, #0x8b
	lsl	r2, r2, #0x1
	add	r4, r0, r2
	add	r0, r0, #0x4c
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x37
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	ldr	r0, .L595+0x1c
	cmp	r1, r0
	bls	.L576	@cond_branch
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	strh	r0, [r4]
.L576:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L595+0x18
	bl	sub_8081288
	ldr	r1, [r6]
	mov	r2, #0x92
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L594
.L596:
	.align	2, 0
.L595:
	.word	gSpecialVar_0x8004
	.word	gSendCmd
	.word	gRecvCmds
	.word	0x4444
	.word	sBerryBlenderData
	.word	0x5432
	.word	0x4523
	.word	0x3e70000
.L575:
	cmp	r4, sl
	bne	.L578	@cond_branch
	mov	r0, sl
	bl	sub_8081370
	ldr	r0, [r6]
	mov	r1, #0x8b
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x4c
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r1, #0x46
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sl
	bl	sub_8081288
	ldr	r1, [r6]
	mov	r0, #0x93
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L594
.L578:
	ldr	r0, .L597
	cmp	r4, r0
	bne	.L593	@cond_branch
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_8081288
	add	r0, r4, #0
	bl	sub_8081370
	ldr	r0, [r6]
	mov	r1, #0x94
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r2, r9
	add	r1, r0, r2
	ldrh	r2, [r1]
	ldr	r0, .L597+0x4
	cmp	r2, r0
	bhi	.L577	@cond_branch
	add	r0, r2, #0x1
.L594:
	strh	r0, [r1]
.L577:
	mov	r0, r8
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L597
	cmp	r1, r0
	beq	.L583	@cond_branch
.L593:
	ldr	r1, [sp]
	ldrh	r0, [r1]
	ldr	r2, .L597+0x8
	cmp	r0, r2
	beq	.L583	@cond_branch
	cmp	r0, sl
	bne	.L572	@cond_branch
.L583:
	ldr	r0, .L597+0xc
	ldr	r0, [r0]
	add	r2, r0, #0
	add	r2, r2, #0x4c
	mov	r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr	r0, .L597+0x10
	cmp	r1, r0
	ble	.L584	@cond_branch
	add	r0, r1, #0
	ldr	r2, .L597+0x14
	add	r0, r0, r2
	mov	r1, #0x14
	bl	__divsi3
	add	r1, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L597+0x18
	bl	m4aMPlayTempoControl
	b	.L572
.L598:
	.align	2, 0
.L597:
	.word	0x2345
	.word	0x3e6
	.word	0x4523
	.word	sBerryBlenderData
	.word	0x5dc
	.word	-0x2ee
	.word	gMPlayInfo_BGM
.L584:
	ldr	r0, .L599
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
.L572:
	ldr	r1, [sp]
	add	r1, r1, #0x2
	str	r1, [sp]
	mov	r2, #0x6
	add	r9, r9, r2
	ldr	r0, [sp, #0x4]
	add	r0, r0, #0x2
	str	r0, [sp, #0x4]
	mov	r1, #0x10
	add	r8, r8, r1
	add	r7, r7, #0x1
	ldr	r0, .L599+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.LCB5219
	b	.L573	@long jump
.LCB5219:
.L571:
	ldr	r0, .L599+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L587	@cond_branch
	mov	r7, #0x0
	ldr	r3, .L599+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L587	@cond_branch
	mov	r2, #0x0
	ldr	r1, .L599+0xc
.L591:
	strh	r2, [r1]
	strh	r2, [r1, #0x4]
	add	r1, r1, #0x10
	add	r7, r7, #0x1
	ldr	r0, [r3]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L591	@cond_branch
.L587:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L600:
	.align	2, 0
.L599:
	.word	gMPlayInfo_BGM
	.word	sBerryBlenderData
	.word	gSpecialVar_0x8004
	.word	gRecvCmds
.Lfe31:
	.size	 sub_80814F4,.Lfe31-sub_80814F4
	.align	2, 0
	.type	 sub_8081744,function
	.thumb_func
sub_8081744:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	mov	r6, #0x0
	ldr	r0, .L618
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L602	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L602:
	ldr	r3, .L618+0x4
	ldr	r1, [r3]
	lsl	r2, r6, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x96
	add	r0, r0, r2
	ldrb	r5, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L603	@cond_branch
	ldr	r0, .L618+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x2
	bne	.L604	@cond_branch
	ldr	r2, .L618+0xc
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L606	@cond_branch
	ldrh	r2, [r2, #0x28]
	ldr	r1, .L618+0x10
	add	r0, r1, #0
	and	r0, r0, r2
	cmp	r0, r1
	beq	.L606	@cond_branch
	b	.L616
.L619:
	.align	2, 0
.L618:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlenderData
	.word	gSaveBlock2Ptr
	.word	gMain
	.word	0x201
.L604:
	ldr	r0, .L620
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L606	@cond_branch
	mov	r4, #0x1
.L606:
	cmp	r4, #0
	beq	.L603	@cond_branch
.L616:
	ldr	r4, .L620+0x4
	ldr	r1, [r4]
	lsl	r2, r5, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x8e
	add	r0, r0, r2
	add	r1, r1, #0x50
	ldrh	r0, [r0]
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L620+0x8
	add	r0, r0, r1
	add	r1, r5, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldr	r0, [r4]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	add	r1, r6, #0
	bl	sub_8080624
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L609	@cond_branch
	ldr	r1, .L620+0xc
	ldr	r0, .L620+0x10
	b	.L617
.L621:
	.align	2, 0
.L620:
	.word	gMain
	.word	sBerryBlenderData
	.word	gSprites
	.word	gSendCmd
	.word	0x4523
.L609:
	cmp	r0, #0x1
	bne	.L611	@cond_branch
	ldr	r1, .L622
	ldr	r0, .L622+0x4
	b	.L617
.L623:
	.align	2, 0
.L622:
	.word	gSendCmd
	.word	0x5432
.L611:
	ldr	r1, .L624
	ldr	r0, .L624+0x4
.L617:
	strh	r0, [r1, #0x4]
	add	r3, r4, #0
.L603:
	ldr	r1, [r3]
	add	r1, r1, #0x72
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L613	@cond_branch
	ldr	r0, [r3]
	add	r1, r0, #0
	add	r1, r1, #0x4c
	ldrh	r2, [r1]
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x80
	ble	.L614	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L614:
	ldr	r0, [r3]
	add	r0, r0, #0x72
	mov	r1, #0x0
	strb	r1, [r0]
.L613:
	ldr	r0, .L624+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L615	@cond_branch
	ldr	r0, .L624+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L615	@cond_branch
	ldr	r0, [r3]
	ldr	r1, .L624+0x10
	add	r2, r0, r1
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
.L615:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L625:
	.align	2, 0
.L624:
	.word	gSendCmd
	.word	0x2345
	.word	gEnableContestDebugging
	.word	gMain
	.word	0x123
.Lfe32:
	.size	 sub_8081744,.Lfe32-sub_8081744
	.align	2, 0
	.type	 sub_8081898,function
	.thumb_func
sub_8081898:
	push	{r4, r5, r6, lr}
	bl	sub_8082D28
	ldr	r4, .L629
	ldr	r0, [r4]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r2, r0, r1
	ldr	r1, [r2]
	ldr	r0, .L629+0x4
	cmp	r1, r0
	bhi	.L627	@cond_branch
	add	r0, r1, #0x1
	str	r0, [r2]
.L627:
	bl	sub_8081744
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	mov	r5, #0x8b
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	ldrh	r1, [r1]
	bl	SetLinkDebugValues
	bl	sub_80814F4
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r0, [r0]
	mov	r6, #0xfa
	lsl	r6, r6, #0x2
	add	r1, r6, #0
	bl	sub_8083140
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	bl	sub_8083230
	bl	sub_808330C
	bl	sub_8082AD4
	ldr	r2, [r4]
	add	r3, r2, #0
	add	r3, r3, #0x63
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L628	@cond_branch
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	ldrh	r1, [r0]
	ldr	r0, .L629+0x8
	cmp	r1, r0
	bls	.L628	@cond_branch
	add	r0, r2, r5
	strh	r6, [r0]
	mov	r0, #0x1
	strb	r0, [r3]
	ldr	r0, .L629+0xc
	bl	SetMainCallback2
.L628:
	ldr	r0, .L629
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L630:
	.align	2, 0
.L629:
	.word	sBerryBlenderData
	.word	0x57e03
	.word	0x3e7
	.word	CB2_HandleBlenderEndGame
.Lfe33:
	.size	 sub_8081898,.Lfe33-sub_8081898
	.align	2, 0
	.type	 Blender_DummiedOutFunc,function
	.thumb_func
Blender_DummiedOutFunc:
	bx	lr
.Lfe34:
	.size	 Blender_DummiedOutFunc,.Lfe34-Blender_DummiedOutFunc
	.align	2, 0
	.type	 sub_8081964,function
	.thumb_func
sub_8081964:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r1, r1, #0x14
	add	r4, r1, r0
	lsr	r2, r2, #0x14
	add	r5, r2, r0
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L634	@cond_branch
	add	r0, r4, #0x2
	add	r1, r5, #0x2
	bl	StringCompare
	cmp	r0, #0
	bne	.L633	@cond_branch
	ldr	r0, [r4, #0x8]
	ldr	r2, .L637
	and	r0, r0, r2
	ldr	r1, [r5, #0x8]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L633	@cond_branch
	ldr	r0, [r4, #0xc]
	ldr	r2, .L637+0x4
	and	r0, r0, r2
	ldr	r1, [r5, #0xc]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L633	@cond_branch
.L634:
	mov	r0, #0x1
	b	.L636
.L638:
	.align	2, 0
.L637:
	.word	-0x100
	.word	0xffffff
.L633:
	mov	r0, #0x0
.L636:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 sub_8081964,.Lfe35-sub_8081964
	.align	2, 0
	.type	 Blender_GetPokeblockColor,function
	.thumb_func
Blender_GetPokeblockColor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	mov	sl, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x10]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r2, sp
	mov	r4, #0x5
.L643:
	ldrh	r0, [r1]
	strh	r0, [r2]
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L643	@cond_branch
	mov	r6, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L648:
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L647	@cond_branch
	add	r6, r6, #0x1
.L647:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L648	@cond_branch
	cmp	r6, #0x5
	beq	.L662	@cond_branch
	cmp	r3, #0x3
	bhi	.L662	@cond_branch
	mov	r4, #0x0
	ldr	r3, [sp, #0x10]
	cmp	r4, r3
	bge	.L654	@cond_branch
	mov	r3, sl
.L656:
	mov	r6, #0x0
	ldr	r7, [sp, #0x10]
	cmp	r6, r7
	bge	.L655	@cond_branch
	mov	r9, r3
	mov	r5, sl
	lsl	r0, r4, #0x18
	mov	r8, r0
.L660:
	mov	r1, r9
	ldrh	r0, [r1]
	ldrh	r2, [r5]
	cmp	r0, r2
	bne	.L659	@cond_branch
	cmp	r4, r6
	beq	.L659	@cond_branch
	cmp	r0, #0xaf
	bne	.L662	@cond_branch
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sl
	mov	r7, r8
	lsr	r1, r7, #0x18
	str	r3, [sp, #0xc]
	bl	sub_8081964
	lsl	r0, r0, #0x18
	ldr	r3, [sp, #0xc]
	cmp	r0, #0
	beq	.L659	@cond_branch
.L662:
	mov	r0, #0xc
	b	.L703
.L659:
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	ldr	r0, [sp, #0x10]
	cmp	r6, r0
	blt	.L660	@cond_branch
.L655:
	add	r3, r3, #0x10
	add	r4, r4, #0x1
	ldr	r1, [sp, #0x10]
	cmp	r4, r1
	blt	.L656	@cond_branch
.L654:
	mov	r2, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L668:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L667	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L667:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L668	@cond_branch
	cmp	r2, #0x3
	bls	.L671	@cond_branch
	mov	r0, #0xd
	b	.L703
.L671:
	cmp	r2, #0x3
	bne	.L672	@cond_branch
	mov	r0, #0xb
	b	.L703
.L672:
	mov	r4, #0x0
	mov	r1, sp
.L676:
	mov	r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x32
	ble	.LCB5879
	b	.L704	@long jump
.LCB5879:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L676	@cond_branch
	cmp	r2, #0x1
	bne	.L683	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	ble	.L679	@cond_branch
	mov	r0, #0x1
	b	.L703
.L679:
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L680	@cond_branch
	mov	r0, #0x2
	b	.L703
.L680:
	mov	r0, sp
	mov	r3, #0x4
	ldrsh	r0, [r0, r3]
	cmp	r0, #0
	ble	.L681	@cond_branch
	mov	r0, #0x3
	b	.L703
.L681:
	mov	r0, sp
	mov	r4, #0x6
	ldrsh	r0, [r0, r4]
	cmp	r0, #0
	ble	.L682	@cond_branch
	mov	r0, #0x4
	b	.L703
.L682:
	mov	r0, sp
	mov	r7, #0x8
	ldrsh	r0, [r0, r7]
	cmp	r0, #0
	ble	.L683	@cond_branch
	mov	r0, #0x5
	b	.L703
.L683:
	cmp	r2, #0x2
	bne	.L684	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L710
	mov	r1, sp
	add	r2, r5, #0
.L688:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L687	@cond_branch
	strh	r4, [r2]
	add	r2, r2, #0x2
.L687:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L688	@cond_branch
	mov	r4, #0x0
	ldrsh	r3, [r5, r4]
	lsl	r0, r3, #0x1
	mov	r7, sp
	add	r1, r7, r0
	mov	r0, #0x2
	ldrsh	r2, [r5, r0]
	lsl	r0, r2, #0x1
	add	r0, r0, sp
	mov	r4, #0x0
	ldrsh	r1, [r1, r4]
	mov	r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp	r1, r0
	blt	.L691	@cond_branch
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L692	@cond_branch
	lsl	r0, r2, #0x10
	b	.L705
.L711:
	.align	2, 0
.L710:
	.word	sUnknown_03000DF8
.L692:
	cmp	r0, #0x1
	bne	.L693	@cond_branch
	lsl	r0, r2, #0x10
	b	.L706
.L693:
	cmp	r0, #0x2
	bne	.L694	@cond_branch
	lsl	r0, r2, #0x10
	b	.L707
.L694:
	cmp	r0, #0x3
	bne	.L695	@cond_branch
	lsl	r0, r2, #0x10
	b	.L708
.L695:
	cmp	r0, #0x4
	bne	.L684	@cond_branch
	lsl	r0, r2, #0x10
	b	.L709
.L691:
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L698	@cond_branch
	lsl	r0, r3, #0x10
.L705:
	mov	r1, #0x6
	orr	r0, r0, r1
	b	.L703
.L698:
	cmp	r0, #0x1
	bne	.L699	@cond_branch
	lsl	r0, r3, #0x10
.L706:
	mov	r1, #0x7
	orr	r0, r0, r1
	b	.L703
.L699:
	cmp	r0, #0x2
	bne	.L700	@cond_branch
	lsl	r0, r3, #0x10
.L707:
	mov	r1, #0x8
	orr	r0, r0, r1
	b	.L703
.L700:
	cmp	r0, #0x3
	bne	.L701	@cond_branch
	lsl	r0, r3, #0x10
.L708:
	mov	r1, #0x9
	orr	r0, r0, r1
	b	.L703
.L701:
	cmp	r0, #0x4
	bne	.L684	@cond_branch
	lsl	r0, r3, #0x10
.L709:
	mov	r1, #0xa
	orr	r0, r0, r1
	b	.L703
.L704:
	mov	r0, #0xe
	b	.L703
.L684:
	mov	r0, #0x0
.L703:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 Blender_GetPokeblockColor,.Lfe36-Blender_GetPokeblockColor
	.align	2, 0
	.type	 sub_8081BB0,function
	.thumb_func
sub_8081BB0:
	ldr	r1, .L713
	strh	r0, [r1]
	bx	lr
.L714:
	.align	2, 0
.L713:
	.word	sUnknown_03000E04
.Lfe37:
	.size	 sub_8081BB0,.Lfe37-sub_8081BB0
	.align	2, 0
	.type	 sub_8081BBC,function
	.thumb_func
sub_8081BBC:
	ldr	r0, .L716
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L717:
	.align	2, 0
.L716:
	.word	sUnknown_03000E04
.Lfe38:
	.size	 sub_8081BBC,.Lfe38-sub_8081BBC
	.align	2, 0
	.type	 sub_8081BC8,function
	.thumb_func
sub_8081BC8:
	ldr	r1, .L719
	strh	r0, [r1]
	bx	lr
.L720:
	.align	2, 0
.L719:
	.word	sUnknown_03000E06
.Lfe39:
	.size	 sub_8081BC8,.Lfe39-sub_8081BC8
	.align	2, 0
	.type	 sub_8081BD4,function
	.thumb_func
sub_8081BD4:
	ldr	r0, .L722
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L723:
	.align	2, 0
.L722:
	.word	sUnknown_03000E06
.Lfe40:
	.size	 sub_8081BD4,.Lfe40-sub_8081BD4
	.align	2, 0
	.type	 Blender_CalculatePokeblock,function
	.thumb_func
Blender_CalculatePokeblock:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	str	r0, [sp]
	mov	r8, r1
	str	r3, [sp, #0x4]
	ldr	r0, [sp, #0x30]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldr	r7, .L790
	add	r2, r7, #0
	mov	r1, #0x0
	add	r0, r7, #0
	add	r0, r0, #0xa
.L728:
	strh	r1, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r2
	bge	.L728	@cond_branch
	mov	r6, #0x0
	cmp	r6, r9
	bge	.L731	@cond_branch
	ldr	r0, .L790
	mov	ip, r0
	ldr	r5, [sp]
	add	r5, r5, #0x9
.L733:
	mov	r3, #0x0
	add	r4, r5, #0
	mov	r2, ip
.L737:
	add	r1, r4, r3
	ldrh	r0, [r2]
	ldrb	r1, [r1]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x5
	ble	.L737	@cond_branch
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	cmp	r6, r9
	blt	.L733	@cond_branch
.L731:
	mov	r1, #0x0
	ldrsh	r3, [r7, r1]
	ldrh	r0, [r7]
	ldrh	r1, [r7, #0x2]
	sub	r0, r0, r1
	strh	r0, [r7]
	ldrh	r0, [r7, #0x4]
	sub	r1, r1, r0
	strh	r1, [r7, #0x2]
	ldrh	r1, [r7, #0x6]
	sub	r0, r0, r1
	strh	r0, [r7, #0x4]
	ldrh	r0, [r7, #0x8]
	sub	r1, r1, r0
	strh	r1, [r7, #0x6]
	sub	r0, r0, r3
	strh	r0, [r7, #0x8]
	mov	r3, #0x0
	mov	r2, #0x0
	add	r1, r7, #0
	mov	r6, #0x4
.L743:
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bge	.L742	@cond_branch
	strh	r2, [r1]
	add	r3, r3, #0x1
.L742:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L743	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r4, #0x0
	ldr	r1, .L790
	mov	r6, #0x4
.L749:
	ldrh	r2, [r1]
	mov	r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp	r0, #0
	ble	.L748	@cond_branch
	cmp	r0, r3
	bge	.L751	@cond_branch
	strh	r4, [r1]
	b	.L748
.L791:
	.align	2, 0
.L790:
	.word	sUnknown_03000DE8
.L751:
	sub	r0, r2, r3
	strh	r0, [r1]
.L748:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L749	@cond_branch
	ldr	r1, .L792
	ldr	r2, .L792+0x4
	mov	r6, #0x4
.L757:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	stmia	r2!, {r0}
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L757	@cond_branch
	ldr	r1, .L792+0x8
	ldr	r0, [sp, #0x8]
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r3, r0, #0
	add	r3, r3, #0x64
	ldr	r4, .L792+0xc
	str	r3, [r4]
	mov	r6, #0x4
.L762:
	mov	r0, #0x0
	ldrsh	r5, [r7, r0]
	mov	r0, r5
	mul	r0, r0, r3
	mov	r1, #0xa
	str	r3, [sp, #0xc]
	bl	__divsi3
	add	r5, r0, #0
	mov	r1, #0xa
	bl	__modsi3
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__divsi3
	add	r5, r0, #0
	ldr	r3, [sp, #0xc]
	cmp	r4, #0x4
	ble	.L763	@cond_branch
	add	r5, r5, #0x1
.L763:
	strh	r5, [r7]
	add	r7, r7, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L762	@cond_branch
	ldr	r1, .L792
	ldr	r2, .L792+0x10
	mov	r6, #0x4
.L768:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	stmia	r2!, {r0}
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L768	@cond_branch
	ldr	r4, .L792
	ldr	r0, [sp]
	add	r1, r4, #0
	mov	r2, r9
	mov	r3, sl
	bl	Blender_GetPokeblockColor
	mov	r5, r8
	strb	r0, [r5]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r1, r9
	bl	__divsi3
	mov	r3, r9
	sub	r0, r0, r3
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L770	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
.L770:
	mov	r5, r8
	ldrb	r0, [r5]
	cmp	r0, #0xc
	bne	.L771	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r6, #0x0
	ldr	r0, .L792+0x14
	add	r0, r3, r0
	ldrb	r0, [r0]
	add	r1, r4, #0
	mov	r4, #0x1
	mov	r3, #0x2
.L775:
	add	r2, r0, #0
	asr	r2, r2, r6
	and	r2, r2, r4
	cmp	r2, #0
	beq	.L776	@cond_branch
	strh	r3, [r1]
	b	.L774
.L793:
	.align	2, 0
.L792:
	.word	sUnknown_03000DE8
	.word	sUnknown_020322A8
	.word	0x14d
	.word	sUnknown_020322D0
	.word	sUnknown_020322BC
	.word	sUnknown_08339CC8
.L776:
	strh	r2, [r1]
.L774:
	add	r1, r1, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L775	@cond_branch
.L771:
	ldr	r7, .L794
	mov	r2, #0xff
	add	r1, r7, #0
	mov	r6, #0x5
.L782:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xff
	ble	.L781	@cond_branch
	strh	r2, [r1]
.L781:
	add	r1, r1, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L782	@cond_branch
	ldrh	r0, [r7]
	mov	r4, r8
	strb	r0, [r4, #0x1]
	ldrh	r0, [r7, #0x2]
	strb	r0, [r4, #0x2]
	ldrh	r0, [r7, #0x4]
	strb	r0, [r4, #0x3]
	ldrh	r0, [r7, #0x6]
	strb	r0, [r4, #0x4]
	ldrh	r0, [r7, #0x8]
	strb	r0, [r4, #0x5]
	ldrh	r0, [r7, #0xa]
	strb	r0, [r4, #0x6]
	mov	r6, #0x0
	add	r2, r7, #0
.L788:
	ldr	r5, [sp, #0x4]
	add	r1, r5, r6
	ldrh	r0, [r2]
	strb	r0, [r1]
	add	r2, r2, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L788	@cond_branch
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L795:
	.align	2, 0
.L794:
	.word	sUnknown_03000DE8
.Lfe41:
	.size	 Blender_CalculatePokeblock,.Lfe41-Blender_CalculatePokeblock
	.align	2, 0
	.type	 BlenderDebug_CalculatePokeblock,function
	.thumb_func
BlenderDebug_CalculatePokeblock:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0xc]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r4, [sp]
	bl	Blender_CalculatePokeblock
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 BlenderDebug_CalculatePokeblock,.Lfe42-BlenderDebug_CalculatePokeblock
	.align	2, 0
	.type	 sub_8081E20,function
	.thumb_func
sub_8081E20:
	push	{r4, r5, r6, lr}
	ldr	r0, .L827
	ldr	r0, [r0]
	mov	r2, #0x82
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	ldrh	r1, [r1]
	add	r0, r0, #0x4e
	ldrh	r4, [r0]
	mov	r2, #0x0
	ldr	r5, .L827+0x4
	cmp	r1, r5
	bhi	.L798	@cond_branch
	mov	r2, #0x5
	b	.L799
.L828:
	.align	2, 0
.L827:
	.word	sBerryBlenderData
	.word	0x383
.L798:
	ldr	r3, .L829
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r3, .L829+0x4
	cmp	r0, r3
	bhi	.L800	@cond_branch
	mov	r2, #0x4
	b	.L799
.L830:
	.align	2, 0
.L829:
	.word	-0x384
	.word	0x257
.L800:
	ldr	r6, .L831
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r3
	bhi	.L802	@cond_branch
	mov	r2, #0x3
	b	.L799
.L832:
	.align	2, 0
.L831:
	.word	-0x5dc
.L802:
	ldr	r3, .L833
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r5
	bhi	.L804	@cond_branch
	mov	r2, #0x2
	b	.L799
.L834:
	.align	2, 0
.L833:
	.word	-0x834
.L804:
	ldr	r6, .L835
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	ldr	r1, .L835+0x4
	cmp	r0, r1
	bhi	.L799	@cond_branch
	mov	r2, #0x1
.L799:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	sub_8081BC8
	mov	r2, #0x0
	cmp	r4, #0x40
	bhi	.L807	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x32
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L808	@cond_branch
	ldr	r2, .L835+0x8
	b	.L807
.L836:
	.align	2, 0
.L835:
	.word	-0xce4
	.word	0x12b0000
	.word	0xffff
.L808:
	add	r0, r4, #0
	sub	r0, r0, #0x64
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L810	@cond_branch
	ldr	r2, .L837
	b	.L807
.L838:
	.align	2, 0
.L837:
	.word	0xfffe
.L810:
	add	r0, r4, #0
	sub	r0, r0, #0x96
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L812	@cond_branch
	ldr	r2, .L839
	b	.L807
.L840:
	.align	2, 0
.L839:
	.word	0xfffd
.L812:
	add	r0, r4, #0
	sub	r0, r0, #0xc8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L814	@cond_branch
	ldr	r2, .L841
	b	.L807
.L842:
	.align	2, 0
.L841:
	.word	0xfffc
.L814:
	add	r0, r4, #0
	sub	r0, r0, #0xfa
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L816	@cond_branch
	ldr	r2, .L843
	b	.L807
.L844:
	.align	2, 0
.L843:
	.word	0xfffb
.L816:
	ldr	r1, .L845
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L818	@cond_branch
	ldr	r2, .L845+0x4
	b	.L807
.L846:
	.align	2, 0
.L845:
	.word	-0x15e
	.word	0xfffa
.L818:
	ldr	r3, .L847
	add	r0, r4, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L820	@cond_branch
	ldr	r2, .L847+0x4
	b	.L807
.L848:
	.align	2, 0
.L847:
	.word	-0x190
	.word	0xfff9
.L820:
	ldr	r6, .L849
	add	r0, r4, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L822	@cond_branch
	ldr	r2, .L849+0x4
	b	.L807
.L850:
	.align	2, 0
.L849:
	.word	-0x1f4
	.word	0xfff8
.L822:
	ldr	r1, .L851
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L824	@cond_branch
	ldr	r2, .L851+0x4
	b	.L807
.L852:
	.align	2, 0
.L851:
	.word	-0x226
	.word	0xfff7
.L824:
	ldr	r0, .L853
	cmp	r4, r0
	bls	.L807	@cond_branch
	ldr	r2, .L853+0x4
.L807:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	sub_8081BB0
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L854:
	.align	2, 0
.L853:
	.word	0x257
	.word	0xfff6
.Lfe43:
	.size	 sub_8081E20,.Lfe43-sub_8081E20
	.align	2, 0
	.type	 sub_8081F94,function
	.thumb_func
sub_8081F94:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L859
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L856	@cond_branch
	ldr	r0, .L859+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L856	@cond_branch
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	b	.L858
.L860:
	.align	2, 0
.L859:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
.L856:
	ldr	r2, .L861
.L858:
	add	r0, r2, #0
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L862:
	.align	2, 0
.L861:
	.word	0x2fff
.Lfe44:
	.size	 sub_8081F94,.Lfe44-sub_8081F94
	.align	2, 0
	.type	 CB2_HandleBlenderEndGame,function
	.thumb_func
CB2_HandleBlenderEndGame:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r4, .L958
	ldr	r0, [r4]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bhi	.L864	@cond_branch
	bl	sub_8082D28
.L864:
	bl	GetMultiplayerId
	ldr	r0, [r4]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xc
	bls	.LCB6983
	b	.L865	@long jump
.LCB6983:
	lsl	r0, r0, #0x2
	ldr	r1, .L958+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L959:
	.align	2, 0
.L958:
	.word	sBerryBlenderData
	.word	.L950
	.align	2, 0
	.align	2, 0
.L950:
	.word	.L866
	.word	.L872
	.word	.L876
	.word	.L894
	.word	.L908
	.word	.L910
	.word	.L914
	.word	.L947
	.word	.L916
	.word	.L917
	.word	.L937
	.word	.L944
	.word	.L948
.L866:
	ldr	r0, .L960
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
	mov	r4, #0x0
	b	.L952
.L961:
	.align	2, 0
.L960:
	.word	gMPlayInfo_BGM
.L870:
	ldr	r0, .L962
	ldr	r0, [r0]
	mov	r1, #0x90
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L952:
	ldr	r0, .L962+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	bcc	.L870	@cond_branch
	b	.L947
.L963:
	.align	2, 0
.L962:
	.word	sBerryBlenderData
	.word	gSpecialVar_0x8004
.L872:
	ldr	r4, .L964
	ldr	r1, [r4]
	add	r1, r1, #0x4c
	ldrh	r0, [r1]
	sub	r0, r0, #0x20
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L873	@cond_branch
	bl	ClearLinkCallback
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x4c
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L964+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L874	@cond_branch
	add	r1, r1, #0x17
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L953
.L965:
	.align	2, 0
.L964:
	.word	sBerryBlenderData
	.word	gReceivedRemoteLinkPlayers
.L874:
	add	r1, r2, #0
	add	r1, r1, #0x63
	mov	r0, #0x5
.L953:
	strb	r0, [r1]
	ldr	r0, .L966
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L966+0x4
	bl	m4aMPlayStop
.L873:
	bl	Blender_ControlHitPitch
	b	.L865
.L967:
	.align	2, 0
.L966:
	.word	sBerryBlenderData
	.word	gMPlayInfo_SE2
.L876:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7129
	b	.L947	@long jump
.LCB7129:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7136
	b	.L865	@long jump
.LCB7136:
	ldr	r0, .L968
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L880	@cond_branch
	ldr	r0, .L968+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L880	@cond_branch
	ldr	r3, .L968+0x8
	ldr	r1, [r3]
	mov	r4, #0x8e
	lsl	r4, r4, #0x5
	add	r2, r1, r4
	mov	r5, #0x82
	lsl	r5, r5, #0x1
	add	r0, r1, r5
	ldr	r0, [r0]
	str	r0, [r2]
	add	r0, r1, #0
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	ldr	r2, .L968+0xc
	add	r1, r1, r2
	strh	r0, [r1]
	mov	r4, #0x0
	mov	r8, r3
	mov	ip, r8
	ldr	r7, .L968+0x10
	mov	r6, #0x92
	lsl	r6, r6, #0x1
.L884:
	mov	r3, #0x0
	add	r5, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r4, r0, #0x1
.L888:
	mov	r1, ip
	ldr	r0, [r1]
	lsl	r1, r3, #0x1
	add	r1, r1, r4
	add	r2, r0, r7
	add	r2, r2, r1
	add	r0, r0, r6
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L888	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L884	@cond_branch
	mov	r2, r8
	ldr	r1, [r2]
	mov	r4, #0x8e
	lsl	r4, r4, #0x5
	add	r1, r1, r4
	mov	r0, #0x0
	mov	r2, #0x20
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7232
	b	.L865	@long jump
.LCB7232:
	mov	r5, r8
	ldr	r1, [r5]
	b	.L954
.L969:
	.align	2, 0
.L968:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	sBerryBlenderData
	.word	0x11c4
	.word	0x11c8
.L880:
	ldr	r4, .L970
	ldr	r3, [r4]
	mov	r0, #0xcc
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r2, #0x82
	lsl	r2, r2, #0x1
	add	r0, r3, r2
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x4e
	ldrh	r2, [r0]
	mov	r5, #0xce
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	strh	r2, [r0]
	mov	r0, #0x0
	mov	r2, #0x28
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7277
	b	.L865	@long jump
.LCB7277:
	ldr	r1, [r4]
	b	.L954
.L971:
	.align	2, 0
.L970:
	.word	sBerryBlenderData
.L894:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7293
	b	.L865	@long jump
.LCB7293:
	bl	ResetBlockReceivedFlags
	ldr	r5, .L972
	ldr	r1, [r5]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L972+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L896	@cond_branch
	ldr	r0, .L972+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L896	@cond_branch
	ldr	r2, .L972+0xc
	ldr	r3, [r5]
	ldrh	r0, [r2, #0x4]
	add	r1, r3, #0
	add	r1, r1, #0x4e
	strh	r0, [r1]
	mov	r0, #0x82
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	ldr	r0, [r2]
	str	r0, [r1]
	mov	r4, #0x0
	add	r7, r2, #0
	add	r7, r7, #0x8
	add	r6, r5, #0
	mov	r2, #0x92
	lsl	r2, r2, #0x1
.L900:
	mov	r3, #0x0
	add	r5, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r4, r0, #0x1
.L904:
	ldr	r1, [r6]
	lsl	r0, r3, #0x1
	add	r0, r0, r4
	add	r1, r1, r2
	add	r1, r1, r0
	add	r0, r7, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L904	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L900	@cond_branch
	b	.L865
.L973:
	.align	2, 0
.L972:
	.word	sBerryBlenderData
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	gBlockRecvBuffer
.L896:
	ldr	r2, .L974
	ldr	r0, .L974+0x4
	ldr	r3, [r0]
	ldrh	r0, [r2, #0x4]
	add	r1, r3, #0
	add	r1, r1, #0x4e
	strh	r0, [r1]
	mov	r4, #0x82
	lsl	r4, r4, #0x1
	add	r1, r3, r4
	ldr	r0, [r2]
	str	r0, [r1]
	b	.L865
.L975:
	.align	2, 0
.L974:
	.word	gBlockRecvBuffer
	.word	sBerryBlenderData
.L908:
	bl	Blender_PrintBlendingRanking
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7416
	b	.L865	@long jump
.LCB7416:
	b	.L947
.L910:
	bl	Blender_PrintBlendingResults
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7425
	b	.L865	@long jump
.LCB7425:
	ldr	r0, .L976
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L912	@cond_branch
	mov	r0, #0x22
	bl	IncrementGameStat
	b	.L947
.L977:
	.align	2, 0
.L976:
	.word	gInGameOpponentsNo
.L912:
	mov	r0, #0x21
	bl	IncrementGameStat
	b	.L947
.L914:
	ldr	r6, .L978
	ldr	r4, [r6]
	ldr	r5, .L978+0x4
	add	r4, r4, r5
	ldr	r5, .L978+0x8
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	bne	.LCB7466
	b	.L865	@long jump
.LCB7466:
	ldr	r1, [r6]
	b	.L954
.L979:
	.align	2, 0
.L978:
	.word	sBerryBlenderData
	.word	0x11b8
	.word	sText_WouldLikeToBlendAnotherBerry
.L916:
	ldr	r4, .L980
	ldr	r0, [r4]
	add	r0, r0, #0x9e
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L980+0x4
	mov	r1, #0x1
	mov	r2, #0xd
	mov	r3, #0x0
	bl	CreateYesNoMenu
	ldr	r1, [r4]
	b	.L954
.L981:
	.align	2, 0
.L980:
	.word	sBerryBlenderData
	.word	sBlender_YesNoWindowTemplate
.L917:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L927	@cond_branch
	cmp	r2, #0
	bgt	.L936	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L920	@cond_branch
	b	.L865
.L936:
	cmp	r2, #0x1
	beq	.LCB7518
	b	.L865	@long jump
.LCB7518:
.L920:
	ldr	r2, .L982
	ldr	r0, [r2]
	add	r0, r0, #0x9e
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, [r2]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r4, #0x0
.L924:
	ldr	r0, .L982
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x8e
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L923	@cond_branch
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L923:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L924	@cond_branch
	b	.L865
.L983:
	.align	2, 0
.L982:
	.word	sBerryBlenderData
.L927:
	ldr	r1, .L984
	ldr	r0, [r1]
	add	r0, r0, #0x9e
	strb	r2, [r0]
	ldr	r1, [r1]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r4, #0x0
.L931:
	ldr	r0, .L984
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x8e
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L930	@cond_branch
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L930:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L931	@cond_branch
	b	.L865
.L985:
	.align	2, 0
.L984:
	.word	sBerryBlenderData
.L937:
	ldr	r6, .L986
	add	r0, r6, #0
	bl	sub_8081F94
	ldr	r4, .L986+0x4
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x9e
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L938	@cond_branch
	mov	r0, #0x4
	bl	IsBagPocketNonEmpty
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L939	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x70
	mov	r1, #0x2
	strh	r1, [r0]
	ldr	r0, .L986+0x8
	b	.L955
.L987:
	.align	2, 0
.L986:
	.word	gSendCmd
	.word	sBerryBlenderData
	.word	0x9999
.L939:
	bl	GetFirstFreePokeblockSlot
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L941	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x70
	mov	r1, #0x3
	strh	r1, [r0]
	ldr	r0, .L988
	b	.L955
.L989:
	.align	2, 0
.L988:
	.word	0xaaaa
.L941:
	ldr	r0, [r4]
	add	r0, r0, #0x70
	strh	r5, [r0]
	ldr	r0, .L990
.L955:
	strh	r0, [r6, #0x2]
	b	.L947
.L991:
	.align	2, 0
.L990:
	.word	0x7779
.L938:
	add	r1, r2, #0
	add	r1, r1, #0x70
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L992
	strh	r0, [r6, #0x2]
	sub	r1, r1, #0xd
	b	.L956
.L993:
	.align	2, 0
.L992:
	.word	0x8888
.L944:
	ldr	r0, .L994
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L945	@cond_branch
	ldr	r0, .L994+0x4
	bl	SetMainCallback2
	ldr	r2, .L994+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	b	.L957
.L995:
	.align	2, 0
.L994:
	.word	gInGameOpponentsNo
	.word	CB2_HandlePlayerPlayAgainChoice
	.word	sBerryBlenderData
.L945:
.L947:
	ldr	r0, .L996
	ldr	r1, [r0]
.L954:
	add	r1, r1, #0x63
.L956:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L865
.L997:
	.align	2, 0
.L996:
	.word	sBerryBlenderData
.L948:
	ldr	r6, .L998
	ldr	r4, [r6]
	ldr	r0, .L998+0x4
	add	r4, r4, r0
	ldr	r5, .L998+0x8
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L865	@cond_branch
	ldr	r0, .L998+0xc
	bl	SetMainCallback2
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r6]
.L957:
	strb	r1, [r0]
.L865:
	bl	sub_808330C
	ldr	r4, .L998
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	bl	sub_8083230
	bl	sub_8082AD4
	ldr	r1, [r4]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L999:
	.align	2, 0
.L998:
	.word	sBerryBlenderData
	.word	0x11b8
	.word	sText_CommunicationStandby
	.word	CB2_HandlePlayerLinkPlayAgainChoice
.Lfe45:
	.size	 CB2_HandleBlenderEndGame,.Lfe45-CB2_HandleBlenderEndGame
	.align	2, 0
	.type	 LinkPlayAgainHandleSaving,function
	.thumb_func
LinkPlayAgainHandleSaving:
	push	{r4, lr}
	ldr	r1, .L1020
	ldr	r0, [r1]
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB7858
	b	.L1001	@long jump
.LCB7858:
	lsl	r0, r0, #0x2
	ldr	r1, .L1020+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1021:
	.align	2, 0
.L1020:
	.word	sBerryBlenderData
	.word	.L1015
	.align	2, 0
	.align	2, 0
.L1015:
	.word	.L1002
	.word	.L1003
	.word	.L1005
	.word	.L1006
	.word	.L1008
	.word	.L1012
	.word	.L1013
.L1002:
	bl	sub_800ADF8
	ldr	r0, .L1022
	ldr	r2, [r0]
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	mov	r0, #0x1
	b	.L1018
.L1023:
	.align	2, 0
.L1022:
	.word	sBerryBlenderData
.L1003:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1001	@cond_branch
	ldr	r0, .L1024
	ldr	r1, [r0]
	mov	r2, #0xd0
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r1, .L1024+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1001
.L1025:
	.align	2, 0
.L1024:
	.word	sBerryBlenderData
	.word	gSoftResetDisabled
.L1005:
	bl	FullSaveGame
	ldr	r0, .L1026
	ldr	r2, [r0]
	b	.L1019
.L1027:
	.align	2, 0
.L1026:
	.word	sBerryBlenderData
.L1006:
	ldr	r1, [r4]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0xa
	bne	.L1001	@cond_branch
	bl	sub_800ADF8
	ldr	r1, [r4]
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	b	.L1001
.L1008:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1001	@cond_branch
	bl	CheckSaveFile
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L1010	@cond_branch
	ldr	r0, .L1028
	ldr	r0, [r0]
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x5
	str	r1, [r0]
	b	.L1001
.L1029:
	.align	2, 0
.L1028:
	.word	sBerryBlenderData
.L1010:
	ldr	r0, .L1030
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	str	r2, [r0]
	mov	r0, #0xd0
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [r1]
	b	.L1001
.L1031:
	.align	2, 0
.L1030:
	.word	sBerryBlenderData
.L1012:
	ldr	r2, [r4]
.L1019:
	mov	r3, #0xd0
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
.L1018:
	str	r0, [r1]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	mov	r0, #0x0
	str	r0, [r1]
	b	.L1001
.L1013:
	ldr	r1, [r4]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x5
	ble	.L1001	@cond_branch
	ldr	r1, .L1032
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L1017
.L1033:
	.align	2, 0
.L1032:
	.word	gSoftResetDisabled
.L1001:
	mov	r0, #0x0
.L1017:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 LinkPlayAgainHandleSaving,.Lfe46-LinkPlayAgainHandleSaving
	.align	2, 0
	.type	 CB2_HandlePlayerLinkPlayAgainChoice,function
	.thumb_func
CB2_HandlePlayerLinkPlayAgainChoice:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L1072
	ldr	r0, [r1]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0xc
	bls	.LCB8082
	b	.L1035	@long jump
.LCB8082:
	lsl	r0, r0, #0x2
	ldr	r1, .L1072+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1073:
	.align	2, 0
.L1072:
	.word	sBerryBlenderData
	.word	.L1066
	.align	2, 0
	.align	2, 0
.L1066:
	.word	.L1036
	.word	.L1044
	.word	.L1045
	.word	.L1046
	.word	.L1048
	.word	.L1050
	.word	.L1051
	.word	.L1053
	.word	.L1055
	.word	.L1056
	.word	.L1058
	.word	.L1062
	.word	.L1064
.L1036:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x64
	ldrh	r2, [r0]
	ldr	r0, .L1074
	cmp	r2, r0
	bne	.LCB8113
	b	.L1068	@long jump
.LCB8113:
	ldr	r0, .L1074+0x4
	cmp	r2, r0
	beq	.LCB8119
	b	.L1035	@long jump
.LCB8119:
	add	r0, r1, #0
	add	r0, r0, #0x6c
	ldrh	r2, [r0]
	ldr	r0, .L1074+0x8
	cmp	r2, r0
	bne	.L1040	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1035
.L1075:
	.align	2, 0
.L1074:
	.word	0x2222
	.word	0x1111
	.word	0x9999
.L1040:
	ldr	r0, .L1076
	cmp	r2, r0
	bne	.L1068	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1035
.L1077:
	.align	2, 0
.L1076:
	.word	0xaaaa
.L1044:
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r4, .L1078
	ldr	r0, [r6]
	add	r0, r0, #0x6e
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1078+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L1078+0x8
	b	.L1069
.L1079:
	.align	2, 0
.L1078:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	sText_ApostropheSPokeblockCaseIsFull
.L1045:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r4, .L1080
	ldr	r0, [r6]
	add	r0, r0, #0x6e
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1080+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L1080+0x8
.L1069:
	add	r0, r4, #0
	bl	StringAppend
	b	.L1035
.L1081:
	.align	2, 0
.L1080:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	sText_HasNoBerriesToPut
.L1046:
	ldr	r4, [r6]
	ldr	r0, .L1082
	add	r4, r4, r0
	ldr	r5, .L1082+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	bne	.LCB8242
	b	.L1035	@long jump
.LCB8242:
	ldr	r1, [r6]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1070
.L1083:
	.align	2, 0
.L1082:
	.word	0x11b8
	.word	gStringVar4
.L1048:
	ldr	r4, [r6]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r4, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB8271
	b	.L1035	@long jump
.LCB8271:
	add	r1, r4, #0
.L1068:
	add	r1, r1, #0x63
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1035
.L1050:
	ldr	r0, [r6]
	ldr	r1, .L1084
	add	r0, r0, r1
	ldr	r1, .L1084+0x4
	mov	r2, #0x0
	bl	Blender_PrintText
	bl	sub_800ADF8
	b	.L1071
.L1085:
	.align	2, 0
.L1084:
	.word	0x11b8
	.word	gText_SavingDontTurnOff2
.L1051:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8306
	b	.L1035	@long jump
.LCB8306:
	ldr	r3, .L1086
	ldr	r1, [r3]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	str	r2, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r3]
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r2, [r0]
	b	.L1035
.L1087:
	.align	2, 0
.L1086:
	.word	sBerryBlenderData
.L1053:
	bl	LinkPlayAgainHandleSaving
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1035	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r0, .L1088
	ldr	r1, [r0]
	b	.L1070
.L1089:
	.align	2, 0
.L1088:
	.word	sBerryBlenderData
.L1055:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_800ADF8
	b	.L1035
.L1056:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1035	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L1090
	ldr	r1, [r0]
	b	.L1070
.L1091:
	.align	2, 0
.L1090:
	.word	sBerryBlenderData
.L1058:
	ldr	r0, .L1092
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L1035	@cond_branch
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x64
	ldrh	r1, [r0]
	ldr	r0, .L1092+0x4
	cmp	r1, r0
	bne	.L1060	@cond_branch
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	ldr	r0, [r6]
	bl	Free
	str	r4, [r6]
	ldr	r0, .L1092+0x8
	bl	SetMainCallback2
	b	.L1035
.L1093:
	.align	2, 0
.L1092:
	.word	gPaletteFade
	.word	0x2222
	.word	DoBerryBlending
.L1060:
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	str	r4, [r0]
	add	r1, r2, #0
	b	.L1070
.L1062:
	ldr	r1, [r6]
	mov	r2, #0x84
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x1e
	ble	.L1035	@cond_branch
	bl	sub_800AC34
.L1071:
	ldr	r1, [r6]
.L1070:
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1035
.L1064:
	ldr	r0, .L1094
	ldrb	r4, [r0]
	cmp	r4, #0
	bne	.L1035	@cond_branch
	ldr	r0, [r6]
	bl	Free
	str	r4, [r6]
	ldr	r0, .L1094+0x4
	bl	SetMainCallback2
.L1035:
	bl	sub_8082AD4
	ldr	r0, .L1094+0x8
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1095:
	.align	2, 0
.L1094:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sBerryBlenderData
.Lfe47:
	.size	 CB2_HandlePlayerLinkPlayAgainChoice,.Lfe47-CB2_HandlePlayerLinkPlayAgainChoice
	.align	2, 0
	.type	 CB2_HandlePlayerPlayAgainChoice,function
	.thumb_func
CB2_HandlePlayerPlayAgainChoice:
	push	{r4, r5, r6, lr}
	ldr	r1, .L1113
	ldr	r0, [r1]
	add	r0, r0, #0x63
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0xa
	bls	.LCB8535
	b	.L1097	@long jump
.LCB8535:
	lsl	r0, r0, #0x2
	ldr	r1, .L1113+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1114:
	.align	2, 0
.L1113:
	.word	sBerryBlenderData
	.word	.L1111
	.align	2, 0
	.align	2, 0
.L1111:
	.word	.L1098
	.word	.L1102
	.word	.L1103
	.word	.L1104
	.word	.L1097
	.word	.L1097
	.word	.L1097
	.word	.L1097
	.word	.L1097
	.word	.L1106
	.word	.L1107
.L1098:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bhi	.L1099	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x9
	strb	r0, [r1]
.L1099:
	ldr	r2, [r6]
	add	r0, r2, #0
	add	r0, r0, #0x70
	ldrh	r1, [r0]
	cmp	r1, #0x2
	bne	.L1100	@cond_branch
	sub	r0, r0, #0xd
	strb	r1, [r0]
.L1100:
	ldr	r1, [r6]
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0x3
	bne	.L1097	@cond_branch
	add	r1, r1, #0x63
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1097
.L1102:
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r2, #0x0
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, [r6]
	ldr	r1, .L1115
	add	r0, r0, r1
	strh	r2, [r0]
	ldr	r0, .L1115+0x4
	ldr	r1, .L1115+0x8
	bl	StringCopy
	b	.L1097
.L1116:
	.align	2, 0
.L1115:
	.word	0x11b8
	.word	gStringVar4
	.word	sText_YourPokeblockCaseIsFull
.L1103:
	ldr	r1, [r6]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r6]
	ldr	r1, .L1117
	add	r0, r0, r1
	strh	r2, [r0]
	ldr	r0, .L1117+0x4
	ldr	r1, .L1117+0x8
	bl	StringCopy
	b	.L1097
.L1118:
	.align	2, 0
.L1117:
	.word	0x11b8
	.word	gStringVar4
	.word	sText_RunOutOfBerriesForBlending
.L1104:
	ldr	r4, [r6]
	ldr	r2, .L1119
	add	r4, r4, r2
	ldr	r5, .L1119+0x4
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L1097	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x63
	mov	r1, #0x9
	strb	r1, [r0]
	b	.L1097
.L1120:
	.align	2, 0
.L1119:
	.word	0x11b8
	.word	gStringVar4
.L1106:
	mov	r0, #0x3
	bl	BeginFastPaletteFade
	ldr	r0, .L1121
	ldr	r1, [r0]
	add	r1, r1, #0x63
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1097
.L1122:
	.align	2, 0
.L1121:
	.word	sBerryBlenderData
.L1107:
	ldr	r0, .L1123
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1097	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x70
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1109	@cond_branch
	ldr	r0, .L1123+0x4
	bl	SetMainCallback2
	b	.L1110
.L1124:
	.align	2, 0
.L1123:
	.word	gPaletteFade
	.word	DoBerryBlending
.L1109:
	ldr	r0, .L1125
	bl	SetMainCallback2
.L1110:
	bl	FreeAllWindowBuffers
	mov	r0, #0x2
	bl	UnsetBgTilemapBuffer
	mov	r0, #0x1
	bl	UnsetBgTilemapBuffer
	ldr	r4, .L1125+0x4
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1097:
	bl	sub_8082AD4
	ldr	r0, .L1125+0x4
	ldr	r1, [r0]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r2, #0x8f
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	bl	Blender_DummiedOutFunc
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1126:
	.align	2, 0
.L1125:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sBerryBlenderData
.Lfe48:
	.size	 CB2_HandlePlayerPlayAgainChoice,.Lfe48-CB2_HandlePlayerPlayAgainChoice
	.align	2, 0
	.type	 sub_8082AD4,function
	.thumb_func
sub_8082AD4:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1173
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8787
	b	.L1128	@long jump
.LCB8787:
	ldr	r4, .L1173+0x4
	ldrh	r0, [r4]
	ldr	r1, .L1173+0x8
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	bl	sub_80814B0
	cmp	r0, #0
	beq	.L1129	@cond_branch
	ldrh	r1, [r4, #0x2]
	ldr	r0, .L1173+0xc
	cmp	r1, r0
	bne	.L1130	@cond_branch
	ldrh	r3, [r4, #0x4]
	ldr	r0, .L1173+0x10
	cmp	r3, r0
	beq	.L1133	@cond_branch
	cmp	r3, r0
	bgt	.L1137	@cond_branch
	ldr	r0, .L1173+0x14
	b	.L1171
.L1174:
	.align	2, 0
.L1173:
	.word	gReceivedRemoteLinkPlayers
	.word	gRecvCmds
	.word	0x2fff
	.word	0x1111
	.word	0x9999
	.word	0x8888
.L1137:
	ldr	r0, .L1175
.L1171:
	cmp	r3, r0
	beq	.L1134	@cond_branch
	ldr	r2, .L1175+0x4
	b	.L1131
.L1176:
	.align	2, 0
.L1175:
	.word	0xaaaa
	.word	sBerryBlenderData
.L1133:
.L1134:
	ldr	r2, .L1177
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0x6c
	strh	r3, [r1]
	ldrh	r1, [r4, #0x6]
	add	r0, r0, #0x6e
	strh	r1, [r0]
.L1131:
	ldr	r0, [r2]
	add	r0, r0, #0x64
	ldr	r1, .L1177+0x4
	b	.L1170
.L1178:
	.align	2, 0
.L1177:
	.word	sBerryBlenderData
	.word	0x1111
.L1130:
	ldr	r0, .L1179
	cmp	r1, r0
	bne	.L1129	@cond_branch
	ldr	r0, .L1179+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x64
.L1170:
	strh	r1, [r0]
.L1129:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8895
	b	.L1128	@long jump
.LCB8895:
	ldr	r2, .L1179+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x64
	ldrh	r1, [r0]
	ldr	r0, .L1179+0x8
	cmp	r1, r0
	bne	.LCB8906
	b	.L1128	@long jump
.LCB8906:
	ldr	r0, .L1179
	cmp	r1, r0
	bne	.LCB8911
	b	.L1128	@long jump
.LCB8911:
	mov	r5, #0x0
	add	r7, r2, #0
	b	.L1141
.L1180:
	.align	2, 0
.L1179:
	.word	0x2222
	.word	sBerryBlenderData
	.word	0x1111
.L1144:
	ldr	r6, .L1181
	lsl	r4, r5, #0x4
	add	r0, r4, r6
	ldrh	r0, [r0]
	ldr	r1, .L1181+0x4
	mov	r2, #0xbc
	lsl	r2, r2, #0x6
	bl	sub_80814B0
	cmp	r0, #0
	beq	.L1143	@cond_branch
	add	r0, r6, #0x2
	add	r0, r4, r0
	ldrh	r2, [r0]
	ldr	r0, .L1181+0x8
	cmp	r2, r0
	beq	.L1150	@cond_branch
	cmp	r2, r0
	bgt	.L1153	@cond_branch
	ldr	r0, .L1181+0xc
	b	.L1172
.L1182:
	.align	2, 0
.L1181:
	.word	gRecvCmds
	.word	0x2fff
	.word	0x8888
	.word	0x7779
.L1153:
	ldr	r0, .L1183
	cmp	r2, r0
	beq	.L1149	@cond_branch
	ldr	r0, .L1183+0x4
.L1172:
	cmp	r2, r0
	bne	.L1143	@cond_branch
.L1149:
.L1150:
	ldr	r0, [r7]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	strh	r2, [r0]
.L1143:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1141:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcc	.L1144	@cond_branch
	mov	r5, #0x0
	b	.L1155
.L1184:
	.align	2, 0
.L1183:
	.word	0x9999
	.word	0xaaaa
.L1157:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1155:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L1156	@cond_branch
	ldr	r0, .L1185
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1157	@cond_branch
.L1156:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bne	.L1128	@cond_branch
	mov	r5, #0x0
	ldr	r4, .L1185+0x4
	b	.L1162
.L1186:
	.align	2, 0
.L1185:
	.word	sBerryBlenderData
	.word	0x7779
.L1164:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1162:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L1163	@cond_branch
	ldr	r0, .L1187
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r4
	beq	.L1164	@cond_branch
.L1163:
	ldr	r4, .L1187+0x4
	add	r0, r4, #0
	bl	sub_8081F94
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bne	.L1168	@cond_branch
	ldr	r0, .L1187+0x8
	strh	r0, [r4, #0x2]
	b	.L1128
.L1188:
	.align	2, 0
.L1187:
	.word	sBerryBlenderData
	.word	gSendCmd
	.word	0x2222
.L1168:
	ldr	r0, .L1189
	strh	r0, [r4, #0x2]
	ldr	r0, .L1189+0x4
	ldr	r0, [r0]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x64
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	strh	r5, [r4, #0x6]
.L1128:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1190:
	.align	2, 0
.L1189:
	.word	0x1111
	.word	sBerryBlenderData
.Lfe49:
	.size	 sub_8082AD4,.Lfe49-sub_8082AD4
	.align	2, 0
	.type	 sub_8082CB4,function
	.thumb_func
sub_8082CB4:
	push	{r4, lr}
	add	sp, sp, #-0x14
	mov	r1, #0xf0
	lsl	r1, r1, #0x7
	str	r1, [sp]
	mov	r1, #0xa0
	lsl	r1, r1, #0x7
	str	r1, [sp, #0x4]
	mov	r3, sp
	ldr	r1, .L1192
	ldr	r1, [r1]
	mov	ip, r1
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	ldrh	r2, [r1]
	mov	r1, #0x78
	sub	r1, r1, r2
	strh	r1, [r3, #0x8]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	ldrh	r2, [r1]
	mov	r1, #0x50
	sub	r1, r1, r2
	strh	r1, [r3, #0xa]
	mov	r2, sp
	mov	r3, #0x8d
	lsl	r3, r3, #0x1
	add	r3, r3, ip
	ldrh	r1, [r3]
	strh	r1, [r2, #0xc]
	ldrh	r1, [r3]
	strh	r1, [r2, #0xe]
	mov	r1, ip
	add	r1, r1, #0x4a
	ldrh	r1, [r1]
	strh	r1, [r2, #0x10]
	mov	r1, sp
	ldmia	r1!, {r2, r3, r4}
	stmia	r0!, {r2, r3, r4}
	ldmia	r1!, {r2, r3}
	stmia	r0!, {r2, r3}
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L1193:
	.align	2, 0
.L1192:
	.word	sBerryBlenderData
.Lfe50:
	.size	 sub_8082CB4,.Lfe50-sub_8082CB4
	.align	2, 0
	.globl	GetBlenderArrowPosition
	.type	 GetBlenderArrowPosition,function
	.thumb_func
GetBlenderArrowPosition:
	ldr	r0, .L1195
	ldr	r0, [r0]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	bx	lr
.L1196:
	.align	2, 0
.L1195:
	.word	sBerryBlenderData
.Lfe51:
	.size	 GetBlenderArrowPosition,.Lfe51-GetBlenderArrowPosition
	.align	2, 0
	.type	 sub_8082D28,function
	.thumb_func
sub_8082D28:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r4, .L1204
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1198	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
.L1198:
	ldr	r0, .L1204+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1199	@cond_branch
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1199	@cond_branch
	cmp	r1, #0
	bne	.L1200	@cond_branch
	ldr	r0, .L1204+0x8
	ldr	r3, [r0]
	add	r2, r3, #0
	add	r2, r2, #0x4a
	add	r0, r3, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	ldrh	r1, [r2]
	add	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L1204+0xc
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	ldrh	r0, [r0]
	strh	r0, [r1, #0xa]
	ldrh	r0, [r2]
	strh	r0, [r1, #0xc]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	bl	sub_8082CB4
	b	.L1203
.L1205:
	.align	2, 0
.L1204:
	.word	gReceivedRemoteLinkPlayers
	.word	gWirelessCommType
	.word	sBerryBlenderData
	.word	gSendCmd
.L1200:
	ldr	r3, .L1206
	ldrh	r0, [r3]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0x88
	lsl	r0, r0, #0x7
	cmp	r1, r0
	bne	.L1203	@cond_branch
	ldr	r0, .L1206+0x4
	ldr	r2, [r0]
	ldrh	r0, [r3, #0xa]
	mov	r4, #0x8b
	lsl	r4, r4, #0x1
	add	r1, r2, r4
	strh	r0, [r1]
	ldrh	r0, [r3, #0xc]
	add	r1, r2, #0
	add	r1, r1, #0x4a
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	bl	sub_8082CB4
	b	.L1203
.L1207:
	.align	2, 0
.L1206:
	.word	gRecvCmds
	.word	sBerryBlenderData
.L1199:
	ldr	r0, .L1208
	ldr	r1, [r0]
	add	r2, r1, #0
	add	r2, r2, #0x4a
	add	r0, r1, #0
	add	r0, r0, #0x4c
	ldrh	r0, [r0]
	ldrh	r3, [r2]
	add	r0, r0, r3
	strh	r0, [r2]
	mov	r4, #0xa0
	lsl	r4, r4, #0x1
	add	r0, r1, r4
	bl	sub_8082CB4
.L1203:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1209:
	.align	2, 0
.L1208:
	.word	sBerryBlenderData
.Lfe52:
	.size	 sub_8082D28,.Lfe52-sub_8082D28
	.align	2, 0
	.type	 BerryBlender_SetBackgroundsPos,function
	.thumb_func
BerryBlender_SetBackgroundsPos:
	push	{r4, r5, r6, lr}
	ldr	r4, .L1211
	ldr	r0, [r4]
	mov	r6, #0x8e
	lsl	r6, r6, #0x1
	add	r0, r0, r6
	ldrh	r1, [r0]
	mov	r0, #0x14
	bl	SetGpuReg
	ldr	r0, [r4]
	mov	r5, #0x8f
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r4]
	add	r0, r0, r6
	ldrh	r1, [r0]
	mov	r0, #0x10
	bl	SetGpuReg
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r1, [r0]
	mov	r0, #0x12
	bl	SetGpuReg
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1212:
	.align	2, 0
.L1211:
	.word	sBerryBlenderData
.Lfe53:
	.size	 BerryBlender_SetBackgroundsPos,.Lfe53-BerryBlender_SetBackgroundsPos
	.align	2, 0
	.type	 sub_8082E3C,function
	.thumb_func
sub_8082E3C:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	ldrh	r1, [r2, #0x32]
	add	r0, r0, r1
	strh	r0, [r2, #0x32]
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r0, r0, r1
	strh	r0, [r2, #0x34]
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1214	@cond_branch
	add	r0, r0, #0x7
.L1214:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x24]
	mov	r1, #0x34
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1215	@cond_branch
	add	r0, r0, #0x7
.L1215:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x26]
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1216	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1216:
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 sub_8082E3C,.Lfe54-sub_8082E3C
	.align	2, 0
	.type	 sub_8082E84,function
	.thumb_func
sub_8082E84:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0x1
	and	r1, r1, r0
	add	r0, r1, #0x1
	cmp	r0, #0
	beq	.L1219	@cond_branch
	ldr	r0, .L1225
	mov	r9, r0
	ldr	r2, .L1225+0x4
	mov	sl, r2
	add	r6, r1, #0x1
	mov	r3, #0x1f
	mov	r8, r3
	mov	r7, #0x10
.L1221:
	bl	Random
	ldr	r1, .L1225+0x8
	ldr	r4, [r1]
	add	r4, r4, #0x4a
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x14
	bl	__umodsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	and	r0, r0, r1
	lsr	r2, r0, #0x10
	add	r0, r2, #0
	add	r0, r0, #0x40
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	cmp	r1, #0
	bge	.L1222	@cond_branch
	add	r1, r1, #0x3
.L1222:
	asr	r1, r1, #0x2
	lsl	r0, r2, #0x1
	add	r0, r0, r9
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bge	.L1223	@cond_branch
	add	r0, r0, #0x3
.L1223:
	asr	r2, r0, #0x2
	add	r1, r1, #0x78
	add	r2, r2, #0x50
	ldr	r0, .L1225+0xc
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r5, r4, #0x4
	add	r5, r5, r4
	lsl	r5, r5, #0x2
	mov	r3, sl
	add	r4, r5, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r8
	and	r0, r0, r1
	sub	r0, r7, r0
	strh	r0, [r4, #0x2e]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, r8
	and	r0, r0, r2
	sub	r0, r7, r0
	strh	r0, [r4, #0x30]
	ldr	r3, .L1225+0x10
	add	r5, r5, r3
	ldr	r0, .L1225+0x14
	str	r0, [r5]
	sub	r6, r6, #0x1
	cmp	r6, #0
	bne	.L1221	@cond_branch
.L1219:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1226:
	.align	2, 0
.L1225:
	.word	gSineTable
	.word	gSprites
	.word	sBerryBlenderData
	.word	sUnknown_08339BE0
	.word	gSprites+0x1c
	.word	sub_8082E3C
.Lfe55:
	.size	 sub_8082E84,.Lfe55-sub_8082E84
	.align	2, 0
	.type	 sub_8082F68,function
	.thumb_func
sub_8082F68:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x3
	bl	__divsi3
	neg	r0, r0
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1228	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
.L1228:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 sub_8082F68,.Lfe56-sub_8082F68
	.align	2, 0
	.type	 sub_8082F9C,function
	.thumb_func
sub_8082F9C:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x1
	neg	r0, r0
	strh	r0, [r2, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0xc
	neg	r1, r1
	cmp	r0, r1
	bge	.L1230	@cond_branch
	ldr	r0, .L1232
	strh	r0, [r2, #0x26]
.L1230:
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1231	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1231:
	pop	{r0}
	bx	r0
.L1233:
	.align	2, 0
.L1232:
	.word	0xfff4
.Lfe57:
	.size	 sub_8082F9C,.Lfe57-sub_8082F9C
	.align	2, 0
	.type	 Blender_SetParticipantBerryData,function
	.thumb_func
Blender_SetParticipantBerryData:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, .L1235
	ldr	r3, [r2]
	lsl	r4, r0, #0x1
	add	r2, r3, #0
	add	r2, r2, #0x74
	add	r2, r2, r4
	strh	r1, [r2]
	lsl	r0, r0, #0x4
	mov	r2, #0xac
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	add	r3, r3, r0
	add	r0, r3, #0
	bl	Blender_CopyBerryData
	pop	{r4}
	pop	{r0}
	bx	r0
.L1236:
	.align	2, 0
.L1235:
	.word	sBerryBlenderData
.Lfe58:
	.size	 Blender_SetParticipantBerryData,.Lfe58-Blender_SetParticipantBerryData
	.align	2, 0
	.type	 sub_8083010,function
	.thumb_func
sub_8083010:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1241	@cond_branch
	cmp	r0, #0x1
	bgt	.L1249	@cond_branch
	cmp	r0, #0
	beq	.L1239	@cond_branch
	b	.L1238
.L1249:
	cmp	r0, #0x2
	beq	.L1243	@cond_branch
	b	.L1238
.L1239:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x58
	ble	.L1238	@cond_branch
	mov	r0, #0x58
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x38
	bl	PlaySE
	b	.L1238
.L1241:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1238	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	b	.L1238
.L1243:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1238	@cond_branch
	ldrh	r0, [r4, #0x34]
	add	r0, r0, #0x1
	add	r1, r0, #0
	strh	r0, [r4, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L1245	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r0, .L1250
	mov	r2, #0x14
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x2
	bl	CreateSprite
	b	.L1238
.L1251:
	.align	2, 0
.L1250:
	.word	sUnknown_08339C60
.L1245:
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
	ldr	r0, .L1252
	strh	r0, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L1238:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1253:
	.align	2, 0
.L1252:
	.word	0xfff0
.Lfe59:
	.size	 sub_8083010,.Lfe59-sub_8083010
	.align	2, 0
	.type	 sub_80830C0,function
	.thumb_func
sub_80830C0:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1258	@cond_branch
	cmp	r0, #0x1
	bgt	.L1264	@cond_branch
	cmp	r0, #0
	beq	.L1256	@cond_branch
	b	.L1255
.L1264:
	cmp	r0, #0x2
	beq	.L1260	@cond_branch
	b	.L1255
.L1256:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5c
	ble	.L1255	@cond_branch
	mov	r0, #0x5c
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x15
	bl	PlaySE
	b	.L1255
.L1258:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1255	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L1255
.L1260:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1255	@cond_branch
	ldr	r0, .L1265
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	bl	DestroySprite
.L1255:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1266:
	.align	2, 0
.L1265:
	.word	sBerryBlenderData
.Lfe60:
	.size	 sub_80830C0,.Lfe60-sub_80830C0
	.align	2, 0
	.type	 sub_8083140,function
	.thumb_func
sub_8083140:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	ldr	r1, .L1269
	ldr	r1, [r1]
	mov	r2, #0x8c
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	cmp	r2, r0
	bcs	.L1268	@cond_branch
	add	r0, r2, #0x2
	strh	r0, [r1]
	ldrh	r0, [r1]
	add	r1, r3, #0
	bl	sub_8083170
.L1268:
	pop	{r0}
	bx	r0
.L1270:
	.align	2, 0
.L1269:
	.word	sBerryBlenderData
.Lfe61:
	.size	 sub_8083140,.Lfe61-sub_8083140
	.align	2, 0
	.type	 sub_8083170,function
	.thumb_func
sub_8083170:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r7, .L1285
	lsr	r0, r0, #0xa
	bl	__divsi3
	add	r1, r0, #0
	cmp	r1, #0
	bge	.L1272	@cond_branch
	add	r0, r1, #0x7
.L1272:
	asr	r4, r0, #0x3
	mov	r3, #0x0
	cmp	r3, r4
	bge	.L1274	@cond_branch
	ldr	r0, .L1285+0x4
	add	r6, r0, #0
	add	r0, r0, #0x10
	add	r5, r0, #0
	add	r2, r7, #0
	add	r2, r2, #0x56
	add	r0, r7, #0
	add	r3, r4, #0
.L1276:
	strh	r6, [r0, #0x16]
	strh	r5, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1276	@cond_branch
	add	r3, r4, #0
.L1274:
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L1278	@cond_branch
	add	r0, r1, #0x7
.L1278:
	asr	r2, r0, #0x3
	lsl	r0, r2, #0x3
	sub	r2, r1, r0
	cmp	r2, #0
	beq	.L1279	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r0, r7
	ldr	r4, .L1285+0x8
	add	r1, r2, r4
	strh	r1, [r0, #0x16]
	add	r0, r0, #0x56
	add	r4, r4, #0x10
	add	r1, r2, r4
	strh	r1, [r0]
	add	r3, r3, #0x1
.L1279:
	cmp	r3, #0x7
	bgt	.L1281	@cond_branch
	ldr	r0, .L1285+0xc
	add	r4, r0, #0
	add	r0, r0, #0x10
	add	r2, r0, #0
	lsl	r1, r3, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x56
	add	r0, r0, r7
	add	r1, r1, r7
.L1283:
	strh	r4, [r1, #0x16]
	strh	r2, [r0]
	add	r0, r0, #0x2
	add	r1, r1, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1283	@cond_branch
.L1281:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1286:
	.align	2, 0
.L1285:
	.word	0x6006000
	.word	0x80e9
	.word	-0x7f1f
	.word	0x80e1
.Lfe62:
	.size	 sub_8083170,.Lfe62-sub_8083170
	.align	2, 0
	.type	 sub_8083210,function
	.thumb_func
sub_8083210:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1289
	mul	r0, r0, r1
	cmp	r0, #0
	bge	.L1288	@cond_branch
	ldr	r1, .L1289+0x4
	add	r0, r0, r1
.L1288:
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L1290:
	.align	2, 0
.L1289:
	.word	0x57e40
	.word	0xffff
.Lfe63:
	.size	 sub_8083210,.Lfe63-sub_8083210
	.align	2, 0
	.type	 sub_8083230,function
	.thumb_func
sub_8083230:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_8083210
	add	r5, r0, #0
	ldr	r0, .L1298
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x4e
	ldrh	r0, [r1]
	cmp	r0, r5
	bcs	.L1292	@cond_branch
	strh	r5, [r1]
.L1292:
	mov	r6, #0x0
.L1296:
	mov	r0, sp
	add	r4, r0, r6
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__umodsi3
	strb	r0, [r4]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__udivsi3
	add	r5, r0, #0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x4
	bls	.L1296	@cond_branch
	ldr	r2, .L1298+0x4
	mov	r0, sp
	ldr	r3, .L1298+0x8
	add	r1, r3, #0
	ldrb	r0, [r0, #0x4]
	add	r0, r1, r0
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x3]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x4
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0]
	add	r1, r1, r0
	strh	r1, [r2]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1299:
	.align	2, 0
.L1298:
	.word	sBerryBlenderData
	.word	0x6006458
	.word	0x8072
.Lfe64:
	.size	 sub_8083230,.Lfe64-sub_8083230
	.align	2, 0
	.type	 sub_80832BC,function
	.thumb_func
sub_80832BC:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x10
	lsr	r5, r4, #0x10
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L1301	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__umodsi3
	lsr	r1, r4, #0x11
	sub	r0, r0, r1
	strh	r0, [r6]
.L1301:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 sub_80832BC,.Lfe65-sub_80832BC
	.align	2, 0
	.type	 sub_80832E8,function
	.thumb_func
sub_80832E8:
	push	{lr}
	add	r1, r0, #0
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bge	.L1303	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1]
.L1303:
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L1304	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L1304:
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 sub_80832E8,.Lfe66-sub_80832E8
	.align	2, 0
	.type	 sub_808330C,function
	.thumb_func
sub_808330C:
	push	{r4, lr}
	ldr	r4, .L1306
	ldr	r0, [r4]
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_80832E8
	ldr	r0, [r4]
	mov	r1, #0x8f
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_80832E8
	pop	{r4}
	pop	{r0}
	bx	r0
.L1307:
	.align	2, 0
.L1306:
	.word	sBerryBlenderData
.Lfe67:
	.size	 sub_808330C,.Lfe67-sub_808330C
	.align	2, 0
	.type	 sub_8083334,function
	.thumb_func
sub_8083334:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r5, #0x8
	cmp	r1, #0x9
	bhi	.L1309	@cond_branch
	mov	r5, #0x10
.L1309:
	ldrh	r0, [r4]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L1311	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsr	r1, r5, #0x1
	sub	r0, r0, r1
	b	.L1315
.L1311:
	cmp	r1, #0
	bge	.L1313	@cond_branch
	add	r0, r0, #0x1
	strh	r0, [r4]
.L1313:
	ldrh	r1, [r4]
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	ble	.L1312	@cond_branch
	sub	r0, r1, #0x1
.L1315:
	strh	r0, [r4]
.L1312:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 sub_8083334,.Lfe68-sub_8083334
	.align	2, 0
	.type	 sub_8083380,function
	.thumb_func
sub_8083380:
	push	{r4, r5, lr}
	ldr	r5, .L1320
	ldr	r2, [r5]
	mov	r4, #0x84
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	ldr	r1, [r0]
	cmp	r1, #0
	bne	.L1317	@cond_branch
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
.L1317:
	ldr	r0, [r5]
	add	r2, r0, r4
	ldr	r1, [r2]
	add	r1, r1, #0x1
	str	r1, [r2]
	mov	r2, #0x8e
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8083334
	ldr	r1, [r5]
	mov	r3, #0x8f
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	add	r1, r1, r4
	ldrh	r1, [r1]
	bl	sub_8083334
	ldr	r2, [r5]
	add	r0, r2, r4
	ldr	r0, [r0]
	cmp	r0, #0x14
	beq	.L1318	@cond_branch
	mov	r0, #0x0
	b	.L1319
.L1321:
	.align	2, 0
.L1320:
	.word	sBerryBlenderData
.L1318:
	mov	r1, #0x8e
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r3, #0x8f
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	mov	r0, #0x1
.L1319:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 sub_8083380,.Lfe69-sub_8083380
	.align	2, 0
	.type	 sub_80833F8,function
	.thumb_func
sub_80833F8:
	ldr	r1, .L1323
	ldr	r2, [r1]
	mov	r3, #0x8e
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x24]
	add	r3, r3, #0x2
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x26]
	bx	lr
.L1324:
	.align	2, 0
.L1323:
	.word	sBerryBlenderData
.Lfe70:
	.size	 sub_80833F8,.Lfe70-sub_80833F8
	.align	2, 0
	.type	 TryUpdateBerryBlenderRecord,function
	.thumb_func
TryUpdateBerryBlenderRecord:
	push	{lr}
	ldr	r0, .L1327
	ldr	r2, [r0]
	ldr	r0, .L1327+0x4
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x1
	ldr	r3, .L1327+0x8
	add	r2, r2, r3
	add	r2, r2, r0
	add	r1, r1, #0x4e
	ldrh	r1, [r1]
	ldrh	r0, [r2]
	cmp	r0, r1
	bcs	.L1326	@cond_branch
	strh	r1, [r2]
.L1326:
	pop	{r0}
	bx	r0
.L1328:
	.align	2, 0
.L1327:
	.word	gSaveBlock1Ptr
	.word	sBerryBlenderData
	.word	0x9bc
.Lfe71:
	.size	 TryUpdateBerryBlenderRecord,.Lfe71-TryUpdateBerryBlenderRecord
	.align	2, 0
	.type	 Blender_PrintBlendingResults,function
	.thumb_func
Blender_PrintBlendingResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4c
	ldr	r1, .L1365
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB10506
	b	.L1330	@long jump
.LCB10506:
	lsl	r0, r0, #0x2
	ldr	r1, .L1365+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1366:
	.align	2, 0
.L1365:
	.word	sBerryBlenderData
	.word	.L1361
	.align	2, 0
	.align	2, 0
.L1361:
	.word	.L1331
	.word	.L1332
	.word	.L1334
	.word	.L1341
	.word	.L1349
	.word	.L1351
	.word	.L1359
.L1331:
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x11
	str	r1, [r0]
	b	.L1330
.L1332:
	ldr	r1, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB10551
	b	.L1330	@long jump
.LCB10551:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1364
.L1334:
	ldr	r1, [r4]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB10568
	b	.L1330	@long jump
.LCB10568:
	mov	r6, #0x0
.L1339:
	ldr	r4, .L1367
	ldr	r0, [r4]
	add	r0, r0, #0x46
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1367+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x2
	bls	.L1339	@cond_branch
	ldr	r1, [r4]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1364
.L1368:
	.align	2, 0
.L1367:
	.word	sBerryBlenderData
	.word	gSprites
.L1341:
	ldr	r4, .L1369
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xa8
	bl	GetStringCenterAlignXOffset
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	add	r1, r4, #0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	ldr	r1, .L1369+0x4
	ldr	r0, [r1]
	add	r2, r0, #0
	add	r2, r2, #0x7c
	ldrb	r0, [r2]
	mov	r3, #0x15
	mov	r9, r3
	cmp	r0, #0x4
	bne	.L1342	@cond_branch
	mov	r0, #0x11
	mov	r9, r0
.L1342:
	mov	r6, #0x0
	mov	r3, sp
	add	r3, r3, #0x10
	str	r3, [sp, #0x48]
	ldrb	r2, [r2]
	cmp	r6, r2
	bcs	.L1345	@cond_branch
	add	r7, r1, #0
	mov	r0, #0x3
	mov	sl, r0
.L1347:
	ldr	r0, [r7]
	mov	r2, #0x9e
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	add	r1, r1, r6
	ldrb	r5, [r1]
	add	r0, r0, #0x9f
	add	r6, r6, #0x1
	mov	r8, r6
	mov	r1, r8
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x8
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0xc
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	lsl	r4, r5, #0x3
	sub	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r3, .L1369+0x10
	add	r1, r4, r3
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r0, r9
	lsl	r6, r0, #0x18
	lsr	r6, r6, #0x18
	mov	r2, #0xff
	str	r2, [sp]
	mov	r3, sl
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x8
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	lsl	r5, r5, #0x4
	add	r5, r5, r1
	mov	r1, #0xad
	lsl	r1, r1, #0x1
	add	r5, r5, r1
	add	r1, r5, #0
	bl	StringCopy
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r2, .L1369+0x14
	add	r4, r4, r2
	ldrb	r1, [r4, #0x1a]
	bl	ConvertInternationalString
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x18
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, #0xff
	str	r3, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x54
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	mov	r1, #0x10
	add	r9, r9, r1
	mov	r2, r8
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L1347	@cond_branch
.L1345:
	ldr	r1, .L1369+0x1c
	mov	r3, #0xff
	mov	sl, r3
	str	r3, [sp]
	mov	r0, #0x3
	mov	r9, r0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	mov	r3, #0x51
	bl	Blender_AddTextPrinter
	ldr	r6, .L1369+0x4
	ldr	r0, [r6]
	add	r4, r0, #0
	add	r4, r4, #0x9f
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x8
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, #0x4e
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, [sp, #0x48]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, [sp, #0x48]
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x20
	bl	StringAppend
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	mov	r0, #0x1
	mov	r2, #0xa8
	bl	GetStringRightAlignXOffset
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r3, #0x51
	bl	Blender_AddTextPrinter
	ldr	r1, .L1369+0x24
	mov	r2, sl
	str	r2, [sp]
	mov	r3, r9
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	mov	r3, #0x61
	bl	Blender_AddTextPrinter
	ldr	r5, [r6]
	mov	r1, #0x82
	lsl	r1, r1, #0x1
	add	r0, r5, r1
	ldr	r0, [r0]
	mov	r8, r0
	mov	r1, #0x3c
	bl	__udivsi3
	mov	r1, #0x3c
	bl	__umodsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r1, #0xe1
	lsl	r1, r1, #0x4
	mov	r0, r8
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r5, r5, #0x9f
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x28
	bl	StringAppend
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, #0x9f
	ldr	r1, .L1369+0x2c
	bl	StringAppend
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	mov	r0, #0x1
	mov	r2, #0xa8
	bl	GetStringRightAlignXOffset
	ldr	r1, [r6]
	add	r1, r1, #0x9f
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r3, #0x61
	bl	Blender_AddTextPrinter
	ldr	r1, [r6]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1330
.L1370:
	.align	2, 0
.L1369:
	.word	sText_BlendingResults
	.word	sBerryBlenderData
	.word	sText_Dot
	.word	gText_Space
	.word	gLinkPlayers+0x8
	.word	gLinkPlayers
	.word	sText_SpaceBerry
	.word	sText_MaximumSpeed
	.word	sText_RPM
	.word	sText_Time
	.word	sText_Min
	.word	sText_Sec
.L1349:
	ldr	r0, .L1371
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB10977
	b	.L1330	@long jump
.LCB10977:
	ldr	r1, [r4]
	b	.L1364
.L1372:
	.align	2, 0
.L1371:
	.word	gMain
.L1351:
	mov	r0, #0x5
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	mov	r6, #0x0
	add	r7, sp, #0x40
	ldr	r5, .L1373
.L1355:
	ldr	r0, [r5]
	lsl	r2, r6, #0x1
	add	r0, r0, #0x74
	add	r0, r0, r2
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L1356	@cond_branch
	add	r0, sp, #0x38
	add	r0, r0, r2
	sub	r1, r1, #0x85
	strh	r1, [r0]
.L1356:
	ldr	r0, [r5]
	add	r0, r0, #0x8e
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L1354	@cond_branch
	lsl	r4, r6, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1354:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L1355	@cond_branch
	bl	sub_8081E20
	ldr	r4, .L1373
	ldr	r3, [r4]
	mov	r1, #0xac
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	add	r1, r3, #0
	add	r1, r1, #0x7c
	ldrb	r2, [r1]
	sub	r1, r1, #0x2e
	ldrh	r1, [r1]
	str	r1, [sp]
	add	r1, r7, #0
	add	r3, sp, #0x8
	bl	Blender_CalculatePokeblock
	ldr	r1, [r4]
	add	r1, r1, #0x9f
	add	r0, r7, #0
	bl	Blender_PrintMadePokeblockString
	ldr	r1, [r4]
	mov	r2, #0xd4
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r0, r7, #0
	bl	TryAddContestLinkTvShow
	ldr	r0, .L1373+0x4
	mov	r1, #0x6
	bl	CreateTask
	bl	IncrementDailyBerryBlender
	ldr	r0, .L1373+0x8
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	add	r0, r7, #0
	bl	AddPokeblock
	ldr	r1, [r4]
	ldr	r3, .L1373+0xc
	add	r2, r1, r3
	mov	r0, #0x0
	strh	r0, [r2]
.L1364:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1330
.L1374:
	.align	2, 0
.L1373:
	.word	sBerryBlenderData
	.word	sub_8083F3C
	.word	gSpecialVar_ItemId
	.word	0x11b8
.L1359:
	ldr	r4, [r4]
	ldr	r0, .L1375
	add	r5, r4, r0
	add	r4, r4, #0x9f
	bl	GetPlayerTextSpeedDelay
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	Blender_PrintText
	cmp	r0, #0
	beq	.L1330	@cond_branch
	bl	TryUpdateBerryBlenderRecord
	mov	r0, #0x1
	b	.L1363
.L1376:
	.align	2, 0
.L1375:
	.word	0x11b8
.L1330:
	mov	r0, #0x0
.L1363:
	add	sp, sp, #0x4c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 Blender_PrintBlendingResults,.Lfe72-Blender_PrintBlendingResults
	.align	2, 0
	.type	 Blender_PrintMadePokeblockString,function
	.thumb_func
Blender_PrintMadePokeblockString:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r0, #0xff
	strb	r0, [r6]
	ldr	r1, .L1378
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	ldr	r1, .L1378+0x4
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1378+0x8
	add	r0, r6, #0
	bl	StringAppend
	add	r0, r5, #0
	bl	GetHighestPokeblocksFlavorLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	GetPokeblocksFeel
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L1378+0xc
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1378+0x10
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1378+0x14
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1378+0x18
	add	r0, r6, #0
	bl	StringAppend
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1379:
	.align	2, 0
.L1378:
	.word	gPokeblockNames
	.word	sText_WasMade
	.word	sText_NewLine
	.word	sText_TheLevelIs
	.word	sText_TheFeelIs
	.word	sText_Dot2
	.word	sText_NewParagraph
.Lfe73:
	.size	 Blender_PrintMadePokeblockString,.Lfe73-Blender_PrintMadePokeblockString
	.align	2, 0
	.type	 Blender_SortBasedOnPoints,function
	.thumb_func
Blender_SortBasedOnPoints:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r0
	mov	ip, r2
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	mov	r0, #0x0
	cmp	r0, r7
	bge	.L1382	@cond_branch
.L1384:
	mov	r5, #0x0
	add	r1, r0, #0x1
	mov	r8, r1
	cmp	r5, r7
	bge	.L1383	@cond_branch
	mov	r1, r9
	add	r6, r1, r0
.L1388:
	ldrb	r4, [r6]
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	mov	r0, r9
	add	r2, r0, r5
	ldrb	r3, [r2]
	lsl	r0, r3, #0x2
	add	r0, r0, ip
	ldr	r1, [r1]
	ldr	r0, [r0]
	cmp	r1, r0
	bls	.L1387	@cond_branch
	strb	r3, [r6]
	strb	r4, [r2]
.L1387:
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1388	@cond_branch
.L1383:
	mov	r0, r8
	cmp	r0, r7
	blt	.L1384	@cond_branch
.L1382:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 Blender_SortBasedOnPoints,.Lfe74-Blender_SortBasedOnPoints
	.align	2, 0
	.type	 Blender_SortScores,function
	.thumb_func
Blender_SortScores:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	mov	r5, #0x0
	ldr	r2, .L1417
	ldr	r0, [r2]
	add	r0, r0, #0x7c
	add	r1, r2, #0
	add	r3, sp, #0x4
	mov	sl, r3
	b	.L1416
.L1418:
	.align	2, 0
.L1417:
	.word	sBerryBlenderData
.L1396:
	mov	r4, sp
	add	r0, r4, r5
	strb	r5, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r2]
	add	r0, r0, #0x7c
.L1416:
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1396	@cond_branch
	mov	r5, #0x0
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x7c
	ldrb	r2, [r1]
	cmp	r5, r2
	bcs	.L1399	@cond_branch
	mov	r9, sl
	mov	r3, #0x92
	lsl	r3, r3, #0x1
	add	r3, r3, r0
	mov	r8, r3
	mov	ip, r1
	mov	r4, #0x93
	lsl	r4, r4, #0x1
	add	r7, r0, r4
	mov	r1, #0x94
	lsl	r1, r1, #0x1
	add	r6, r0, r1
.L1401:
	lsl	r4, r5, #0x2
	add	r4, r4, r9
	lsl	r3, r5, #0x1
	add	r3, r3, r5
	lsl	r3, r3, #0x1
	mov	r2, r8
	add	r0, r2, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r1, r0, #0x6
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x6
	str	r1, [r4]
	add	r0, r7, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	str	r1, [r4]
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r3, r6, r3
	ldrh	r0, [r3]
	sub	r1, r1, r0
	str	r1, [r4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, ip
	ldrb	r1, [r1]
	cmp	r5, r1
	bcc	.L1401	@cond_branch
.L1399:
	ldr	r4, .L1419
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	ldrb	r1, [r0]
	mov	r0, sp
	mov	r2, sl
	bl	Blender_SortBasedOnPoints
	mov	r5, #0x0
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L1404	@cond_branch
	add	r2, r4, #0
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
.L1406:
	ldr	r1, [r2]
	add	r1, r1, r3
	add	r1, r1, r5
	mov	r4, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r2]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1406	@cond_branch
.L1404:
	ldr	r0, .L1419+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1408	@cond_branch
	mov	r3, #0x0
	b	.L1409
.L1420:
	.align	2, 0
.L1419:
	.word	sBerryBlenderData
	.word	gReceivedRemoteLinkPlayers
.L1408:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L1409:
	mov	r5, #0x0
	ldr	r1, .L1421
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L1411	@cond_branch
	mov	r6, #0x9e
	lsl	r6, r6, #0x1
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
.L1413:
	ldr	r2, [r1]
	add	r0, r2, r6
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L1412	@cond_branch
	add	r0, r2, r4
	strb	r5, [r0]
.L1412:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r1]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1413	@cond_branch
.L1411:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1422:
	.align	2, 0
.L1421:
	.word	sBerryBlenderData
.Lfe75:
	.size	 Blender_SortScores,.Lfe75-Blender_SortScores
	.align	2, 0
	.type	 Blender_PrintBlendingRanking,function
	.thumb_func
Blender_PrintBlendingRanking:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r1, .L1445
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x6
	bls	.LCB11555
	b	.L1424	@long jump
.LCB11555:
	lsl	r0, r0, #0x2
	ldr	r1, .L1445+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1446:
	.align	2, 0
.L1445:
	.word	sBerryBlenderData
	.word	.L1441
	.align	2, 0
	.align	2, 0
.L1441:
	.word	.L1425
	.word	.L1426
	.word	.L1428
	.word	.L1430
	.word	.L1436
	.word	.L1438
	.word	.L1440
.L1425:
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x84
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0xff
	str	r1, [r0]
	b	.L1424
.L1426:
	ldr	r1, [r2]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB11600
	b	.L1424	@long jump
.LCB11600:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1444
.L1428:
	ldr	r1, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldr	r0, [r2]
	add	r0, r0, #0x1
	str	r0, [r2]
	cmp	r0, #0x14
	bgt	.LCB11617
	b	.L1424	@long jump
.LCB11617:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1444
.L1430:
	mov	r0, #0x5
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldr	r4, .L1447
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xa8
	bl	GetStringCenterAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	add	r1, r4, #0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	ldr	r1, .L1447+0x4
	mov	r8, r1
	mov	r0, r8
	mov	r1, #0x80
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r7, .L1447+0x8
	ldr	r1, [r7]
	add	r1, r1, #0x46
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L1447+0xc
	add	r0, r0, r6
	mov	r1, #0x3
	bl	StartSpriteAnim
	ldr	r0, [r7]
	add	r0, r0, #0x46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r6, #0
	add	r5, r5, #0x1c
	add	r0, r0, r5
	ldr	r4, .L1447+0x10
	str	r4, [r0]
	mov	r0, r8
	mov	r1, #0xa0
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x47
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x47
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	mov	r0, r8
	mov	r1, #0xc0
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x48
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x48
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, [r7]
	add	r0, r0, #0x48
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	bl	Blender_SortScores
	mov	r2, #0x29
	str	r2, [sp, #0x8]
	mov	r2, #0x0
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r2, r0
	bcc	.LCB11736
	b	.L1432	@long jump
.LCB11736:
	mov	r3, #0xff
	mov	sl, r3
	mov	r0, #0x3
	mov	r9, r0
.L1434:
	ldr	r0, [r7]
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
	add	r1, r0, r3
	add	r1, r1, r2
	ldrb	r5, [r1]
	add	r0, r0, #0x9f
	add	r2, r2, #0x1
	mov	r8, r2
	mov	r1, r8
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1447+0x14
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	ldr	r1, .L1447+0x18
	bl	StringAppend
	ldr	r0, [r7]
	add	r0, r0, #0x9f
	lsl	r1, r5, #0x3
	sub	r1, r1, r5
	lsl	r1, r1, #0x2
	ldr	r2, .L1447+0x1c
	add	r1, r1, r2
	bl	StringAppend
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	ldr	r0, [sp, #0x8]
	lsl	r6, r0, #0x18
	lsr	r6, r6, #0x18
	mov	r2, sl
	str	r2, [sp]
	mov	r3, r9
	str	r3, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x0
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	lsl	r4, r4, #0x1
	mov	r2, #0x92
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x4e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	mov	r2, #0x93
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x6e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0x9f
	mov	r2, #0x94
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r1, [r7]
	add	r1, r1, #0x9f
	mov	r3, sl
	str	r3, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, #0x5
	mov	r2, #0x8e
	add	r3, r6, #0
	bl	Blender_AddTextPrinter
	ldr	r1, [sp, #0x8]
	add	r1, r1, #0x10
	str	r1, [sp, #0x8]
	mov	r2, r8
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	cmp	r2, r0
	bcs	.LCB11892
	b	.L1434	@long jump
.LCB11892:
.L1432:
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x5
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L1447+0x8
	ldr	r1, [r0]
	mov	r3, #0x84
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1444
.L1448:
	.align	2, 0
.L1447:
	.word	sText_Ranking
	.word	sUnknown_08339B40
	.word	sBerryBlenderData
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	sText_Dot
	.word	gText_Space
	.word	gLinkPlayers+0x8
.L1436:
	ldr	r2, [r2]
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	ble	.L1424	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L1424
.L1438:
	ldr	r0, .L1449
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1424	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1449+0x4
	ldr	r1, [r0]
.L1444:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1424
.L1450:
	.align	2, 0
.L1449:
	.word	gMain
	.word	sBerryBlenderData
.L1440:
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L1443
.L1424:
	mov	r0, #0x0
.L1443:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe76:
	.size	 Blender_PrintBlendingRanking,.Lfe76-Blender_PrintBlendingRanking
	.align	2, 0
	.globl	ShowBerryBlenderRecordWindow
	.type	 ShowBerryBlenderRecordWindow,function
	.thumb_func
ShowBerryBlenderRecordWindow:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x34
	ldr	r0, .L1457
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x2c]
	str	r1, [sp, #0x30]
	ldr	r5, .L1457+0x4
	add	r0, sp, #0x2c
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r6, .L1457+0x8
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x90
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldrb	r0, [r5]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r2, r6, #0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	ldr	r2, .L1457+0xc
	mov	r1, #0x29
	str	r1, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x4
	bl	AddTextPrinterParameterized
	mov	r6, #0x0
	mov	r7, #0xa4
	lsl	r7, r7, #0x16
.L1455:
	ldr	r0, .L1457+0x10
	ldr	r0, [r0]
	lsl	r1, r6, #0x1
	ldr	r2, .L1457+0x14
	add	r0, r0, r2
	add	r0, r0, r1
	ldrh	r4, [r0]
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	add	r0, sp, #0xc
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r5, r0, #0
	ldr	r1, .L1457+0x18
	bl	StringAppend
	add	r5, r0, #0
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r5, r0, #0
	ldr	r1, .L1457+0x1c
	bl	StringAppend
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x8c
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	ldr	r4, .L1457+0x4
	ldrb	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsr	r1, r7, #0x18
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	mov	r0, #0x80
	lsl	r0, r0, #0x15
	add	r7, r7, r0
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L1455	@cond_branch
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x34
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1458:
	.align	2, 0
.L1457:
	.word	sBlenderRecordWindowTemplate
	.word	gRecordsWindowId
	.word	gText_BlenderMaxSpeedRecord
	.word	gText_234Players
	.word	gSaveBlock1Ptr
	.word	0x9bc
	.word	sText_Dot
	.word	sText_RPM
.Lfe77:
	.size	 ShowBerryBlenderRecordWindow,.Lfe77-ShowBerryBlenderRecordWindow
	.align	2, 0
	.type	 sub_8083F3C,function
	.thumb_func
sub_8083F3C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L1462
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1460	@cond_branch
	ldr	r0, .L1462+0x4
	bl	PlayFanfare
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L1460:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1461	@cond_branch
	ldr	r0, .L1462+0x8
	ldr	r0, [r0]
	mov	r1, #0xaa
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	PlayBGM
	add	r0, r5, #0
	bl	DestroyTask
.L1461:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1463:
	.align	2, 0
.L1462:
	.word	gTasks
	.word	0x16f
	.word	sBerryBlenderData
.Lfe78:
	.size	 sub_8083F3C,.Lfe78-sub_8083F3C
	.align	2, 0
	.type	 TryAddContestLinkTvShow,function
	.thumb_func
TryAddContestLinkTvShow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	add	r7, r1, #0
	bl	GetHighestPokeblocksFlavorLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	bl	GetPokeblocksFeel
	add	r1, r0, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	strb	r3, [r7, #0xd]
	ldrb	r0, [r6]
	strb	r0, [r7, #0xc]
	mov	r0, #0xff
	strb	r0, [r7]
	ldr	r0, .L1473
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1465	@cond_branch
	ldr	r0, .L1473+0x4
	ldr	r2, [r0]
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
	add	r1, r2, r4
	ldrb	r1, [r1]
	mov	r8, r0
	cmp	r1, #0
	bne	.L1466	@cond_branch
	cmp	r3, #0x14
	bls	.L1466	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r1, [r0]
	sub	r1, r1, #0x1
	mov	r0, #0x9e
	lsl	r0, r0, #0x1
	mov	r9, r0
	add	r0, r2, r0
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r5, .L1473+0x8
	add	r1, r1, r5
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r6, #0
	bl	GetPokeblocksFlavor
	strb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0xb]
	ldrb	r2, [r7, #0xc]
	ldrb	r3, [r7, #0xd]
	mov	r6, r8
	ldr	r4, [r6]
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r4, r4, r9
	add	r4, r4, r0
	ldrb	r4, [r4]
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r5, r5, r0
	ldrb	r0, [r5, #0x12]
	str	r0, [sp]
	add	r0, r7, #0
	bl	Put3CheersForPokeblocksOnTheAir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1472	@cond_branch
	b	.L1465
.L1474:
	.align	2, 0
.L1473:
	.word	gReceivedRemoteLinkPlayers
	.word	sBerryBlenderData
	.word	gLinkPlayers+0x8
.L1466:
	mov	r0, r8
	ldr	r2, [r0]
	mov	r1, #0xd2
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1465	@cond_branch
	cmp	r3, #0x14
	bhi	.L1465	@cond_branch
	mov	r4, #0x9e
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r5, .L1475
	add	r1, r1, r5
	add	r0, r7, #0
	bl	StringCopy
	add	r0, r6, #0
	bl	GetPokeblocksFlavor
	strb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0xb]
	ldrb	r2, [r7, #0xc]
	ldrb	r3, [r7, #0xd]
	mov	r6, r8
	ldr	r0, [r6]
	add	r0, r0, r4
	ldrb	r4, [r0]
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r5, r5, r0
	ldrb	r0, [r5, #0x12]
	str	r0, [sp]
	add	r0, r7, #0
	bl	Put3CheersForPokeblocksOnTheAir
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1470	@cond_branch
.L1472:
	mov	r0, #0x1
	b	.L1471
.L1476:
	.align	2, 0
.L1475:
	.word	gLinkPlayers+0x8
.L1470:
.L1465:
	mov	r0, #0x0
.L1471:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 TryAddContestLinkTvShow,.Lfe79-TryAddContestLinkTvShow
	.align	2, 0
	.type	 Blender_AddTextPrinter,function
	.thumb_func
Blender_AddTextPrinter:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	mov	r9, r1
	ldr	r4, [sp, #0x38]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	mov	r5, #0x0
	cmp	r4, #0x1
	beq	.L1481	@cond_branch
	cmp	r4, #0x1
	bgt	.L1485	@cond_branch
	cmp	r4, #0
	beq	.L1480	@cond_branch
	b	.L1478
.L1485:
	cmp	r4, #0x2
	beq	.L1482	@cond_branch
	cmp	r4, #0x3
	bne	.L1487	@cond_branch
.L1480:
	add	r1, sp, #0x14
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L1488
.L1481:
	add	r0, sp, #0x14
	strb	r5, [r0]
	add	r1, r0, #0
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L1488
.L1482:
	add	r0, sp, #0x14
	strb	r5, [r0]
	add	r1, r0, #0
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
	mov	r0, #0x5
.L1488:
	strb	r0, [r1, #0x2]
.L1478:
	cmp	r4, #0x3
	beq	.L1486	@cond_branch
.L1487:
	add	r0, sp, #0x14
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	orr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	FillWindowPixelBuffer
.L1486:
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	ldr	r0, [sp, #0x34]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	str	r0, [sp, #0xc]
	mov	r0, r9
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, r8
	add	r3, r7, #0
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 Blender_AddTextPrinter,.Lfe80-Blender_AddTextPrinter
	.align	2, 0
	.type	 Blender_PrintText,function
	.thumb_func
Blender_PrintText:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r7, r1, #0
	add	r6, r2, #0
	mov	r0, #0x0
	ldrsh	r4, [r5, r0]
	cmp	r4, #0
	beq	.L1491	@cond_branch
	cmp	r4, #0x1
	beq	.L1492	@cond_branch
	b	.L1490
.L1491:
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x14
	mov	r3, #0xf
	bl	DrawDialogFrameWithCustomTileAndPalette
	str	r6, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x4
	add	r1, r7, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	Blender_AddTextPrinter
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x4
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L1490
.L1492:
	mov	r0, #0x4
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1490	@cond_branch
	strh	r0, [r5]
	mov	r0, #0x1
	b	.L1496
.L1490:
	mov	r0, #0x0
.L1496:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 Blender_PrintText,.Lfe81-Blender_PrintText
	.comm	gInGameOpponentsNo, 4	@ 1

	.lcomm	sUnknown_03000DE8,16

	.lcomm	sUnknown_03000DF8,12

	.lcomm	sUnknown_03000E04,2

	.lcomm	sUnknown_03000E06,2
.text
	.align	2, 0

