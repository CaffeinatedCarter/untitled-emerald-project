@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sSafariBallsWindowId,object
	.size	 sSafariBallsWindowId,1
sSafariBallsWindowId:
	.byte	0x0
	.type	 sBattlePyramidFloorWindowId,object
	.size	 sBattlePyramidFloorWindowId,1
sBattlePyramidFloorWindowId:
	.byte	0x0
	.type	 sStartMenuCursorPos,object
	.size	 sStartMenuCursorPos,1
sStartMenuCursorPos:
	.byte	0x0
	.type	 sNumStartMenuActions,object
	.size	 sNumStartMenuActions,1
sNumStartMenuActions:
	.byte	0x0
	.type	 sCurrentStartMenuActions,object
	.size	 sCurrentStartMenuActions,9
sCurrentStartMenuActions:
	.byte	0x0
	.space	8
	.type	 sInitStartMenuData,object
	.size	 sInitStartMenuData,2
sInitStartMenuData:
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSaveDialogCallback,object
	.size	 sSaveDialogCallback,4
sSaveDialogCallback:
	.word	0x0
	.type	 sSaveDialogTimer,object
	.size	 sSaveDialogTimer,1
sSaveDialogTimer:
	.byte	0x0
	.type	 sSavingComplete,object
	.size	 sSavingComplete,1
sSavingComplete:
	.byte	0x0
	.type	 sSaveInfoWindowId,object
	.size	 sSaveInfoWindowId,1
sSaveInfoWindowId:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sSafariBallsWindowTemplate,object
	.size	 sSafariBallsWindowTemplate,8
sSafariBallsWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x9
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sPyramindFloorNames,object
sPyramindFloorNames:
	.word	gText_Floor1
	.word	gText_Floor2
	.word	gText_Floor3
	.word	gText_Floor4
	.word	gText_Floor5
	.word	gText_Floor6
	.word	gText_Floor7
	.word	gText_Peak
	.size	 sPyramindFloorNames,32
	.align	2, 0
	.type	 sPyramidFloorWindowTemplate_2,object
	.size	 sPyramidFloorWindowTemplate_2,8
sPyramidFloorWindowTemplate_2:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sPyramidFloorWindowTemplate_1,object
	.size	 sPyramidFloorWindowTemplate_1,8
sPyramidFloorWindowTemplate_1:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sStartMenuItems,object
sStartMenuItems:
	.word	gText_MenuPokedex
	.word	StartMenuPokedexCallback
	.word	gText_MenuPokemon
	.word	StartMenuPokemonCallback
	.word	gText_MenuBag
	.word	StartMenuBagCallback
	.word	gText_MenuPokenav
	.word	StartMenuPokeNavCallback
	.word	gText_MenuPlayer
	.word	StartMenuPlayerNameCallback
	.word	gText_MenuSave
	.word	StartMenuSaveCallback
	.word	gText_MenuOption
	.word	StartMenuOptionCallback
	.word	gText_MenuExit
	.word	StartMenuExitCallback
	.word	gText_MenuRetire
	.word	StartMenuSafariZoneRetireCallback
	.word	gText_MenuPlayer
	.word	StartMenuLinkModePlayerNameCallback
	.word	gText_MenuRest
	.word	StartMenuSaveCallback
	.word	gText_MenuRetire
	.word	StartMenuBattlePyramidRetireCallback
	.word	gText_MenuBag
	.word	StartMenuBattlePyramidBagCallback
	.size	 sStartMenuItems,104
	.align	2, 0
	.type	 sUnknown_085105A8,object
	.size	 sUnknown_085105A8,4
sUnknown_085105A8:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sUnknown_085105AC,object
sUnknown_085105AC:
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0x194
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sUnknown_085105AC,16
	.align	2, 0
	.type	 sSaveInfoWindowTemplate,object
	.size	 sSaveInfoWindowTemplate,8
sSaveInfoWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xe
	.byte	0xa
	.byte	0xf
	.short	0x8
.text
	.align	2, 0
	.globl	SetDexPokemonPokenavFlags
	.type	 SetDexPokemonPokenavFlags,function
	.thumb_func
SetDexPokemonPokenavFlags:
	push	{lr}
	ldr	r0, .L3
	bl	FlagSet
	mov	r0, #0x86
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L3+0x4
	bl	FlagSet
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x861
	.word	0x862
.Lfe1:
	.size	 SetDexPokemonPokenavFlags,.Lfe1-SetDexPokemonPokenavFlags
	.align	2, 0
	.type	 BuildStartMenuActions,function
	.thumb_func
BuildStartMenuActions:
	push	{lr}
	ldr	r0, .L18
	mov	r1, #0x0
	strb	r1, [r0]
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L6	@cond_branch
	bl	BuildLinkModeStartMenu
	b	.L7
.L19:
	.align	2, 0
.L18:
	.word	sNumStartMenuActions
.L6:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L8	@cond_branch
	bl	BuildUnionRoomStartMenu
	b	.L7
.L8:
	bl	GetSafariZoneFlag
	cmp	r0, #0x1
	bne	.L10	@cond_branch
	bl	BuildSafariZoneStartMenu
	b	.L7
.L10:
	bl	InBattlePike
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L12	@cond_branch
	bl	BuildBattlePikeStartMenu
	b	.L7
.L12:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L14	@cond_branch
	bl	BuildBattlePyramidStartMenu
	b	.L7
.L14:
	bl	InMultiPartnerRoom
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L16	@cond_branch
	bl	BuildMultiPartnerRoomStartMenu
	b	.L7
.L16:
	bl	BuildNormalStartMenu
.L7:
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 BuildStartMenuActions,.Lfe2-BuildStartMenuActions
	.align	2, 0
	.type	 AddStartMenuAction,function
	.thumb_func
AddStartMenuAction:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L21
	ldr	r1, .L21+0x4
	bl	AppendToList
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	sCurrentStartMenuActions
	.word	sNumStartMenuActions
.Lfe3:
	.size	 AddStartMenuAction,.Lfe3-AddStartMenuAction
	.align	2, 0
	.type	 BuildNormalStartMenu,function
	.thumb_func
BuildNormalStartMenu:
	push	{lr}
	ldr	r0, .L27
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L24	@cond_branch
	mov	r0, #0x0
	bl	AddStartMenuAction
.L24:
	mov	r0, #0x86
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L25	@cond_branch
	mov	r0, #0x1
	bl	AddStartMenuAction
.L25:
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L27+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L26	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L26:
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x5
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	0x861
	.word	0x862
.Lfe4:
	.size	 BuildNormalStartMenu,.Lfe4-BuildNormalStartMenu
	.align	2, 0
	.type	 BuildSafariZoneStartMenu,function
	.thumb_func
BuildSafariZoneStartMenu:
	push	{lr}
	mov	r0, #0x8
	bl	AddStartMenuAction
	mov	r0, #0x0
	bl	AddStartMenuAction
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 BuildSafariZoneStartMenu,.Lfe5-BuildSafariZoneStartMenu
	.align	2, 0
	.type	 BuildLinkModeStartMenu,function
	.thumb_func
BuildLinkModeStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L32
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L31	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L31:
	mov	r0, #0x9
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	0x862
.Lfe6:
	.size	 BuildLinkModeStartMenu,.Lfe6-BuildLinkModeStartMenu
	.align	2, 0
	.type	 BuildUnionRoomStartMenu,function
	.thumb_func
BuildUnionRoomStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x2
	bl	AddStartMenuAction
	ldr	r0, .L36
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L35	@cond_branch
	mov	r0, #0x3
	bl	AddStartMenuAction
.L35:
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	0x862
.Lfe7:
	.size	 BuildUnionRoomStartMenu,.Lfe7-BuildUnionRoomStartMenu
	.align	2, 0
	.type	 BuildBattlePikeStartMenu,function
	.thumb_func
BuildBattlePikeStartMenu:
	push	{lr}
	mov	r0, #0x0
	bl	AddStartMenuAction
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 BuildBattlePikeStartMenu,.Lfe8-BuildBattlePikeStartMenu
	.align	2, 0
	.type	 BuildBattlePyramidStartMenu,function
	.thumb_func
BuildBattlePyramidStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0xc
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0xa
	bl	AddStartMenuAction
	mov	r0, #0xb
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 BuildBattlePyramidStartMenu,.Lfe9-BuildBattlePyramidStartMenu
	.align	2, 0
	.type	 BuildMultiPartnerRoomStartMenu,function
	.thumb_func
BuildMultiPartnerRoomStartMenu:
	push	{lr}
	mov	r0, #0x1
	bl	AddStartMenuAction
	mov	r0, #0x4
	bl	AddStartMenuAction
	mov	r0, #0x6
	bl	AddStartMenuAction
	mov	r0, #0x7
	bl	AddStartMenuAction
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 BuildMultiPartnerRoomStartMenu,.Lfe10-BuildMultiPartnerRoomStartMenu
	.align	2, 0
	.type	 ShowSafariBallsWindow,function
	.thumb_func
ShowSafariBallsWindow:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L42
	ldr	r0, .L42+0x4
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L42+0x8
	ldr	r1, .L42+0xc
	ldrb	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L42+0x10
	ldr	r1, .L42+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	sSafariBallsWindowId
	.word	sSafariBallsWindowTemplate
	.word	gStringVar1
	.word	gNumSafariBalls
	.word	gStringVar4
	.word	gText_SafariBallStock
.Lfe11:
	.size	 ShowSafariBallsWindow,.Lfe11-ShowSafariBallsWindow
	.align	2, 0
	.type	 ShowPyramidFloorWindow,function
	.thumb_func
ShowPyramidFloorWindow:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L48
	ldr	r0, [r0]
	ldr	r1, .L48+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0x7
	bne	.L45	@cond_branch
	ldr	r4, .L48+0x8
	ldr	r0, .L48+0xc
	b	.L47
.L49:
	.align	2, 0
.L48:
	.word	gSaveBlock2Ptr
	.word	0xcb2
	.word	sBattlePyramidFloorWindowId
	.word	sPyramidFloorWindowTemplate_1
.L45:
	ldr	r4, .L50
	ldr	r0, .L50+0x4
.L47:
	bl	AddWindow
	strb	r0, [r4]
	ldr	r4, .L50
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L50+0x8
	ldr	r2, .L50+0xc
	ldr	r1, .L50+0x10
	ldr	r1, [r1]
	ldr	r3, .L50+0x14
	add	r1, r1, r3
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L50+0x18
	ldr	r1, .L50+0x1c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	sBattlePyramidFloorWindowId
	.word	sPyramidFloorWindowTemplate_2
	.word	gStringVar1
	.word	sPyramindFloorNames
	.word	gSaveBlock2Ptr
	.word	0xcb2
	.word	gStringVar4
	.word	gText_BattlePyramidFloor
.Lfe12:
	.size	 ShowPyramidFloorWindow,.Lfe12-ShowPyramidFloorWindow
	.align	2, 0
	.type	 RemoveExtraStartMenuWindows,function
	.thumb_func
RemoveExtraStartMenuWindows:
	push	{r4, lr}
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L53	@cond_branch
	ldr	r4, .L55
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
.L53:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L54	@cond_branch
	ldr	r4, .L55+0x4
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
.L54:
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	sSafariBallsWindowId
	.word	sBattlePyramidFloorWindowId
.Lfe13:
	.size	 RemoveExtraStartMenuWindows,.Lfe13-RemoveExtraStartMenuWindows
	.align	2, 0
	.type	 PrintStartMenuActions,function
	.thumb_func
PrintStartMenuActions:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r8, r0
	add	r6, r1, #0
	ldrb	r2, [r0]
	ldr	r0, .L67
	mov	r9, r0
	ldr	r1, .L67+0x4
	mov	sl, r1
.L58:
	ldr	r0, .L67+0x8
	lsl	r2, r2, #0x18
	asr	r4, r2, #0x18
	add	r5, r4, r0
	ldrb	r0, [r5]
	lsl	r3, r0, #0x3
	mov	r0, r9
	add	r0, r0, #0x4
	add	r0, r3, r0
	ldr	r1, [r0]
	ldr	r0, .L67+0xc
	add	r7, r2, #0
	cmp	r1, r0
	bne	.L61	@cond_branch
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5]
	lsl	r1, r1, #0x3
	add	r1, r1, r9
	ldr	r1, [r1]
	lsl	r3, r4, #0x4
	add	r3, r3, #0x9
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r2, #0x8
	bl	PrintPlayerNameOnWindow
	b	.L62
.L68:
	.align	2, 0
.L67:
	.word	sStartMenuItems
	.word	gStringVar4
	.word	sCurrentStartMenuActions
	.word	StartMenuPlayerNameCallback
.L61:
	mov	r1, r9
	add	r0, r3, r1
	ldr	r1, [r0]
	mov	r0, sl
	bl	StringExpandPlaceholders
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x4
	add	r1, r1, #0x9
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, sl
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
.L62:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r1, r7, r0
	lsr	r2, r1, #0x18
	asr	r1, r1, #0x18
	ldr	r0, .L69
	ldrb	r0, [r0]
	cmp	r1, r0
	bge	.L63	@cond_branch
	sub	r6, r6, #0x1
	cmp	r6, #0
	bne	.L58	@cond_branch
	mov	r1, r8
	strb	r2, [r1]
	mov	r0, #0x0
	b	.L66
.L70:
	.align	2, 0
.L69:
	.word	sNumStartMenuActions
.L63:
	mov	r0, r8
	strb	r2, [r0]
	mov	r0, #0x1
.L66:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 PrintStartMenuActions,.Lfe14-PrintStartMenuActions
	.align	2, 0
	.type	 InitStartMenuStep,function
	.thumb_func
InitStartMenuStep:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L86
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	add	r2, r0, #0
	cmp	r1, #0x5
	bhi	.L72	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L86+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L87:
	.align	2, 0
.L86:
	.word	sInitStartMenuData
	.word	.L82
	.align	2, 0
	.align	2, 0
.L82:
	.word	.L73
	.word	.L74
	.word	.L75
	.word	.L76
	.word	.L79
	.word	.L81
.L73:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L72
.L74:
	bl	BuildStartMenuActions
	ldr	r1, .L88
	b	.L85
.L89:
	.align	2, 0
.L88:
	.word	sInitStartMenuData
.L75:
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L90
	ldrb	r0, [r0]
	bl	sub_81979C4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r1, .L90+0x4
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	b	.L85
.L91:
	.align	2, 0
.L90:
	.word	sNumStartMenuActions
	.word	sInitStartMenuData
.L76:
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L77	@cond_branch
	bl	ShowSafariBallsWindow
.L77:
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L78	@cond_branch
	bl	ShowPyramidFloorWindow
.L78:
	ldr	r1, .L92
	b	.L85
.L93:
	.align	2, 0
.L92:
	.word	sInitStartMenuData
.L79:
	ldr	r4, .L94
	add	r0, r4, #0
	mov	r1, #0x2
	bl	PrintStartMenuActions
	cmp	r0, #0
	beq	.L72	@cond_branch
	sub	r1, r4, #0x1
.L85:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L72
.L95:
	.align	2, 0
.L94:
	.word	sInitStartMenuData+0x1
.L81:
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	str	r1, [sp]
	ldr	r1, .L96
	ldrb	r1, [r1]
	str	r1, [sp, #0x4]
	ldr	r4, .L96+0x4
	ldrb	r1, [r4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x9
	bl	sub_81983AC
	strb	r0, [r4]
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r0, #0x1
	b	.L84
.L97:
	.align	2, 0
.L96:
	.word	sNumStartMenuActions
	.word	sStartMenuCursorPos
.L72:
	mov	r0, #0x0
.L84:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 InitStartMenuStep,.Lfe15-InitStartMenuStep
	.align	2, 0
	.type	 InitStartMenu,function
	.thumb_func
InitStartMenu:
	push	{lr}
	ldr	r1, .L103
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
.L99:
	bl	InitStartMenuStep
	cmp	r0, #0
	beq	.L99	@cond_branch
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	sInitStartMenuData
.Lfe16:
	.size	 InitStartMenu,.Lfe16-InitStartMenu
	.align	2, 0
	.type	 StartMenuTask,function
	.thumb_func
StartMenuTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	InitStartMenuStep
	cmp	r0, #0x1
	bne	.L106	@cond_branch
	add	r0, r4, #0
	bl	SwitchTaskToFollowupFunc
.L106:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 StartMenuTask,.Lfe17-StartMenuTask
	.align	2, 0
	.type	 CreateStartMenuTask,function
	.thumb_func
CreateStartMenuTask:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r1, .L108
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	ldr	r4, .L108+0x4
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetTaskFuncWithFollowupFunc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L109:
	.align	2, 0
.L108:
	.word	sInitStartMenuData
	.word	StartMenuTask
.Lfe18:
	.size	 CreateStartMenuTask,.Lfe18-CreateStartMenuTask
	.align	2, 0
	.type	 FieldCB_ReturnToFieldStartMenu,function
	.thumb_func
FieldCB_ReturnToFieldStartMenu:
	push	{lr}
	bl	InitStartMenuStep
	cmp	r0, #0
	beq	.L111	@cond_branch
	bl	ReturnToFieldOpenStartMenu
	mov	r0, #0x1
	b	.L112
.L111:
	mov	r0, #0x0
.L112:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 FieldCB_ReturnToFieldStartMenu,.Lfe19-FieldCB_ReturnToFieldStartMenu
	.align	2, 0
	.globl	ShowReturnToFieldStartMenu
	.type	 ShowReturnToFieldStartMenu,function
	.thumb_func
ShowReturnToFieldStartMenu:
	ldr	r1, .L114
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	ldr	r1, .L114+0x4
	ldr	r0, .L114+0x8
	str	r0, [r1]
	bx	lr
.L115:
	.align	2, 0
.L114:
	.word	sInitStartMenuData
	.word	gFieldCallback2
	.word	FieldCB_ReturnToFieldStartMenu
.Lfe20:
	.size	 ShowReturnToFieldStartMenu,.Lfe20-ShowReturnToFieldStartMenu
	.align	2, 0
	.globl	Task_ShowStartMenu
	.type	 Task_ShowStartMenu,function
	.thumb_func
Task_ShowStartMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L124
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L118	@cond_branch
	cmp	r0, #0x1
	beq	.L120	@cond_branch
	b	.L117
.L125:
	.align	2, 0
.L124:
	.word	gTasks
.L118:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L119	@cond_branch
	bl	var_800D_set_xB
.L119:
	ldr	r1, .L126
	ldr	r0, .L126+0x4
	str	r0, [r1]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L117
.L127:
	.align	2, 0
.L126:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.L120:
	ldr	r0, .L128
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L117	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L117:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gMenuCallback
.Lfe21:
	.size	 Task_ShowStartMenu,.Lfe21-Task_ShowStartMenu
	.align	2, 0
	.globl	ShowStartMenu
	.type	 ShowStartMenu,function
	.thumb_func
ShowStartMenu:
	push	{lr}
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L131	@cond_branch
	bl	FreezeObjectEvents
	bl	sub_808B864
	bl	sub_808BCF4
.L131:
	ldr	r0, .L132
	bl	CreateStartMenuTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	Task_ShowStartMenu
.Lfe22:
	.size	 ShowStartMenu,.Lfe22-ShowStartMenu
	.align	2, 0
	.type	 HandleStartMenuInput,function
	.thumb_func
HandleStartMenuInput:
	push	{r4, lr}
	ldr	r4, .L144
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L135	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	Menu_MoveCursor
	ldr	r1, .L144+0x4
	strb	r0, [r1]
.L135:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L136	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	Menu_MoveCursor
	ldr	r1, .L144+0x4
	strb	r0, [r1]
.L136:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L137	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L144+0x8
	ldr	r2, .L144+0xc
	ldr	r0, .L144+0x4
	ldrb	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L144+0x10
	cmp	r1, r0
	bne	.L138	@cond_branch
	mov	r0, #0x0
	bl	GetNationalPokedexCount
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L143	@cond_branch
.L138:
	ldr	r3, .L144+0x14
	ldr	r1, .L144+0x8
	ldr	r2, .L144+0xc
	ldr	r0, .L144+0x4
	ldrb	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	str	r1, [r3]
	ldr	r0, .L144+0x18
	cmp	r1, r0
	beq	.L143	@cond_branch
	ldr	r0, .L144+0x1c
	cmp	r1, r0
	beq	.L143	@cond_branch
	ldr	r0, .L144+0x20
	cmp	r1, r0
	beq	.L143	@cond_branch
	ldr	r0, .L144+0x24
	cmp	r1, r0
	beq	.L143	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L143
.L145:
	.align	2, 0
.L144:
	.word	gMain
	.word	sStartMenuCursorPos
	.word	sStartMenuItems
	.word	sCurrentStartMenuActions
	.word	StartMenuPokedexCallback
	.word	gMenuCallback
	.word	StartMenuSaveCallback
	.word	StartMenuExitCallback
	.word	StartMenuSafariZoneRetireCallback
	.word	StartMenuBattlePyramidRetireCallback
.L137:
	mov	r0, #0xa
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L141	@cond_branch
.L143:
	mov	r0, #0x0
	b	.L142
.L141:
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	mov	r0, #0x1
.L142:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 HandleStartMenuInput,.Lfe23-HandleStartMenuInput
	.align	2, 0
	.type	 StartMenuPokedexCallback,function
	.thumb_func
StartMenuPokedexCallback:
	push	{lr}
	ldr	r0, .L149
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L147	@cond_branch
	mov	r0, #0x0
	b	.L148
.L150:
	.align	2, 0
.L149:
	.word	gPaletteFade
.L147:
	mov	r0, #0x29
	bl	IncrementGameStat
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L151
	bl	SetMainCallback2
	mov	r0, #0x1
.L148:
	pop	{r1}
	bx	r1
.L152:
	.align	2, 0
.L151:
	.word	CB2_OpenPokedex
.Lfe24:
	.size	 StartMenuPokedexCallback,.Lfe24-StartMenuPokedexCallback
	.align	2, 0
	.type	 StartMenuPokemonCallback,function
	.thumb_func
StartMenuPokemonCallback:
	push	{lr}
	ldr	r0, .L156
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L154	@cond_branch
	mov	r0, #0x0
	b	.L155
.L157:
	.align	2, 0
.L156:
	.word	gPaletteFade
.L154:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L158
	bl	SetMainCallback2
	mov	r0, #0x1
.L155:
	pop	{r1}
	bx	r1
.L159:
	.align	2, 0
.L158:
	.word	CB2_PartyMenuFromStartMenu
.Lfe25:
	.size	 StartMenuPokemonCallback,.Lfe25-StartMenuPokemonCallback
	.align	2, 0
	.type	 StartMenuBagCallback,function
	.thumb_func
StartMenuBagCallback:
	push	{lr}
	ldr	r0, .L163
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L161	@cond_branch
	mov	r0, #0x0
	b	.L162
.L164:
	.align	2, 0
.L163:
	.word	gPaletteFade
.L161:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L165
	bl	SetMainCallback2
	mov	r0, #0x1
.L162:
	pop	{r1}
	bx	r1
.L166:
	.align	2, 0
.L165:
	.word	CB2_BagMenuFromStartMenu
.Lfe26:
	.size	 StartMenuBagCallback,.Lfe26-StartMenuBagCallback
	.align	2, 0
	.type	 StartMenuPokeNavCallback,function
	.thumb_func
StartMenuPokeNavCallback:
	push	{lr}
	ldr	r0, .L170
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L168	@cond_branch
	mov	r0, #0x0
	b	.L169
.L171:
	.align	2, 0
.L170:
	.word	gPaletteFade
.L168:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L172
	bl	SetMainCallback2
	mov	r0, #0x1
.L169:
	pop	{r1}
	bx	r1
.L173:
	.align	2, 0
.L172:
	.word	CB2_InitPokeNav
.Lfe27:
	.size	 StartMenuPokeNavCallback,.Lfe27-StartMenuPokeNavCallback
	.align	2, 0
	.type	 StartMenuPlayerNameCallback,function
	.thumb_func
StartMenuPlayerNameCallback:
	push	{lr}
	ldr	r0, .L182
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L175	@cond_branch
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L177	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0
	beq	.L176	@cond_branch
.L177:
	ldr	r0, .L182+0x4
	bl	ShowPlayerTrainerCard
	b	.L178
.L183:
	.align	2, 0
.L182:
	.word	gPaletteFade
	.word	CB2_ReturnToFieldWithOpenMenu
.L176:
	ldr	r0, .L184
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L179	@cond_branch
	ldr	r0, .L184+0x4
	bl	ShowFrontierPass
	b	.L178
.L185:
	.align	2, 0
.L184:
	.word	0x8d2
	.word	CB2_ReturnToFieldWithOpenMenu
.L179:
	ldr	r0, .L186
	bl	ShowPlayerTrainerCard
.L178:
	mov	r0, #0x1
	b	.L181
.L187:
	.align	2, 0
.L186:
	.word	CB2_ReturnToFieldWithOpenMenu
.L175:
	mov	r0, #0x0
.L181:
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 StartMenuPlayerNameCallback,.Lfe28-StartMenuPlayerNameCallback
	.align	2, 0
	.type	 StartMenuSaveCallback,function
	.thumb_func
StartMenuSaveCallback:
	push	{lr}
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L189	@cond_branch
	bl	RemoveExtraStartMenuWindows
.L189:
	ldr	r1, .L190
	ldr	r0, .L190+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	gMenuCallback
	.word	SaveStartCallback
.Lfe29:
	.size	 StartMenuSaveCallback,.Lfe29-StartMenuSaveCallback
	.align	2, 0
	.type	 StartMenuOptionCallback,function
	.thumb_func
StartMenuOptionCallback:
	push	{lr}
	ldr	r0, .L195
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L193	@cond_branch
	mov	r0, #0x0
	b	.L194
.L196:
	.align	2, 0
.L195:
	.word	gPaletteFade
.L193:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L197
	bl	SetMainCallback2
	ldr	r1, .L197+0x4
	ldr	r0, .L197+0x8
	str	r0, [r1, #0x8]
	mov	r0, #0x1
.L194:
	pop	{r1}
	bx	r1
.L198:
	.align	2, 0
.L197:
	.word	CB2_InitOptionMenu
	.word	gMain
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe30:
	.size	 StartMenuOptionCallback,.Lfe30-StartMenuOptionCallback
	.align	2, 0
	.type	 StartMenuExitCallback,function
	.thumb_func
StartMenuExitCallback:
	push	{lr}
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 StartMenuExitCallback,.Lfe31-StartMenuExitCallback
	.align	2, 0
	.type	 StartMenuSafariZoneRetireCallback,function
	.thumb_func
StartMenuSafariZoneRetireCallback:
	push	{lr}
	bl	RemoveExtraStartMenuWindows
	bl	HideStartMenu
	bl	SafariZoneRetirePrompt
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 StartMenuSafariZoneRetireCallback,.Lfe32-StartMenuSafariZoneRetireCallback
	.align	2, 0
	.type	 StartMenuLinkModePlayerNameCallback,function
	.thumb_func
StartMenuLinkModePlayerNameCallback:
	push	{lr}
	ldr	r0, .L204
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L202	@cond_branch
	mov	r0, #0x0
	b	.L203
.L205:
	.align	2, 0
.L204:
	.word	gPaletteFade
.L202:
	bl	PlayRainStoppingSoundEffect
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L206
	ldrb	r0, [r0]
	ldr	r1, .L206+0x4
	bl	ShowTrainerCardInLink
	mov	r0, #0x1
.L203:
	pop	{r1}
	bx	r1
.L207:
	.align	2, 0
.L206:
	.word	gLocalLinkPlayerId
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe33:
	.size	 StartMenuLinkModePlayerNameCallback,.Lfe33-StartMenuLinkModePlayerNameCallback
	.align	2, 0
	.type	 StartMenuBattlePyramidRetireCallback,function
	.thumb_func
StartMenuBattlePyramidRetireCallback:
	ldr	r1, .L209
	ldr	r0, .L209+0x4
	str	r0, [r1]
	mov	r0, #0x0
	bx	lr
.L210:
	.align	2, 0
.L209:
	.word	gMenuCallback
	.word	BattlePyramidRetireStartCallback
.Lfe34:
	.size	 StartMenuBattlePyramidRetireCallback,.Lfe34-StartMenuBattlePyramidRetireCallback
	.align	2, 0
	.globl	ShowBattlePyramidStartMenu
	.type	 ShowBattlePyramidStartMenu,function
	.thumb_func
ShowBattlePyramidStartMenu:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	ldr	r0, .L212
	bl	CreateStartMenuTask
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L213:
	.align	2, 0
.L212:
	.word	Task_ShowStartMenu
.Lfe35:
	.size	 ShowBattlePyramidStartMenu,.Lfe35-ShowBattlePyramidStartMenu
	.align	2, 0
	.type	 StartMenuBattlePyramidBagCallback,function
	.thumb_func
StartMenuBattlePyramidBagCallback:
	push	{lr}
	ldr	r0, .L217
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L215	@cond_branch
	mov	r0, #0x0
	b	.L216
.L218:
	.align	2, 0
.L217:
	.word	gPaletteFade
.L215:
	bl	PlayRainStoppingSoundEffect
	bl	RemoveExtraStartMenuWindows
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L219
	bl	SetMainCallback2
	mov	r0, #0x1
.L216:
	pop	{r1}
	bx	r1
.L220:
	.align	2, 0
.L219:
	.word	CB2_PyramidBagMenuFromStartMenu
.Lfe36:
	.size	 StartMenuBattlePyramidBagCallback,.Lfe36-StartMenuBattlePyramidBagCallback
	.align	2, 0
	.type	 SaveStartCallback,function
	.thumb_func
SaveStartCallback:
	push	{lr}
	bl	InitSave
	ldr	r1, .L222
	ldr	r0, .L222+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L223:
	.align	2, 0
.L222:
	.word	gMenuCallback
	.word	SaveCallback
.Lfe37:
	.size	 SaveStartCallback,.Lfe37-SaveStartCallback
	.align	2, 0
	.type	 SaveCallback,function
	.thumb_func
SaveCallback:
	push	{lr}
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L229	@cond_branch
	cmp	r0, #0x1
	ble	.L225	@cond_branch
	cmp	r0, #0x2
	beq	.L227	@cond_branch
	cmp	r0, #0x3
	beq	.L229	@cond_branch
	b	.L225
.L227:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	bl	InitStartMenu
	ldr	r1, .L234
	ldr	r0, .L234+0x4
	str	r0, [r1]
	b	.L225
.L235:
	.align	2, 0
.L234:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.L229:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	bl	SoftResetInBattlePyramid
	mov	r0, #0x1
	b	.L233
.L225:
	mov	r0, #0x0
.L233:
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 SaveCallback,.Lfe38-SaveCallback
	.align	2, 0
	.type	 BattlePyramidRetireStartCallback,function
	.thumb_func
BattlePyramidRetireStartCallback:
	push	{lr}
	bl	InitBattlePyramidRetire
	ldr	r1, .L237
	ldr	r0, .L237+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L238:
	.align	2, 0
.L237:
	.word	gMenuCallback
	.word	BattlePyramidRetireCallback
.Lfe39:
	.size	 BattlePyramidRetireStartCallback,.Lfe39-BattlePyramidRetireStartCallback
	.align	2, 0
	.type	 BattlePyramidRetireReturnCallback,function
	.thumb_func
BattlePyramidRetireReturnCallback:
	push	{lr}
	bl	InitStartMenu
	ldr	r1, .L240
	ldr	r0, .L240+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L241:
	.align	2, 0
.L240:
	.word	gMenuCallback
	.word	HandleStartMenuInput
.Lfe40:
	.size	 BattlePyramidRetireReturnCallback,.Lfe40-BattlePyramidRetireReturnCallback
	.align	2, 0
	.type	 BattlePyramidRetireCallback,function
	.thumb_func
BattlePyramidRetireCallback:
	push	{lr}
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L244	@cond_branch
	cmp	r0, #0x1
	ble	.L243	@cond_branch
	cmp	r0, #0x2
	beq	.L246	@cond_branch
	b	.L243
.L244:
	bl	RemoveExtraStartMenuWindows
	ldr	r1, .L251
	ldr	r0, .L251+0x4
	str	r0, [r1]
	b	.L243
.L252:
	.align	2, 0
.L251:
	.word	gMenuCallback
	.word	BattlePyramidRetireReturnCallback
.L246:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrameToTransparent
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	ldr	r0, .L253
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L250
.L254:
	.align	2, 0
.L253:
	.word	BattlePyramid_Retire
.L243:
	mov	r0, #0x0
.L250:
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 BattlePyramidRetireCallback,.Lfe41-BattlePyramidRetireCallback
	.align	2, 0
	.type	 InitSave,function
	.thumb_func
InitSave:
	push	{lr}
	bl	save_serialize_map
	ldr	r1, .L256
	ldr	r0, .L256+0x4
	str	r0, [r1]
	ldr	r1, .L256+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L257:
	.align	2, 0
.L256:
	.word	sSaveDialogCallback
	.word	SaveConfirmSaveCallback
	.word	sSavingComplete
.Lfe42:
	.size	 InitSave,.Lfe42-InitSave
	.align	2, 0
	.type	 RunSaveCallback,function
	.thumb_func
RunSaveCallback:
	push	{lr}
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L259	@cond_branch
	ldr	r1, .L261
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L261+0x4
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L260
.L262:
	.align	2, 0
.L261:
	.word	sSavingComplete
	.word	sSaveDialogCallback
.L259:
	mov	r0, #0x0
.L260:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 RunSaveCallback,.Lfe43-RunSaveCallback
	.align	2, 0
	.globl	SaveGame
	.type	 SaveGame,function
	.thumb_func
SaveGame:
	push	{lr}
	bl	InitSave
	ldr	r0, .L264
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	SaveGameTask
.Lfe44:
	.size	 SaveGame,.Lfe44-SaveGame
	.align	2, 0
	.type	 ShowSaveMessage,function
	.thumb_func
ShowSaveMessage:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	ldr	r0, .L267
	add	r1, r2, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_819786C
	mov	r0, #0x1
	bl	AddTextPrinterForMessage_2
	ldr	r1, .L267+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L267+0x8
	str	r4, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	gStringVar4
	.word	sSavingComplete
	.word	sSaveDialogCallback
.Lfe45:
	.size	 ShowSaveMessage,.Lfe45-ShowSaveMessage
	.align	2, 0
	.type	 SaveGameTask,function
	.thumb_func
SaveGameTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunSaveCallback
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L273	@cond_branch
	cmp	r1, #0x1
	bgt	.L277	@cond_branch
	cmp	r1, #0
	beq	.L269	@cond_branch
	b	.L270
.L277:
	cmp	r1, #0x3
	bgt	.L270	@cond_branch
	ldr	r1, .L278
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L270
.L279:
	.align	2, 0
.L278:
	.word	gSpecialVar_Result
.L273:
	ldr	r0, .L280
	strh	r1, [r0]
.L270:
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L269:
	pop	{r4}
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	gSpecialVar_Result
.Lfe46:
	.size	 SaveGameTask,.Lfe46-SaveGameTask
	.align	2, 0
	.type	 sub_80A0014,function
	.thumb_func
sub_80A0014:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 sub_80A0014,.Lfe47-sub_80A0014
	.align	2, 0
	.type	 HideSaveInfoWindow,function
	.thumb_func
HideSaveInfoWindow:
	push	{lr}
	bl	RemoveSaveInfoWindow
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 HideSaveInfoWindow,.Lfe48-HideSaveInfoWindow
	.align	2, 0
	.type	 SaveStartTimer,function
	.thumb_func
SaveStartTimer:
	ldr	r1, .L285
	mov	r0, #0x3c
	strb	r0, [r1]
	bx	lr
.L286:
	.align	2, 0
.L285:
	.word	sSaveDialogTimer
.Lfe49:
	.size	 SaveStartTimer,.Lfe49-SaveStartTimer
	.align	2, 0
	.type	 SaveSuccesTimer,function
	.thumb_func
SaveSuccesTimer:
	push	{lr}
	ldr	r1, .L292
	ldrb	r0, [r1]
	sub	r2, r0, #0x1
	strb	r2, [r1]
	ldr	r0, .L292+0x4
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L288	@cond_branch
	lsl	r0, r2, #0x18
	cmp	r0, #0
	beq	.L289	@cond_branch
	mov	r0, #0x0
	b	.L291
.L293:
	.align	2, 0
.L292:
	.word	sSaveDialogTimer
	.word	gMain
.L288:
	mov	r0, #0x5
	bl	PlaySE
.L289:
	mov	r0, #0x1
.L291:
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 SaveSuccesTimer,.Lfe50-SaveSuccesTimer
	.align	2, 0
	.type	 SaveErrorTimer,function
	.thumb_func
SaveErrorTimer:
	push	{lr}
	ldr	r1, .L299
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L295	@cond_branch
	ldr	r0, .L299+0x4
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L296	@cond_branch
	mov	r0, #0x1
	b	.L298
.L300:
	.align	2, 0
.L299:
	.word	sSaveDialogTimer
	.word	gMain
.L295:
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L296:
	mov	r0, #0x0
.L298:
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 SaveErrorTimer,.Lfe51-SaveErrorTimer
	.align	2, 0
	.type	 SaveConfirmSaveCallback,function
	.thumb_func
SaveConfirmSaveCallback:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	bl	ShowSaveInfoWindow
	bl	InBattlePyramid
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L302	@cond_branch
	ldr	r0, .L304
	ldr	r1, .L304+0x4
	bl	ShowSaveMessage
	b	.L303
.L305:
	.align	2, 0
.L304:
	.word	gText_BattlePyramidConfirmRest
	.word	SaveYesNoCallback
.L302:
	ldr	r0, .L306
	ldr	r1, .L306+0x4
	bl	ShowSaveMessage
.L303:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L307:
	.align	2, 0
.L306:
	.word	gText_ConfirmSave
	.word	SaveYesNoCallback
.Lfe52:
	.size	 SaveConfirmSaveCallback,.Lfe52-SaveConfirmSaveCallback
	.align	2, 0
	.type	 SaveYesNoCallback,function
	.thumb_func
SaveYesNoCallback:
	push	{lr}
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L309
	ldr	r0, .L309+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L310:
	.align	2, 0
.L309:
	.word	sSaveDialogCallback
	.word	SaveConfirmInputCallback
.Lfe53:
	.size	 SaveYesNoCallback,.Lfe53-SaveYesNoCallback
	.align	2, 0
	.type	 SaveConfirmInputCallback,function
	.thumb_func
SaveConfirmInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L313	@cond_branch
	cmp	r1, #0
	bgt	.L324	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L321	@cond_branch
	b	.L312
.L324:
	cmp	r1, #0x1
	beq	.L321	@cond_branch
	b	.L312
.L313:
	ldr	r0, .L327
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L316	@cond_branch
	cmp	r0, #0x2
	bne	.L326	@cond_branch
.L316:
	ldr	r0, .L327+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L317	@cond_branch
.L326:
	ldr	r1, .L327+0x8
	ldr	r0, .L327+0xc
	str	r0, [r1]
	b	.L312
.L328:
	.align	2, 0
.L327:
	.word	gSaveFileStatus
	.word	gDifferentSaveFile
	.word	sSaveDialogCallback
	.word	SaveFileExistsCallback
.L317:
	ldr	r1, .L329
	ldr	r0, .L329+0x4
	str	r0, [r1]
	b	.L312
.L330:
	.align	2, 0
.L329:
	.word	sSaveDialogCallback
	.word	SaveSavingMessageCallback
.L321:
	bl	HideSaveInfoWindow
	bl	sub_80A0014
	mov	r0, #0x2
	b	.L325
.L312:
	mov	r0, #0x0
.L325:
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 SaveConfirmInputCallback,.Lfe54-SaveConfirmInputCallback
	.align	2, 0
	.type	 SaveFileExistsCallback,function
	.thumb_func
SaveFileExistsCallback:
	push	{lr}
	ldr	r0, .L334
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L332	@cond_branch
	ldr	r0, .L334+0x4
	ldr	r1, .L334+0x8
	bl	ShowSaveMessage
	b	.L333
.L335:
	.align	2, 0
.L334:
	.word	gDifferentSaveFile
	.word	gText_DifferentSaveFile
	.word	SaveConfirmOverwriteDefaultNoCallback
.L332:
	ldr	r0, .L336
	ldr	r1, .L336+0x4
	bl	ShowSaveMessage
.L333:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L337:
	.align	2, 0
.L336:
	.word	gText_AlreadySavedFile
	.word	SaveConfirmOverwriteCallback
.Lfe55:
	.size	 SaveFileExistsCallback,.Lfe55-SaveFileExistsCallback
	.align	2, 0
	.type	 SaveConfirmOverwriteDefaultNoCallback,function
	.thumb_func
SaveConfirmOverwriteDefaultNoCallback:
	push	{lr}
	mov	r0, #0x1
	bl	DisplayYesNoMenuWithDefault
	ldr	r1, .L339
	ldr	r0, .L339+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L340:
	.align	2, 0
.L339:
	.word	sSaveDialogCallback
	.word	SaveOverwriteInputCallback
.Lfe56:
	.size	 SaveConfirmOverwriteDefaultNoCallback,.Lfe56-SaveConfirmOverwriteDefaultNoCallback
	.align	2, 0
	.type	 SaveConfirmOverwriteCallback,function
	.thumb_func
SaveConfirmOverwriteCallback:
	push	{lr}
	bl	DisplayYesNoMenuDefaultYes
	ldr	r1, .L342
	ldr	r0, .L342+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L343:
	.align	2, 0
.L342:
	.word	sSaveDialogCallback
	.word	SaveOverwriteInputCallback
.Lfe57:
	.size	 SaveConfirmOverwriteCallback,.Lfe57-SaveConfirmOverwriteCallback
	.align	2, 0
	.type	 SaveOverwriteInputCallback,function
	.thumb_func
SaveOverwriteInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L346	@cond_branch
	cmp	r1, #0
	bgt	.L351	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L348	@cond_branch
	b	.L345
.L351:
	cmp	r1, #0x1
	beq	.L348	@cond_branch
	b	.L345
.L346:
	ldr	r1, .L353
	ldr	r0, .L353+0x4
	str	r0, [r1]
	b	.L345
.L354:
	.align	2, 0
.L353:
	.word	sSaveDialogCallback
	.word	SaveSavingMessageCallback
.L348:
	bl	HideSaveInfoWindow
	bl	sub_80A0014
	mov	r0, #0x2
	b	.L352
.L345:
	mov	r0, #0x0
.L352:
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 SaveOverwriteInputCallback,.Lfe58-SaveOverwriteInputCallback
	.align	2, 0
	.type	 SaveSavingMessageCallback,function
	.thumb_func
SaveSavingMessageCallback:
	push	{lr}
	ldr	r0, .L356
	ldr	r1, .L356+0x4
	bl	ShowSaveMessage
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L357:
	.align	2, 0
.L356:
	.word	gText_SavingDontTurnOff
	.word	SaveDoSaveCallback
.Lfe59:
	.size	 SaveSavingMessageCallback,.Lfe59-SaveSavingMessageCallback
	.align	2, 0
	.type	 SaveDoSaveCallback,function
	.thumb_func
SaveDoSaveCallback:
	push	{r4, lr}
	mov	r0, #0x0
	bl	IncrementGameStat
	bl	PausePyramidChallenge
	ldr	r4, .L363
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L359	@cond_branch
	mov	r0, #0x4
	bl	TrySavingData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L360
.L364:
	.align	2, 0
.L363:
	.word	gDifferentSaveFile
.L359:
	mov	r0, #0x0
	bl	TrySavingData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
.L360:
	cmp	r1, #0x1
	bne	.L361	@cond_branch
	ldr	r0, .L365
	ldr	r1, .L365+0x4
	bl	ShowSaveMessage
	b	.L362
.L366:
	.align	2, 0
.L365:
	.word	gText_PlayerSavedGame
	.word	SaveSuccessCallback
.L361:
	ldr	r0, .L367
	ldr	r1, .L367+0x4
	bl	ShowSaveMessage
.L362:
	bl	SaveStartTimer
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L368:
	.align	2, 0
.L367:
	.word	gText_SaveError
	.word	SaveErrorCallback
.Lfe60:
	.size	 SaveDoSaveCallback,.Lfe60-SaveDoSaveCallback
	.align	2, 0
	.type	 SaveSuccessCallback,function
	.thumb_func
SaveSuccessCallback:
	push	{lr}
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L370	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r1, .L371
	ldr	r0, .L371+0x4
	str	r0, [r1]
.L370:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L372:
	.align	2, 0
.L371:
	.word	sSaveDialogCallback
	.word	SaveReturnSuccessCallback
.Lfe61:
	.size	 SaveSuccessCallback,.Lfe61-SaveSuccessCallback
	.align	2, 0
	.type	 SaveReturnSuccessCallback,function
	.thumb_func
SaveReturnSuccessCallback:
	push	{lr}
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L374	@cond_branch
	bl	SaveSuccesTimer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L374	@cond_branch
	bl	HideSaveInfoWindow
	mov	r0, #0x1
	b	.L376
.L374:
	mov	r0, #0x0
.L376:
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 SaveReturnSuccessCallback,.Lfe62-SaveReturnSuccessCallback
	.align	2, 0
	.type	 SaveErrorCallback,function
	.thumb_func
SaveErrorCallback:
	push	{lr}
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L378	@cond_branch
	mov	r0, #0x16
	bl	PlaySE
	ldr	r1, .L379
	ldr	r0, .L379+0x4
	str	r0, [r1]
.L378:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L380:
	.align	2, 0
.L379:
	.word	sSaveDialogCallback
	.word	SaveReturnErrorCallback
.Lfe63:
	.size	 SaveErrorCallback,.Lfe63-SaveErrorCallback
	.align	2, 0
	.type	 SaveReturnErrorCallback,function
	.thumb_func
SaveReturnErrorCallback:
	push	{lr}
	bl	SaveErrorTimer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L382	@cond_branch
	bl	HideSaveInfoWindow
	mov	r0, #0x3
	b	.L384
.L382:
	mov	r0, #0x0
.L384:
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 SaveReturnErrorCallback,.Lfe64-SaveReturnErrorCallback
	.align	2, 0
	.type	 InitBattlePyramidRetire,function
	.thumb_func
InitBattlePyramidRetire:
	ldr	r1, .L386
	ldr	r0, .L386+0x4
	str	r0, [r1]
	ldr	r1, .L386+0x8
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L387:
	.align	2, 0
.L386:
	.word	sSaveDialogCallback
	.word	BattlePyramidConfirmRetireCallback
	.word	sSavingComplete
.Lfe65:
	.size	 InitBattlePyramidRetire,.Lfe65-InitBattlePyramidRetire
	.align	2, 0
	.type	 BattlePyramidConfirmRetireCallback,function
	.thumb_func
BattlePyramidConfirmRetireCallback:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	ldr	r0, .L389
	ldr	r1, .L389+0x4
	bl	ShowSaveMessage
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L390:
	.align	2, 0
.L389:
	.word	gText_BattlePyramidConfirmRetire
	.word	BattlePyramidRetireYesNoCallback
.Lfe66:
	.size	 BattlePyramidConfirmRetireCallback,.Lfe66-BattlePyramidConfirmRetireCallback
	.align	2, 0
	.type	 BattlePyramidRetireYesNoCallback,function
	.thumb_func
BattlePyramidRetireYesNoCallback:
	push	{lr}
	mov	r0, #0x1
	bl	DisplayYesNoMenuWithDefault
	ldr	r1, .L392
	ldr	r0, .L392+0x4
	str	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L393:
	.align	2, 0
.L392:
	.word	sSaveDialogCallback
	.word	BattlePyramidRetireInputCallback
.Lfe67:
	.size	 BattlePyramidRetireYesNoCallback,.Lfe67-BattlePyramidRetireYesNoCallback
	.align	2, 0
	.type	 BattlePyramidRetireInputCallback,function
	.thumb_func
BattlePyramidRetireInputCallback:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L396	@cond_branch
	cmp	r1, #0
	bgt	.L401	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L398	@cond_branch
	b	.L395
.L401:
	cmp	r1, #0x1
	beq	.L398	@cond_branch
	b	.L395
.L396:
	mov	r0, #0x2
	b	.L402
.L398:
	bl	sub_80A0014
	mov	r0, #0x1
	b	.L402
.L395:
	mov	r0, #0x0
.L402:
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 BattlePyramidRetireInputCallback,.Lfe68-BattlePyramidRetireInputCallback
	.align	2, 0
	.type	 sub_80A03D8,function
	.thumb_func
sub_80A03D8:
	push	{lr}
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 sub_80A03D8,.Lfe69-sub_80A03D8
	.align	2, 0
	.type	 sub_80A03E4,function
	.thumb_func
sub_80A03E4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB2934
	b	.L405	@long jump
.LCB2934:
	lsl	r0, r0, #0x2
	ldr	r1, .L419
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L420:
	.align	2, 0
.L419:
	.word	.L416
	.align	2, 0
	.align	2, 0
.L416:
	.word	.L406
	.word	.L412
	.word	.L413
	.word	.L414
	.word	.L415
.L406:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Stop
	mov	r2, #0xa0
	lsl	r2, r2, #0x13
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L421
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	ldr	r0, .L421+0x4
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0xc0
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L421+0x8
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L409:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L409	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	b	.L405
.L422:
	.align	2, 0
.L421:
	.word	0x40000d4
	.word	-0x7efffe00
	.word	-0x7efff800
.L412:
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ResetPaletteFade
	bl	ScanlineEffect_Clear
	b	.L405
.L413:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L423
	mov	r0, #0x0
	mov	r2, #0x1
	bl	InitBgsFromTemplates
	ldr	r0, .L423+0x4
	bl	InitWindows
	mov	r0, #0x0
	mov	r1, #0x8
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx_
	mov	r0, #0xf0
	bl	Menu_LoadStdPalAt
	b	.L405
.L424:
	.align	2, 0
.L423:
	.word	sUnknown_085105A8
	.word	sUnknown_085105AC
.L414:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L425
	bl	SetVBlankCallback
	mov	r0, #0x1
	bl	EnableInterrupts
	b	.L405
.L426:
	.align	2, 0
.L425:
	.word	sub_80A03D8
.L415:
	mov	r0, #0x1
	b	.L418
.L405:
	mov	r1, r8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
.L418:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 sub_80A03E4,.Lfe70-sub_80A03E4
	.align	2, 0
	.globl	sub_80A0514
	.type	 sub_80A0514,function
	.thumb_func
sub_80A0514:
	push	{lr}
	ldr	r0, .L429
	bl	sub_80A03E4
	cmp	r0, #0
	beq	.L428	@cond_branch
	ldr	r0, .L429+0x4
	mov	r1, #0x50
	bl	CreateTask
	ldr	r0, .L429+0x8
	bl	SetMainCallback2
.L428:
	pop	{r0}
	bx	r0
.L430:
	.align	2, 0
.L429:
	.word	gMain+0x438
	.word	sub_80A0550
	.word	sub_80A0540
.Lfe71:
	.size	 sub_80A0514,.Lfe71-sub_80A0514
	.align	2, 0
	.type	 sub_80A0540,function
	.thumb_func
sub_80A0540:
	push	{lr}
	bl	RunTasks
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 sub_80A0540,.Lfe72-sub_80A0540
	.align	2, 0
	.type	 sub_80A0550,function
	.thumb_func
sub_80A0550:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L451
	add	r5, r0, r1
	ldr	r0, .L451+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB3179
	b	.L433	@long jump
.LCB3179:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x6
	bls	.LCB3183
	b	.L433	@long jump
.LCB3183:
	lsl	r0, r0, #0x2
	ldr	r1, .L451+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L452:
	.align	2, 0
.L451:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	.L448
	.align	2, 0
	.align	2, 0
.L448:
	.word	.L435
	.word	.L440
	.word	.L441
	.word	.L443
	.word	.L444
	.word	.L445
	.word	.L446
.L435:
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L453
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r6, #0x1
	str	r6, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0xff
	bl	AddTextPrinterParameterized2
	mov	r0, #0x0
	mov	r1, #0x8
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L453+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L436	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0
	beq	.L436	@cond_branch
	bl	sub_800A07C
	cmp	r0, #0
	beq	.L437	@cond_branch
	strh	r6, [r5]
	b	.L433
.L454:
	.align	2, 0
.L453:
	.word	gText_SavingDontTurnOffPower
	.word	gWirelessCommType
.L437:
	mov	r0, #0x5
	b	.L450
.L436:
	ldr	r0, .L455
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L450
.L456:
	.align	2, 0
.L455:
	.word	gSoftResetDisabled
.L440:
	bl	SetContinueGameWarpStatusToDynamicWarp
	bl	FullSaveGame
	mov	r0, #0x2
	b	.L450
.L441:
	bl	CheckSaveFile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L433	@cond_branch
	bl	ClearContinueGameWarpStatus2
	mov	r0, #0x3
	strh	r0, [r5]
	ldr	r1, .L457
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L433
.L458:
	.align	2, 0
.L457:
	.word	gSoftResetDisabled
.L443:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	b	.L450
.L444:
	bl	FreeAllWindowBuffers
	ldr	r0, .L459
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
	b	.L433
.L460:
	.align	2, 0
.L459:
	.word	gMain
.L445:
	ldr	r0, .L461
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x6
	b	.L450
.L462:
	.align	2, 0
.L461:
	.word	sub_8153688
.L446:
	ldr	r0, .L463
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L433	@cond_branch
	mov	r0, #0x3
.L450:
	strh	r0, [r5]
.L433:
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	sub_8153688
.Lfe73:
	.size	 sub_80A0550,.Lfe73-sub_80A0550
	.align	2, 0
	.type	 ShowSaveInfoWindow,function
	.thumb_func
ShowSaveInfoWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	ldr	r0, .L469
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	ldr	r0, .L469+0x4
	mov	sl, r0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L466	@cond_branch
	add	r0, sp, #0xc
	ldrb	r1, [r0, #0x4]
	sub	r1, r1, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L469+0x8
	ldr	r0, [sp, #0x10]
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp, #0x10]
.L466:
	ldr	r6, .L469+0xc
	add	r0, sp, #0xc
	bl	AddWindow
	strb	r0, [r6]
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L469+0x10
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x4
	mov	r9, r1
	cmp	r0, #0
	bne	.L467	@cond_branch
	mov	r0, #0x8
	mov	r9, r0
.L467:
	mov	r4, #0x1
	ldr	r5, .L469+0x14
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0x6
	bl	BufferSaveMenuText
	ldrb	r0, [r6]
	str	r4, [sp]
	mov	r1, #0xff
	mov	r8, r1
	str	r1, [sp, #0x4]
	mov	r7, #0x0
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r4, #0x11
	ldrb	r0, [r6]
	ldr	r2, .L469+0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r1, r5, #0
	mov	r3, #0x11
	bl	PrintPlayerNameOnWindow
	mov	r4, #0x21
	ldrb	r0, [r6]
	ldr	r2, .L469+0x1c
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x4
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	mov	r0, sl
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L468	@cond_branch
	mov	r4, #0x31
	ldrb	r0, [r6]
	ldr	r2, .L469+0x20
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
.L468:
	add	r4, r4, #0x10
	ldrb	r0, [r6]
	ldr	r2, .L469+0x24
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	add	r1, r5, #0
	mov	r2, r9
	bl	BufferSaveMenuText
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x70
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	ldrb	r0, [r6]
	lsl	r3, r2, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, r8
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r6]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L470:
	.align	2, 0
.L469:
	.word	sSaveInfoWindowTemplate
	.word	0x861
	.word	-0x100
	.word	sSaveInfoWindowId
	.word	gSaveBlock2Ptr
	.word	gStringVar4
	.word	gText_SavingPlayer
	.word	gText_SavingBadges
	.word	gText_SavingPokedex
	.word	gText_SavingTime
.Lfe74:
	.size	 ShowSaveInfoWindow,.Lfe74-ShowSaveInfoWindow
	.align	2, 0
	.type	 RemoveSaveInfoWindow,function
	.thumb_func
RemoveSaveInfoWindow:
	push	{r4, lr}
	ldr	r4, .L472
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	sSaveInfoWindowId
.Lfe75:
	.size	 RemoveSaveInfoWindow,.Lfe75-RemoveSaveInfoWindow
	.align	2, 0
	.type	 sub_80A08A4,function
	.thumb_func
sub_80A08A4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L476
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L475	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L475:
	pop	{r4}
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	sub_8153688
.Lfe76:
	.size	 sub_80A08A4,.Lfe76-sub_80A08A4
	.align	2, 0
	.globl	sub_80A08CC
	.type	 sub_80A08CC,function
	.thumb_func
sub_80A08CC:
	push	{r4, r5, lr}
	ldr	r0, .L479
	mov	r1, #0x5
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L479+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	ldr	r0, .L479+0x8
	mov	r1, #0x6
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r5
	strh	r4, [r1, #0xa]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L480:
	.align	2, 0
.L479:
	.word	sub_8153688
	.word	gTasks
	.word	sub_80A08A4
.Lfe77:
	.size	 sub_80A08CC,.Lfe77-sub_80A08CC
	.align	2, 0
	.type	 HideStartMenuWindow,function
	.thumb_func
HideStartMenuWindow:
	push	{lr}
	bl	GetStartMenuWindowId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	RemoveStartMenuWindow
	bl	ScriptUnfreezeObjectEvents
	bl	ScriptContext2_Disable
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 HideStartMenuWindow,.Lfe78-HideStartMenuWindow
	.align	2, 0
	.globl	HideStartMenu
	.type	 HideStartMenu,function
	.thumb_func
HideStartMenu:
	push	{lr}
	mov	r0, #0x5
	bl	PlaySE
	bl	HideStartMenuWindow
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 HideStartMenu,.Lfe79-HideStartMenu
	.align	2, 0
	.globl	AppendToList
	.type	 AppendToList,function
	.thumb_func
AppendToList:
	ldrb	r3, [r1]
	add	r0, r0, r3
	strb	r2, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bx	lr
.Lfe80:
	.size	 AppendToList,.Lfe80-AppendToList
	.comm	gMenuCallback, 4	@ 4
.text
	.align	2, 0

