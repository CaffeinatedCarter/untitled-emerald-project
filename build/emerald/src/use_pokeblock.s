@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_0203BC90
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_0203BC90,object
	.size	 gUnknown_0203BC90,4
gUnknown_0203BC90:
	.word	0x0
	.globl	gUnknown_0203BC94
	.align	2, 0
	.type	 gUnknown_0203BC94,object
	.size	 gUnknown_0203BC94,4
gUnknown_0203BC94:
	.word	0x0
	.globl	gUnknown_0203BC98
	.align	2, 0
	.type	 gUnknown_0203BC98,object
	.size	 gUnknown_0203BC98,4
gUnknown_0203BC98:
	.word	0x0
	.globl	gPokeblockMonId
	.type	 gPokeblockMonId,object
	.size	 gPokeblockMonId,1
gPokeblockMonId:
	.byte	0x0
	.globl	gPokeblockGain
	.align	1, 0
	.type	 gPokeblockGain,object
	.size	 gPokeblockGain,2
gPokeblockGain:
	.short	0x0
	.globl	gUnknown_0203BCA0
	.align	2, 0
	.type	 gUnknown_0203BCA0,object
	.size	 gUnknown_0203BCA0,4
gUnknown_0203BCA0:
	.word	0x0
	.globl	gUnknown_0203BCA4
	.align	2, 0
	.type	 gUnknown_0203BCA4,object
	.size	 gUnknown_0203BCA4,4
gUnknown_0203BCA4:
	.word	0x0
	.globl	gUnknown_0203BCA8
	.align	2, 0
	.type	 gUnknown_0203BCA8,object
	.size	 gUnknown_0203BCA8,4
gUnknown_0203BCA8:
	.word	0x0
	.globl	gUnknown_0203BCAC
	.align	2, 0
	.type	 gUnknown_0203BCAC,object
	.size	 gUnknown_0203BCAC,4
gUnknown_0203BCAC:
	.word	0x0
	.globl	gUnknown_085DFA60
	.section .rodata
	.align	2, 0
	.type	 gUnknown_085DFA60,object
gUnknown_085DFA60:
	.word	0x7e700000
	.word	-0xc674
	.word	0x7b777b77
	.word	0x4a107fbb
	.word	0x62d7
	.word	0x0
	.word	0x0
	.word	0x0
	.size	 gUnknown_085DFA60,32
	.globl	gUnknown_085DFA80
	.align	2, 0
	.type	 gUnknown_085DFA80,object
gUnknown_085DFA80:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x22222222
	.word	0x22222222
	.word	0x44444444
	.word	0x44444444
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x0
	.word	0x22
	.word	0x2222
	.word	0x22275
	.word	0x222844
	.word	0x228555
	.word	0x2278555
	.word	0x2288555
	.word	0x44444444
	.word	0x66666666
	.word	0x44444444
	.word	0x66666666
	.word	0x44444444
	.word	0x66666666
	.word	0x44444444
	.word	0x66666666
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x72288555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	-0x77777778
	.word	-0x77777778
	.word	0x22222222
	.word	0x22222222
	.word	0x77777777
	.word	0x72288855
	.word	0x72278855
	.word	0x7228888
	.word	0x7222888
	.word	0x722278
	.word	0x72222
	.word	0x7722
	.word	0x77
	.size	 gUnknown_085DFA80,224
	.globl	gUnknown_085DFB60
	.align	2, 0
	.type	 gUnknown_085DFB60,object
gUnknown_085DFB60:
	.word	0x50010
	.word	-0xf2effc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0fe01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x13001f0
	.word	0x1e0ba01
	.word	-0xfda0ffe
	.word	0x3016001
	.word	-0xfbfe20
	.word	0x1f025f0
	.word	0x3ff03ff0
	.word	0x1f001f0
	.word	0x3ff03ff0
	.word	-0xffe0f01
	.word	-0xfc00fc1
	.word	-0xffe0fff
	.word	-0xfc00fc1
	.word	0x3ff0ff01
	.word	0x1f03ff0
	.word	0x3ff001f0
	.word	0x1f03ff0
	.word	-0xf0ac010
	.word	-0xffe0fc1
	.word	0x5014001
	.word	-0xff9fe20
	.word	0x1f0ff25
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x7f7ffe10
	.word	0x1
	.size	 gUnknown_085DFB60,172
	.globl	gUnknown_085DFC0C
	.align	2, 0
	.type	 gUnknown_085DFC0C,object
gUnknown_085DFC0C:
	.word	0x50010
	.word	-0xfffffc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1d09f01
	.word	0x1d03285
	.word	0x1f023f0
	.word	0x3ff03ff0
	.word	-0xffe0f01
	.word	-0xfc00fff
	.word	-0xffe0fc1
	.word	-0xfc00fc1
	.word	0x1f0ff01
	.word	0x3ff03ff0
	.word	0x3ff001f0
	.word	0x1f03ff0
	.word	-0xf00fe10
	.word	-0xfc00fc1
	.word	-0xfc00fff
	.word	-0xffe0fc1
	.word	-0xc00fff
	.word	0x1f03ff0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0e001
	.word	0x1f001f0
	.word	0x0
	.size	 gUnknown_085DFC0C,164
	.globl	gUnknown_085DFCB0
	.align	2, 0
	.type	 gUnknown_085DFCB0,object
gUnknown_085DFCB0:
	.word	0x16
	.word	0x2f
	.word	0x21
	.word	0x18
	.word	0x17
	.size	 gUnknown_085DFCB0,20
	.globl	gUnknown_085DFCC4
	.type	 gUnknown_085DFCC4,object
gUnknown_085DFCC4:
	.byte	0x0
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.size	 gUnknown_085DFCC4,5
	.type	 sNatureTextColors,object
sNatureTextColors:
	.byte	0x0
	.byte	0x8
	.byte	0x1
	.size	 sNatureTextColors,3
	.globl	gUnknown_085DFCCC
	.align	2, 0
	.type	 gUnknown_085DFCCC,object
	.size	 gUnknown_085DFCCC,16
gUnknown_085DFCCC:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xdf
	.byte	0x21
	.byte	0x40
	.space	1
	.byte	0x72
	.byte	0x11
	.byte	0x0
	.space	1
	.globl	gUnknown_085DFCDC
	.align	2, 0
	.type	 gUnknown_085DFCDC,object
gUnknown_085DFCDC:
	.byte	0x0
	.byte	0xd
	.byte	0x1
	.byte	0xd
	.byte	0x4
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x0
	.byte	0xe
	.byte	0xb
	.byte	0x2
	.byte	0xf
	.short	0x35
	.byte	0x0
	.byte	0x1
	.byte	0x11
	.byte	0x1c
	.byte	0x2
	.byte	0xf
	.short	0x4b
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_085DFCDC,32
	.globl	sUsePokeblockYesNoWinTemplate
	.align	2, 0
	.type	 sUsePokeblockYesNoWinTemplate,object
	.size	 sUsePokeblockYesNoWinTemplate,8
sUsePokeblockYesNoWinTemplate:
	.byte	0x0
	.byte	0x18
	.byte	0xb
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x83
	.globl	sContestStatNames
	.align	2, 0
	.type	 sContestStatNames,object
sContestStatNames:
	.word	gText_Coolness
	.word	gText_Toughness
	.word	gText_Smartness
	.word	gText_Cuteness
	.word	gText_Beauty3
	.size	 sContestStatNames,20
	.globl	gSpriteSheet_ConditionUpDown
	.align	2, 0
	.type	 gSpriteSheet_ConditionUpDown,object
	.size	 gSpriteSheet_ConditionUpDown,8
gSpriteSheet_ConditionUpDown:
	.word	gUsePokeblockUpDown_Gfx
	.short	0x200
	.short	0x0
	.globl	gSpritePalette_ConditionUpDown
	.align	2, 0
	.type	 gSpritePalette_ConditionUpDown,object
	.size	 gSpritePalette_ConditionUpDown,8
gSpritePalette_ConditionUpDown:
	.word	gUsePokeblockUpDown_Pal
	.short	0x0
	.space	2
	.globl	gUnknown_085DFD28
	.align	1, 0
	.type	 gUnknown_085DFD28,object
gUnknown_085DFD28:
	.short	0x9c
	.short	0x24
	.short	0x75
	.short	0x3b
	.short	0x75
	.short	0x76
	.short	0xc5
	.short	0x76
	.short	0xc5
	.short	0x3b
	.size	 gUnknown_085DFD28,20
	.globl	gOamData_085DFD3C
	.align	2, 0
	.type	 gOamData_085DFD3C,object
	.size	 gOamData_085DFD3C,8
gOamData_085DFD3C:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.space	2
	.globl	gSpriteAnim_085DFD44
	.align	2, 0
	.type	 gSpriteAnim_085DFD44,object
gSpriteAnim_085DFD44:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_085DFD44,8
	.globl	gSpriteAnim_085DFD4C
	.align	2, 0
	.type	 gSpriteAnim_085DFD4C,object
gSpriteAnim_085DFD4C:
	.short	0x8
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_085DFD4C,8
	.globl	gSpriteAnimTable_085DFD54
	.align	2, 0
	.type	 gSpriteAnimTable_085DFD54,object
gSpriteAnimTable_085DFD54:
	.word	gSpriteAnim_085DFD44
	.word	gSpriteAnim_085DFD4C
	.size	 gSpriteAnimTable_085DFD54,8
	.globl	gSpriteTemplate_085DFD5C
	.align	2, 0
	.type	 gSpriteTemplate_085DFD5C,object
	.size	 gSpriteTemplate_085DFD5C,24
gSpriteTemplate_085DFD5C:
	.short	0x0
	.short	0x0
	.word	gOamData_085DFD3C
	.word	gSpriteAnimTable_085DFD54
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.globl	gOamData_085DFD74
	.align	2, 0
	.type	 gOamData_085DFD74,object
	.size	 gOamData_085DFD74,8
gOamData_085DFD74:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.space	2
	.globl	gSpriteAnim_085DFD7C
	.align	2, 0
	.type	 gSpriteAnim_085DFD7C,object
gSpriteAnim_085DFD7C:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_085DFD7C,8
	.globl	gSpriteAnim_085DFD84
	.align	2, 0
	.type	 gSpriteAnim_085DFD84,object
gSpriteAnim_085DFD84:
	.short	0x20
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_085DFD84,8
	.globl	gSpriteAnim_085DFD8C
	.align	2, 0
	.type	 gSpriteAnim_085DFD8C,object
gSpriteAnim_085DFD8C:
	.short	0x40
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_085DFD8C,8
	.globl	gSpriteAnimTable_085DFD94
	.align	2, 0
	.type	 gSpriteAnimTable_085DFD94,object
gSpriteAnimTable_085DFD94:
	.word	gSpriteAnim_085DFD7C
	.word	gSpriteAnim_085DFD84
	.word	gSpriteAnim_085DFD8C
	.size	 gSpriteAnimTable_085DFD94,12
	.globl	gSpriteTemplate_085DFDA0
	.align	2, 0
	.type	 gSpriteTemplate_085DFDA0,object
	.size	 gSpriteTemplate_085DFDA0,24
gSpriteTemplate_085DFDA0:
	.short	0x1
	.short	0x1
	.word	gOamData_085DFD74
	.word	gSpriteAnimTable_085DFD94
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8168374
	.globl	gSpritePalette_085DFDB8
	.align	2, 0
	.type	 gSpritePalette_085DFDB8,object
	.size	 gSpritePalette_085DFDB8,8
gSpritePalette_085DFDB8:
	.word	gUsePokeblockCondition_Pal
	.short	0x1
	.space	2
.text
	.align	2, 0
	.globl	ChooseMonToGivePokeblock
	.type	 ChooseMonToGivePokeblock,function
	.thumb_func
ChooseMonToGivePokeblock:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r4, .L3
	ldr	r0, .L3+0x4
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L3+0x8
	ldr	r2, .L3+0xc
	add	r0, r0, r2
	str	r0, [r1]
	str	r5, [r0, #0x8]
	str	r6, [r0, #0x4]
	ldr	r0, .L3+0x10
	bl	sub_816636C
	ldr	r0, .L3+0x14
	bl	SetMainCallback2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gUnknown_0203BCAC
	.word	0x806c
	.word	gUnknown_0203BC90
	.word	0x7fd0
	.word	sub_8166380
	.word	sub_816631C
.Lfe1:
	.size	 ChooseMonToGivePokeblock,.Lfe1-ChooseMonToGivePokeblock
	.align	2, 0
	.globl	CB2_ReturnAndChooseMonToGivePokeblock
	.type	 CB2_ReturnAndChooseMonToGivePokeblock,function
	.thumb_func
CB2_ReturnAndChooseMonToGivePokeblock:
	push	{r4, r5, lr}
	ldr	r4, .L7
	ldr	r0, .L7+0x4
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r5, .L7+0x8
	ldr	r1, .L7+0xc
	add	r0, r0, r1
	str	r0, [r5]
	ldr	r1, .L7+0x10
	ldr	r1, [r1]
	str	r1, [r0, #0x8]
	ldr	r1, .L7+0x14
	ldr	r1, [r1]
	str	r1, [r0, #0x4]
	ldr	r4, .L7+0x18
	ldrb	r0, [r4]
	bl	sub_81672E4
	strb	r0, [r4]
	ldr	r5, [r5]
	mov	r1, #0x0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L6	@cond_branch
	mov	r1, #0x1
.L6:
	add	r0, r5, #0
	add	r0, r0, #0x56
	strb	r1, [r0]
	ldr	r0, .L7+0x1c
	bl	sub_816636C
	ldr	r0, .L7+0x20
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gUnknown_0203BCAC
	.word	0x806c
	.word	gUnknown_0203BC90
	.word	0x7fd0
	.word	gUnknown_0203BC98
	.word	gUnknown_0203BC94
	.word	gPokeblockMonId
	.word	sub_8166380
	.word	sub_81662C0
.Lfe2:
	.size	 CB2_ReturnAndChooseMonToGivePokeblock,.Lfe2-CB2_ReturnAndChooseMonToGivePokeblock
	.align	2, 0
	.globl	sub_81662C0
	.type	 sub_81662C0,function
	.thumb_func
sub_81662C0:
	push	{r4, lr}
	ldr	r4, .L11
	ldr	r0, [r4]
	ldr	r0, [r0]
	bl	_call_via_r0
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	ldr	r4, [r4]
	ldr	r1, [r4]
	ldr	r0, .L11+0x4
	cmp	r1, r0
	bne	.L10	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x50
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L11+0x8
	bl	SetMainCallback2
.L10:
	pop	{r4}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	gUnknown_0203BC90
	.word	sub_8166564
	.word	sub_8166304
.Lfe3:
	.size	 sub_81662C0,.Lfe3-sub_81662C0
	.align	2, 0
	.globl	sub_8166304
	.type	 sub_8166304,function
	.thumb_func
sub_8166304:
	push	{lr}
	bl	sub_81668F8
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_8166304,.Lfe4-sub_8166304
	.align	2, 0
	.globl	sub_816631C
	.type	 sub_816631C,function
	.thumb_func
sub_816631C:
	push	{lr}
	ldr	r0, .L15
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	_call_via_r0
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTextPrinters
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gUnknown_0203BC90
.Lfe5:
	.size	 sub_816631C,.Lfe5-sub_816631C
	.align	2, 0
	.globl	sub_8166340
	.type	 sub_8166340,function
	.thumb_func
sub_8166340:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r0, .L18
	ldr	r0, [r0]
	ldr	r1, .L18+0x4
	add	r0, r0, r1
	bl	sub_81D2108
	bl	ScanlineEffect_InitHBlankDmaTransfer
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	gUnknown_0203BCAC
	.word	0x7c58
.Lfe6:
	.size	 sub_8166340,.Lfe6-sub_8166340
	.align	2, 0
	.globl	sub_816636C
	.type	 sub_816636C,function
	.thumb_func
sub_816636C:
	ldr	r1, .L21
	ldr	r1, [r1]
	str	r0, [r1]
	add	r1, r1, #0x50
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L22:
	.align	2, 0
.L21:
	.word	gUnknown_0203BC90
.Lfe7:
	.size	 sub_816636C,.Lfe7-sub_816636C
	.align	2, 0
	.globl	sub_8166380
	.type	 sub_8166380,function
	.thumb_func
sub_8166380:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L49
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0xf
	bls	.LCB241
	b	.L24	@long jump
.LCB241:
	lsl	r0, r0, #0x2
	ldr	r1, .L49+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L50:
	.align	2, 0
.L49:
	.word	gUnknown_0203BC90
	.word	.L45
	.align	2, 0
	.align	2, 0
.L45:
	.word	.L25
	.word	.L26
	.word	.L27
	.word	.L28
	.word	.L29
	.word	.L30
	.word	.L32
	.word	.L33
	.word	.L35
	.word	.L36
	.word	.L38
	.word	.L39
	.word	.L40
	.word	.L42
	.word	.L43
	.word	.L44
.L25:
	ldr	r2, .L51
	ldr	r0, [r2]
	ldr	r1, .L51+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r2, .L51+0x8
	add	r0, r0, r2
	bl	sub_81D1ED4
	b	.L47
.L52:
	.align	2, 0
.L51:
	.word	gUnknown_0203BCAC
	.word	0x7b10
	.word	0x7c58
.L26:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L47
.L27:
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	str	r0, [sp]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L53
	mov	r0, sp
	bl	CpuSet
	b	.L47
.L54:
	.align	2, 0
.L53:
	.word	0x5006000
.L28:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L55
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L55+0x4
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x97
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx
	b	.L47
.L56:
	.align	2, 0
.L55:
	.word	gUnknown_085DFCCC
	.word	gUnknown_085DFCDC
.L29:
	ldr	r1, [r2]
	b	.L48
.L30:
	bl	sub_8168328
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L24	@cond_branch
	b	.L47
.L32:
	ldr	r1, .L57
	mov	r0, #0x14
	strh	r0, [r1]
	bl	sub_8167420
	b	.L47
.L58:
	.align	2, 0
.L57:
	.word	gKeyRepeatStartDelay
.L33:
	bl	sub_8167930
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L24	@cond_branch
	b	.L47
.L35:
	mov	r0, #0x0
	bl	sub_8167608
	bl	sub_8167760
	b	.L47
.L36:
	ldr	r0, .L59
	ldr	r0, [r0]
	ldr	r1, .L59+0x4
	add	r0, r0, r1
	bl	sub_81D312C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L24	@cond_branch
	b	.L47
.L60:
	.align	2, 0
.L59:
	.word	gUnknown_0203BCAC
	.word	0x7b0e
.L38:
	ldr	r1, [r2]
	b	.L48
.L39:
	ldr	r5, .L61
	ldr	r1, [r5]
	ldr	r4, .L61+0x4
	add	r0, r1, r4
	ldr	r2, .L61+0x8
	add	r1, r1, r2
	bl	sub_81D2754
	ldr	r0, [r5]
	add	r0, r0, r4
	bl	sub_81D20AC
	b	.L47
.L62:
	.align	2, 0
.L61:
	.word	gUnknown_0203BCAC
	.word	0x7c58
	.word	0x7c6c
.L40:
	ldr	r4, .L63
	ldr	r0, [r4]
	ldr	r1, .L63+0x4
	add	r0, r0, r1
	bl	sub_81D20BC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L24	@cond_branch
	ldr	r2, [r4]
	ldr	r1, .L63+0x4
	add	r0, r2, r1
	add	r1, r1, #0x14
	add	r2, r2, r1
	add	r1, r2, #0
	bl	sub_81D1F84
	b	.L47
.L64:
	.align	2, 0
.L63:
	.word	gUnknown_0203BCAC
	.word	0x7c58
.L42:
	ldr	r0, .L65
	ldr	r0, [r0]
	ldr	r2, .L65+0x4
	add	r0, r0, r2
	bl	sub_81D2230
	b	.L47
.L66:
	.align	2, 0
.L65:
	.word	gUnknown_0203BCAC
	.word	0x7c58
.L43:
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_8167BA0
.L47:
	ldr	r0, .L67
	ldr	r1, [r0]
.L48:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L24
.L68:
	.align	2, 0
.L67:
	.word	gUnknown_0203BC90
.L44:
	ldr	r0, .L69
	bl	sub_816636C
.L24:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	sub_8166564
.Lfe8:
	.size	 sub_8166380,.Lfe8-sub_8166380
	.align	2, 0
	.globl	sub_8166564
	.type	 sub_8166564,function
	.thumb_func
sub_8166564:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L79
	ldr	r0, [r4]
	add	r0, r0, #0x50
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L73	@cond_branch
	cmp	r1, #0x1
	beq	.L74	@cond_branch
	b	.L72
.L80:
	.align	2, 0
.L79:
	.word	gUnknown_0203BC90
.L73:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L81
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	ldr	r1, [r4]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L72
.L82:
	.align	2, 0
.L81:
	.word	sub_8166340
.L74:
	ldr	r0, .L83
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L72	@cond_branch
	ldr	r4, .L83+0x4
	ldr	r0, [r4]
	ldr	r1, .L83+0x8
	add	r0, r0, r1
	bl	sub_81D3464
	ldr	r4, [r4]
	ldr	r2, .L83+0xc
	add	r0, r4, r2
	ldrb	r1, [r0]
	ldr	r3, .L83+0x10
	add	r0, r4, r3
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L76	@cond_branch
	ldr	r1, .L83+0x14
	add	r0, r4, r1
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	sub	r2, r2, #0x91
	add	r0, r4, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r3, .L83+0x8
	add	r0, r4, r3
	sub	r3, r3, #0xc
	add	r1, r4, r3
	ldrb	r1, [r1]
	bl	sub_81D3480
.L76:
	ldr	r0, .L83+0x18
	bl	sub_816636C
.L72:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L84:
	.align	2, 0
.L83:
	.word	gPaletteFade
	.word	gUnknown_0203BCAC
	.word	0x7b1c
	.word	0x8041
	.word	0x8040
	.word	0x7fb3
	.word	sub_8166634
.Lfe9:
	.size	 sub_8166564,.Lfe9-sub_8166564
	.align	2, 0
	.globl	sub_8166634
	.type	 sub_8166634,function
	.thumb_func
sub_8166634:
	push	{lr}
	ldr	r0, .L119
	ldr	r0, [r0]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bls	.LCB669
	b	.L86	@long jump
.LCB669:
	lsl	r0, r0, #0x2
	ldr	r1, .L119+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L120:
	.align	2, 0
.L119:
	.word	gUnknown_0203BC90
	.word	.L115
	.align	2, 0
	.align	2, 0
.L115:
	.word	.L87
	.word	.L97
	.word	.L86
	.word	.L100
	.word	.L86
	.word	.L102
	.word	.L103
	.word	.L113
.L87:
	ldr	r2, .L121
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L88	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	sub_8167CA0
	ldr	r0, .L121+0x4
	ldr	r0, [r0]
	ldr	r1, .L121+0x8
	add	r0, r0, r1
	bl	sub_81D3520
	ldr	r0, .L121+0xc
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x1
	b	.L117
.L122:
	.align	2, 0
.L121:
	.word	gMain
	.word	gUnknown_0203BCAC
	.word	0x7b1c
	.word	gUnknown_0203BC90
.L88:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	sub_8167CA0
	ldr	r0, .L123
	ldr	r0, [r0]
	ldr	r2, .L123+0x4
	add	r0, r0, r2
	bl	sub_81D3520
	ldr	r0, .L123+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x1
	b	.L117
.L124:
	.align	2, 0
.L123:
	.word	gUnknown_0203BCAC
	.word	0x7b1c
	.word	gUnknown_0203BC90
.L90:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L92	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L125
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x3
	b	.L117
.L126:
	.align	2, 0
.L125:
	.word	gUnknown_0203BC90
.L92:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB786
	b	.L86	@long jump
.LCB786:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L127
	ldr	r0, [r0]
	ldr	r2, .L127+0x4
	add	r1, r0, r2
	ldrb	r1, [r1]
	sub	r2, r2, #0x1
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L95	@cond_branch
	ldr	r0, .L127+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x3
	b	.L117
.L128:
	.align	2, 0
.L127:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	gUnknown_0203BC90
.L95:
	ldr	r0, .L129
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x5
	b	.L117
.L130:
	.align	2, 0
.L129:
	.word	gUnknown_0203BC90
.L97:
	ldr	r0, .L131
	ldr	r0, [r0]
	ldr	r1, .L131+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L86	@cond_branch
	ldr	r0, .L131+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x50
	b	.L117
.L132:
	.align	2, 0
.L131:
	.word	gUnknown_0203BCAC
	.word	0x8044
	.word	gUnknown_0203BC90
.L100:
	ldr	r0, .L133
	bl	sub_816636C
	b	.L86
.L134:
	.align	2, 0
.L133:
	.word	sub_8166BEC
.L102:
	bl	sub_8166D44
	ldr	r0, .L135
	ldr	r1, [r0]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L86
.L136:
	.align	2, 0
.L135:
	.word	gUnknown_0203BC90
.L103:
	bl	sub_8166DE4
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L107	@cond_branch
	cmp	r1, #0
	bgt	.L112	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L118	@cond_branch
	b	.L86
.L112:
	cmp	r1, #0x1
	bne	.L86	@cond_branch
	b	.L118
.L107:
	bl	IsSheenMaxed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L108	@cond_branch
	bl	sub_8166F50
	ldr	r0, .L137
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x7
	b	.L117
.L138:
	.align	2, 0
.L137:
	.word	gUnknown_0203BC90
.L108:
	ldr	r0, .L139
	bl	sub_816636C
	b	.L86
.L140:
	.align	2, 0
.L139:
	.word	sub_816681C
.L113:
	ldr	r0, .L141
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L86	@cond_branch
	bl	sub_8166F94
.L118:
	ldr	r0, .L141+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x0
.L117:
	strb	r1, [r0]
.L86:
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gMain
	.word	gUnknown_0203BC90
.Lfe10:
	.size	 sub_8166634,.Lfe10-sub_8166634
	.align	2, 0
	.globl	sub_816681C
	.type	 sub_816681C,function
	.thumb_func
sub_816681C:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L150
	ldr	r0, [r5]
	add	r0, r0, #0x50
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.L145	@cond_branch
	cmp	r4, #0x1
	beq	.L146	@cond_branch
	b	.L144
.L151:
	.align	2, 0
.L150:
	.word	gUnknown_0203BC90
.L145:
	ldr	r0, .L152
	ldr	r0, [r0]
	ldr	r1, .L152+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_81672A4
	ldr	r1, .L152+0x8
	strb	r0, [r1]
	ldr	r1, .L152+0xc
	ldr	r2, [r5]
	ldr	r0, [r2, #0x4]
	str	r0, [r1]
	ldr	r1, .L152+0x10
	ldr	r0, [r2, #0x8]
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L144
.L153:
	.align	2, 0
.L152:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	gPokeblockMonId
	.word	gUnknown_0203BC94
	.word	gUnknown_0203BC98
.L146:
	ldr	r0, .L154
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L144	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r4, .L154+0x4
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L154+0x8
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L154+0xc
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L154+0x10
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	bl	FreeAllWindowBuffers
	ldr	r1, .L154+0x14
	ldr	r0, .L154+0x18
	str	r0, [r1, #0x8]
	bl	CB2_PreparePokeblockFeedScene
.L144:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gPaletteFade
	.word	gUnknown_0203BCA0
	.word	gUnknown_0203BCA4
	.word	gUnknown_0203BCA8
	.word	gUnknown_0203BCAC
	.word	gMain
	.word	CB2_ReturnAndChooseMonToGivePokeblock
.Lfe11:
	.size	 sub_816681C,.Lfe11-sub_816681C
	.align	2, 0
	.globl	sub_81668F8
	.type	 sub_81668F8,function
	.thumb_func
sub_81668F8:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L173
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB1113
	b	.L157	@long jump
.LCB1113:
	lsl	r0, r0, #0x2
	ldr	r1, .L173+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L174:
	.align	2, 0
.L173:
	.word	gUnknown_0203BC90
	.word	.L169
	.align	2, 0
	.align	2, 0
.L169:
	.word	.L158
	.word	.L161
	.word	.L157
	.word	.L164
	.word	.L165
	.word	.L166
	.word	.L167
.L158:
	ldr	r0, .L175
	ldr	r0, [r0]
	ldr	r1, .L175+0x4
	add	r0, r0, r1
	ldr	r1, .L175+0x8
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L159	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x56
	ldrb	r0, [r0]
	bl	sub_8167CA0
	ldr	r1, [r4]
	b	.L171
.L176:
	.align	2, 0
.L175:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	gPokeblockMonId
.L159:
	ldr	r0, [r4]
	add	r0, r0, #0x50
	mov	r1, #0x3
	strb	r1, [r0]
	b	.L157
.L161:
	ldr	r0, .L177
	ldr	r0, [r0]
	ldr	r1, .L177+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L157	@cond_branch
	ldr	r0, .L177+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x50
	strb	r1, [r0]
	b	.L157
.L178:
	.align	2, 0
.L177:
	.word	gUnknown_0203BCAC
	.word	0x8044
	.word	gUnknown_0203BC90
.L164:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L172
.L165:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	b	.L172
.L166:
	ldr	r0, .L179
	bl	SetVBlankCallback
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L172:
	ldr	r0, .L179+0x4
	ldr	r1, [r0]
.L171:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L157
.L180:
	.align	2, 0
.L179:
	.word	sub_8166340
	.word	gUnknown_0203BC90
.L167:
	ldr	r0, .L181
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L157	@cond_branch
	ldr	r0, .L181+0x4
	ldr	r0, [r0]
	ldr	r1, .L181+0x8
	add	r0, r0, r1
	bl	sub_81D3464
	ldr	r0, .L181+0xc
	bl	sub_816636C
	ldr	r0, .L181+0x10
	bl	SetMainCallback2
.L157:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	gPaletteFade
	.word	gUnknown_0203BCAC
	.word	0x7b1c
	.word	sub_8166A34
	.word	sub_816631C
.Lfe12:
	.size	 sub_81668F8,.Lfe12-sub_81668F8
	.align	2, 0
	.globl	sub_8166A34
	.type	 sub_8166A34,function
	.thumb_func
sub_8166A34:
	push	{r4, r5, r6, lr}
	ldr	r1, .L200
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0x5
	bls	.LCB1305
	b	.L184	@long jump
.LCB1305:
	lsl	r0, r0, #0x2
	ldr	r1, .L200+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L201:
	.align	2, 0
.L200:
	.word	gUnknown_0203BC90
	.word	.L196
	.align	2, 0
	.align	2, 0
.L196:
	.word	.L185
	.word	.L186
	.word	.L188
	.word	.L189
	.word	.L192
	.word	.L194
.L185:
	ldr	r4, [r5]
	ldr	r3, .L202
	str	r3, [r4, #0xc]
	ldr	r0, .L202+0x4
	ldr	r0, [r0]
	ldr	r2, .L202+0x8
	add	r1, r0, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r0, r1
	sub	r2, r2, #0x88
	add	r1, r1, r2
	ldrb	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	add	r1, r1, r3
	str	r1, [r4, #0xc]
	ldr	r3, .L202+0xc
	add	r0, r0, r3
	bl	sub_81D3520
	b	.L198
.L203:
	.align	2, 0
.L202:
	.word	gPlayerParty
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	0x7b1c
.L186:
	ldr	r0, .L204
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB1369
	b	.L184	@long jump
.LCB1369:
	b	.L198
.L205:
	.align	2, 0
.L204:
	.word	gMain
.L188:
	bl	sub_8167104
	ldr	r6, .L206
	ldr	r0, [r6]
	add	r0, r0, #0x5c
	ldr	r4, .L206+0x4
	ldr	r1, [r4]
	ldr	r5, .L206+0x8
	add	r1, r1, r5
	bl	sub_81D2754
	ldr	r2, [r4]
	ldr	r4, .L206+0xc
	add	r0, r2, r4
	ldr	r3, .L206+0x10
	add	r1, r2, r3
	mov	r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r4, r4, #0x14
	add	r1, r1, r4
	add	r1, r2, r1
	add	r2, r2, r5
	bl	sub_81D1F84
	bl	sub_8167338
	ldr	r1, [r6]
	b	.L199
.L207:
	.align	2, 0
.L206:
	.word	gUnknown_0203BC90
	.word	gUnknown_0203BCAC
	.word	0x7ca8
	.word	0x7c58
	.word	0x7fb3
.L189:
	ldr	r5, .L208
	ldr	r0, [r5]
	ldr	r1, .L208+0x4
	add	r0, r0, r1
	bl	sub_81D2074
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L184	@cond_branch
	ldr	r0, [r5]
	ldr	r4, .L208+0x8
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	sub_81672A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_81681F4
	ldr	r3, [r5]
	add	r4, r3, r4
	ldrb	r1, [r4]
	ldr	r2, .L208+0xc
	add	r0, r3, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L191	@cond_branch
	ldr	r4, .L208+0x10
	add	r0, r3, r4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	sub	r2, r2, #0x90
	add	r0, r3, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r4, .L208+0x14
	add	r0, r3, r4
	sub	r4, r4, #0xc
	add	r1, r3, r4
	ldrb	r1, [r1]
	bl	sub_81D3480
.L191:
	ldr	r1, .L208+0x18
	ldr	r0, [r1]
	add	r0, r0, #0x52
	strb	r6, [r0]
	ldr	r1, [r1]
	b	.L199
.L209:
	.align	2, 0
.L208:
	.word	gUnknown_0203BCAC
	.word	0x7c58
	.word	0x8041
	.word	0x8040
	.word	0x7fb3
	.word	0x7b1c
	.word	gUnknown_0203BC90
.L192:
	ldr	r1, [r5]
	add	r1, r1, #0x52
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x10
	bls	.L184	@cond_branch
	bl	sub_8166E24
.L198:
	ldr	r1, [r5]
.L199:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L184
.L194:
	ldr	r0, .L210
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L184	@cond_branch
	bl	sub_8166EDC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L184	@cond_branch
	ldr	r0, .L210+0x4
	ldrb	r0, [r0]
	bl	TryClearPokeblock
	ldr	r0, .L210+0x8
	bl	sub_816636C
.L184:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	gMain
	.word	gSpecialVar_ItemId
	.word	sub_8166BEC
.Lfe13:
	.size	 sub_8166A34,.Lfe13-sub_8166A34
	.align	2, 0
	.globl	sub_8166BEC
	.type	 sub_8166BEC,function
	.thumb_func
sub_8166BEC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L234
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x50
	ldrb	r1, [r2]
	cmp	r1, #0x1
	beq	.L215	@cond_branch
	cmp	r1, #0x1
	bgt	.L232	@cond_branch
	cmp	r1, #0
	beq	.L214	@cond_branch
	b	.L213
.L235:
	.align	2, 0
.L234:
	.word	gUnknown_0203BC90
.L232:
	cmp	r1, #0x2
	beq	.L217	@cond_branch
	cmp	r1, #0x3
	beq	.L218	@cond_branch
	b	.L213
.L214:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L233
.L215:
	ldr	r0, .L236
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L213	@cond_branch
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L213
.L237:
	.align	2, 0
.L236:
	.word	gPaletteFade
.L217:
	ldr	r1, .L238
	mov	r0, #0x3
	strb	r0, [r1, #0x15]
	bl	ScanlineEffect_InitHBlankDmaTransfer
.L233:
	ldr	r1, [r4]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L213
.L239:
	.align	2, 0
.L238:
	.word	gScanlineEffect
.L218:
	ldr	r0, [r0, #0x4]
	bl	SetMainCallback2
	ldr	r0, .L240
	ldr	r0, [r0]
	ldr	r1, .L240+0x4
	add	r0, r0, r1
	bl	sub_81D354C
	mov	r4, #0x0
.L222:
	ldr	r5, .L240
	ldr	r0, [r5]
	ldr	r2, .L240+0x8
	add	r0, r0, r2
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L240+0xc
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L222	@cond_branch
	mov	r0, #0x0
	bl	FreeSpriteTilesByTag
	mov	r0, #0x1
	bl	FreeSpriteTilesByTag
	mov	r0, #0x0
	bl	FreeSpritePaletteByTag
	mov	r0, #0x1
	bl	FreeSpritePaletteByTag
	mov	r4, #0x0
.L227:
	ldr	r0, [r5]
	lsl	r1, r4, #0x2
	ldr	r2, .L240+0x10
	add	r0, r0, r2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L227	@cond_branch
	ldr	r6, .L240
	ldr	r0, [r6]
	ldr	r2, .L240+0x14
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L229	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L240+0xc
	add	r0, r0, r1
	bl	DestroySprite
.L229:
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r4, .L240+0x18
	ldr	r0, [r4]
	bl	Free
	mov	r5, #0x0
	str	r5, [r4]
	ldr	r4, .L240+0x1c
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L240+0x20
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r0, [r6]
	bl	Free
	str	r5, [r6]
	bl	FreeAllWindowBuffers
.L213:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	gUnknown_0203BCAC
	.word	0x7b1c
	.word	0x7b06
	.word	gSprites
	.word	0x7b44
	.word	0x7b10
	.word	gUnknown_0203BCA0
	.word	gUnknown_0203BCA4
	.word	gUnknown_0203BCA8
.Lfe14:
	.size	 sub_8166BEC,.Lfe14-sub_8166BEC
	.align	2, 0
	.globl	sub_8166D44
	.type	 sub_8166D44,function
	.thumb_func
sub_8166D44:
	push	{r4, lr}
	add	sp, sp, #-0x4c
	ldr	r0, .L243
	ldr	r0, [r0]
	ldr	r1, .L243+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_81672A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L243+0x8
	add	r0, r0, r1
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	GetMonData
	add	r0, sp, #0xc
	bl	StringGetEnd10
	ldr	r1, .L243+0xc
	add	r0, sp, #0xc
	bl	StringAppend
	ldr	r4, .L243+0x10
	add	r0, r4, #0
	add	r1, sp, #0xc
	bl	StringCopy
	mov	r0, #0x2
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	mov	r1, #0x97
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L243+0x14
	mov	r1, #0x97
	mov	r2, #0xe
	mov	r3, #0x0
	bl	CreateYesNoMenu
	add	sp, sp, #0x4c
	pop	{r4}
	pop	{r0}
	bx	r0
.L244:
	.align	2, 0
.L243:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	gPlayerParty
	.word	gText_GetsAPokeBlockQuestion
	.word	gStringVar4
	.word	sUsePokeblockYesNoWinTemplate
.Lfe15:
	.size	 sub_8166D44,.Lfe15-sub_8166D44
	.align	2, 0
	.globl	sub_8166DE4
	.type	 sub_8166DE4,function
	.thumb_func
sub_8166DE4:
	push	{r4, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L246	@cond_branch
	cmp	r1, #0
	bgt	.L252	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L249	@cond_branch
	b	.L246
.L252:
	cmp	r1, #0x1
	bne	.L246	@cond_branch
.L249:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	bl	rbox_fill_rectangle
	mov	r0, #0x2
	bl	ClearWindowTilemap
.L246:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 sub_8166DE4,.Lfe16-sub_8166DE4
	.align	2, 0
	.globl	sub_8166E24
	.type	 sub_8166E24,function
	.thumb_func
sub_8166E24:
	push	{r4, lr}
	mov	r0, #0x2
	mov	r1, #0x97
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x2
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r3, .L262
	ldr	r0, [r3]
	add	r0, r0, #0x53
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r2, [r3]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L260	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x61
	ldrb	r1, [r1]
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r4, r3, #0
	cmp	r0, #0
	bne	.L255	@cond_branch
	add	r2, r4, #0
.L256:
	ldr	r0, [r2]
	add	r0, r0, #0x53
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r3, [r2]
	add	r1, r3, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L260	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x61
	ldrb	r1, [r1]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L256	@cond_branch
.L255:
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L260	@cond_branch
	ldr	r0, .L262+0x4
	ldrb	r1, [r1]
	add	r2, r2, #0x61
	add	r2, r2, r1
	ldrb	r2, [r2]
	bl	Pokeblock_BufferEnhancedStatText
	b	.L261
.L263:
	.align	2, 0
.L262:
	.word	gUnknown_0203BC90
	.word	gStringVar4
.L260:
	ldr	r0, .L264
	ldr	r1, .L264+0x4
	ldr	r1, [r1]
	add	r1, r1, #0x53
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	Pokeblock_BufferEnhancedStatText
.L261:
	ldr	r0, .L264
	bl	Pokeblock_MenuWindowTextPrint
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	gStringVar4
	.word	gUnknown_0203BC90
.Lfe17:
	.size	 sub_8166E24,.Lfe17-sub_8166E24
	.align	2, 0
	.globl	sub_8166EDC
	.type	 sub_8166EDC,function
	.thumb_func
sub_8166EDC:
	push	{r4, r5, lr}
	mov	r0, #0x2
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r5, .L275
	add	r3, r5, #0
	mov	r4, #0x5
.L269:
	ldr	r0, [r3]
	add	r0, r0, #0x53
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r2, [r3]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L270	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x61
	ldrb	r1, [r1]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L268	@cond_branch
	b	.L269
.L276:
	.align	2, 0
.L275:
	.word	gUnknown_0203BC90
.L270:
	strb	r4, [r1]
	mov	r0, #0x0
	b	.L274
.L268:
	ldr	r4, .L277
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x53
	ldrb	r1, [r1]
	add	r0, r0, #0x61
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r4, #0
	bl	Pokeblock_BufferEnhancedStatText
	add	r0, r4, #0
	bl	Pokeblock_MenuWindowTextPrint
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x1
.L274:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L278:
	.align	2, 0
.L277:
	.word	gStringVar4
.Lfe18:
	.size	 sub_8166EDC,.Lfe18-sub_8166EDC
	.align	2, 0
	.globl	sub_8166F50
	.type	 sub_8166F50,function
	.thumb_func
sub_8166F50:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x2
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	mov	r1, #0x97
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	ldr	r2, .L280
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	gText_WontEatAnymore
.Lfe19:
	.size	 sub_8166F50,.Lfe19-sub_8166F50
	.align	2, 0
	.globl	sub_8166F94
	.type	 sub_8166F94,function
	.thumb_func
sub_8166F94:
	push	{lr}
	mov	r0, #0x2
	bl	rbox_fill_rectangle
	mov	r0, #0x2
	bl	ClearWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 sub_8166F94,.Lfe20-sub_8166F94
	.align	2, 0
	.globl	Pokeblock_MenuWindowTextPrint
	.type	 Pokeblock_MenuWindowTextPrint,function
	.thumb_func
Pokeblock_MenuWindowTextPrint:
	push	{lr}
	add	sp, sp, #-0xc
	ldr	r2, .L284
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	gStringVar4
.Lfe21:
	.size	 Pokeblock_MenuWindowTextPrint,.Lfe21-Pokeblock_MenuWindowTextPrint
	.align	2, 0
	.globl	Pokeblock_BufferEnhancedStatText
	.type	 Pokeblock_BufferEnhancedStatText,function
	.thumb_func
Pokeblock_BufferEnhancedStatText:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	lsl	r2, r2, #0x10
	lsr	r0, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0
	beq	.L291	@cond_branch
	cmp	r2, #0
	ble	.L289	@cond_branch
	mov	r0, #0x0
.L289:
	lsl	r0, r0, #0x10
	ldr	r1, .L294
	lsl	r0, r3, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L294+0x4
	add	r0, r4, #0
	bl	StringAppend
	b	.L287
.L295:
	.align	2, 0
.L294:
	.word	sContestStatNames
	.word	gText_WasEnhanced
.L291:
	ldr	r1, .L296
	add	r0, r4, #0
	bl	StringCopy
.L287:
	pop	{r4}
	pop	{r0}
	bx	r0
.L297:
	.align	2, 0
.L296:
	.word	gText_NothingChanged
.Lfe22:
	.size	 Pokeblock_BufferEnhancedStatText,.Lfe22-Pokeblock_BufferEnhancedStatText
	.align	2, 0
	.globl	Pokeblock_GetMonContestStats
	.type	 Pokeblock_GetMonContestStats,function
	.thumb_func
Pokeblock_GetMonContestStats:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r4, #0x0
	ldr	r7, .L304
.L302:
	lsl	r0, r4, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	GetMonData
	add	r1, r5, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L302	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	gUnknown_085DFCB0
.Lfe23:
	.size	 Pokeblock_GetMonContestStats,.Lfe23-Pokeblock_GetMonContestStats
	.align	2, 0
	.globl	sub_8167054
	.type	 sub_8167054,function
	.thumb_func
sub_8167054:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	add	r5, r1, #0
	add	r0, r5, #0
	mov	r1, #0x30
	bl	GetMonData
	cmp	r0, #0xff
	beq	.L307	@cond_branch
	mov	r0, r8
	add	r1, r5, #0
	bl	sub_8167184
	mov	r4, #0x0
	mov	r7, sp
.L311:
	ldr	r1, .L316
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r6, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strb	r0, [r7]
	ldr	r1, .L316+0x4
	ldr	r1, [r1]
	lsl	r2, r4, #0x1
	add	r1, r1, #0x66
	add	r1, r1, r2
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r0, #0
	bge	.L312	@cond_branch
	mov	r1, #0x0
.L312:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xff
	ble	.L313	@cond_branch
	mov	r1, #0xff
.L313:
	strb	r1, [r7]
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, sp
	bl	SetMonData
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L311	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x30
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, r8
	ldrb	r2, [r2, #0x6]
	add	r1, r0, r2
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xff
	ble	.L315	@cond_branch
	mov	r1, #0xff
.L315:
	mov	r0, sp
	strb	r1, [r0]
	add	r0, r5, #0
	mov	r1, #0x30
	mov	r2, sp
	bl	SetMonData
.L307:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	gUnknown_085DFCB0
	.word	gUnknown_0203BC90
.Lfe24:
	.size	 sub_8167054,.Lfe24-sub_8167054
	.align	2, 0
	.globl	sub_8167104
	.type	 sub_8167104,function
	.thumb_func
sub_8167104:
	push	{r4, r5, lr}
	ldr	r5, .L324
	ldr	r0, .L324+0x4
	ldr	r1, [r0]
	ldr	r2, .L324+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L324+0xc
	add	r1, r1, r0
	ldrb	r1, [r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	add	r5, r0, r5
	ldr	r4, .L324+0x10
	ldr	r1, [r4]
	add	r1, r1, #0x57
	add	r0, r5, #0
	bl	Pokeblock_GetMonContestStats
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	add	r1, r5, #0
	bl	sub_8167054
	ldr	r1, [r4]
	add	r1, r1, #0x5c
	add	r0, r5, #0
	bl	Pokeblock_GetMonContestStats
	mov	r3, #0x0
.L322:
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x61
	add	r2, r2, r3
	add	r1, r0, #0
	add	r1, r1, #0x5c
	add	r1, r1, r3
	add	r0, r0, #0x57
	add	r0, r0, r3
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	sub	r1, r1, r0
	strb	r1, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x4
	bls	.L322	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	gPlayerParty
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	0x7fb9
	.word	gUnknown_0203BC90
.Lfe25:
	.size	 sub_8167104,.Lfe25-sub_8167104
	.align	2, 0
	.globl	sub_8167184
	.type	 sub_8167184,function
	.thumb_func
sub_8167184:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r1
	ldr	r1, .L338
	ldr	r3, [r1]
	ldrb	r1, [r0, #0x1]
	add	r2, r3, #0
	add	r2, r2, #0x66
	strh	r1, [r2]
	ldrb	r2, [r0, #0x5]
	add	r1, r3, #0
	add	r1, r1, #0x68
	strh	r2, [r1]
	ldrb	r1, [r0, #0x4]
	add	r2, r3, #0
	add	r2, r2, #0x6a
	strh	r1, [r2]
	ldrb	r2, [r0, #0x3]
	add	r1, r3, #0
	add	r1, r1, #0x6c
	strh	r2, [r1]
	ldrb	r1, [r0, #0x2]
	add	r0, r3, #0
	add	r0, r0, #0x6e
	strh	r1, [r0]
	ldr	r0, .L338+0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	ble	.L327	@cond_branch
	mov	r0, #0x1
	b	.L328
.L339:
	.align	2, 0
.L338:
	.word	gUnknown_0203BC90
	.word	gPokeblockGain
.L327:
	cmp	r0, #0
	bge	.L326	@cond_branch
	mov	r0, #0xff
.L328:
	mov	r2, #0x0
	lsl	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L340
	mov	r8, r0
.L334:
	mov	r0, r8
	ldr	r1, [r0]
	lsl	r0, r2, #0x18
	asr	r6, r0, #0x18
	lsl	r7, r6, #0x1
	add	r1, r1, #0x66
	add	r1, r1, r7
	mov	r2, #0x0
	ldrsh	r4, [r1, r2]
	add	r0, r4, #0
	mov	r1, #0xa
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0xa
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L335	@cond_branch
	lsl	r0, r5, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r5, r0, #0x18
.L335:
	ldr	r0, .L340+0x4
	add	r0, r6, r0
	ldrb	r1, [r0]
	mov	r0, sl
	bl	GetMonFlavorRelation
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r0, r9
	bne	.L333	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, #0x66
	add	r0, r0, r7
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	mul	r1, r1, r2
	ldrh	r2, [r0]
	add	r1, r1, r2
	strh	r1, [r0]
.L333:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x4
	ble	.L334	@cond_branch
.L326:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gUnknown_0203BC90
	.word	gUnknown_085DFCC4
.Lfe26:
	.size	 sub_8167184,.Lfe26-sub_8167184
	.align	2, 0
	.globl	IsSheenMaxed
	.type	 IsSheenMaxed,function
	.thumb_func
IsSheenMaxed:
	push	{lr}
	ldr	r0, .L346
	ldr	r1, [r0]
	ldr	r2, .L346+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	sub	r2, r2, #0x89
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r2, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r2, #0x30
	mov	r3, #0x0
	bl	GetBoxOrPartyMonData
	cmp	r0, #0xff
	beq	.L343	@cond_branch
	mov	r0, #0x0
	b	.L345
.L347:
	.align	2, 0
.L346:
	.word	gUnknown_0203BCAC
	.word	0x8041
.L343:
	mov	r0, #0x1
.L345:
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 IsSheenMaxed,.Lfe27-IsSheenMaxed
	.align	2, 0
	.globl	sub_81672A4
	.type	 sub_81672A4,function
	.thumb_func
sub_81672A4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
.L352:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L357
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L351	@cond_branch
	cmp	r5, #0
	bne	.L354	@cond_branch
	add	r0, r4, #0
	b	.L356
.L358:
	.align	2, 0
.L357:
	.word	gPlayerParty
.L354:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L351:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L352	@cond_branch
	mov	r0, #0x0
.L356:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 sub_81672A4,.Lfe28-sub_81672A4
	.align	2, 0
	.globl	sub_81672E4
	.type	 sub_81672E4,function
	.thumb_func
sub_81672E4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	mov	r6, #0x0
	cmp	r6, r5
	bcs	.L361	@cond_branch
.L363:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L366
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L362	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L362:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L363	@cond_branch
.L361:
	sub	r0, r5, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L367:
	.align	2, 0
.L366:
	.word	gPlayerParty
.Lfe29:
	.size	 sub_81672E4,.Lfe29-sub_81672E4
	.align	2, 0
	.globl	sub_8167324
	.type	 sub_8167324,function
	.thumb_func
sub_8167324:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_81672A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 sub_8167324,.Lfe30-sub_8167324
	.align	2, 0
	.globl	sub_8167338
	.type	 sub_8167338,function
	.thumb_func
sub_8167338:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L378
	bl	LoadSpriteSheet
	ldr	r0, .L378+0x4
	bl	LoadSpritePalette
	ldr	r2, .L378+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x54
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r4, #0x0
	add	r5, r2, #0
	ldr	r6, .L378+0xc
	add	r0, r6, #0x2
	mov	r8, r0
	ldr	r7, .L378+0x10
.L373:
	ldr	r0, [r5]
	add	r0, r0, #0x61
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L372	@cond_branch
	lsl	r2, r4, #0x2
	add	r0, r2, r6
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	add	r2, r2, r8
	mov	r0, #0x0
	ldrsh	r2, [r2, r0]
	ldr	r0, .L378+0x14
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L372	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x61
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L376	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, .L378+0x18
	str	r1, [r0]
.L376:
	ldr	r1, [r5]
	add	r1, r1, #0x54
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L372:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L373	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	gSpriteSheet_ConditionUpDown
	.word	gSpritePalette_ConditionUpDown
	.word	gUnknown_0203BC90
	.word	gUnknown_085DFD28
	.word	gSprites+0x1c
	.word	gSpriteTemplate_085DFD5C
	.word	sub_81673DC
.Lfe31:
	.size	 sub_8167338,.Lfe31-sub_8167338
	.align	2, 0
	.globl	sub_81673DC
	.type	 sub_81673DC,function
	.thumb_func
sub_81673DC:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x5
	bgt	.L381	@cond_branch
	ldrh	r0, [r1, #0x26]
	sub	r0, r0, #0x2
	b	.L385
.L381:
	cmp	r0, #0xb
	bgt	.L382	@cond_branch
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x2
.L385:
	strh	r0, [r1, #0x26]
.L382:
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L384	@cond_branch
	add	r0, r1, #0
	bl	DestroySprite
	ldr	r0, .L386
	ldr	r1, [r0]
	add	r1, r1, #0x54
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L384:
	pop	{r0}
	bx	r0
.L387:
	.align	2, 0
.L386:
	.word	gUnknown_0203BC90
.Lfe32:
	.size	 sub_81673DC,.Lfe32-sub_81673DC
	.align	2, 0
	.globl	sub_8167420
	.type	 sub_8167420,function
	.thumb_func
sub_8167420:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	mov	r5, #0x0
	ldr	r6, .L395
	b	.L389
.L396:
	.align	2, 0
.L395:
	.word	gUnknown_0203BCAC
.L392:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L397
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	add	r3, r0, #0
	cmp	r3, #0
	bne	.L391	@cond_branch
	ldr	r1, [r6]
	lsl	r2, r5, #0x2
	add	r1, r1, r2
	ldr	r0, .L397+0x4
	add	r1, r1, r0
	mov	r0, #0xe
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, r2
	ldr	r1, .L397+0x8
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, r2
	ldr	r2, .L397+0xc
	add	r0, r0, r2
	strh	r3, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L391:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L389:
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L392	@cond_branch
	ldr	r2, .L397+0x10
	ldr	r0, [r2]
	ldr	r1, .L397+0x14
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r1, r5, #0x1
	ldr	r2, .L397+0x18
	add	r0, r0, r2
	strb	r1, [r0]
	bl	sub_81674BC
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L398:
	.align	2, 0
.L397:
	.word	gPlayerParty
	.word	0x7fb8
	.word	0x7fb9
	.word	0x7fba
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	0x8040
.Lfe33:
	.size	 sub_8167420,.Lfe33-sub_8167420
	.align	2, 0
	.globl	sub_81674BC
	.type	 sub_81674BC,function
	.thumb_func
sub_81674BC:
	push	{r4, r5, lr}
	ldr	r4, .L402
	ldr	r0, [r4]
	ldr	r5, .L402+0x4
	add	r0, r0, r5
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	sub_816753C
	ldr	r0, [r4]
	ldr	r1, .L402+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L402+0xc
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L402+0x10
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r5, r0, r5
	ldrb	r3, [r5]
	add	r1, r3, #0x1
	add	r2, r2, #0x8c
	add	r0, r0, r2
	ldrb	r2, [r0]
	cmp	r1, r2
	blt	.L400	@cond_branch
	mov	r1, #0x0
.L400:
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r0, #0
	bge	.L401	@cond_branch
	sub	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L401:
	add	r0, r1, #0
	mov	r1, #0x1
	bl	sub_816753C
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x2
	bl	sub_816753C
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	0x7fb3
	.word	0x7fb4
	.word	0x7fb5
.Lfe34:
	.size	 sub_81674BC,.Lfe34-sub_81674BC
	.align	2, 0
	.globl	sub_816753C
	.type	 sub_816753C,function
	.thumb_func
sub_816753C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L405
	mov	r9, r0
	ldr	r1, [r0]
	lsl	r5, r5, #0x10
	asr	r0, r5, #0xe
	add	r0, r1, r0
	ldr	r3, .L405+0x4
	add	r2, r0, r3
	ldrb	r7, [r2]
	ldr	r2, .L405+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	sl, r0
	add	r3, r3, #0x88
	add	r0, r1, r3
	ldrb	r6, [r0]
	mov	r0, #0x0
	mov	r8, r0
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r2, .L405+0xc
	add	r0, r0, r2
	add	r0, r1, r0
	lsl	r2, r4, #0x6
	ldr	r3, .L405+0x10
	add	r2, r2, r3
	add	r1, r1, r2
	lsr	r5, r5, #0x10
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	add	r2, r7, #0
	mov	r3, sl
	bl	sub_81D2ED4
	mov	r3, r9
	ldr	r1, [r3]
	ldr	r2, .L405+0x14
	add	r0, r1, r2
	ldr	r3, .L405+0x18
	add	r1, r1, r3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r2, r8
	str	r2, [sp, #0xc]
	add	r2, r7, #0
	mov	r3, sl
	bl	sub_81D2F78
	lsl	r0, r4, #0xd
	mov	r1, #0xc1
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	mov	r3, r9
	ldr	r1, [r3]
	add	r0, r1, r0
	lsl	r4, r4, #0x7
	add	r4, r4, #0x4
	add	r1, r1, r4
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	add	r2, r7, #0
	mov	r3, sl
	bl	sub_81D3094
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L406:
	.align	2, 0
.L405:
	.word	gUnknown_0203BCAC
	.word	0x7fb8
	.word	0x7fb9
	.word	0x7b4d
	.word	0x7b95
	.word	0x7c58
	.word	0x7fb0
.Lfe35:
	.size	 sub_816753C,.Lfe35-sub_816753C
	.align	2, 0
	.globl	sub_8167608
	.type	 sub_8167608,function
	.thumb_func
sub_8167608:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L417
	ldr	r3, [r1]
	ldr	r0, .L417+0x4
	mov	r8, r0
	add	r0, r3, r0
	ldrb	r0, [r0]
	add	r7, r1, #0
	cmp	r0, #0xff
	bne	.L408	@cond_branch
	add	r5, sp, #0x18
	add	r4, sp, #0x20
	add	r0, r5, #0
	mov	r1, sp
	add	r2, r4, #0
	bl	sub_81D31D0
	lsl	r0, r6, #0xd
	mov	r1, #0xc1
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	ldr	r1, [r7]
	add	r0, r1, r0
	str	r0, [sp, #0x18]
	lsl	r0, r6, #0x7
	add	r0, r0, #0x4
	add	r1, r1, r0
	str	r1, [sp, #0x20]
	add	r0, r4, #0
	bl	LoadSpritePalette
	ldr	r1, [r7]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L417+0x8
	add	r1, r1, r2
	strh	r0, [r1]
	add	r0, r5, #0
	bl	LoadSpriteSheet
	ldr	r1, [r7]
	ldr	r3, .L417+0xc
	add	r1, r1, r3
	strh	r0, [r1]
	mov	r0, sp
	mov	r1, #0x26
	mov	r2, #0x68
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, [r7]
	ldr	r2, .L417+0x4
	add	r0, r0, r2
	strb	r1, [r0]
	cmp	r1, #0x40
	bne	.L409	@cond_branch
	mov	r0, #0x64
	bl	FreeSpriteTilesByTag
	mov	r0, #0x64
	bl	FreeSpritePaletteByTag
	ldr	r0, [r7]
	add	r0, r0, r8
	mov	r1, #0xff
	strb	r1, [r0]
	b	.L411
.L418:
	.align	2, 0
.L417:
	.word	gUnknown_0203BCAC
	.word	0x7b10
	.word	0x7b12
	.word	0x7b14
.L409:
	ldr	r0, [r7]
	add	r0, r0, r8
	strb	r1, [r0]
	ldr	r4, .L419
	ldr	r2, [r7]
	mov	r0, r8
	add	r3, r2, r0
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L419+0x4
	str	r1, [r0]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r1, [r0, #0x26]
	sub	r1, r1, #0x22
	strh	r1, [r0, #0x26]
	ldr	r3, .L419+0x8
	add	r1, r2, r3
	sub	r3, r3, #0x4
	add	r0, r2, r3
	ldrh	r0, [r0]
	lsl	r0, r0, #0x5
	ldr	r3, .L419+0xc
	add	r0, r0, r3
	str	r0, [r1]
	ldr	r0, .L419+0x10
	add	r2, r2, r0
	ldrh	r0, [r2]
	lsl	r0, r0, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strh	r0, [r2]
	b	.L411
.L420:
	.align	2, 0
.L419:
	.word	gSprites
	.word	sub_8168168
	.word	0x7b18
	.word	0x6010000
	.word	0x7b12
.L408:
	lsl	r1, r6, #0xd
	mov	r0, #0xc1
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r1, r3, r1
	ldr	r2, .L421
	add	r0, r3, r2
	ldr	r2, [r0]
	ldr	r0, .L421+0x4
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L421+0x8
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	lsl	r0, r6, #0x7
	add	r0, r0, #0x4
	add	r0, r3, r0
	ldr	r2, .L421+0xc
	add	r1, r3, r2
	ldrh	r1, [r1]
	mov	r2, #0x20
	bl	LoadPalette
.L411:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L422:
	.align	2, 0
.L421:
	.word	0x7b18
	.word	0x40000d4
	.word	-0x7ffffc00
	.word	0x7b12
.Lfe36:
	.size	 sub_8167608,.Lfe36-sub_8167608
	.align	2, 0
	.globl	sub_8167760
	.type	 sub_8167760,function
	.thumb_func
sub_8167760:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x60
	add	r5, sp, #0x20
	add	r4, sp, #0x38
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r4, #0
	bl	sub_81D321C
	mov	r0, sp
	bl	LoadSpriteSheets
	add	r0, r4, #0
	bl	LoadSpritePalettes
	mov	r4, #0x0
	ldr	r1, .L440
	ldr	r0, [r1]
	ldr	r2, .L440+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r6, r5, #0
	add	r2, sp, #0x50
	mov	r9, r2
	add	r2, sp, #0x58
	mov	sl, r2
	cmp	r4, r0
	bge	.L425	@cond_branch
	add	r5, r1, #0
	ldr	r7, .L440+0x8
	mov	r0, #0x1c
	add	r0, r0, r7
	mov	r8, r0
.L427:
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r1, #0x80
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	add	r0, r6, #0
	mov	r1, #0xe2
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L428	@cond_branch
	ldr	r0, [r5]
	ldr	r2, .L440+0xc
	add	r0, r0, r2
	add	r0, r0, r4
	strb	r3, [r0]
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r1, r0, r7
	strh	r4, [r1, #0x2e]
	add	r0, r0, r8
	ldr	r1, .L440+0x10
	str	r1, [r0]
	b	.L426
.L441:
	.align	2, 0
.L440:
	.word	gUnknown_0203BCAC
	.word	0x8040
	.word	gSprites
	.word	0x7b06
	.word	sub_8168180
.L428:
	ldr	r0, [r5]
	ldr	r1, .L442
	add	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
.L426:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, [r5]
	ldr	r2, .L442+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r4, r0
	blt	.L427	@cond_branch
.L425:
	mov	r0, #0x67
	strh	r0, [r6]
	cmp	r4, #0x5
	bhi	.L432	@cond_branch
	ldr	r5, .L442+0x8
	ldr	r7, .L442+0xc
.L434:
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r0, #0x80
	lsl	r0, r0, #0xc
	add	r2, r2, r0
	asr	r2, r2, #0x10
	add	r0, r6, #0
	mov	r1, #0xe6
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L435	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L442
	add	r0, r0, r1
	add	r0, r0, r4
	strb	r3, [r0]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x3]
	mov	r0, #0x3f
	and	r0, r0, r2
	strb	r0, [r1, #0x3]
	b	.L433
.L443:
	.align	2, 0
.L442:
	.word	0x7b06
	.word	0x8040
	.word	gUnknown_0203BCAC
	.word	gSprites
.L435:
	ldr	r0, [r5]
	ldr	r2, .L444
	add	r0, r0, r2
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
.L433:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x5
	bls	.L434	@cond_branch
.L432:
	mov	r0, #0x66
	strh	r0, [r6]
	ldr	r0, .L444+0x4
	str	r0, [r6, #0x14]
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r2, r2, #0x12
	mov	r0, #0x80
	lsl	r0, r0, #0xc
	add	r2, r2, r0
	asr	r2, r2, #0x10
	add	r0, r6, #0
	mov	r1, #0xde
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L438	@cond_branch
	ldr	r0, .L444+0x8
	ldr	r0, [r0]
	ldr	r1, .L444
	add	r0, r0, r1
	add	r0, r0, r4
	strb	r3, [r0]
	ldr	r0, .L444+0xc
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldrb	r3, [r2, #0x1]
	mov	r1, #0x3f
	add	r0, r1, #0
	and	r0, r0, r3
	mov	r3, #0x40
	orr	r0, r0, r3
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x3]
	and	r1, r1, r0
	mov	r0, #0x80
	orr	r1, r1, r0
	strb	r1, [r2, #0x3]
	b	.L439
.L445:
	.align	2, 0
.L444:
	.word	0x7b06
	.word	sub_81681B4
	.word	gUnknown_0203BCAC
	.word	gSprites
.L438:
	ldr	r0, .L446
	ldr	r0, [r0]
	ldr	r2, .L446+0x4
	add	r0, r0, r2
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
.L439:
	mov	r0, r9
	mov	r1, sl
	bl	sub_81D32B0
	mov	r0, r9
	bl	LoadSpriteSheet
	mov	r0, sl
	bl	LoadSpritePalette
	add	sp, sp, #0x60
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L447:
	.align	2, 0
.L446:
	.word	gUnknown_0203BCAC
	.word	0x7b06
.Lfe37:
	.size	 sub_8167760,.Lfe37-sub_8167760
	.align	2, 0
	.globl	sub_8167930
	.type	 sub_8167930,function
	.thumb_func
sub_8167930:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L466
	ldr	r0, [r0]
	ldr	r2, .L466+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xb
	bls	.LCB3801
	b	.L462	@long jump
.LCB3801:
	lsl	r0, r0, #0x2
	ldr	r1, .L466+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L467:
	.align	2, 0
.L466:
	.word	gUnknown_0203BCAC
	.word	0x8048
	.word	.L463
	.align	2, 0
	.align	2, 0
.L463:
	.word	.L450
	.word	.L451
	.word	.L452
	.word	.L453
	.word	.L454
	.word	.L455
	.word	.L456
	.word	.L457
	.word	.L458
	.word	.L459
	.word	.L460
	.word	.L461
.L450:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r1, #0x88
	lsl	r1, r1, #0x6
	mov	r0, #0x3
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r1, .L468
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r1, #0x91
	lsl	r1, r1, #0x2
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L468+0x4
	mov	r0, #0x52
	bl	SetGpuReg
	b	.L449
.L469:
	.align	2, 0
.L468:
	.word	0x7040
	.word	0x40b
.L451:
	ldr	r4, .L470
	mov	r0, #0xd0
	lsl	r0, r0, #0x5
	bl	Alloc
	str	r0, [r4]
	ldr	r5, .L470+0x4
	mov	r4, #0xa0
	lsl	r4, r4, #0x3
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	ldr	r5, .L470+0x8
	add	r0, r4, #0
	bl	Alloc
	str	r0, [r5]
	b	.L449
.L471:
	.align	2, 0
.L470:
	.word	gUnknown_0203BCA4
	.word	gUnknown_0203BCA0
	.word	gUnknown_0203BCA8
.L452:
	ldr	r0, .L472
	ldr	r1, .L472+0x4
	b	.L465
.L473:
	.align	2, 0
.L472:
	.word	gUnknown_085DFB60
	.word	gUnknown_0203BCA8
.L453:
	ldr	r1, .L474
	mov	r0, #0x3
	mov	r2, #0xe0
	mov	r3, #0x0
	bl	LoadBgTiles
	b	.L449
.L475:
	.align	2, 0
.L474:
	.word	gUnknown_085DFA80
.L454:
	ldr	r0, .L476
	ldr	r1, [r0]
	mov	r2, #0xa0
	lsl	r2, r2, #0x3
	mov	r0, #0x3
	mov	r3, #0x0
	bl	LoadBgTilemap
	b	.L449
.L477:
	.align	2, 0
.L476:
	.word	gUnknown_0203BCA8
.L455:
	ldr	r0, .L478
	mov	r1, #0xd0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L478+0x4
	ldr	r0, [r0]
	ldr	r1, .L478+0x8
	add	r0, r0, r1
	ldr	r1, .L478+0xc
	strh	r1, [r0]
	b	.L449
.L479:
	.align	2, 0
.L478:
	.word	gUnknown_085DFA60
	.word	gUnknown_0203BCAC
	.word	0x7b0e
	.word	0xffb0
.L456:
	ldr	r0, .L480
	ldr	r1, .L480+0x4
.L465:
	ldr	r1, [r1]
	bl	LZ77UnCompVram
	b	.L449
.L481:
	.align	2, 0
.L480:
	.word	gUsePokeblockGraph_Gfx
	.word	gUnknown_0203BCA4
.L457:
	ldr	r0, .L482
	ldr	r1, .L482+0x4
	ldr	r1, [r1]
	bl	LZ77UnCompVram
	ldr	r0, .L482+0x8
	mov	r1, #0x20
	mov	r2, #0x20
	bl	LoadPalette
	b	.L449
.L483:
	.align	2, 0
.L482:
	.word	gUsePokeblockGraph_Tilemap
	.word	gUnknown_0203BCA0
	.word	gUsePokeblockGraph_Pal
.L458:
	ldr	r0, .L484
	ldr	r1, [r0]
	mov	r2, #0xd0
	lsl	r2, r2, #0x5
	mov	r3, #0xa0
	lsl	r3, r3, #0x2
	mov	r0, #0x1
	bl	LoadBgTiles
	b	.L449
.L485:
	.align	2, 0
.L484:
	.word	gUnknown_0203BCA4
.L459:
	ldr	r0, .L486
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, .L486+0x4
	mov	r0, #0xc
	str	r0, [sp]
	mov	r0, #0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0xd
	bl	CopyToBgTilemapBufferRect
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L449
.L487:
	.align	2, 0
.L486:
	.word	gUnknown_0203BCA0
	.word	gUsePokeblockNatureWin_Pal
.L460:
	ldr	r0, .L488
	ldr	r1, .L488+0x4
	ldr	r1, [r1]
	ldr	r2, .L488+0x8
	add	r1, r1, r2
	bl	LZ77UnCompVram
	b	.L449
.L489:
	.align	2, 0
.L488:
	.word	gUnknown_085DFC0C
	.word	gUnknown_0203BCAC
	.word	0x7304
.L461:
	ldr	r0, .L490
	ldr	r1, [r0]
	ldr	r0, .L490+0x4
	add	r1, r1, r0
	mov	r2, #0xa0
	lsl	r2, r2, #0x3
	mov	r0, #0x2
	mov	r3, #0x0
	bl	LoadBgTilemap
	ldr	r0, .L490+0x8
	mov	r1, #0x30
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L490+0xc
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x2
	bl	sub_81D21DC
	b	.L449
.L491:
	.align	2, 0
.L490:
	.word	gUnknown_0203BCAC
	.word	0x7304
	.word	gUnknown_086231E8
	.word	gUnknown_08623208
.L462:
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L464
.L449:
	ldr	r0, .L492
	ldr	r1, [r0]
	ldr	r2, .L492+0x4
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1
.L464:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L493:
	.align	2, 0
.L492:
	.word	gUnknown_0203BCAC
	.word	0x8048
.Lfe38:
	.size	 sub_8167930,.Lfe38-sub_8167930
	.align	2, 0
	.globl	sub_8167BA0
	.type	 sub_8167BA0,function
	.thumb_func
sub_8167BA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r7, .L498
	ldr	r3, [r7]
	ldr	r1, .L498+0x4
	add	r0, r3, r1
	ldrb	r1, [r0]
	ldr	r2, .L498+0x8
	add	r0, r3, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L495	@cond_branch
	lsl	r2, r4, #0x6
	ldr	r0, .L498+0xc
	add	r2, r2, r0
	add	r2, r3, r2
	mov	r0, #0x1
	str	r0, [sp]
	mov	r5, #0x0
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r7]
	ldr	r1, .L498+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_81672A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L498+0x10
	add	r0, r0, r1
	bl	GetNature
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, [r7]
	ldr	r6, .L498+0x14
	add	r0, r0, r6
	ldr	r1, .L498+0x18
	bl	StringCopy
	ldr	r1, .L498+0x1c
	lsl	r4, r4, #0x2
	add	r4, r4, r1
	ldr	r1, [r4]
	bl	StringCopy
	ldr	r0, .L498+0x20
	str	r0, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, [r7]
	add	r0, r0, r6
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
.L495:
	mov	r2, r8
	cmp	r2, #0
	beq	.L496	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	b	.L497
.L499:
	.align	2, 0
.L498:
	.word	gUnknown_0203BCAC
	.word	0x8041
	.word	0x8040
	.word	0x7b95
	.word	gPlayerParty
	.word	0x804a
	.word	gText_NatureSlash
	.word	gNatureNamePointers
	.word	sNatureTextColors
.L496:
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
.L497:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 sub_8167BA0,.Lfe39-sub_8167BA0
	.align	2, 0
	.type	 sub_8167CA0,function
	.thumb_func
sub_8167CA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0
	beq	.L501	@cond_branch
	ldr	r0, .L521
	ldr	r0, [r0]
	ldr	r1, .L521+0x4
	add	r0, r0, r1
	b	.L519
.L522:
	.align	2, 0
.L521:
	.word	gUnknown_0203BCAC
	.word	0x7fb5
.L501:
	ldr	r0, .L523
	ldr	r0, [r0]
	ldr	r2, .L523+0x4
	add	r0, r0, r2
.L519:
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r5, .L523
	ldr	r2, [r5]
	ldr	r3, .L523+0x8
	add	r0, r2, r3
	ldr	r4, .L523+0xc
	add	r1, r2, r4
	mov	r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	ldr	r4, .L523+0x10
	add	r1, r1, r4
	add	r1, r2, r1
	lsl	r3, r6, #0x2
	add	r3, r3, r6
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	add	r2, r2, r3
	bl	sub_81D1F84
	ldr	r4, [r5]
	ldr	r1, .L523+0x14
	add	r0, r4, r1
	ldrb	r1, [r0]
	ldr	r2, .L523+0x18
	mov	ip, r2
	add	r0, r4, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	eor	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	mov	r8, r0
	cmp	r7, #0
	beq	.L504	@cond_branch
	ldr	r3, .L523+0x4
	add	r0, r4, r3
	ldrb	r1, [r0]
	sub	r2, r2, #0x8b
	add	r0, r4, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	ldr	r4, .L523+0xc
	add	r1, r0, r4
	ldrb	r1, [r1]
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, r4
	strb	r6, [r0]
	ldr	r0, [r5]
	add	r2, r0, r2
	ldrb	r1, [r2]
	ldr	r2, .L523+0x1c
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r1, [r5]
	add	r3, r3, #0x8d
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L505	@cond_branch
	mov	r4, ip
	add	r0, r1, r4
	ldrb	r0, [r0]
.L505:
	sub	r2, r0, #0x1
	ldr	r0, .L523+0x14
	add	r1, r1, r0
	strb	r2, [r1]
	ldr	r1, .L523
	ldr	r3, [r1]
	add	r0, r3, r0
	ldrb	r0, [r0]
	add	r6, r1, #0
	cmp	r0, #0
	bne	.L507	@cond_branch
	ldr	r1, .L523+0x18
	add	r0, r3, r1
	ldrb	r0, [r0]
.L507:
	sub	r1, r0, #0x1
	b	.L513
.L524:
	.align	2, 0
.L523:
	.word	gUnknown_0203BCAC
	.word	0x7fb4
	.word	0x7c58
	.word	0x7fb3
	.word	0x7c6c
	.word	0x8041
	.word	0x8040
	.word	0x7fb6
.L504:
	ldr	r3, .L525
	add	r0, r4, r3
	ldrb	r1, [r0]
	ldr	r2, .L525+0x4
	add	r0, r4, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	ldr	r4, .L525+0x8
	add	r1, r0, r4
	ldrb	r1, [r1]
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, r4
	strb	r6, [r0]
	ldr	r0, [r5]
	add	r2, r0, r2
	ldrb	r1, [r2]
	ldr	r2, .L525+0xc
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r2, [r5]
	add	r3, r3, #0x8c
	add	r0, r2, r3
	ldrb	r1, [r0]
	add	r4, r4, #0x8d
	add	r0, r2, r4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bge	.L510	@cond_branch
	add	r3, r1, #0x1
	b	.L511
.L526:
	.align	2, 0
.L525:
	.word	0x7fb5
	.word	0x7fb4
	.word	0x7fb3
	.word	0x7fb6
.L510:
	mov	r3, #0x0
.L511:
	ldr	r1, .L527
	add	r0, r2, r1
	strb	r3, [r0]
	ldr	r2, .L527+0x4
	ldr	r3, [r2]
	add	r1, r3, r1
	ldrb	r1, [r1]
	ldr	r4, .L527+0x8
	add	r0, r3, r4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r6, r2, #0
	cmp	r1, r0
	bge	.L512	@cond_branch
	add	r1, r1, #0x1
	b	.L513
.L528:
	.align	2, 0
.L527:
	.word	0x8041
	.word	gUnknown_0203BCAC
	.word	0x8040
.L512:
	mov	r1, #0x0
.L513:
	ldr	r2, .L529
	add	r0, r3, r2
	strb	r1, [r0]
	add	r5, r6, #0
	ldr	r0, [r5]
	ldr	r3, .L529+0x4
	add	r1, r0, r3
	ldrb	r2, [r1]
	ldr	r4, .L529+0x8
	add	r1, r0, r4
	ldrb	r1, [r1]
	sub	r1, r1, #0x1
	eor	r2, r2, r1
	neg	r1, r2
	orr	r1, r1, r2
	lsr	r4, r1, #0x1f
	ldr	r1, .L529+0xc
	add	r0, r0, r1
	bl	sub_81D3520
	mov	r2, r8
	cmp	r2, #0
	bne	.L515	@cond_branch
	ldr	r0, [r5]
	ldr	r3, .L529+0x10
	add	r0, r0, r3
	ldr	r1, .L529+0x14
	b	.L520
.L530:
	.align	2, 0
.L529:
	.word	0x7b4c
	.word	0x8041
	.word	0x8040
	.word	0x7b1c
	.word	0x8044
	.word	sub_8167EA4
.L515:
	cmp	r4, #0
	bne	.L517	@cond_branch
	ldr	r0, [r5]
	ldr	r4, .L531
	add	r0, r0, r4
	ldr	r1, .L531+0x4
	b	.L520
.L532:
	.align	2, 0
.L531:
	.word	0x8044
	.word	sub_8167FA4
.L517:
	ldr	r0, [r6]
	ldr	r1, .L533
	add	r0, r0, r1
	ldr	r1, .L533+0x4
.L520:
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	0x8044
	.word	sub_8168048
.Lfe40:
	.size	 sub_8167CA0,.Lfe40-sub_8167CA0
	.align	2, 0
	.type	 sub_8167EA4,function
	.thumb_func
sub_8167EA4:
	push	{r4, r5, r6, lr}
	ldr	r4, .L549
	ldr	r1, [r4]
	ldr	r5, .L549+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L538	@cond_branch
	cmp	r0, #0x1
	bgt	.L545	@cond_branch
	cmp	r0, #0
	beq	.L537	@cond_branch
	b	.L536
.L550:
	.align	2, 0
.L549:
	.word	gUnknown_0203BCAC
	.word	0x8048
.L545:
	cmp	r0, #0x2
	beq	.L539	@cond_branch
	cmp	r0, #0x3
	beq	.L541	@cond_branch
	b	.L536
.L537:
	ldr	r2, .L551
	add	r0, r1, r2
	ldrb	r0, [r0]
	bl	sub_8167608
	b	.L547
.L552:
	.align	2, 0
.L551:
	.word	0x7fb3
.L538:
	ldr	r6, .L553
	add	r0, r1, r6
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	sub_8167BA0
	ldr	r1, [r4]
	ldr	r0, .L553+0x4
	add	r1, r1, r0
	b	.L548
.L554:
	.align	2, 0
.L553:
	.word	0x7fb3
	.word	0x8048
.L539:
	ldr	r2, .L555
	add	r0, r1, r2
	ldr	r6, .L555+0x4
	add	r1, r1, r6
	bl	sub_81D3178
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L536	@cond_branch
	ldr	r1, [r4]
	ldr	r2, .L555+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r6, .L555+0xc
	add	r1, r1, r6
	ldrb	r1, [r1]
	bl	sub_816753C
.L547:
	ldr	r1, [r4]
	add	r1, r1, r5
.L548:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L536
.L556:
	.align	2, 0
.L555:
	.word	0x7c58
	.word	0x7b0e
	.word	0x7b4c
	.word	0x7fb6
.L541:
	ldr	r2, .L557
	add	r0, r1, r2
	bl	sub_81D3464
	ldr	r3, [r4]
	ldr	r6, .L557+0x4
	add	r0, r3, r6
	ldrb	r1, [r0]
	ldr	r2, .L557+0x8
	add	r0, r3, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L542	@cond_branch
	sub	r6, r6, #0x8e
	add	r0, r3, r6
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	sub	r2, r2, #0x90
	add	r0, r3, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r6, .L557
	add	r0, r3, r6
	sub	r6, r6, #0xc
	add	r1, r3, r6
	ldrb	r1, [r1]
	bl	sub_81D3480
.L542:
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L546
.L558:
	.align	2, 0
.L557:
	.word	0x7b1c
	.word	0x8041
	.word	0x8040
.L536:
	mov	r0, #0x1
.L546:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 sub_8167EA4,.Lfe41-sub_8167EA4
	.align	2, 0
	.type	 sub_8167FA4,function
	.thumb_func
sub_8167FA4:
	push	{r4, r5, lr}
	ldr	r4, .L572
	ldr	r1, [r4]
	ldr	r5, .L572+0x4
	add	r2, r1, r5
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L563	@cond_branch
	cmp	r0, #0x1
	bgt	.L568	@cond_branch
	cmp	r0, #0
	beq	.L561	@cond_branch
	b	.L560
.L573:
	.align	2, 0
.L572:
	.word	gUnknown_0203BCAC
	.word	0x8048
.L568:
	cmp	r0, #0x2
	beq	.L564	@cond_branch
	cmp	r0, #0x3
	beq	.L565	@cond_branch
	b	.L560
.L561:
	ldr	r2, .L574
	add	r0, r1, r2
	ldr	r2, .L574+0x4
	add	r1, r1, r2
	bl	sub_81D31A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L560	@cond_branch
	b	.L570
.L575:
	.align	2, 0
.L574:
	.word	0x7c58
	.word	0x7b0e
.L563:
	ldr	r2, .L576
	add	r0, r1, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	sub_8167BA0
	ldr	r1, [r4]
	ldr	r0, .L576+0x4
	add	r1, r1, r0
	b	.L571
.L577:
	.align	2, 0
.L576:
	.word	0x7fb3
	.word	0x8048
.L564:
	ldr	r2, .L578
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r2, .L578+0x4
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	sub_816753C
.L570:
	ldr	r1, [r4]
	add	r1, r1, r5
.L571:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L560
.L579:
	.align	2, 0
.L578:
	.word	0x7b4c
	.word	0x7fb6
.L565:
	mov	r0, #0x0
	strb	r0, [r2]
	b	.L569
.L560:
	mov	r0, #0x1
.L569:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 sub_8167FA4,.Lfe42-sub_8167FA4
	.align	2, 0
	.type	 sub_8168048,function
	.thumb_func
sub_8168048:
	push	{r4, r5, r6, lr}
	ldr	r4, .L595
	ldr	r1, [r4]
	ldr	r5, .L595+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L584	@cond_branch
	cmp	r0, #0x1
	bgt	.L591	@cond_branch
	cmp	r0, #0
	beq	.L582	@cond_branch
	b	.L581
.L596:
	.align	2, 0
.L595:
	.word	gUnknown_0203BCAC
	.word	0x8048
.L591:
	cmp	r0, #0x2
	beq	.L585	@cond_branch
	cmp	r0, #0x3
	beq	.L587	@cond_branch
	b	.L581
.L582:
	ldr	r2, .L597
	add	r0, r1, r2
	bl	sub_81D2074
	ldr	r0, [r4]
	ldr	r6, .L597+0x4
	add	r0, r0, r6
	bl	sub_81D3150
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L581	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L597+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_8167608
	b	.L593
.L598:
	.align	2, 0
.L597:
	.word	0x7c58
	.word	0x7b0e
	.word	0x7fb3
.L584:
	ldr	r2, .L599
	add	r0, r1, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	sub_8167BA0
	ldr	r1, [r4]
	ldr	r6, .L599+0x4
	add	r1, r1, r6
	b	.L594
.L600:
	.align	2, 0
.L599:
	.word	0x7fb3
	.word	0x8048
.L585:
	ldr	r2, .L601
	add	r0, r1, r2
	ldr	r6, .L601+0x4
	add	r1, r1, r6
	bl	sub_81D3178
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L581	@cond_branch
	ldr	r1, [r4]
	ldr	r2, .L601+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r6, .L601+0xc
	add	r1, r1, r6
	ldrb	r1, [r1]
	bl	sub_816753C
.L593:
	ldr	r1, [r4]
	add	r1, r1, r5
.L594:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L581
.L602:
	.align	2, 0
.L601:
	.word	0x7c58
	.word	0x7b0e
	.word	0x7b4c
	.word	0x7fb6
.L587:
	ldr	r2, .L603
	add	r0, r1, r2
	bl	sub_81D3464
	ldr	r3, [r4]
	ldr	r6, .L603+0x4
	add	r0, r3, r6
	ldrb	r1, [r0]
	ldr	r2, .L603+0x8
	add	r0, r3, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L588	@cond_branch
	sub	r6, r6, #0x8e
	add	r0, r3, r6
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	sub	r2, r2, #0x90
	add	r0, r3, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r6, .L603
	add	r0, r3, r6
	sub	r6, r6, #0xc
	add	r1, r3, r6
	ldrb	r1, [r1]
	bl	sub_81D3480
.L588:
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L592
.L604:
	.align	2, 0
.L603:
	.word	0x7b1c
	.word	0x8041
	.word	0x8040
.L581:
	mov	r0, #0x1
.L592:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 sub_8168048,.Lfe43-sub_8168048
	.align	2, 0
	.globl	sub_8168168
	.type	 sub_8168168,function
	.thumb_func
sub_8168168:
	ldr	r1, .L606
	ldr	r1, [r1]
	ldr	r2, .L606+0x4
	add	r1, r1, r2
	ldrh	r1, [r1]
	add	r1, r1, #0x26
	strh	r1, [r0, #0x20]
	bx	lr
.L607:
	.align	2, 0
.L606:
	.word	gUnknown_0203BCAC
	.word	0x7b0e
.Lfe44:
	.size	 sub_8168168,.Lfe44-sub_8168168
	.align	2, 0
	.globl	sub_8168180
	.type	 sub_8168180,function
	.thumb_func
sub_8168180:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	ldr	r0, .L611
	ldr	r0, [r0]
	ldr	r3, .L611+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L609	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	b	.L610
.L612:
	.align	2, 0
.L611:
	.word	gUnknown_0203BCAC
	.word	0x8041
.L609:
	add	r0, r2, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L610:
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 sub_8168180,.Lfe45-sub_8168180
	.align	2, 0
	.globl	sub_81681B4
	.type	 sub_81681B4,function
	.thumb_func
sub_81681B4:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L617
	ldr	r0, [r0]
	ldr	r2, .L617+0x4
	add	r1, r0, r2
	ldrb	r1, [r1]
	sub	r2, r2, #0x1
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L614	@cond_branch
	mov	r0, #0x65
	b	.L616
.L618:
	.align	2, 0
.L617:
	.word	gUnknown_0203BCAC
	.word	0x8041
.L614:
	mov	r0, #0x66
.L616:
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r4, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 sub_81681B4,.Lfe46-sub_81681B4
	.align	2, 0
	.globl	sub_81681F4
	.type	 sub_81681F4,function
	.thumb_func
sub_81681F4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L622
	add	r0, r0, r1
	mov	r1, #0x30
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L622+0x4
	ldr	r0, [r0]
	ldr	r3, .L622+0x8
	add	r1, r0, r3
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	sub	r3, r3, #0x3
	add	r0, r0, r3
	add	r4, r0, r1
	cmp	r2, #0xff
	beq	.L620	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x1d
	bl	__udivsi3
	b	.L621
.L623:
	.align	2, 0
.L622:
	.word	gPlayerParty
	.word	gUnknown_0203BCAC
	.word	0x7fb3
.L620:
	mov	r0, #0x9
.L621:
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 sub_81681F4,.Lfe47-sub_81681F4
	.align	2, 0
	.type	 sub_8168248,function
	.thumb_func
sub_8168248:
	push	{lr}
	add	sp, sp, #-0x10
	ldr	r0, .L625
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	ldr	r0, .L625+0x4
	str	r0, [sp]
	ldr	r1, .L625+0x8
	ldr	r0, [sp, #0x4]
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	orr	r0, r0, r1
	ldr	r1, .L625+0xc
	and	r0, r0, r1
	add	r1, r1, #0x1
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadCompressedSpriteSheet
	add	r0, sp, #0x8
	bl	LoadSpritePalette
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	gSpritePalette_085DFDB8
	.word	gUsePokeblockCondition_Gfx
	.word	-0x10000
	.word	0xffff
.Lfe48:
	.size	 sub_8168248,.Lfe48-sub_8168248
	.align	2, 0
	.type	 sub_8168294,function
	.thumb_func
sub_8168294:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L634
	ldr	r0, [r0]
	ldr	r1, .L634+0x4
	add	r7, r0, r1
	ldr	r0, .L634+0x8
	mov	sl, r0
	mov	r6, #0x0
	mov	r1, #0x40
	mov	r9, r1
	mov	r0, #0x60
	neg	r0, r0
	mov	r8, r0
.L631:
	mov	r5, r9
	mul	r5, r5, r6
	mov	r0, r8
	add	r1, r0, r5
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x11
	lsl	r2, r0, #0x10
	mov	r0, sl
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L630	@cond_branch
	ldr	r0, .L634+0xc
	lsl	r4, r1, #0x4
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	mov	r1, #0x8
	strh	r1, [r4, #0x2e]
	mov	r0, #0x20
	orr	r5, r5, r0
	strh	r5, [r4, #0x30]
	strh	r6, [r4, #0x32]
	lsl	r1, r6, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	lsl	r0, r6, #0x2
	add	r0, r0, r7
	str	r4, [r0]
.L630:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x1
	bls	.L631	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L635:
	.align	2, 0
.L634:
	.word	gUnknown_0203BCAC
	.word	0x7b44
	.word	gSpriteTemplate_085DFDA0
	.word	gSprites
.Lfe49:
	.size	 sub_8168294,.Lfe49-sub_8168294
	.align	2, 0
	.type	 sub_8168328,function
	.thumb_func
sub_8168328:
	push	{r4, r5, lr}
	ldr	r4, .L644
	ldr	r0, [r4]
	ldr	r5, .L644+0x4
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L638	@cond_branch
	cmp	r0, #0x1
	beq	.L639	@cond_branch
	b	.L643
.L645:
	.align	2, 0
.L644:
	.word	gUnknown_0203BCAC
	.word	0x8048
.L638:
	bl	sub_8168248
	ldr	r1, [r4]
	ldr	r0, .L646
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L642
.L647:
	.align	2, 0
.L646:
	.word	0x8048
.L639:
	bl	sub_8168294
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0]
.L643:
	mov	r0, #0x0
.L642:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 sub_8168328,.Lfe50-sub_8168328
	.align	2, 0
	.globl	sub_8168374
	.type	 sub_8168374,function
	.thumb_func
sub_8168374:
	push	{r4, lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x20]
	ldrh	r1, [r2, #0x2e]
	add	r3, r0, r1
	strh	r3, [r2, #0x20]
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	cmp	r4, r1
	bgt	.L652	@cond_branch
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r1
	bge	.L650	@cond_branch
	cmp	r4, r1
	blt	.L649	@cond_branch
.L652:
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r1
	bgt	.L649	@cond_branch
.L650:
	ldrh	r0, [r2, #0x30]
	strh	r0, [r2, #0x20]
	ldr	r0, .L653
	str	r0, [r2, #0x1c]
.L649:
	pop	{r4}
	pop	{r0}
	bx	r0
.L654:
	.align	2, 0
.L653:
	.word	SpriteCallbackDummy
.Lfe51:
	.size	 sub_8168374,.Lfe51-sub_8168374
.text
	.align	2, 0

