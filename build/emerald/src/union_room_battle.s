@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_02022C6C
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_02022C6C,object
	.size	 gUnknown_02022C6C,4
gUnknown_02022C6C:
	.word	0x0
	.globl	gWirelessInfoScreenPal
	.section .rodata
	.align	1, 0
	.type	 gWirelessInfoScreenPal,object
gWirelessInfoScreenPal:
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x7fc9
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x7fc9
	.short	0x7347
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x7fc9
	.short	0x7347
	.short	0x66c6
	.short	0x3080
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x7fc9
	.short	0x7347
	.short	0x66c6
	.short	0x5a45
	.short	0x3080
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x7fc9
	.short	0x7347
	.short	0x66c6
	.short	0x5a45
	.short	0x51e3
	.short	0x3080
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x7fc9
	.short	0x7347
	.short	0x66c6
	.short	0x5a45
	.short	0x51e3
	.short	0x4562
	.short	0x3080
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x7fc9
	.short	0x7347
	.short	0x66c6
	.short	0x5a45
	.short	0x51e3
	.short	0x4562
	.short	0x38e1
	.short	0x3080
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x7347
	.short	0x66c6
	.short	0x5a45
	.short	0x51e3
	.short	0x4562
	.short	0x38e1
	.short	0x38e1
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x66c6
	.short	0x5a45
	.short	0x51e3
	.short	0x4562
	.short	0x38e1
	.short	0x38e1
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x5a45
	.short	0x51e3
	.short	0x4562
	.short	0x38e1
	.short	0x38e1
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x51e3
	.short	0x4562
	.short	0x38e1
	.short	0x38e1
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x4562
	.short	0x38e1
	.short	0x38e1
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x38e1
	.short	0x38e1
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.short	0x0
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x2d6b
	.short	0x1ce7
	.short	0x1f5
	.short	0x2d6b
	.short	0x1ce7
	.short	0x5294
	.short	0x2df
	.short	0x35ad
	.short	0x2529
	.size	 gWirelessInfoScreenPal,512
	.globl	gWirelessInfoScreenGfx
	.align	2, 0
	.type	 gWirelessInfoScreenGfx,object
gWirelessInfoScreenGfx:
	.word	0x80010
	.word	-0x11011f8
	.word	-0xfcef12
	.word	-0xbf0001
	.word	-0x1121f900
	.word	-0x222111
	.word	-0x222200fc
	.word	0x300efee
	.word	-0x22a62221
	.word	0x10ef1a00
	.word	-0x22e0effd
	.word	-0x4ffe0f23
	.word	0x10fe1a00
	.word	-0x42e06ffd
	.word	0xcbbbbbb
	.word	-0x45545543
	.word	0x5f900310
	.word	-0x33ca3323
	.word	0x310cc
	.word	0x1a00bb1e
	.word	-0x4fcef56
	.word	0x1a005f90
	.word	0x1f100120
	.word	0x10ab1a00
	.word	-0x21a06ffd
	.word	0x1a001f90
	.word	-0x6ffcef46
	.word	0x501f905f
	.word	0xffff5f
	.word	0x10c710c3
	.word	-0xff40ffd
	.word	-0x6ffe2f31
	.word	0x3f0bf0cb
	.word	0x6b90baab
	.word	0x7300bf0
	.word	0xbf0cb50
	.word	0x50fd0730
	.word	0xbf0cb
	.word	0x1b790df
	.word	-0x2164ce6d
	.word	-0x1c3fd00
	.word	-0x4f6c0e22
	.word	-0xfe0efff
	.word	-0x3444449
	.word	-0x480fe070
	.word	-0x58bee100
	.word	-0x480fe0f0
	.word	0x51ffbbbb
	.word	-0xfe0ef99
	.word	-0xfe04f49
	.word	-0xee04fa1
	.word	-0xf44f69
	.word	0xbb0bff0
	.word	0xbb05ff0
	.word	0xbb0bff0
	.word	0xbb0bff0
	.word	-0x4f680f01
	.word	-0x4f680ff5
	.word	-0x4f680ff5
	.word	-0x4f680ff5
	.word	-0x680f00f5
	.word	0x1bf20bb0
	.word	0x17131b72
	.word	-0x48eea0e
	.word	-0xd0088ed
	.word	0x131f701b
	.word	0x721bf277
	.word	-0xda0efe5
	.word	-0x2248ee5
	.word	0x1bf25f10
	.word	0x5ff01f70
	.word	0x5f301bc2
	.word	0x703b008b
	.word	0x1003108a
	.word	-0x77c02ff5
	.word	0xf888888
	.word	0x22811811
	.word	0xb100310
	.word	0x13103fd0
	.word	0x3382280f
	.word	-0x2ffcefc8
	.word	0x109f101f
	.word	0x44830e13
	.word	0x3108448
	.word	0x5f501fd0
	.word	-0x7aa7e3ab
	.word	-0xffcef9a
	.word	-0x47a0dfa1
	.word	0x77861c68
	.word	0x100310a8
	.word	0x5fd00b
	.word	0x1f0e900
	.word	-0x204bfe70
	.word	-0x23a5fe24
	.word	-0x200b23
	.word	-0x64bec0bb
	.word	0x1a008611
	.word	0x3f900320
	.word	-0x3eef8f0
	.word	0xfddd2f
	.word	0x700ed2b
	.word	0x2b90bd05
	.word	-0x4580f410
	.word	0x2710e921
	.word	0xbf00330
	.word	-0x5cee840e
	.word	0x43ffa730
	.word	-0x6da81f21
	.word	0x1057a043
	.word	-0x7f64ef6d
	.word	-0xc00f4d
	.word	-0x680fb430
	.word	0x37f00b90
	.word	0x37f00bb0
	.word	-0x2ceef450
	.word	0x6687780e
	.word	-0xdfcef98
	.word	-0x79e0cde1
	.word	0x10fc01fb
	.word	0x301ff203
	.word	0x333a023f
	.word	0x1ff20310
	.word	0x387f3287
	.word	0x10282283
	.word	0x305ff003
	.word	0x2827f5f
	.word	-0xffcef44
	.word	-0xee0cca1
	.word	0x407b317b
	.word	0x7bf1f81f
	.word	-0xcc84bf
	.word	0x2f927bf1
	.size	 gWirelessInfoScreenGfx,528
	.globl	gWirelessInfoScreenTilemap
	.align	2, 0
	.type	 gWirelessInfoScreenTilemap,object
gWirelessInfoScreenTilemap:
	.word	0x80010
	.word	0x1000000
	.word	0x3000200
	.word	0x40700
	.word	-0xff9fffb
	.word	0x5f005
	.word	0x2c1105
	.word	0x2e35002d
	.word	0x1000000
	.word	0x8000700
	.word	0xa000900
	.word	0xb1d00
	.word	-0xffa0ff4
	.word	0x2f054005
	.word	0x30403500
	.word	0xd3f20
	.word	0xf000e
	.word	0x11001001
	.word	0x13001200
	.word	-0xf3afa10
	.word	0x31050005
	.word	0x35003200
	.word	-0x1c0dfcd
	.word	0x5f0bff0
	.word	-0x400f4010
	.word	0x5f0a7f0
	.word	0x2000bff0
	.word	0x9001400
	.word	0x160015
	.word	0x18003a17
	.word	0x5f005f0
	.word	0x340540
	.word	0x20a03535
	.word	0x900193f
	.word	0x1b001a
	.word	0x1d003a1c
	.word	0x5f005f0
	.word	0x360540
	.word	-0xf00c8cb
	.word	-0xffa0f41
	.word	-0xf400ffb
	.word	-0xffa0f41
	.word	-0x400f41
	.word	0x5f005f0
	.word	-0x400f4010
	.word	-0x400ffa10
	.word	-0x580f4010
	.word	-0xffa0f01
	.word	-0xf400f41
	.word	-0xffa0ffb
	.word	-0xf580f41
	.word	-0x400f00fb
	.word	0x5f0bff0
	.word	-0x400ffa10
	.word	0x5f0a1f0
	.word	-0xf004010
	.word	-0xffa0f41
	.word	-0xf400ffb
	.word	-0xffa0f41
	.word	-0x1f400f41
	.word	0x5f005f0
	.word	0x1ebfe0
	.word	0x20001f
	.word	0x22002100
	.word	0x24002300
	.word	0x25050080
	.word	0x27002600
	.word	0x82800
	.word	0x202a0029
	.word	0x39003811
	.word	0x3a0003
	.word	0x203c003b
	.word	0x1623301d
	.word	0x3e003d
	.word	0x3f443f35
	.word	0xf800180
	.word	-0xfff5000
	.word	0x1a001f0
	.word	0x17035f0
	.word	-0x6fffafe1
	.word	0x3ff031f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf3ffe10
	.word	0x11001
	.size	 gWirelessInfoScreenTilemap,404
	.globl	gUnknown_082F0D34
	.align	2, 0
	.type	 gUnknown_082F0D34,object
	.size	 gUnknown_082F0D34,8
gUnknown_082F0D34:
	.byte	0xf8
	.byte	0x1
	.space	2
	.byte	0x81
	.byte	0x10
	.space	2
	.globl	gUnknown_082F0D3C
	.align	2, 0
	.type	 gUnknown_082F0D3C,object
gUnknown_082F0D3C:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x18
	.byte	0x3
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x15
	.byte	0xf
	.byte	0xf
	.short	0x49
	.byte	0x0
	.byte	0x18
	.byte	0x4
	.byte	0x3
	.byte	0xf
	.byte	0xf
	.short	0x184
	.byte	0xff
	.space	7
	.size	 gUnknown_082F0D3C,32
	.globl	gUnknown_082F0D5C
	.align	2, 0
	.type	 gUnknown_082F0D5C,object
gUnknown_082F0D5C:
	.word	gText_WirelessCommStatus
	.word	gText_PeopleTrading
	.word	gText_PeopleBattling
	.word	gText_PeopleInUnionRoom
	.word	gText_PeopleCommunicating
	.size	 gUnknown_082F0D5C,20
	.globl	gUnknown_082F0D70
	.type	 gUnknown_082F0D70,object
gUnknown_082F0D70:
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.byte	0x4
	.byte	0x0
	.byte	0x2
	.byte	0x6
	.byte	0x3
	.byte	0x2
	.byte	0x7
	.byte	0x3
	.byte	0x2
	.byte	0x9
	.byte	0x3
	.byte	0x0
	.byte	0xa
	.byte	0x3
	.byte	0x0
	.byte	0xb
	.byte	0x3
	.byte	0x0
	.byte	0xc
	.byte	0xff
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x10
	.byte	0x3
	.byte	0x0
	.byte	0xf
	.byte	0x3
	.byte	0x0
	.byte	0x40
	.byte	0x2
	.byte	0x1
	.byte	0x41
	.byte	0x2
	.byte	0x2
	.byte	0x44
	.byte	0x2
	.byte	0x2
	.byte	0x45
	.byte	0x2
	.byte	0x0
	.byte	0x48
	.byte	0x2
	.byte	0x2
	.byte	0x54
	.byte	0x2
	.byte	0x1
	.byte	0x53
	.byte	0x2
	.byte	0x2
	.byte	0x51
	.byte	0x2
	.byte	0x1
	.byte	0x52
	.byte	0x2
	.byte	0x1
	.byte	0x15
	.byte	0x3
	.byte	0x2
	.byte	0x16
	.byte	0x3
	.byte	0x2
	.byte	0x17
	.byte	0x3
	.byte	0x0
	.byte	0x18
	.byte	0x3
	.byte	0x0
	.byte	0x19
	.byte	0x3
	.byte	0x0
	.byte	0x1a
	.byte	0x3
	.byte	0x0
	.byte	0x1b
	.byte	0x3
	.byte	0x0
	.byte	0x1c
	.byte	0x1
	.byte	0x2
	.byte	0xe
	.byte	0x1
	.byte	0x2
	.size	 gUnknown_082F0D70,93
	.globl	gUnknown_082F0DD0
	.align	2, 0
	.type	 gUnknown_082F0DD0,object
	.size	 gUnknown_082F0DD0,4
gUnknown_082F0DD0:
	.byte	0xfc
	.byte	0x1
	.space	2
	.globl	gUnknown_082F0DD4
	.align	2, 0
	.type	 gUnknown_082F0DD4,object
gUnknown_082F0DD4:
	.byte	0x0
	.byte	0x3
	.byte	0xf
	.byte	0x18
	.byte	0x4
	.byte	0xe
	.short	0x14
	.byte	0xff
	.space	7
	.size	 gUnknown_082F0DD4,16
	.globl	gUnknown_082F0DE4
	.type	 gUnknown_082F0DE4,object
gUnknown_082F0DE4:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 gUnknown_082F0DE4,3
.text
	.align	2, 0
	.globl	sub_801A3F4
	.type	 sub_801A3F4,function
	.thumb_func
sub_801A3F4:
	push	{lr}
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L3	@cond_branch
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
.L3:
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 sub_801A3F4,.Lfe1-sub_801A3F4
	.align	2, 0
	.globl	sub_801A418
	.type	 sub_801A418,function
	.thumb_func
sub_801A418:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 sub_801A418,.Lfe2-sub_801A418
	.align	2, 0
	.globl	sub_801A42C
	.type	 sub_801A42C,function
	.thumb_func
sub_801A42C:
	push	{lr}
	ldr	r0, .L6
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	sub_801A43C
.Lfe3:
	.size	 sub_801A42C,.Lfe3-sub_801A42C
	.align	2, 0
	.globl	sub_801A43C
	.type	 sub_801A43C,function
	.thumb_func
sub_801A43C:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r5, .L9
	mov	r0, #0x6c
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L9+0x4
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, .L9+0x8
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndLoadBgGfxUsingHeap
	ldr	r1, .L9+0xc
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r0, .L9+0x10
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	bl	m4aSoundVSyncOn
	ldr	r0, .L9+0x14
	bl	SetVBlankCallback
	ldr	r0, .L9+0x18
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, [r5]
	add	r1, r1, #0x60
	strb	r0, [r1]
	bl	sub_8013C40
	ldr	r1, [r5]
	add	r1, r1, #0x61
	strb	r0, [r1]
	ldr	r1, [r5]
	mov	r0, #0x1
	str	r0, [r1, #0x1c]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r0, .L9+0x1c
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0xf0
	bl	Menu_LoadStdPalAt
	bl	DynamicPlaceholderTextUtil_Reset
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L9+0x20
	bl	SetMainCallback2
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gUnknown_03000DAC
	.word	gUnknown_082F0D34
	.word	gWirelessInfoScreenGfx
	.word	gWirelessInfoScreenTilemap
	.word	gUnknown_082F0D3C
	.word	sub_801A418
	.word	sub_801A6C0
	.word	gWirelessInfoScreenPal
	.word	sub_801A3F4
.Lfe4:
	.size	 sub_801A43C,.Lfe4-sub_801A43C
	.align	2, 0
	.globl	sub_801A584
	.type	 sub_801A584,function
	.thumb_func
sub_801A584:
	push	{r4, lr}
	bl	FreeAllWindowBuffers
	mov	r4, #0x0
.L15:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	GetBgTilemapBuffer
	bl	Free
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L15	@cond_branch
	ldr	r0, .L17
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L17+0x4
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	gUnknown_03000DAC
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe5:
	.size	 sub_801A584,.Lfe5-sub_801A584
	.align	2, 0
	.globl	sub_801A5BC
	.type	 sub_801A5BC,function
	.thumb_func
sub_801A5BC:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	ble	.L20	@cond_branch
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xe
	bne	.L21	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
.L21:
	mov	r0, #0x0
	strh	r0, [r2]
.L20:
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	add	r0, r0, #0x2
	lsl	r0, r0, #0x5
	ldr	r1, .L22
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0x10
	bl	LoadPalette
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	gWirelessInfoScreenPal
.Lfe6:
	.size	 sub_801A5BC,.Lfe6-sub_801A5BC
	.align	2, 0
	.globl	sub_801A600
	.type	 sub_801A600,function
	.thumb_func
sub_801A600:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r5, .L30
	ldr	r4, [r5]
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0xc0
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	sub_801A8B0
	mov	r1, #0x0
.L28:
	add	r4, r1, #0x1
	lsl	r0, r4, #0x2
	add	r0, r0, r5
	ldr	r2, [r0]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x14
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	sub_801A8B0
	add	r1, r4, #0
	cmp	r4, #0x2
	ble	.L28	@cond_branch
	ldr	r1, .L30
	add	r0, r4, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	lsl	r0, r4, #0x4
	sub	r0, r0, r4
	lsl	r0, r0, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x14
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, #0x0
	bl	sub_801A8B0
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	gUnknown_082F0D5C
.Lfe7:
	.size	 sub_801A600,.Lfe7-sub_801A600
	.align	2, 0
	.globl	sub_801A6C0
	.type	 sub_801A6C0,function
	.thumb_func
sub_801A6C0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L56
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r2, r1, #0
	cmp	r0, #0x5
	bls	.LCB418
	b	.L33	@long jump
.LCB418:
	lsl	r0, r0, #0x2
	ldr	r1, .L56+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L57:
	.align	2, 0
.L56:
	.word	gTasks
	.word	.L52
	.align	2, 0
	.align	2, 0
.L52:
	.word	.L34
	.word	.L35
	.word	.L36
	.word	.L38
	.word	.L49
	.word	.L50
.L34:
	bl	sub_801A600
	ldr	r0, .L58
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L33
.L59:
	.align	2, 0
.L58:
	.word	gTasks
.L35:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	b	.L54
.L36:
	ldr	r0, .L60
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB481
	b	.L33	@long jump
.LCB481:
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	b	.L55
.L61:
	.align	2, 0
.L60:
	.word	gPaletteFade
.L38:
	ldr	r0, .L62
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x10
	add	r2, r0, #0
	add	r2, r2, #0x20
	add	r3, r0, #0
	add	r3, r3, #0x61
	ldrb	r3, [r3]
	bl	sub_801AA30
	lsl	r1, r5, #0x2
	mov	r8, r1
	cmp	r0, #0
	beq	.L39	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
	ldr	r6, .L62+0x4
	mov	r7, #0x80
	lsl	r7, r7, #0x14
.L43:
	ldr	r0, .L62
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	cmp	r4, #0x3
	beq	.L44	@cond_branch
	lsr	r0, r7, #0x18
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	add	r2, r6, #0
	mov	r3, #0xc
	bl	sub_801A8B0
	b	.L42
.L63:
	.align	2, 0
.L62:
	.word	gUnknown_03000DAC
	.word	gStringVar4
.L44:
	mov	r0, #0x62
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r1, #0x1
	add	r2, r6, #0
	mov	r3, #0xc
	bl	sub_801A8B0
.L42:
	mov	r2, #0xf0
	lsl	r2, r2, #0x15
	add	r7, r7, r2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L43	@cond_branch
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x3
	bl	CopyWindowToVram
.L39:
	ldr	r0, .L64
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L48	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L47	@cond_branch
.L48:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L64+0x4
	ldr	r0, .L64+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x61
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r1, #0xff
	strh	r1, [r0, #0x26]
	mov	r0, r8
	add	r1, r0, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L47:
	mov	r2, r8
	add	r1, r2, r5
	lsl	r1, r1, #0x3
	ldr	r0, .L64+0xc
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0xe
	add	r1, r1, #0x10
	bl	sub_801A5BC
	b	.L33
.L65:
	.align	2, 0
.L64:
	.word	gMain
	.word	gTasks
	.word	gUnknown_03000DAC
	.word	gTasks+0x8
.L49:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L54:
	ldr	r1, .L66
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
.L55:
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	b	.L33
.L67:
	.align	2, 0
.L66:
	.word	gTasks
.L50:
	ldr	r0, .L68
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L33	@cond_branch
	ldr	r0, .L68+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L33:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L69:
	.align	2, 0
.L68:
	.word	gPaletteFade
	.word	sub_801A584
.Lfe8:
	.size	 sub_801A6C0,.Lfe8-sub_801A6C0
	.align	2, 0
	.type	 sub_801A8B0,function
	.thumb_func
sub_801A8B0:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x18
	mov	ip, r2
	ldr	r2, [sp, #0x2c]
	ldr	r4, [sp, #0x30]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r3, r3, #0x18
	lsr	r5, r3, #0x18
	lsl	r2, r2, #0x18
	lsr	r3, r2, #0x18
	lsl	r4, r4, #0x18
	lsr	r0, r4, #0x18
	cmp	r0, #0x4
	bhi	.L71	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L80
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L81:
	.align	2, 0
.L80:
	.word	.L77
	.align	2, 0
	.align	2, 0
.L77:
	.word	.L72
	.word	.L73
	.word	.L74
	.word	.L75
	.word	.L76
.L72:
	add	r1, sp, #0x14
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x2
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L79
.L73:
	add	r1, sp, #0x14
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	mov	r0, #0x3
	b	.L79
.L74:
	add	r1, sp, #0x14
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
	mov	r0, #0x5
	b	.L79
.L75:
	add	r1, sp, #0x14
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x7
	strb	r0, [r1, #0x1]
	mov	r0, #0x6
	b	.L79
.L76:
	add	r1, sp, #0x14
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	mov	r0, #0x2
.L79:
	strb	r0, [r1, #0x2]
.L71:
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0xc]
	mov	r0, ip
	str	r0, [sp, #0x10]
	add	r0, r7, #0
	add	r1, r6, #0
	add	r2, r5, #0
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 sub_801A8B0,.Lfe9-sub_801A8B0
	.align	2, 0
	.globl	sub_801A960
	.type	 sub_801A960,function
	.thumb_func
sub_801A960:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	ip, r0
	add	r7, r1, #0
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r8, r0
	mov	r4, #0x0
	ldr	r0, .L99
	mov	r9, r0
	mov	r1, #0x1
	add	r1, r1, r9
	mov	sl, r1
	mov	r3, ip
	add	r3, r3, #0x4
	str	r3, [sp]
.L86:
	lsl	r0, r4, #0x1
	add	r2, r0, r4
	mov	r3, r9
	add	r1, r2, r3
	add	r5, r0, #0
	add	r6, r4, #0x1
	ldrb	r1, [r1]
	cmp	r8, r1
	bne	.L85	@cond_branch
	mov	r0, ip
	ldrb	r1, [r0, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L85	@cond_branch
	mov	r0, r9
	add	r0, r0, #0x2
	add	r3, r2, r0
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L89	@cond_branch
	mov	r2, #0x0
	mov	r1, #0x0
	ldr	r3, [sp]
.L93:
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L92	@cond_branch
	add	r2, r2, #0x1
.L92:
	add	r1, r1, #0x1
	cmp	r1, #0x3
	ble	.L93	@cond_branch
	add	r2, r2, #0x1
	add	r0, r5, r4
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	b	.L98
.L100:
	.align	2, 0
.L99:
	.word	gUnknown_082F0D70
.L89:
	mov	r1, sl
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r3]
.L98:
	ldr	r0, [r1]
	add	r0, r0, r2
	str	r0, [r1]
.L85:
	add	r4, r6, #0
	cmp	r4, #0x1e
	bls	.L86	@cond_branch
	mov	r0, r8
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 sub_801A960,.Lfe10-sub_801A960
	.align	2, 0
	.globl	sub_801AA08
	.type	 sub_801AA08,function
	.thumb_func
sub_801AA08:
	push	{r4, lr}
	mov	r4, #0x0
	add	r3, r1, #0
	add	r2, r0, #0
.L105:
	ldr	r1, [r2]
	ldr	r0, [r3]
	cmp	r1, r0
	beq	.L104	@cond_branch
	mov	r0, #0x1
	b	.L108
.L104:
	add	r3, r3, #0x4
	add	r2, r2, #0x4
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L105	@cond_branch
	mov	r0, #0x0
.L108:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 sub_801AA08,.Lfe11-sub_801AA08
	.align	2, 0
	.globl	sub_801AA30
	.type	 sub_801AA30,function
	.thumb_func
sub_801AA30:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	add	r6, r0, #0
	mov	r9, r1
	add	r5, r2, #0
	lsl	r4, r3, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r8, r0
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L120
	add	r7, r0, r1
	mov	r4, #0x0
.L113:
	lsl	r1, r4, #0x5
	ldr	r0, [r7]
	add	r0, r0, r1
	mov	r1, sp
	bl	sub_801A960
	add	r1, r0, #0
	ldr	r0, [r5]
	cmp	r1, r0
	beq	.L112	@cond_branch
	str	r1, [r5]
	mov	r2, #0x1
	mov	r8, r2
.L112:
	add	r5, r5, #0x4
	add	r4, r4, #0x1
	cmp	r4, #0xf
	ble	.L113	@cond_branch
	mov	r0, sp
	mov	r1, r9
	bl	sub_801AA08
	cmp	r0, #0
	bne	.L116	@cond_branch
	mov	r3, r8
	cmp	r3, #0x1
	beq	.L118	@cond_branch
	mov	r0, #0x0
	b	.L119
.L121:
	.align	2, 0
.L120:
	.word	gTasks+0x8
.L116:
	add	r1, r6, #0
	mov	r0, sp
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldr	r0, [r0]
	str	r0, [r1]
	mov	r1, r9
	mov	r0, sp
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r0, [r6]
	ldr	r1, [r6, #0x4]
	add	r0, r0, r1
	ldr	r1, [r6, #0x8]
	add	r0, r0, r1
	ldr	r1, [r6, #0xc]
	add	r0, r0, r1
	str	r0, [r6, #0xc]
.L118:
	mov	r0, #0x1
.L119:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 sub_801AA30,.Lfe12-sub_801AA30
	.align	2, 0
	.globl	sub_801AAD4
	.type	 sub_801AAD4,function
	.thumb_func
sub_801AAD4:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0xa
	bl	sub_8014210
	mov	r4, #0x0
	mov	r7, #0x64
	ldr	r6, .L138
	ldr	r5, .L138+0x4
.L126:
	ldr	r0, .L138+0x8
	add	r0, r4, r0
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	mov	r1, r0
	mul	r1, r1, r7
	add	r1, r1, r6
	add	r0, r5, #0
	mov	r2, #0x64
	bl	memcpy
	add	r5, r5, #0x64
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L126	@cond_branch
	ldr	r4, .L138
	mov	r0, #0xfa
	lsl	r0, r0, #0x1
	add	r5, r4, r0
.L131:
	add	r0, r4, #0
	bl	ZeroMonData
	add	r4, r4, #0x64
	cmp	r4, r5
	ble	.L131	@cond_branch
	ldr	r4, .L138
	mov	r5, #0x0
	add	r6, r4, #0
	add	r6, r6, #0x64
.L136:
	ldr	r1, .L138+0x4
	add	r1, r5, r1
	add	r0, r4, #0
	mov	r2, #0x64
	bl	memcpy
	add	r4, r4, #0x64
	add	r5, r5, #0x64
	cmp	r4, r6
	ble	.L136	@cond_branch
	mov	r0, #0x32
	bl	IncrementGameStat
	bl	CalculatePlayerPartyCount
	ldr	r0, .L138+0xc
	mov	r2, #0xc0
	lsl	r2, r2, #0x4
	add	r1, r2, #0
	strh	r1, [r0]
	ldr	r0, .L138+0x10
	bl	SetMainCallback2
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L139:
	.align	2, 0
.L138:
	.word	gPlayerParty
	.word	gEnemyParty
	.word	gSelectedOrderFromParty
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
.Lfe13:
	.size	 sub_801AAD4,.Lfe13-sub_801AAD4
	.align	2, 0
	.globl	sub_801AB68
	.type	 sub_801AB68,function
	.thumb_func
sub_801AB68:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	add	r5, r0, #0
	add	r7, r1, #0
	add	r6, r2, #0
	ldr	r4, [sp, #0x38]
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	mov	r9, r0
	mov	r1, #0x1
	mov	sl, r1
	ldr	r0, .L141
	mov	r8, r0
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	orr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	str	r3, [sp, #0x14]
	bl	FillWindowPixelBuffer
	mov	r1, r9
	str	r1, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp, #0xc]
	str	r7, [sp, #0x10]
	add	r0, r5, #0
	mov	r1, #0x1
	add	r2, r6, #0
	ldr	r3, [sp, #0x14]
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gUnknown_082F0DE4
.Lfe14:
	.size	 sub_801AB68,.Lfe14-sub_801AB68
	.align	2, 0
	.globl	sub_801ABDC
	.type	 sub_801ABDC,function
	.thumb_func
sub_801ABDC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L145	@cond_branch
	cmp	r0, #0x1
	beq	.L146	@cond_branch
	b	.L144
.L145:
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd
	bl	DrawTextBorderOuter
	str	r5, [sp]
	mov	r0, #0x0
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_801AB68
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L144
.L146:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L144	@cond_branch
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L150
.L144:
	mov	r0, #0x0
.L150:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 sub_801ABDC,.Lfe15-sub_801ABDC
	.align	2, 0
	.globl	sub_801AC40
	.type	 sub_801AC40,function
	.thumb_func
sub_801AC40:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 sub_801AC40,.Lfe16-sub_801AC40
	.align	2, 0
	.globl	sub_801AC54
	.type	 sub_801AC54,function
	.thumb_func
sub_801AC54:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r1, .L186
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x33
	bls	.LCB1373
	b	.L153	@long jump
.LCB1373:
	lsl	r0, r0, #0x2
	ldr	r1, .L186+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L187:
	.align	2, 0
.L186:
	.word	gMain
	.word	.L181
	.align	2, 0
	.align	2, 0
.L181:
	.word	.L154
	.word	.L156
	.word	.L158
	.word	.L159
	.word	.L163
	.word	.L153
	.word	.L177
	.word	.L175
	.word	.L177
	.word	.L179
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L153
	.word	.L169
	.word	.L171
.L154:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r4, .L188
	mov	r0, #0x4
	bl	AllocZeroed
	str	r0, [r4]
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L188+0x4
	mov	r0, #0x0
	mov	r2, #0x1
	bl	InitBgsFromTemplates
	bl	ResetTempTileDataBuffers
	ldr	r0, .L188+0x8
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.LCB1419
	b	.L152	@long jump
.LCB1419:
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	bl	ClearWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xd0
	bl	LoadUserWindowBorderGfx_
	bl	sub_819789C
	ldr	r0, .L188+0xc
	bl	SetVBlankCallback
	ldr	r1, .L188+0x10
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L183
.L189:
	.align	2, 0
.L188:
	.word	gUnknown_02022C6C
	.word	gUnknown_082F0DD0
	.word	gUnknown_082F0DD4
	.word	sub_801AC40
	.word	gMain
.L156:
	ldr	r0, .L190
	ldr	r0, [r0]
	ldr	r1, .L190+0x4
	mov	r2, #0x0
	bl	sub_801ABDC
	cmp	r0, #0
	bne	.LCB1480
	b	.L153	@long jump
.LCB1480:
	ldr	r1, .L190+0x8
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L183
.L191:
	.align	2, 0
.L190:
	.word	gUnknown_02022C6C
	.word	gText_CommStandbyAwaitingOtherPlayer
	.word	gMain
.L158:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r0, #0x0
	bl	ShowBg
	ldr	r1, .L192
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L183
.L193:
	.align	2, 0
.L192:
	.word	gMain
.L159:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1528
	b	.L153	@long jump
.LCB1528:
	ldr	r4, .L194
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x20
	bl	memset
	ldr	r0, .L194+0x4
	ldrb	r1, [r0]
	ldrb	r0, [r0, #0x1]
	cmn	r1, r0
	bne	.L161	@cond_branch
	mov	r0, #0x52
	b	.L184
.L195:
	.align	2, 0
.L194:
	.word	gBlockSendBuffer
	.word	gSelectedOrderFromParty
.L161:
	mov	r0, #0x51
.L184:
	strb	r0, [r4]
	ldr	r1, .L196
	mov	r0, #0x0
	mov	r2, #0x20
	bl	SendBlock
	ldr	r1, .L196+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L183
.L197:
	.align	2, 0
.L196:
	.word	gBlockSendBuffer
	.word	gMain
.L163:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB1582
	b	.L153	@long jump
.LCB1582:
	ldr	r1, .L198
	ldrh	r0, [r1]
	cmp	r0, #0x51
	bne	.L165	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0x51
	bne	.L165	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L198+0x4
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x32
	b	.L185
.L199:
	.align	2, 0
.L198:
	.word	gBlockRecvBuffer
	.word	gMain
.L165:
	bl	sub_800AC34
	ldr	r4, .L200
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0x52
	bne	.L167	@cond_branch
	ldr	r0, .L200+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	mov	r1, #0x6
	b	.L185
.L201:
	.align	2, 0
.L200:
	.word	gBlockRecvBuffer
	.word	gMain
.L167:
	ldr	r0, .L202
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x8
.L185:
	strb	r1, [r0]
	bl	ResetBlockReceivedFlags
	b	.L153
.L203:
	.align	2, 0
.L202:
	.word	gMain
.L169:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L153	@cond_branch
	bl	sub_800ADF8
	ldr	r1, .L204
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L183
.L205:
	.align	2, 0
.L204:
	.word	gMain
.L171:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L153	@cond_branch
	ldr	r0, .L206
	bl	SetMainCallback2
	b	.L153
.L207:
	.align	2, 0
.L206:
	.word	sub_801AAD4
.L175:
	ldr	r0, .L208
	ldr	r0, [r0]
	ldr	r1, .L208+0x4
	mov	r2, #0x1
	bl	sub_801ABDC
	cmp	r0, #0
	beq	.L153	@cond_branch
	ldr	r0, .L208+0x8
	bl	SetMainCallback2
	b	.L153
.L209:
	.align	2, 0
.L208:
	.word	gUnknown_02022C6C
	.word	gText_RefusedBattle
	.word	CB2_ReturnToField
.L177:
	ldr	r0, .L210
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L153	@cond_branch
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
.L183:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L153
.L211:
	.align	2, 0
.L210:
	.word	gReceivedRemoteLinkPlayers
.L179:
	ldr	r0, .L212
	ldr	r0, [r0]
	ldr	r1, .L212+0x4
	mov	r2, #0x1
	bl	sub_801ABDC
	cmp	r0, #0
	beq	.L153	@cond_branch
	ldr	r0, .L212+0x8
	bl	SetMainCallback2
.L153:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
.L152:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L213:
	.align	2, 0
.L212:
	.word	gUnknown_02022C6C
	.word	gText_BattleWasRefused
	.word	CB2_ReturnToField
.Lfe17:
	.size	 sub_801AC54,.Lfe17-sub_801AC54

	.lcomm	gUnknown_03000DAC,4
.text
	.align	2, 0

