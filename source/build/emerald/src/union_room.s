@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	sUnionRoomPlayerName
	.section ewram_data,"aw"
	.type	 sUnionRoomPlayerName,object
	.size	 sUnionRoomPlayerName,12
sUnionRoomPlayerName:
	.space	12
	.globl	gUnknown_02022C2C
	.type	 gUnknown_02022C2C,object
	.size	 gUnknown_02022C2C,1
gUnknown_02022C2C:
	.byte	0x0
	.globl	gUnknown_02022C2D
	.type	 gUnknown_02022C2D,object
	.size	 gUnknown_02022C2D,1
gUnknown_02022C2D:
	.byte	0x0
	.globl	gUnknown_02022C30
	.align	2, 0
	.type	 gUnknown_02022C30,object
	.size	 gUnknown_02022C30,4
gUnknown_02022C30:
	.space	4
	.globl	gFiller_02022C34
	.align	2, 0
	.type	 gFiller_02022C34,object
	.size	 gFiller_02022C34,4
gFiller_02022C34:
	.word	0x0
	.globl	gUnknown_02022C38
	.align	2, 0
	.type	 gUnknown_02022C38,object
	.size	 gUnknown_02022C38,4
gUnknown_02022C38:
	.space	4
	.globl	gUnionRoomOfferedSpecies
	.align	1, 0
	.type	 gUnionRoomOfferedSpecies,object
	.size	 gUnionRoomOfferedSpecies,2
gUnionRoomOfferedSpecies:
	.short	0x0
	.globl	gUnionRoomRequestedMonType
	.type	 gUnionRoomRequestedMonType,object
	.size	 gUnionRoomRequestedMonType,1
gUnionRoomRequestedMonType:
	.byte	0x0
	.align	2, 0
	.type	 sUnionRoomTrade,object
	.size	 sUnionRoomTrade,24
sUnionRoomTrade:
	.space	24
	.section .rodata
	.align	2, 0
	.type	 sText_EmptyString,object
sText_EmptyString:
	.byte	0xff
	.size	 sText_EmptyString,1
	.globl	sText_Colon
	.align	2, 0
	.type	 sText_Colon,object
sText_Colon:
	.byte	0xf0
	.byte	0xff
	.size	 sText_Colon,2
	.globl	sText_ID
	.align	2, 0
	.type	 sText_ID,object
sText_ID:
	.byte	0xf9
	.byte	0x7
	.byte	0xff
	.size	 sText_ID,3
	.globl	sText_PleaseStartOver
	.align	2, 0
	.type	 sText_PleaseStartOver,object
sText_PleaseStartOver:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe2
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sText_PleaseStartOver,38
	.globl	sText_WirelessSearchCanceled
	.align	2, 0
	.type	 sText_WirelessSearchCanceled,object
sText_WirelessSearchCanceled:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd1
	.byte	0xc3
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc7
	.byte	0xc7
	.byte	0xcf
	.byte	0xc8
	.byte	0xc3
	.byte	0xbd
	.byte	0xbb
	.byte	0xce
	.byte	0xc3
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xcd
	.byte	0xd3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xc7
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_WirelessSearchCanceled,60
	.globl	sText_AwaitingCommunucation2
	.align	2, 0
	.type	 sText_AwaitingCommunucation2,object
sText_AwaitingCommunucation2:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xfe
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sText_AwaitingCommunucation2,44
	.globl	sText_AwaitingCommunication
	.align	2, 0
	.type	 sText_AwaitingCommunication,object
sText_AwaitingCommunication:
	.byte	0xfd
	.byte	0x2
	.byte	0xab
	.byte	0x0
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xfe
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sText_AwaitingCommunication,48
	.globl	sText_AwaitingLinkPressStart
	.align	2, 0
	.type	 sText_AwaitingLinkPressStart,object
sText_AwaitingLinkPressStart:
	.byte	0xfd
	.byte	0x2
	.byte	0xab
	.byte	0x0
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xcd
	.byte	0xce
	.byte	0xbb
	.byte	0xcc
	.byte	0xce
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xed
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_AwaitingLinkPressStart,54
	.globl	sJPText_SingleBattle
	.align	2, 0
	.type	 sJPText_SingleBattle,object
sJPText_SingleBattle:
	.byte	0x5c
	.byte	0x7e
	.byte	0x89
	.byte	0x79
	.byte	0x96
	.byte	0x64
	.byte	0x79
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_SingleBattle,16
	.globl	sJPText_DoubleBattle
	.align	2, 0
	.type	 sJPText_DoubleBattle,object
sJPText_DoubleBattle:
	.byte	0x91
	.byte	0x98
	.byte	0x79
	.byte	0x96
	.byte	0x64
	.byte	0x79
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_DoubleBattle,15
	.globl	sJPText_MultiBattle
	.align	2, 0
	.type	 sJPText_MultiBattle,object
sJPText_MultiBattle:
	.byte	0x6f
	.byte	0x79
	.byte	0x61
	.byte	0x96
	.byte	0x64
	.byte	0x79
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_MultiBattle,15
	.globl	sJPText_TradePokemon
	.align	2, 0
	.type	 sJPText_TradePokemon,object
sJPText_TradePokemon:
	.byte	0x9f
	.byte	0x59
	.byte	0x73
	.byte	0x7e
	.byte	0xa
	.byte	0x3
	.byte	0x6
	.byte	0x2e
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_TradePokemon,17
	.globl	sJPText_Chat
	.align	2, 0
	.type	 sJPText_Chat,object
sJPText_Chat:
	.byte	0x61
	.byte	0x84
	.byte	0xa0
	.byte	0x64
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_Chat,13
	.globl	sJPText_DistWonderCard
	.align	2, 0
	.type	 sJPText_DistWonderCard,object
sJPText_DistWonderCard:
	.byte	0x1c
	.byte	0xc
	.byte	0x38
	.byte	0x15
	.byte	0x56
	.byte	0xae
	.byte	0x95
	.byte	0x2d
	.byte	0x8
	.byte	0x46
	.byte	0x29
	.byte	0xff
	.size	 sJPText_DistWonderCard,12
	.globl	sJPText_DistWonderNews
	.align	2, 0
	.type	 sJPText_DistWonderNews,object
sJPText_DistWonderNews:
	.byte	0x1c
	.byte	0xc
	.byte	0x38
	.byte	0x15
	.byte	0x66
	.byte	0x85
	.byte	0xae
	.byte	0x5d
	.byte	0x2d
	.byte	0x8
	.byte	0x46
	.byte	0x29
	.byte	0xff
	.size	 sJPText_DistWonderNews,13
	.globl	sJPText_DistMysteryEvent
	.align	2, 0
	.type	 sJPText_DistMysteryEvent,object
sJPText_DistMysteryEvent:
	.byte	0x1c
	.byte	0xc
	.byte	0x38
	.byte	0x15
	.byte	0x44
	.byte	0x7
	.byte	0x3b
	.byte	0x14
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_DistMysteryEvent,17
	.globl	sJPText_HoldPokemonJump
	.align	2, 0
	.type	 sJPText_HoldPokemonJump,object
sJPText_HoldPokemonJump:
	.byte	0x15
	.byte	0x2c
	.byte	0x14
	.byte	0x47
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_HoldPokemonJump,13
	.globl	sJPText_HoldBerryCrush
	.align	2, 0
	.type	 sJPText_HoldBerryCrush,object
sJPText_HoldBerryCrush:
	.byte	0x7
	.byte	0x19
	.byte	0x20
	.byte	0x6f
	.byte	0xa0
	.byte	0x5c
	.byte	0x84
	.byte	0xae
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_HoldBerryCrush,17
	.globl	sJPText_HoldBerryPicking
	.align	2, 0
	.type	 sJPText_HoldBerryPicking,object
sJPText_HoldBerryPicking:
	.byte	0x7
	.byte	0x19
	.byte	0x20
	.byte	0x45
	.byte	0x28
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_HoldBerryPicking,14
	.globl	sJPText_HoldSpinTrade
	.align	2, 0
	.type	 sJPText_HoldSpinTrade,object
sJPText_HoldSpinTrade:
	.byte	0x39
	.byte	0x29
	.byte	0x39
	.byte	0x29
	.byte	0xa
	.byte	0x3
	.byte	0x6
	.byte	0x2e
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_HoldSpinTrade,17
	.globl	sJPText_HoldSpinShop
	.align	2, 0
	.type	 sJPText_HoldSpinShop,object
sJPText_HoldSpinShop:
	.byte	0x39
	.byte	0x29
	.byte	0x39
	.byte	0x29
	.byte	0x5c
	.byte	0x86
	.byte	0xa0
	.byte	0x9d
	.byte	0x2d
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0xb
	.byte	0x2
	.byte	0xd
	.byte	0x29
	.byte	0xff
	.size	 sJPText_HoldSpinShop,17
	.globl	sJPLinkGroupActionTexts
	.align	2, 0
	.type	 sJPLinkGroupActionTexts,object
sJPLinkGroupActionTexts:
	.word	sJPText_SingleBattle
	.word	sJPText_DoubleBattle
	.word	sJPText_MultiBattle
	.word	sJPText_TradePokemon
	.word	sJPText_Chat
	.word	sJPText_DistWonderCard
	.word	sJPText_DistWonderNews
	.word	sJPText_DistWonderCard
	.word	sJPText_HoldPokemonJump
	.word	sJPText_HoldBerryCrush
	.word	sJPText_HoldBerryPicking
	.word	sJPText_HoldBerryPicking
	.word	sJPText_HoldSpinTrade
	.word	sJPText_HoldSpinShop
	.size	 sJPLinkGroupActionTexts,56
	.globl	sText_1PlayerNeeded
	.type	 sText_1PlayerNeeded,object
sText_1PlayerNeeded:
	.byte	0xa2
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xfe
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_1PlayerNeeded,17
	.globl	sText_2PlayersNeeded
	.type	 sText_2PlayersNeeded,object
sText_2PlayersNeeded:
	.byte	0xa3
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xfe
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_2PlayersNeeded,18
	.globl	sText_3PlayersNeeded
	.type	 sText_3PlayersNeeded,object
sText_3PlayersNeeded:
	.byte	0xa4
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xfe
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_3PlayersNeeded,18
	.globl	sText_4PlayersNeeded
	.type	 sText_4PlayersNeeded,object
sText_4PlayersNeeded:
	.byte	0xa5
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd5
	.byte	0xed
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xfe
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_4PlayersNeeded,18
	.globl	sText_2PlayerMode
	.type	 sText_2PlayerMode,object
sText_2PlayerMode:
	.byte	0xa3
	.byte	0xae
	.byte	0xca
	.byte	0xc6
	.byte	0xbb
	.byte	0xd3
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_2PlayerMode,14
	.globl	sText_3PlayerMode
	.type	 sText_3PlayerMode,object
sText_3PlayerMode:
	.byte	0xa4
	.byte	0xae
	.byte	0xca
	.byte	0xc6
	.byte	0xbb
	.byte	0xd3
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_3PlayerMode,14
	.globl	sText_4PlayerMode
	.type	 sText_4PlayerMode,object
sText_4PlayerMode:
	.byte	0xa5
	.byte	0xae
	.byte	0xca
	.byte	0xc6
	.byte	0xbb
	.byte	0xd3
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_4PlayerMode,14
	.globl	sText_5PlayerMode
	.type	 sText_5PlayerMode,object
sText_5PlayerMode:
	.byte	0xa6
	.byte	0xae
	.byte	0xca
	.byte	0xc6
	.byte	0xbb
	.byte	0xd3
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_5PlayerMode,14
	.align	2, 0
	.type	 sPlayersNeededOrModeTexts,object
sPlayersNeededOrModeTexts:
	.word	sText_1PlayerNeeded
	.word	sText_2PlayerMode
	.space	12
	.word	sText_3PlayersNeeded
	.word	sText_2PlayersNeeded
	.word	sText_1PlayerNeeded
	.word	sText_4PlayerMode
	.space	4
	.word	sText_1PlayerNeeded
	.word	sText_2PlayerMode
	.word	sText_3PlayerMode
	.word	sText_4PlayerMode
	.word	sText_5PlayerMode
	.word	sText_2PlayersNeeded
	.word	sText_1PlayerNeeded
	.word	sText_3PlayerMode
	.word	sText_4PlayerMode
	.word	sText_5PlayerMode
	.word	sText_1PlayerNeeded
	.word	sText_2PlayerMode
	.word	sText_3PlayerMode
	.word	sText_4PlayerMode
	.space	4
	.size	 sPlayersNeededOrModeTexts,100
	.globl	sText_BButtonCancel
	.align	2, 0
	.type	 sText_BButtonCancel,object
sText_BButtonCancel:
	.byte	0xf8
	.byte	0x1
	.byte	0xbd
	.byte	0xbb
	.byte	0xc8
	.byte	0xbd
	.byte	0xbf
	.byte	0xc6
	.byte	0xff
	.size	 sText_BButtonCancel,9
	.globl	sJPText_SearchingForParticipants
	.align	2, 0
	.type	 sJPText_SearchingForParticipants,object
sJPText_SearchingForParticipants:
	.byte	0x10
	.byte	0x22
	.byte	0xfe
	.byte	0xb
	.byte	0x2e
	.byte	0x6
	.byte	0xc
	.byte	0x34
	.byte	0x0
	.byte	0x4a
	.byte	0xc
	.byte	0x35
	.byte	0x3
	.byte	0x11
	.byte	0x35
	.byte	0x3
	.byte	0x0
	.byte	0x44
	.byte	0xd
	.byte	0xab
	.byte	0xff
	.size	 sJPText_SearchingForParticipants,21
	.globl	sText_PlayerContactedYouForXAccept
	.align	2, 0
	.type	 sText_PlayerContactedYouForXAccept,object
sText_PlayerContactedYouForXAccept:
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xd7
	.byte	0xd7
	.byte	0xd9
	.byte	0xe4
	.byte	0xe8
	.byte	0xac
	.byte	0xff
	.size	 sText_PlayerContactedYouForXAccept,33
	.globl	sText_PlayerContactedYouShareX
	.align	2, 0
	.type	 sText_PlayerContactedYouShareX,object
sText_PlayerContactedYouShareX:
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xfe
	.byte	0xd1
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xac
	.byte	0xff
	.size	 sText_PlayerContactedYouShareX,37
	.globl	sText_PlayerContactedYouAddToMembers
	.align	2, 0
	.type	 sText_PlayerContactedYouAddToMembers,object
sText_PlayerContactedYouAddToMembers:
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xfe
	.byte	0xbb
	.byte	0xd8
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_PlayerContactedYouAddToMembers,38
	.globl	sText_AreTheseMembersOK
	.align	2, 0
	.type	 sText_AreTheseMembersOK,object
sText_AreTheseMembersOK:
	.byte	0xfd
	.byte	0x2
	.byte	0xab
	.byte	0xfe
	.byte	0xbb
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xc5
	.byte	0xac
	.byte	0xff
	.size	 sText_AreTheseMembersOK,26
	.globl	sText_CancelModeWithTheseMembers
	.align	2, 0
	.type	 sText_CancelModeWithTheseMembers,object
sText_CancelModeWithTheseMembers:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xfe
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_CancelModeWithTheseMembers,35
	.globl	sText_AnOKWasSentToPlayer
	.align	2, 0
	.type	 sText_AnOKWasSentToPlayer,object
sText_AnOKWasSentToPlayer:
	.byte	0xbb
	.byte	0xe2
	.byte	0x0
	.byte	0xb1
	.byte	0xc9
	.byte	0xc5
	.byte	0xb2
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xad
	.byte	0xff
	.size	 sText_AnOKWasSentToPlayer,24
	.globl	sText_OtherTrainerUnavailableNow
	.align	2, 0
	.type	 sText_OtherTrainerUnavailableNow,object
sText_OtherTrainerUnavailableNow:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xd9
	.byte	0xe7
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xea
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xb0
	.byte	0xfb
	.byte	0xff
	.size	 sText_OtherTrainerUnavailableNow,55
	.globl	sText_CantTransmitTrainerTooFar
	.align	2, 0
	.type	 sText_CantTransmitTrainerTooFar,object
sText_CantTransmitTrainerTooFar:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xe7
	.byte	0xe1
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xeb
	.byte	0xdc
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe3
	.byte	0x0
	.byte	0xda
	.byte	0xd5
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_CantTransmitTrainerTooFar,56
	.globl	sText_TrainersNotReadyYet
	.align	2, 0
	.type	 sText_TrainersNotReadyYet,object
sText_TrainersNotReadyYet:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x5c
	.byte	0xcd
	.byte	0x5d
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0xba
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xfe
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xed
	.byte	0xd9
	.byte	0xe8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainersNotReadyYet,44
	.globl	sCantTransmitToTrainerTexts
	.align	2, 0
	.type	 sCantTransmitToTrainerTexts,object
sCantTransmitToTrainerTexts:
	.word	sText_CantTransmitTrainerTooFar
	.word	sText_TrainersNotReadyYet
	.size	 sCantTransmitToTrainerTexts,8
	.globl	sText_ModeWithTheseMembersWillBeCanceled
	.align	2, 0
	.type	 sText_ModeWithTheseMembersWillBeCanceled,object
sText_ModeWithTheseMembersWillBeCanceled:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_ModeWithTheseMembersWillBeCanceled,52
	.globl	sText_MemberNoLongerAvailable
	.align	2, 0
	.type	 sText_MemberNoLongerAvailable,object
sText_MemberNoLongerAvailable:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xe3
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xfe
	.byte	0xe0
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe1
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0xea
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_MemberNoLongerAvailable,55
	.globl	sPlayerUnavailableTexts
	.align	2, 0
	.type	 sPlayerUnavailableTexts,object
sPlayerUnavailableTexts:
	.word	sText_OtherTrainerUnavailableNow
	.word	sText_MemberNoLongerAvailable
	.size	 sPlayerUnavailableTexts,8
	.globl	sText_TrainerAppearsUnavailable
	.align	2, 0
	.type	 sText_TrainerAppearsUnavailable,object
sText_TrainerAppearsUnavailable:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe7
	.byte	0xfe
	.byte	0xe9
	.byte	0xe2
	.byte	0xd5
	.byte	0xea
	.byte	0xd5
	.byte	0xdd
	.byte	0xe0
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xb0
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainerAppearsUnavailable,40
	.globl	sText_PlayerSentBackOK
	.align	2, 0
	.type	 sText_PlayerSentBackOK,object
sText_PlayerSentBackOK:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xb1
	.byte	0xc9
	.byte	0xc5
	.byte	0xb2
	.byte	0xab
	.byte	0xff
	.size	 sText_PlayerSentBackOK,22
	.globl	sText_PlayerOKdRegistration
	.align	2, 0
	.type	 sText_PlayerOKdRegistration,object
sText_PlayerOKdRegistration:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xc9
	.byte	0xc5
	.byte	0xb4
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0xfe
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.size	 sText_PlayerOKdRegistration,39
	.globl	sText_PlayerRepliedNo
	.align	2, 0
	.type	 sText_PlayerRepliedNo,object
sText_PlayerRepliedNo:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe4
	.byte	0xe0
	.byte	0xdd
	.byte	0xd9
	.byte	0xd8
	.byte	0xb8
	.byte	0x0
	.byte	0xb1
	.byte	0xc8
	.byte	0xe3
	.byte	0xb0
	.byte	0xb2
	.byte	0xfb
	.byte	0xff
	.size	 sText_PlayerRepliedNo,19
	.globl	sText_AwaitingOtherMembers
	.align	2, 0
	.type	 sText_AwaitingOtherMembers,object
sText_AwaitingOtherMembers:
	.byte	0xfd
	.byte	0x2
	.byte	0xab
	.byte	0xfe
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xe7
	.byte	0xab
	.byte	0xff
	.size	 sText_AwaitingOtherMembers,28
	.globl	sText_QuitBeingMember
	.align	2, 0
	.type	 sText_QuitBeingMember,object
sText_QuitBeingMember:
	.byte	0xcb
	.byte	0xe9
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xac
	.byte	0xff
	.size	 sText_QuitBeingMember,21
	.globl	sText_StoppedBeingMember
	.align	2, 0
	.type	 sText_StoppedBeingMember,object
sText_StoppedBeingMember:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_StoppedBeingMember,29
	.globl	sPlayerDisconnectedTexts
	.align	2, 0
	.type	 sPlayerDisconnectedTexts,object
sPlayerDisconnectedTexts:
	.word	0x0
	.word	sText_MemberNoLongerAvailable
	.word	sText_TrainerAppearsUnavailable
	.word	0x0
	.word	0x0
	.word	0x0
	.word	sText_PlayerRepliedNo
	.word	0x0
	.word	0x0
	.word	sText_StoppedBeingMember
	.size	 sPlayerDisconnectedTexts,40
	.globl	sText_WirelessLinkEstablished
	.align	2, 0
	.type	 sText_WirelessLinkEstablished,object
sText_WirelessLinkEstablished:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd1
	.byte	0xc3
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc7
	.byte	0xc7
	.byte	0xcf
	.byte	0xc8
	.byte	0xc3
	.byte	0xbd
	.byte	0xbb
	.byte	0xce
	.byte	0xc3
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xcd
	.byte	0xd3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xc7
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xdd
	.byte	0xe7
	.byte	0xdc
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_WirelessLinkEstablished,61
	.globl	sText_WirelessLinkDropped
	.align	2, 0
	.type	 sText_WirelessLinkDropped,object
sText_WirelessLinkDropped:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd1
	.byte	0xc3
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc7
	.byte	0xc7
	.byte	0xcf
	.byte	0xc8
	.byte	0xc3
	.byte	0xbd
	.byte	0xbb
	.byte	0xce
	.byte	0xc3
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xcd
	.byte	0xd3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xc7
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd8
	.byte	0xb0
	.byte	0xff
	.size	 sText_WirelessLinkDropped,57
	.globl	sText_LinkWithFriendDropped
	.align	2, 0
	.type	 sText_LinkWithFriendDropped,object
sText_LinkWithFriendDropped:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0xfe
	.byte	0xd8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd8
	.byte	0xb0
	.byte	0xff
	.size	 sText_LinkWithFriendDropped,44
	.globl	sText_PlayerRepliedNo2
	.align	2, 0
	.type	 sText_PlayerRepliedNo2,object
sText_PlayerRepliedNo2:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe4
	.byte	0xe0
	.byte	0xdd
	.byte	0xd9
	.byte	0xd8
	.byte	0xb8
	.byte	0x0
	.byte	0xb1
	.byte	0xc8
	.byte	0xe3
	.byte	0xb0
	.byte	0xb2
	.byte	0xff
	.size	 sText_PlayerRepliedNo2,18
	.globl	sLinkDroppedTexts
	.align	2, 0
	.type	 sLinkDroppedTexts,object
sLinkDroppedTexts:
	.word	0x0
	.word	sText_LinkWithFriendDropped
	.word	sText_LinkWithFriendDropped
	.word	0x0
	.word	0x0
	.word	0x0
	.word	sText_PlayerRepliedNo2
	.word	0x0
	.word	0x0
	.word	0x0
	.size	 sLinkDroppedTexts,40
	.globl	sText_DoYouWantXMode
	.align	2, 0
	.type	 sText_DoYouWantXMode,object
sText_DoYouWantXMode:
	.byte	0xbe
	.byte	0xe3
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xac
	.byte	0xff
	.size	 sText_DoYouWantXMode,25
	.globl	sText_DoYouWantXMode2
	.align	2, 0
	.type	 sText_DoYouWantXMode2,object
sText_DoYouWantXMode2:
	.byte	0xbe
	.byte	0xe3
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0xfe
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xac
	.byte	0xff
	.size	 sText_DoYouWantXMode2,25
	.align	2, 0
	.type	 sDoYouWantModeTexts,object
sDoYouWantModeTexts:
	.word	sText_DoYouWantXMode
	.word	sText_DoYouWantXMode2
	.size	 sDoYouWantModeTexts,8
	.globl	sText_CommunicatingPleaseWait
	.align	2, 0
	.type	 sText_CommunicatingPleaseWait,object
sText_CommunicatingPleaseWait:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xb0
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_CommunicatingPleaseWait,28
	.globl	sText_AwaitingPlayersResponseAboutTrade
	.align	2, 0
	.type	 sText_AwaitingPlayersResponseAboutTrade,object
sText_AwaitingPlayersResponseAboutTrade:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xb0
	.byte	0xff
	.size	 sText_AwaitingPlayersResponseAboutTrade,40
	.globl	sText_Communicating
	.align	2, 0
	.type	 sText_Communicating,object
sText_Communicating:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfe
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xff
	.size	 sText_Communicating,107
	.globl	sText_CommunicatingWithPlayer
	.align	2, 0
	.type	 sText_CommunicatingWithPlayer,object
sText_CommunicatingWithPlayer:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xe1
	.byte	0xe9
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfe
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xff
	.size	 sText_CommunicatingWithPlayer,107
	.globl	sText_PleaseWaitAWhile
	.align	2, 0
	.type	 sText_PleaseWaitAWhile,object
sText_PleaseWaitAWhile:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xdd
	.byte	0xe0
	.byte	0xd9
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfe
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0xf
	.byte	0xad
	.byte	0xff
	.size	 sText_PleaseWaitAWhile,117
	.align	2, 0
	.type	 sCommunicatingWaitTexts,object
sCommunicatingWaitTexts:
	.word	sText_Communicating
	.word	sText_CommunicatingWithPlayer
	.word	sText_PleaseWaitAWhile
	.size	 sCommunicatingWaitTexts,12
	.globl	sText_HiDoSomethingMale
	.align	2, 0
	.type	 sText_HiDoSomethingMale,object
sText_HiDoSomethingMale:
	.byte	0xc2
	.byte	0xdd
	.byte	0xed
	.byte	0xd5
	.byte	0xab
	.byte	0x0
	.byte	0xc3
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xfe
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xac
	.byte	0xff
	.size	 sText_HiDoSomethingMale,48
	.globl	sText_HiDoSomethingFemale
	.align	2, 0
	.type	 sText_HiDoSomethingFemale,object
sText_HiDoSomethingFemale:
	.byte	0xc2
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xe3
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0xff
	.size	 sText_HiDoSomethingFemale,39
	.globl	sText_HiDoSomethingAgainMale
	.align	2, 0
	.type	 sText_HiDoSomethingAgainMale,object
sText_HiDoSomethingAgainMale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xc2
	.byte	0xdd
	.byte	0xed
	.byte	0xd5
	.byte	0xb8
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xdb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_HiDoSomethingAgainMale,56
	.globl	sText_HiDoSomethingAgainFemale
	.align	2, 0
	.type	 sText_HiDoSomethingAgainFemale,object
sText_HiDoSomethingAgainFemale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xc9
	.byte	0xdc
	.byte	0xab
	.byte	0x0
	.byte	0xfd
	.byte	0x1
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xe3
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0xff
	.size	 sText_HiDoSomethingAgainFemale,51
	.align	2, 0
	.type	 sHiDoSomethingTexts,object
sHiDoSomethingTexts:
	.word	sText_HiDoSomethingMale
	.word	sText_HiDoSomethingFemale
	.word	sText_HiDoSomethingAgainMale
	.word	sText_HiDoSomethingAgainFemale
	.size	 sHiDoSomethingTexts,16
	.globl	sText_DoSomethingMale
	.align	2, 0
	.type	 sText_DoSomethingMale,object
sText_DoSomethingMale:
	.byte	0xd1
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0xff
	.size	 sText_DoSomethingMale,22
	.globl	sText_DoSomethingFemale
	.align	2, 0
	.type	 sText_DoSomethingFemale,object
sText_DoSomethingFemale:
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0xff
	.size	 sText_DoSomethingFemale,32
	.globl	sText_DoSomethingAgainMale
	.align	2, 0
	.type	 sText_DoSomethingAgainMale,object
sText_DoSomethingAgainMale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xac
	.byte	0xff
	.size	 sText_DoSomethingAgainMale,35
	.globl	sText_DoSomethingAgainFemale
	.align	2, 0
	.type	 sText_DoSomethingAgainFemale,object
sText_DoSomethingAgainFemale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd9
	.byte	0xe0
	.byte	0xe7
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_DoSomethingAgainFemale,30
	.align	2, 0
	.type	 sDoSomethingTexts,object
sDoSomethingTexts:
	.word	sText_DoSomethingMale
	.word	sText_DoSomethingFemale
	.word	sText_DoSomethingAgainMale
	.word	sText_DoSomethingAgainMale
	.size	 sDoSomethingTexts,16
	.globl	sText_SomebodyHasContactedYou
	.align	2, 0
	.type	 sText_SomebodyHasContactedYou,object
sText_SomebodyHasContactedYou:
	.byte	0xcd
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xd6
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_SomebodyHasContactedYou,31
	.globl	sText_PlayerHasContactedYou
	.align	2, 0
	.type	 sText_PlayerHasContactedYou,object
sText_PlayerHasContactedYou:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe2
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_PlayerHasContactedYou,25
	.align	2, 0
	.type	 sPlayerContactedYouTexts,object
sPlayerContactedYouTexts:
	.word	sText_SomebodyHasContactedYou
	.word	sText_PlayerHasContactedYou
	.size	 sPlayerContactedYouTexts,8
	.globl	sText_AwaitingResponseFromTrainer
	.align	2, 0
	.type	 sText_AwaitingResponseFromTrainer,object
sText_AwaitingResponseFromTrainer:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xb0
	.byte	0xff
	.size	 sText_AwaitingResponseFromTrainer,44
	.globl	sText_AwaitingResponseFromPlayer
	.align	2, 0
	.type	 sText_AwaitingResponseFromPlayer,object
sText_AwaitingResponseFromPlayer:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0xb0
	.byte	0xff
	.size	 sText_AwaitingResponseFromPlayer,29
	.align	2, 0
	.type	 sAwaitingResponseTexts,object
sAwaitingResponseTexts:
	.word	sText_AwaitingResponseFromTrainer
	.word	sText_AwaitingResponseFromPlayer
	.size	 sAwaitingResponseTexts,8
	.globl	sText_ShowTrainerCard
	.align	2, 0
	.type	 sText_ShowTrainerCard,object
sText_ShowTrainerCard:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xd8
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xdd
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xac
	.byte	0xff
	.size	 sText_ShowTrainerCard,91
	.globl	sText_BattleChallenge
	.align	2, 0
	.type	 sText_BattleChallenge,object
sText_BattleChallenge:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xd9
	.byte	0xe4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xfe
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_BattleChallenge,82
	.globl	sText_ChatInvitation
	.align	2, 0
	.type	 sText_ChatInvitation,object
sText_ChatInvitation:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xea
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xd9
	.byte	0xe4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xfe
	.byte	0xdd
	.byte	0xe2
	.byte	0xea
	.byte	0xdd
	.byte	0xe8
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xac
	.byte	0xff
	.size	 sText_ChatInvitation,76
	.globl	sText_OfferToTradeMon
	.align	2, 0
	.type	 sText_OfferToTradeMon,object
sText_OfferToTradeMon:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xc6
	.byte	0xea
	.byte	0xad
	.byte	0x0
	.byte	0xf7
	.byte	0x0
	.byte	0x0
	.byte	0xf7
	.byte	0x1
	.byte	0xfb
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xec
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xfe
	.byte	0xc6
	.byte	0xea
	.byte	0xad
	.byte	0x0
	.byte	0xf7
	.byte	0x2
	.byte	0x0
	.byte	0xf7
	.byte	0x3
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xd9
	.byte	0xe4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xfe
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xac
	.byte	0xff
	.size	 sText_OfferToTradeMon,116
	.globl	sText_OfferToTradeEgg
	.align	2, 0
	.type	 sText_OfferToTradeEgg,object
sText_OfferToTradeEgg:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xbf
	.byte	0xc1
	.byte	0xc1
	.byte	0xad
	.byte	0xfa
	.byte	0xd1
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xd7
	.byte	0xd9
	.byte	0xe4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xac
	.byte	0xff
	.size	 sText_OfferToTradeEgg,82
	.globl	sText_ChatDropped
	.align	2, 0
	.type	 sText_ChatDropped,object
sText_ChatDropped:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd8
	.byte	0xe6
	.byte	0xe3
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ChatDropped,28
	.globl	sText_OfferDeclined1
	.align	2, 0
	.type	 sText_OfferDeclined1,object
sText_OfferDeclined1:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_OfferDeclined1,25
	.globl	sText_OfferDeclined2
	.align	2, 0
	.type	 sText_OfferDeclined2,object
sText_OfferDeclined2:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd8
	.byte	0xd9
	.byte	0xd7
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_OfferDeclined2,25
	.globl	sText_ChatEnded
	.align	2, 0
	.type	 sText_ChatEnded,object
sText_ChatEnded:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ChatEnded,21
	.align	2, 0
	.type	 sInvitationTexts,object
sInvitationTexts:
	.word	sText_ShowTrainerCard
	.word	sText_BattleChallenge
	.word	sText_ChatInvitation
	.word	sText_OfferToTradeMon
	.size	 sInvitationTexts,16
	.globl	sText_JoinChatMale
	.align	2, 0
	.type	 sText_JoinChatMale,object
sText_JoinChatMale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xed
	.byte	0xab
	.byte	0x0
	.byte	0xd1
	.byte	0xd9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfe
	.byte	0xd1
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xde
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_JoinChatMale,53
	.globl	sText_PlayerJoinChatMale
	.align	2, 0
	.type	 sText_PlayerJoinChatMale,object
sText_PlayerJoinChatMale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xc2
	.byte	0xd9
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xfd
	.byte	0x1
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xd9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfa
	.byte	0xd1
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xde
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_PlayerJoinChatMale,61
	.globl	sText_JoinChatFemale
	.align	2, 0
	.type	 sText_JoinChatFemale,object
sText_JoinChatFemale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xab
	.byte	0x0
	.byte	0xd1
	.byte	0xd9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfe
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xde
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_JoinChatFemale,60
	.globl	sText_PlayerJoinChatFemale
	.align	2, 0
	.type	 sText_PlayerJoinChatFemale,object
sText_PlayerJoinChatFemale:
	.byte	0xfd
	.byte	0x2
	.byte	0xf0
	.byte	0x0
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xdd
	.byte	0xb8
	.byte	0x0
	.byte	0xfd
	.byte	0x1
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xd9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfa
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xde
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.size	 sText_PlayerJoinChatFemale,68
	.align	2, 0
	.type	 sJoinChatTexts,object
sJoinChatTexts:
	.word	sText_JoinChatMale
	.word	sText_JoinChatFemale
	.word	sText_PlayerJoinChatMale
	.word	sText_PlayerJoinChatFemale
	.size	 sJoinChatTexts,16
	.globl	sText_TrainerAppearsBusy
	.align	2, 0
	.type	 sText_TrainerAppearsBusy,object
sText_TrainerAppearsBusy:
	.byte	0xb0
	.byte	0xb0
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe7
	.byte	0xed
	.byte	0xb0
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainerAppearsBusy,36
	.globl	sText_WaitForBattleMale
	.align	2, 0
	.type	 sText_WaitForBattleMale,object
sText_WaitForBattleMale:
	.byte	0xbb
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xdc
	.byte	0xac
	.byte	0xfe
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xb8
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xdb
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_WaitForBattleMale,50
	.globl	sText_WaitForChatMale
	.align	2, 0
	.type	 sText_WaitForChatMale,object
sText_WaitForChatMale:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xdc
	.byte	0xac
	.byte	0xfe
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_WaitForChatMale,49
	.globl	sText_ShowTrainerCardMale
	.align	2, 0
	.type	 sText_ShowTrainerCardMale,object
sText_ShowTrainerCardMale:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xab
	.byte	0x0
	.byte	0xbb
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xb1
	.byte	0xc1
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xe7
	.byte	0xb8
	.byte	0xb2
	.byte	0xfe
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xff
	.size	 sText_ShowTrainerCardMale,55
	.globl	sText_WaitForBattleFemale
	.align	2, 0
	.type	 sText_WaitForBattleFemale,object
sText_WaitForBattleFemale:
	.byte	0xbb
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xac
	.byte	0x0
	.byte	0xc9
	.byte	0xda
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xe7
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xfe
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_WaitForBattleFemale,51
	.globl	sText_WaitForChatFemale
	.align	2, 0
	.type	 sText_WaitForChatFemale,object
sText_WaitForChatFemale:
	.byte	0xbe
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xac
	.byte	0xfe
	.byte	0xc9
	.byte	0xdf
	.byte	0xd5
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe4
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_WaitForChatFemale,54
	.globl	sText_ShowTrainerCardFemale
	.align	2, 0
	.type	 sText_ShowTrainerCardFemale,object
sText_ShowTrainerCardFemale:
	.byte	0xbb
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xe6
	.byte	0xe3
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xb8
	.byte	0x0
	.byte	0xc3
	.byte	0xb4
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xfe
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xff
	.size	 sText_ShowTrainerCardFemale,51
	.globl	sText_WaitOrShowCardTexts
	.align	2, 0
	.type	 sText_WaitOrShowCardTexts,object
	.size	 sText_WaitOrShowCardTexts,32
sText_WaitOrShowCardTexts:
	.word	sText_WaitForBattleMale
	.word	sText_WaitForChatMale
	.word	0x0
	.word	sText_ShowTrainerCardMale
	.word	sText_WaitForBattleFemale
	.word	sText_WaitForChatFemale
	.word	0x0
	.word	sText_ShowTrainerCardFemale
	.globl	sText_WaitForChatMale2
	.align	2, 0
	.type	 sText_WaitForChatMale2,object
sText_WaitForChatMale2:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xdc
	.byte	0xac
	.byte	0xfe
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_WaitForChatMale2,49
	.globl	sText_DoneWaitingBattleMale
	.align	2, 0
	.type	 sText_DoneWaitingBattleMale,object
sText_DoneWaitingBattleMale:
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdf
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xab
	.byte	0xfe
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xab
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_DoneWaitingBattleMale,53
	.globl	sText_DoneWaitingChatMale
	.align	2, 0
	.type	 sText_DoneWaitingChatMale,object
sText_DoneWaitingChatMale:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xab
	.byte	0xfe
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xab
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_DoneWaitingChatMale,26
	.globl	sText_DoneWaitingBattleFemale
	.align	2, 0
	.type	 sText_DoneWaitingBattleFemale,object
sText_DoneWaitingBattleFemale:
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xab
	.byte	0xfe
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xab
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_DoneWaitingBattleFemale,45
	.globl	sText_DoneWaitingChatFemale
	.align	2, 0
	.type	 sText_DoneWaitingChatFemale,object
sText_DoneWaitingChatFemale:
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xab
	.byte	0xfe
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_DoneWaitingChatFemale,38
	.globl	sText_TradeWillBeStarted
	.align	2, 0
	.type	 sText_TradeWillBeStarted,object
sText_TradeWillBeStarted:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_TradeWillBeStarted,30
	.globl	sText_BattleWillBeStarted
	.align	2, 0
	.type	 sText_BattleWillBeStarted,object
sText_BattleWillBeStarted:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_BattleWillBeStarted,31
	.globl	sText_EnteringChat
	.align	2, 0
	.type	 sText_EnteringChat,object
sText_EnteringChat:
	.byte	0xbf
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb0
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_EnteringChat,22
	.globl	sStartActivityTexts
	.align	2, 0
	.type	 sStartActivityTexts,object
sStartActivityTexts:
	.word	sText_BattleWillBeStarted
	.word	sText_EnteringChat
	.word	sText_TradeWillBeStarted
	.word	sText_BattleWillBeStarted
	.word	sText_EnteringChat
	.word	sText_TradeWillBeStarted
	.word	sText_DoneWaitingBattleMale
	.word	sText_DoneWaitingChatMale
	.word	sText_TradeWillBeStarted
	.word	sText_DoneWaitingBattleFemale
	.word	sText_DoneWaitingChatFemale
	.word	sText_TradeWillBeStarted
	.size	 sStartActivityTexts,48
	.globl	sText_BattleDeclinedMale
	.align	2, 0
	.type	 sText_BattleDeclinedMale,object
sText_BattleDeclinedMale:
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xab
	.byte	0x0
	.byte	0xc7
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe3
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfa
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_BattleDeclinedMale,96
	.globl	sText_BattleDeclinedFemale
	.align	2, 0
	.type	 sText_BattleDeclinedFemale,object
sText_BattleDeclinedFemale:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xe6
	.byte	0xdd
	.byte	0xd6
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xb0
	.byte	0xfb
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_BattleDeclinedFemale,84
	.globl	sBattleDeclinedTexts
	.align	2, 0
	.type	 sBattleDeclinedTexts,object
	.size	 sBattleDeclinedTexts,8
sBattleDeclinedTexts:
	.word	sText_BattleDeclinedMale
	.word	sText_BattleDeclinedFemale
	.globl	sText_ShowTrainerCardDeclinedMale
	.align	2, 0
	.type	 sText_ShowTrainerCardDeclinedMale,object
sText_ShowTrainerCardDeclinedMale:
	.byte	0xc2
	.byte	0xe9
	.byte	0xdc
	.byte	0xac
	.byte	0x0
	.byte	0xc7
	.byte	0xed
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xb0
	.byte	0xfe
	.byte	0xd1
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb4
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xac
	.byte	0xfa
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xab
	.byte	0x0
	.byte	0xc3
	.byte	0xb4
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowTrainerCardDeclinedMale,77
	.globl	sText_ShowTrainerCardDeclinedFemale
	.align	2, 0
	.type	 sText_ShowTrainerCardDeclinedFemale,object
sText_ShowTrainerCardDeclinedFemale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xac
	.byte	0x0
	.byte	0xc8
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd8
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xac
	.byte	0xb0
	.byte	0xfa
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xab
	.byte	0x0
	.byte	0xc3
	.byte	0xb4
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowTrainerCardDeclinedFemale,71
	.globl	sShowTrainerCardDeclinedTexts
	.align	2, 0
	.type	 sShowTrainerCardDeclinedTexts,object
	.size	 sShowTrainerCardDeclinedTexts,8
sShowTrainerCardDeclinedTexts:
	.word	sText_ShowTrainerCardDeclinedMale
	.word	sText_ShowTrainerCardDeclinedFemale
	.globl	sText_IfYouWantToDoSomethingMale
	.align	2, 0
	.type	 sText_IfYouWantToDoSomethingMale,object
sText_IfYouWantToDoSomethingMale:
	.byte	0xc3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0xfe
	.byte	0xe1
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xdb
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_IfYouWantToDoSomethingMale,60
	.globl	sText_IfYouWantToDoSomethingFemale
	.align	2, 0
	.type	 sText_IfYouWantToDoSomethingFemale,object
sText_IfYouWantToDoSomethingFemale:
	.byte	0xc3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0xfe
	.byte	0xe1
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xed
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_IfYouWantToDoSomethingFemale,52
	.globl	sIfYouWantToDoSomethingTexts
	.align	2, 0
	.type	 sIfYouWantToDoSomethingTexts,object
	.size	 sIfYouWantToDoSomethingTexts,8
sIfYouWantToDoSomethingTexts:
	.word	sText_IfYouWantToDoSomethingMale
	.word	sText_IfYouWantToDoSomethingFemale
	.globl	sText_TrainerBattleBusy
	.align	2, 0
	.type	 sText_TrainerBattleBusy,object
sText_TrainerBattleBusy:
	.byte	0xd1
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe4
	.byte	0xe7
	.byte	0xab
	.byte	0x0
	.byte	0xcd
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xfe
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd9
	.byte	0xe0
	.byte	0xe7
	.byte	0xd9
	.byte	0xad
	.byte	0xfa
	.byte	0xbb
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xe3
	.byte	0xdf
	.byte	0xd5
	.byte	0xed
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainerBattleBusy,69
	.globl	sText_NeedTwoMonsOfLevel30OrLower1
	.align	2, 0
	.type	 sText_NeedTwoMonsOfLevel30OrLower1,object
sText_NeedTwoMonsOfLevel30OrLower1:
	.byte	0xc3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xfe
	.byte	0xe8
	.byte	0xeb
	.byte	0xe3
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0xfa
	.byte	0xc6
	.byte	0xea
	.byte	0xad
	.byte	0x0
	.byte	0xa4
	.byte	0xa1
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_NeedTwoMonsOfLevel30OrLower1,68
	.globl	sText_NeedTwoMonsOfLevel30OrLower2
	.align	2, 0
	.type	 sText_NeedTwoMonsOfLevel30OrLower2,object
sText_NeedTwoMonsOfLevel30OrLower2:
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xeb
	.byte	0xe3
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe0
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xc6
	.byte	0xea
	.byte	0xad
	.byte	0x0
	.byte	0xa4
	.byte	0xa1
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_NeedTwoMonsOfLevel30OrLower2,59
	.globl	sText_DeclineBattleMale
	.align	2, 0
	.type	 sText_DeclineBattleMale,object
sText_DeclineBattleMale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xfe
	.byte	0xbd
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xe3
	.byte	0xdf
	.byte	0xd5
	.byte	0xed
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_DeclineBattleMale,43
	.globl	stext_DeclineBattleFemale
	.align	2, 0
	.type	 stext_DeclineBattleFemale,object
stext_DeclineBattleFemale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb0
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 stext_DeclineBattleFemale,29
	.align	2, 0
	.type	 sDeclineBattleTexts,object
	.size	 sDeclineBattleTexts,8
sDeclineBattleTexts:
	.word	sText_DeclineBattleMale
	.word	stext_DeclineBattleFemale
	.globl	sText_ChatDeclinedMale
	.align	2, 0
	.type	 sText_ChatDeclinedMale,object
sText_ChatDeclinedMale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xab
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xad
	.byte	0xfa
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ChatDeclinedMale,70
	.globl	sText_ChatDeclinedFemale
	.align	2, 0
	.type	 sText_ChatDeclinedFemale,object
sText_ChatDeclinedFemale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xe9
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfa
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ChatDeclinedFemale,77
	.globl	sChatDeclinedTexts
	.align	2, 0
	.type	 sChatDeclinedTexts,object
	.size	 sChatDeclinedTexts,8
sChatDeclinedTexts:
	.word	sText_ChatDeclinedMale
	.word	sText_ChatDeclinedFemale
	.globl	sText_YoureToughMale
	.align	2, 0
	.type	 sText_YoureToughMale,object
sText_YoureToughMale:
	.byte	0xd1
	.byte	0xdc
	.byte	0xe3
	.byte	0xd5
	.byte	0xab
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe4
	.byte	0xe6
	.byte	0xd9
	.byte	0xe8
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_YoureToughMale,39
	.globl	sText_UsedGoodMoveMale
	.align	2, 0
	.type	 sText_UsedGoodMoveMale,object
sText_UsedGoodMoveMale:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xac
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xe3
	.byte	0xd8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0xdb
	.byte	0xed
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_UsedGoodMoveMale,43
	.globl	sText_BattleSurpriseMale
	.align	2, 0
	.type	 sText_BattleSurpriseMale,object
sText_BattleSurpriseMale:
	.byte	0xd1
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xab
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xed
	.byte	0xd9
	.byte	0xae
	.byte	0xe3
	.byte	0xe4
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_BattleSurpriseMale,36
	.globl	sText_SwitchedMonsMale
	.align	2, 0
	.type	 sText_SwitchedMonsMale,object
sText_SwitchedMonsMale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xab
	.byte	0x0
	.byte	0xc2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xdd
	.byte	0xe8
	.byte	0xe9
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_SwitchedMonsMale,55
	.globl	sText_YoureToughFemale
	.align	2, 0
	.type	 sText_YoureToughFemale,object
sText_YoureToughFemale:
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xb0
	.byte	0xfe
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xe0
	.byte	0xe0
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_YoureToughFemale,45
	.globl	sText_UsedGoodMoveFemale
	.align	2, 0
	.type	 sText_UsedGoodMoveFemale,object
sText_UsedGoodMoveFemale:
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xab
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_UsedGoodMoveFemale,40
	.globl	sText_BattleSurpriseFemale
	.align	2, 0
	.type	 sText_BattleSurpriseFemale,object
sText_BattleSurpriseFemale:
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xeb
	.byte	0xd9
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xab
	.byte	0xfe
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_BattleSurpriseFemale,42
	.globl	sText_SwitchedMonsFemale
	.align	2, 0
	.type	 sText_SwitchedMonsFemale,object
sText_SwitchedMonsFemale:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd9
	.byte	0xec
	.byte	0xe5
	.byte	0xe9
	.byte	0xdd
	.byte	0xe7
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xe7
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_SwitchedMonsFemale,50
	.globl	sBattleReactionTexts
	.align	2, 0
	.type	 sBattleReactionTexts,object
	.size	 sBattleReactionTexts,32
sBattleReactionTexts:
	.word	sText_YoureToughMale
	.word	sText_UsedGoodMoveMale
	.word	sText_BattleSurpriseMale
	.word	sText_SwitchedMonsMale
	.word	sText_YoureToughFemale
	.word	sText_UsedGoodMoveFemale
	.word	sText_BattleSurpriseFemale
	.word	sText_SwitchedMonsFemale
	.globl	sText_LearnedSomethingMale
	.align	2, 0
	.type	 sText_LearnedSomethingMale,object
sText_LearnedSomethingMale:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xd9
	.byte	0xab
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xd8
	.byte	0xe9
	.byte	0xd7
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0xd5
	.byte	0xe0
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_LearnedSomethingMale,33
	.globl	sText_ThatsFunnyMale
	.align	2, 0
	.type	 sText_ThatsFunnyMale,object
sText_ThatsFunnyMale:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe2
	.byte	0xe2
	.byte	0xed
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xab
	.byte	0xfe
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe0
	.byte	0xd5
	.byte	0xe9
	.byte	0xdb
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ThatsFunnyMale,59
	.globl	sText_RandomChatMale1
	.align	2, 0
	.type	 sText_RandomChatMale1,object
sText_RandomChatMale1:
	.byte	0xc9
	.byte	0xdc
	.byte	0xac
	.byte	0xfe
	.byte	0xcd
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xe2
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RandomChatMale1,35
	.globl	sText_RandomChatMale2
	.align	2, 0
	.type	 sText_RandomChatMale2,object
sText_RandomChatMale2:
	.byte	0xc2
	.byte	0xe1
	.byte	0xdc
	.byte	0xe1
	.byte	0xb0
	.byte	0x0
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xac
	.byte	0xfe
	.byte	0xcd
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xd5
	.byte	0xed
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_RandomChatMale2,44
	.globl	sText_LearnedSomethingFemale
	.align	2, 0
	.type	 sText_LearnedSomethingFemale,object
sText_LearnedSomethingFemale:
	.byte	0xc3
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xac
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xd8
	.byte	0xdd
	.byte	0xd8
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xdf
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_LearnedSomethingFemale,36
	.globl	sText_ThatsFunnyFemale
	.align	2, 0
	.type	 sText_ThatsFunnyFemale,object
sText_ThatsFunnyFemale:
	.byte	0xbb
	.byte	0xdc
	.byte	0xd5
	.byte	0xdc
	.byte	0xd5
	.byte	0xab
	.byte	0xfe
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xd6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_ThatsFunnyFemale,28
	.globl	sText_RandomChatFemale1
	.align	2, 0
	.type	 sText_RandomChatFemale1,object
sText_RandomChatFemale1:
	.byte	0xd3
	.byte	0xd9
	.byte	0xe7
	.byte	0xb8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd9
	.byte	0xec
	.byte	0xd5
	.byte	0xd7
	.byte	0xe8
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xab
	.byte	0xfe
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RandomChatFemale1,46
	.globl	sText_RandomChatFemale2
	.align	2, 0
	.type	 sText_RandomChatFemale2,object
sText_RandomChatFemale2:
	.byte	0xc3
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xeb
	.byte	0xe3
	.byte	0xe6
	.byte	0xd8
	.byte	0xe7
	.byte	0xb0
	.byte	0xfe
	.byte	0xd3
	.byte	0xd9
	.byte	0xe7
	.byte	0xab
	.byte	0x0
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_RandomChatFemale2,36
	.globl	sChatReactionTexts
	.align	2, 0
	.type	 sChatReactionTexts,object
	.size	 sChatReactionTexts,32
sChatReactionTexts:
	.word	sText_LearnedSomethingMale
	.word	sText_ThatsFunnyMale
	.word	sText_RandomChatMale1
	.word	sText_RandomChatMale2
	.word	sText_LearnedSomethingFemale
	.word	sText_ThatsFunnyFemale
	.word	sText_RandomChatFemale1
	.word	sText_RandomChatFemale2
	.globl	sText_ShowedTrainerCardMale1
	.align	2, 0
	.type	 sText_ShowedTrainerCardMale1,object
sText_ShowedTrainerCardMale1:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xfe
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xdb
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowedTrainerCardMale1,57
	.globl	sText_ShowedTrainerCardMale2
	.align	2, 0
	.type	 sText_ShowedTrainerCardMale2,object
sText_ShowedTrainerCardMale2:
	.byte	0xc3
	.byte	0x0
	.byte	0xdc
	.byte	0xe3
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdf
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe8
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowedTrainerCardMale2,34
	.globl	sText_ShowedTrainerCardFemale1
	.align	2, 0
	.type	 sText_ShowedTrainerCardFemale1,object
sText_ShowedTrainerCardFemale1:
	.byte	0xd1
	.byte	0xd9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xe3
	.byte	0xeb
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xcd
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xd7
	.byte	0xe5
	.byte	0xe9
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowedTrainerCardFemale1,63
	.globl	sText_ShowedTrainerCardFemale2
	.align	2, 0
	.type	 sText_ShowedTrainerCardFemale2,object
sText_ShowedTrainerCardFemale2:
	.byte	0xc1
	.byte	0xe0
	.byte	0xd5
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ShowedTrainerCardFemale2,47
	.globl	sTrainerCardReactionTexts
	.align	2, 0
	.type	 sTrainerCardReactionTexts,object
	.size	 sTrainerCardReactionTexts,16
sTrainerCardReactionTexts:
	.word	sText_ShowedTrainerCardMale1
	.word	sText_ShowedTrainerCardMale2
	.word	sText_ShowedTrainerCardFemale1
	.word	sText_ShowedTrainerCardFemale2
	.globl	sText_MaleTraded1
	.align	2, 0
	.type	 sText_MaleTraded1,object
sText_MaleTraded1:
	.byte	0xd3
	.byte	0xd9
	.byte	0xd5
	.byte	0xdc
	.byte	0xd5
	.byte	0xdc
	.byte	0xab
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_MaleTraded1,39
	.globl	sText_MaleTraded2
	.align	2, 0
	.type	 sText_MaleTraded2,object
sText_MaleTraded2:
	.byte	0xc0
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xc3
	.byte	0xb4
	.byte	0xd8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_MaleTraded2,62
	.globl	sText_FemaleTraded1
	.align	2, 0
	.type	 sText_FemaleTraded1,object
sText_FemaleTraded1:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_FemaleTraded1,32
	.globl	sText_FemaleTraded2
	.align	2, 0
	.type	 sText_FemaleTraded2,object
sText_FemaleTraded2:
	.byte	0xc3
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe2
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xc3
	.byte	0xfe
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_FemaleTraded2,49
	.globl	sTradeReactionTexts
	.align	2, 0
	.type	 sTradeReactionTexts,object
	.size	 sTradeReactionTexts,32
sTradeReactionTexts:
	.word	sText_MaleTraded1
	.word	sText_MaleTraded2
	.space	8
	.word	sText_FemaleTraded1
	.word	sText_FemaleTraded2
	.space	8
	.globl	sText_XCheckedTradingBoard
	.align	2, 0
	.type	 sText_XCheckedTradingBoard,object
sText_XCheckedTradingBoard:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0x0
	.byte	0xbc
	.byte	0xc9
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_XCheckedTradingBoard,31
	.globl	sText_RegisterMonAtTradingBoard
	.align	2, 0
	.type	 sText_RegisterMonAtTradingBoard,object
sText_RegisterMonAtTradingBoard:
	.byte	0xd1
	.byte	0xd9
	.byte	0xe0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0x0
	.byte	0xbc
	.byte	0xc9
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfb
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xac
	.byte	0xff
	.size	 sText_RegisterMonAtTradingBoard,137
	.globl	sText_TradingBoardInfo
	.align	2, 0
	.type	 sText_TradingBoardInfo,object
sText_TradingBoardInfo:
	.byte	0xce
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0x0
	.byte	0xbc
	.byte	0xc9
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xbb
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xed
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xed
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xe3
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xfa
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xcd
	.byte	0xad
	.byte	0xfb
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xac
	.byte	0xff
	.size	 sText_TradingBoardInfo,313
	.globl	sText_ThankYouForRegistering
	.align	2, 0
	.type	 sText_ThankYouForRegistering,object
sText_ThankYouForRegistering:
	.byte	0xd1
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0x0
	.byte	0xbc
	.byte	0xc9
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfb
	.byte	0xce
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdf
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe9
	.byte	0xe7
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe6
	.byte	0xea
	.byte	0xdd
	.byte	0xd7
	.byte	0xd9
	.byte	0xab
	.byte	0xfb
	.byte	0xff
	.size	 sText_ThankYouForRegistering,99
	.globl	sText_NobodyHasRegistered
	.align	2, 0
	.type	 sText_NobodyHasRegistered,object
sText_NobodyHasRegistered:
	.byte	0xc8
	.byte	0xe3
	.byte	0xd6
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0x0
	.byte	0xbc
	.byte	0xc9
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfb
	.byte	0xfe
	.byte	0xff
	.size	 sText_NobodyHasRegistered,68
	.globl	sText_ChooseRequestedMonType
	.align	2, 0
	.type	 sText_ChooseRequestedMonType,object
sText_ChooseRequestedMonType:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xad
	.byte	0xfe
	.byte	0xff
	.size	 sText_ChooseRequestedMonType,69
	.globl	sText_WhichMonWillYouOffer
	.align	2, 0
	.type	 sText_WhichMonWillYouOffer,object
sText_WhichMonWillYouOffer:
	.byte	0xd1
	.byte	0xdc
	.byte	0xdd
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xac
	.byte	0xfb
	.byte	0xff
	.size	 sText_WhichMonWillYouOffer,54
	.globl	sText_RegistrationCanceled
	.align	2, 0
	.type	 sText_RegistrationCanceled,object
sText_RegistrationCanceled:
	.byte	0xcc
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RegistrationCanceled,33
	.globl	sText_RegistraionCompleted
	.align	2, 0
	.type	 sText_RegistraionCompleted,object
sText_RegistraionCompleted:
	.byte	0xcc
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xe4
	.byte	0xe0
	.byte	0xd9
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RegistraionCompleted,34
	.globl	sText_TradeCanceled
	.align	2, 0
	.type	 sText_TradeCanceled,object
sText_TradeCanceled:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_TradeCanceled,30
	.globl	sText_CancelRegistrationOfMon
	.align	2, 0
	.type	 sText_CancelRegistrationOfMon,object
sText_CancelRegistrationOfMon:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xc6
	.byte	0xea
	.byte	0xad
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xac
	.byte	0xff
	.size	 sText_CancelRegistrationOfMon,43
	.globl	sText_CancelRegistrationOfEgg
	.align	2, 0
	.type	 sText_CancelRegistrationOfEgg,object
sText_CancelRegistrationOfEgg:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xfe
	.byte	0xbf
	.byte	0xc1
	.byte	0xc1
	.byte	0xac
	.byte	0xff
	.size	 sText_CancelRegistrationOfEgg,37
	.globl	sText_RegistrationCanceled2
	.align	2, 0
	.type	 sText_RegistrationCanceled2,object
sText_RegistrationCanceled2:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xe8
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_RegistrationCanceled2,37
	.globl	sText_TradeTrainersWillBeListed
	.align	2, 0
	.type	 sText_TradeTrainersWillBeListed,object
sText_TradeTrainersWillBeListed:
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xcd
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xfe
	.byte	0xeb
	.byte	0xdd
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.size	 sText_TradeTrainersWillBeListed,49
	.globl	sText_ChooseTrainerToTradeWith2
	.align	2, 0
	.type	 sText_ChooseTrainerToTradeWith2,object
sText_ChooseTrainerToTradeWith2:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xe3
	.byte	0xe1
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerToTradeWith2,69
	.globl	sText_AskTrainerToMakeTrade
	.align	2, 0
	.type	 sText_AskTrainerToMakeTrade,object
sText_AskTrainerToMakeTrade:
	.byte	0xd1
	.byte	0xe3
	.byte	0xe9
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0xdf
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xe1
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_AskTrainerToMakeTrade,42
	.globl	sText_AwaitingResponseFromTrainer2
	.align	2, 0
	.type	 sText_AwaitingResponseFromTrainer2,object
sText_AwaitingResponseFromTrainer2:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0xfe
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xb0
	.byte	0xff
	.size	 sText_AwaitingResponseFromTrainer2,44
	.globl	sText_NotRegisteredAMonForTrade
	.align	2, 0
	.type	 sText_NotRegisteredAMonForTrade,object
sText_NotRegisteredAMonForTrade:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xfe
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_NotRegisteredAMonForTrade,48
	.globl	sText_DontHaveTypeTrainerWants
	.align	2, 0
	.type	 sText_DontHaveTypeTrainerWants,object
sText_DontHaveTypeTrainerWants:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0xae
	.byte	0xe8
	.byte	0xed
	.byte	0xe4
	.byte	0xd9
	.byte	0xfe
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_DontHaveTypeTrainerWants,49
	.globl	sText_DontHaveEggTrainerWants
	.align	2, 0
	.type	 sText_DontHaveEggTrainerWants,object
sText_DontHaveEggTrainerWants:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xbf
	.byte	0xc1
	.byte	0xc1
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xe7
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_DontHaveEggTrainerWants,38
	.globl	sText_PlayerCantTradeForYourMon
	.align	2, 0
	.type	 sText_PlayerCantTradeForYourMon,object
sText_PlayerCantTradeForYourMon:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_PlayerCantTradeForYourMon,51
	.globl	sText_CantTradeForPartnersMon
	.align	2, 0
	.type	 sText_CantTradeForPartnersMon,object
sText_CantTradeForPartnersMon:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_CantTradeForPartnersMon,52
	.globl	sCantTradeMonTexts
	.align	2, 0
	.type	 sCantTradeMonTexts,object
sCantTradeMonTexts:
	.word	sText_PlayerCantTradeForYourMon
	.word	sText_CantTradeForPartnersMon
	.size	 sCantTradeMonTexts,8
	.globl	sText_TradeOfferRejected
	.align	2, 0
	.type	 sText_TradeOfferRejected,object
sText_TradeOfferRejected:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0xda
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xde
	.byte	0xd9
	.byte	0xd7
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_TradeOfferRejected,32
	.globl	sText_EggTrade
	.align	2, 0
	.type	 sText_EggTrade,object
sText_EggTrade:
	.byte	0xbf
	.byte	0xc1
	.byte	0xc1
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xff
	.size	 sText_EggTrade,10
	.globl	sText_ChooseJoinCancel
	.align	2, 0
	.type	 sText_ChooseJoinCancel,object
sText_ChooseJoinCancel:
	.byte	0xf8
	.byte	0xa
	.byte	0xbd
	.byte	0xc2
	.byte	0xc9
	.byte	0xc9
	.byte	0xcd
	.byte	0xbf
	.byte	0x0
	.byte	0x0
	.byte	0xf8
	.byte	0x0
	.byte	0xc4
	.byte	0xc9
	.byte	0xc3
	.byte	0xc8
	.byte	0x0
	.byte	0x0
	.byte	0xf8
	.byte	0x1
	.byte	0xbd
	.byte	0xbb
	.byte	0xc8
	.byte	0xbd
	.byte	0xbf
	.byte	0xc6
	.byte	0xff
	.size	 sText_ChooseJoinCancel,27
	.globl	sText_ChooseTrainer
	.align	2, 0
	.type	 sText_ChooseTrainer,object
sText_ChooseTrainer:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainer,25
	.globl	sText_ChooseTrainerSingleBattle
	.align	2, 0
	.type	 sText_ChooseTrainerSingleBattle,object
sText_ChooseTrainerSingleBattle:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xd5
	.byte	0x0
	.byte	0xcd
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerSingleBattle,45
	.globl	sText_ChooseTrainerDoubleBattle
	.align	2, 0
	.type	 sText_ChooseTrainerDoubleBattle,object
sText_ChooseTrainerDoubleBattle:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xfe
	.byte	0xd5
	.byte	0x0
	.byte	0xbe
	.byte	0xc9
	.byte	0xcf
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerDoubleBattle,45
	.globl	sText_ChooseLeaderMultiBattle
	.align	2, 0
	.type	 sText_ChooseLeaderMultiBattle,object
sText_ChooseLeaderMultiBattle:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xc7
	.byte	0xcf
	.byte	0xc6
	.byte	0xce
	.byte	0xc3
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderMultiBattle,45
	.globl	sText_ChooseTrainerToTradeWith
	.align	2, 0
	.type	 sText_ChooseTrainerToTradeWith,object
sText_ChooseTrainerToTradeWith:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xe8
	.byte	0xe6
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerToTradeWith,41
	.globl	sText_ChooseTrainerToShareWonderCards
	.align	2, 0
	.type	 sText_ChooseTrainerToShareWonderCards,object
sText_ChooseTrainerToShareWonderCards:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0xfe
	.byte	0xe7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd1
	.byte	0xc9
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xcd
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerToShareWonderCards,55
	.globl	sText_ChooseTrainerToShareWonderNews
	.align	2, 0
	.type	 sText_ChooseTrainerToShareWonderNews,object
sText_ChooseTrainerToShareWonderNews:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xe3
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0xfe
	.byte	0xe7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd1
	.byte	0xc9
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc8
	.byte	0xbf
	.byte	0xd1
	.byte	0xcd
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseTrainerToShareWonderNews,54
	.globl	sText_ChooseLeaderPokemonJump
	.align	2, 0
	.type	 sText_ChooseLeaderPokemonJump,object
sText_ChooseLeaderPokemonJump:
	.byte	0xc4
	.byte	0xe9
	.byte	0xe1
	.byte	0xe4
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xe1
	.byte	0xdd
	.byte	0xe2
	.byte	0xdd
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderPokemonJump,50
	.globl	sText_ChooseLeaderBerryCrush
	.align	2, 0
	.type	 sText_ChooseLeaderBerryCrush,object
sText_ChooseLeaderBerryCrush:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbd
	.byte	0xcc
	.byte	0xcf
	.byte	0xcd
	.byte	0xc2
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBerryCrush,39
	.globl	sText_ChooseLeaderBerryPicking
	.align	2, 0
	.type	 sText_ChooseLeaderBerryPicking,object
sText_ChooseLeaderBerryPicking:
	.byte	0xbe
	.byte	0xc9
	.byte	0xbe
	.byte	0xcc
	.byte	0xc3
	.byte	0xc9
	.byte	0x0
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0xae
	.byte	0xca
	.byte	0xc3
	.byte	0xbd
	.byte	0xc5
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBerryPicking,48
	.globl	sText_ChooseLeaderBerryBlender
	.align	2, 0
	.type	 sText_ChooseLeaderBerryBlender,object
sText_ChooseLeaderBerryBlender:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBerryBlender,41
	.globl	sText_ChooseLeaderRecordCorner
	.align	2, 0
	.type	 sText_ChooseLeaderRecordCorner,object
sText_ChooseLeaderRecordCorner:
	.byte	0xcc
	.byte	0xbf
	.byte	0xbd
	.byte	0xc9
	.byte	0xcc
	.byte	0xbe
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xcc
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderRecordCorner,41
	.globl	sText_ChooseLeaderCoolContest
	.align	2, 0
	.type	 sText_ChooseLeaderCoolContest,object
sText_ChooseLeaderCoolContest:
	.byte	0xbd
	.byte	0xc9
	.byte	0xc9
	.byte	0xc6
	.byte	0xc8
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderCoolContest,44
	.globl	sText_ChooseLeaderBeautyContest
	.align	2, 0
	.type	 sText_ChooseLeaderBeautyContest,object
sText_ChooseLeaderBeautyContest:
	.byte	0xbc
	.byte	0xbf
	.byte	0xbb
	.byte	0xcf
	.byte	0xce
	.byte	0xd3
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBeautyContest,42
	.globl	sText_ChooseLeaderCuteContest
	.align	2, 0
	.type	 sText_ChooseLeaderCuteContest,object
sText_ChooseLeaderCuteContest:
	.byte	0xbd
	.byte	0xcf
	.byte	0xce
	.byte	0xbf
	.byte	0xc8
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderCuteContest,44
	.globl	sText_ChooseLeaderSmartContest
	.align	2, 0
	.type	 sText_ChooseLeaderSmartContest,object
sText_ChooseLeaderSmartContest:
	.byte	0xcd
	.byte	0xc7
	.byte	0xbb
	.byte	0xcc
	.byte	0xce
	.byte	0xc8
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderSmartContest,45
	.globl	sText_ChooseLeaderToughContest
	.align	2, 0
	.type	 sText_ChooseLeaderToughContest,object
sText_ChooseLeaderToughContest:
	.byte	0xce
	.byte	0xc9
	.byte	0xcf
	.byte	0xc1
	.byte	0xc2
	.byte	0xc8
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderToughContest,45
	.globl	sText_ChooseLeaderBattleTowerLv50
	.align	2, 0
	.type	 sText_ChooseLeaderBattleTowerLv50,object
sText_ChooseLeaderBattleTowerLv50:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xce
	.byte	0xc9
	.byte	0xd1
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xd0
	.byte	0xbf
	.byte	0xc6
	.byte	0x0
	.byte	0xa6
	.byte	0xa1
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBattleTowerLv50,49
	.globl	sText_ChooseLeaderBattleTowerOpenLv
	.align	2, 0
	.type	 sText_ChooseLeaderBattleTowerOpenLv,object
sText_ChooseLeaderBattleTowerOpenLv:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xce
	.byte	0xc9
	.byte	0xd1
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc9
	.byte	0xca
	.byte	0xbf
	.byte	0xc8
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xd0
	.byte	0xbf
	.byte	0xc6
	.byte	0xab
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xad
	.byte	0xff
	.size	 sText_ChooseLeaderBattleTowerOpenLv,51
	.align	2, 0
	.type	 sChooseTrainerTexts,object
	.size	 sChooseTrainerTexts,88
sChooseTrainerTexts:
	.word	sText_ChooseTrainerSingleBattle
	.word	sText_ChooseTrainerDoubleBattle
	.word	sText_ChooseLeaderMultiBattle
	.word	sText_ChooseTrainerToTradeWith
	.word	sText_ChooseLeaderPokemonJump
	.word	sText_ChooseLeaderBerryCrush
	.word	sText_ChooseLeaderBerryPicking
	.word	sText_ChooseTrainerToShareWonderCards
	.word	sText_ChooseTrainerToShareWonderNews
	.word	0x0
	.word	0x0
	.word	0x0
	.word	sText_ChooseLeaderRecordCorner
	.word	sText_ChooseLeaderBerryBlender
	.word	0x0
	.word	sText_ChooseLeaderCoolContest
	.word	sText_ChooseLeaderBeautyContest
	.word	sText_ChooseLeaderCuteContest
	.word	sText_ChooseLeaderSmartContest
	.word	sText_ChooseLeaderToughContest
	.word	sText_ChooseLeaderBattleTowerLv50
	.word	sText_ChooseLeaderBattleTowerOpenLv
	.globl	sText_SearchingForWirelessSystemWait
	.align	2, 0
	.type	 sText_SearchingForWirelessSystemWait,object
sText_SearchingForWirelessSystemWait:
	.byte	0xcd
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd1
	.byte	0xc3
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0xfe
	.byte	0xbd
	.byte	0xc9
	.byte	0xc7
	.byte	0xc7
	.byte	0xcf
	.byte	0xc8
	.byte	0xc3
	.byte	0xbd
	.byte	0xbb
	.byte	0xce
	.byte	0xc3
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xcd
	.byte	0xd3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xc7
	.byte	0xad
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xad
	.byte	0xad
	.byte	0xff
	.size	 sText_SearchingForWirelessSystemWait,55
	.globl	sText_MustHaveTwoMonsForDoubleBattle
	.align	2, 0
	.type	 sText_MustHaveTwoMonsForDoubleBattle,object
sText_MustHaveTwoMonsForDoubleBattle:
	.byte	0xc0
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xbe
	.byte	0xc9
	.byte	0xcf
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xb8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe1
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0xfe
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xeb
	.byte	0xe3
	.byte	0x0
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0xad
	.byte	0xfb
	.byte	0xff
	.size	 sText_MustHaveTwoMonsForDoubleBattle,58
	.globl	sText_AwaitingPlayersResponse
	.align	2, 0
	.type	 sText_AwaitingPlayersResponse,object
sText_AwaitingPlayersResponse:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xb0
	.byte	0xff
	.size	 sText_AwaitingPlayersResponse,24
	.globl	sText_PlayerHasBeenAskedToRegisterYouPleaseWait
	.align	2, 0
	.type	 sText_PlayerHasBeenAskedToRegisterYouPleaseWait,object
sText_PlayerHasBeenAskedToRegisterYouPleaseWait:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xd9
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0xdf
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0xfe
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0x0
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_PlayerHasBeenAskedToRegisterYouPleaseWait,60
	.globl	sText_AwaitingResponseFromWirelessSystem
	.align	2, 0
	.type	 sText_AwaitingResponseFromWirelessSystem,object
sText_AwaitingResponseFromWirelessSystem:
	.byte	0xbb
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe4
	.byte	0xe3
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xfe
	.byte	0xd1
	.byte	0xc3
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xcd
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc7
	.byte	0xc7
	.byte	0xcf
	.byte	0xc8
	.byte	0xc3
	.byte	0xbd
	.byte	0xbb
	.byte	0xce
	.byte	0xc3
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xcd
	.byte	0xd3
	.byte	0xcd
	.byte	0xce
	.byte	0xbf
	.byte	0xc7
	.byte	0xad
	.byte	0xff
	.size	 sText_AwaitingResponseFromWirelessSystem,60
	.globl	sText_PleaseWaitForOtherTrainersToGather
	.align	2, 0
	.type	 sText_PleaseWaitForOtherTrainersToGather,object
sText_PleaseWaitForOtherTrainersToGather:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xcd
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xdb
	.byte	0xd5
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_PleaseWaitForOtherTrainersToGather,56
	.globl	sText_NoCardsSharedRightNow
	.align	2, 0
	.type	 sText_NoCardsSharedRightNow,object
sText_NoCardsSharedRightNow:
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xcd
	.byte	0x0
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xfe
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xff
	.size	 sText_NoCardsSharedRightNow,41
	.globl	sText_NoNewsSharedRightNow
	.align	2, 0
	.type	 sText_NoNewsSharedRightNow,object
sText_NoNewsSharedRightNow:
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xc8
	.byte	0xbf
	.byte	0xd1
	.byte	0xcd
	.byte	0x0
	.byte	0xd5
	.byte	0xe4
	.byte	0xe4
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xfe
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xad
	.byte	0xff
	.size	 sText_NoNewsSharedRightNow,40
	.globl	sNoWonderSharedTexts
	.align	2, 0
	.type	 sNoWonderSharedTexts,object
sNoWonderSharedTexts:
	.word	sText_NoCardsSharedRightNow
	.word	sText_NoNewsSharedRightNow
	.size	 sNoWonderSharedTexts,8
	.globl	sText_Battle
	.align	2, 0
	.type	 sText_Battle,object
sText_Battle:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sText_Battle,7
	.globl	sText_Chat2
	.align	2, 0
	.type	 sText_Chat2,object
sText_Chat2:
	.byte	0xbd
	.byte	0xc2
	.byte	0xbb
	.byte	0xce
	.byte	0xff
	.size	 sText_Chat2,5
	.globl	sText_Greetings
	.align	2, 0
	.type	 sText_Greetings,object
sText_Greetings:
	.byte	0xc1
	.byte	0xcc
	.byte	0xbf
	.byte	0xbf
	.byte	0xce
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xcd
	.byte	0xff
	.size	 sText_Greetings,10
	.globl	sText_Exit
	.align	2, 0
	.type	 sText_Exit,object
sText_Exit:
	.byte	0xbf
	.byte	0xd2
	.byte	0xc3
	.byte	0xce
	.byte	0xff
	.size	 sText_Exit,5
	.globl	sText_Exit2
	.align	2, 0
	.type	 sText_Exit2,object
sText_Exit2:
	.byte	0xbf
	.byte	0xd2
	.byte	0xc3
	.byte	0xce
	.byte	0xff
	.size	 sText_Exit2,5
	.globl	sText_Info
	.align	2, 0
	.type	 sText_Info,object
sText_Info:
	.byte	0xc3
	.byte	0xc8
	.byte	0xc0
	.byte	0xc9
	.byte	0xff
	.size	 sText_Info,5
	.globl	sText_NameWantedOfferLv
	.align	2, 0
	.type	 sText_NameWantedOfferLv,object
sText_NameWantedOfferLv:
	.byte	0xc8
	.byte	0xbb
	.byte	0xc7
	.byte	0xbf
	.byte	0xfc
	.byte	0x13
	.byte	0x3c
	.byte	0xd1
	.byte	0xbb
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xbe
	.byte	0xfc
	.byte	0x13
	.byte	0x6e
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xbf
	.byte	0xcc
	.byte	0xfc
	.byte	0x13
	.byte	0xc6
	.byte	0xc6
	.byte	0xd0
	.byte	0xad
	.byte	0xff
	.size	 sText_NameWantedOfferLv,28
	.globl	sText_SingleBattle
	.align	2, 0
	.type	 sText_SingleBattle,object
sText_SingleBattle:
	.byte	0xcd
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sText_SingleBattle,14
	.globl	sText_DoubleBattle
	.align	2, 0
	.type	 sText_DoubleBattle,object
sText_DoubleBattle:
	.byte	0xbe
	.byte	0xc9
	.byte	0xcf
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sText_DoubleBattle,14
	.globl	sText_MultiBattle
	.align	2, 0
	.type	 sText_MultiBattle,object
sText_MultiBattle:
	.byte	0xc7
	.byte	0xcf
	.byte	0xc6
	.byte	0xce
	.byte	0xc3
	.byte	0x0
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sText_MultiBattle,13
	.globl	sText_PokemonTrades
	.align	2, 0
	.type	 sText_PokemonTrades,object
sText_PokemonTrades:
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcd
	.byte	0xff
	.size	 sText_PokemonTrades,15
	.globl	sText_Chat
	.align	2, 0
	.type	 sText_Chat,object
sText_Chat:
	.byte	0xbd
	.byte	0xc2
	.byte	0xbb
	.byte	0xce
	.byte	0xff
	.size	 sText_Chat,5
	.globl	sText_Cards
	.align	2, 0
	.type	 sText_Cards,object
sText_Cards:
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xcd
	.byte	0xff
	.size	 sText_Cards,6
	.globl	sText_WonderCards
	.align	2, 0
	.type	 sText_WonderCards,object
sText_WonderCards:
	.byte	0xd1
	.byte	0xc9
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xcd
	.byte	0xff
	.size	 sText_WonderCards,13
	.globl	sText_WonderNews
	.align	2, 0
	.type	 sText_WonderNews,object
sText_WonderNews:
	.byte	0xd1
	.byte	0xc9
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc8
	.byte	0xbf
	.byte	0xd1
	.byte	0xcd
	.byte	0xff
	.size	 sText_WonderNews,12
	.globl	sText_PokemonJump
	.align	2, 0
	.type	 sText_PokemonJump,object
sText_PokemonJump:
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xc7
	.byte	0xc9
	.byte	0xc8
	.byte	0x0
	.byte	0xc4
	.byte	0xcf
	.byte	0xc7
	.byte	0xca
	.byte	0xff
	.size	 sText_PokemonJump,13
	.globl	sText_BerryCrush
	.align	2, 0
	.type	 sText_BerryCrush,object
sText_BerryCrush:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbd
	.byte	0xcc
	.byte	0xcf
	.byte	0xcd
	.byte	0xc2
	.byte	0xff
	.size	 sText_BerryCrush,12
	.globl	sText_BerryPicking
	.align	2, 0
	.type	 sText_BerryPicking,object
sText_BerryPicking:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0xae
	.byte	0xca
	.byte	0xc3
	.byte	0xbd
	.byte	0xc5
	.byte	0xc3
	.byte	0xc8
	.byte	0xc1
	.byte	0xff
	.size	 sText_BerryPicking,14
	.globl	sText_Search
	.align	2, 0
	.type	 sText_Search,object
sText_Search:
	.byte	0xcd
	.byte	0xbf
	.byte	0xbb
	.byte	0xcc
	.byte	0xbd
	.byte	0xc2
	.byte	0xff
	.size	 sText_Search,7
	.globl	sText_BerryBlender
	.align	2, 0
	.type	 sText_BerryBlender,object
sText_BerryBlender:
	.byte	0xbc
	.byte	0xbf
	.byte	0xcc
	.byte	0xcc
	.byte	0xd3
	.byte	0x0
	.byte	0xbc
	.byte	0xc6
	.byte	0xbf
	.byte	0xc8
	.byte	0xbe
	.byte	0xbf
	.byte	0xcc
	.byte	0xff
	.size	 sText_BerryBlender,14
	.globl	sText_RecordCorner
	.align	2, 0
	.type	 sText_RecordCorner,object
sText_RecordCorner:
	.byte	0xcc
	.byte	0xbf
	.byte	0xbd
	.byte	0xc9
	.byte	0xcc
	.byte	0xbe
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xcc
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0xff
	.size	 sText_RecordCorner,14
	.globl	sText_CoolContest
	.align	2, 0
	.type	 sText_CoolContest,object
sText_CoolContest:
	.byte	0xbd
	.byte	0xc9
	.byte	0xc9
	.byte	0xc6
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sText_CoolContest,13
	.globl	sText_BeautyContest
	.align	2, 0
	.type	 sText_BeautyContest,object
sText_BeautyContest:
	.byte	0xbc
	.byte	0xbf
	.byte	0xbb
	.byte	0xcf
	.byte	0xce
	.byte	0xd3
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sText_BeautyContest,15
	.globl	sText_CuteContest
	.align	2, 0
	.type	 sText_CuteContest,object
sText_CuteContest:
	.byte	0xbd
	.byte	0xcf
	.byte	0xce
	.byte	0xbf
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sText_CuteContest,13
	.globl	sText_SmartContest
	.align	2, 0
	.type	 sText_SmartContest,object
sText_SmartContest:
	.byte	0xcd
	.byte	0xc7
	.byte	0xbb
	.byte	0xcc
	.byte	0xce
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sText_SmartContest,14
	.globl	sText_ToughContest
	.align	2, 0
	.type	 sText_ToughContest,object
sText_ToughContest:
	.byte	0xce
	.byte	0xc9
	.byte	0xcf
	.byte	0xc1
	.byte	0xc2
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xc8
	.byte	0xce
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sText_ToughContest,14
	.globl	sText_BattleTowerLv50
	.align	2, 0
	.type	 sText_BattleTowerLv50,object
sText_BattleTowerLv50:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xce
	.byte	0xc9
	.byte	0xd1
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc6
	.byte	0xd0
	.byte	0xad
	.byte	0x0
	.byte	0xa6
	.byte	0xa1
	.byte	0xff
	.size	 sText_BattleTowerLv50,20
	.globl	sText_BattleTowerOpenLv
	.align	2, 0
	.type	 sText_BattleTowerOpenLv,object
sText_BattleTowerOpenLv:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0x0
	.byte	0xce
	.byte	0xc9
	.byte	0xd1
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xc9
	.byte	0xca
	.byte	0xbf
	.byte	0xc8
	.byte	0x0
	.byte	0xc6
	.byte	0xbf
	.byte	0xd0
	.byte	0xbf
	.byte	0xc6
	.byte	0xff
	.size	 sText_BattleTowerOpenLv,24
	.globl	sText_ItsNormalCard
	.align	2, 0
	.type	 sText_ItsNormalCard,object
sText_ItsNormalCard:
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xc8
	.byte	0xc9
	.byte	0xcc
	.byte	0xc7
	.byte	0xbb
	.byte	0xc6
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xff
	.size	 sText_ItsNormalCard,20
	.globl	sText_ItsBronzeCard
	.align	2, 0
	.type	 sText_ItsBronzeCard,object
sText_ItsBronzeCard:
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xbc
	.byte	0xcc
	.byte	0xc9
	.byte	0xc8
	.byte	0xd4
	.byte	0xbf
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xab
	.byte	0xff
	.size	 sText_ItsBronzeCard,20
	.globl	sText_ItsCopperCard
	.align	2, 0
	.type	 sText_ItsCopperCard,object
sText_ItsCopperCard:
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xbd
	.byte	0xc9
	.byte	0xca
	.byte	0xca
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xab
	.byte	0xff
	.size	 sText_ItsCopperCard,20
	.globl	sText_ItsSilverCard
	.align	2, 0
	.type	 sText_ItsSilverCard,object
sText_ItsSilverCard:
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xcd
	.byte	0xc3
	.byte	0xc6
	.byte	0xd0
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xab
	.byte	0xff
	.size	 sText_ItsSilverCard,20
	.globl	sText_ItsGoldCard
	.align	2, 0
	.type	 sText_ItsGoldCard,object
sText_ItsGoldCard:
	.byte	0xc3
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xc1
	.byte	0xc9
	.byte	0xc6
	.byte	0xbe
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xab
	.byte	0xff
	.size	 sText_ItsGoldCard,18
	.align	2, 0
	.type	 sCardColorTexts,object
sCardColorTexts:
	.word	sText_ItsNormalCard
	.word	sText_ItsBronzeCard
	.word	sText_ItsCopperCard
	.word	sText_ItsSilverCard
	.word	sText_ItsGoldCard
	.size	 sCardColorTexts,20
	.globl	sText_TrainerCardInfoPage1
	.align	2, 0
	.type	 sText_TrainerCardInfoPage1,object
sText_TrainerCardInfoPage1:
	.byte	0xce
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xf7
	.byte	0x0
	.byte	0x0
	.byte	0xf7
	.byte	0x1
	.byte	0xb4
	.byte	0xe7
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xb0
	.byte	0xfa
	.byte	0xf7
	.byte	0x2
	.byte	0xfb
	.byte	0xca
	.byte	0xc9
	.byte	0xc5
	.byte	0x1b
	.byte	0xbe
	.byte	0xbf
	.byte	0xd2
	.byte	0xf0
	.byte	0x0
	.byte	0xf7
	.byte	0x3
	.byte	0xfe
	.byte	0xce
	.byte	0xc3
	.byte	0xc7
	.byte	0xbf
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf7
	.byte	0x4
	.byte	0xf0
	.byte	0xf7
	.byte	0x5
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainerCardInfoPage1,61
	.globl	sText_TrainerCardInfoPage2
	.align	2, 0
	.type	 sText_TrainerCardInfoPage2,object
sText_TrainerCardInfoPage2:
	.byte	0xbc
	.byte	0xbb
	.byte	0xce
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xcd
	.byte	0xf0
	.byte	0x0
	.byte	0xd1
	.byte	0xc3
	.byte	0xc8
	.byte	0xcd
	.byte	0xf0
	.byte	0x0
	.byte	0xf7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc6
	.byte	0xc9
	.byte	0xcd
	.byte	0xcd
	.byte	0xbf
	.byte	0xcd
	.byte	0xf0
	.byte	0x0
	.byte	0xf7
	.byte	0x2
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xbe
	.byte	0xbf
	.byte	0xcd
	.byte	0xf0
	.byte	0x0
	.byte	0xf7
	.byte	0x3
	.byte	0xfb
	.byte	0xb1
	.byte	0xf7
	.byte	0x4
	.byte	0x0
	.byte	0xf7
	.byte	0x5
	.byte	0xfe
	.byte	0xf7
	.byte	0x6
	.byte	0x0
	.byte	0xf7
	.byte	0x7
	.byte	0xb2
	.byte	0xfb
	.byte	0xff
	.size	 sText_TrainerCardInfoPage2,56
	.globl	sText_GladToMeetYouMale
	.align	2, 0
	.type	 sText_GladToMeetYouMale,object
sText_GladToMeetYouMale:
	.byte	0xf7
	.byte	0x1
	.byte	0xf0
	.byte	0x0
	.byte	0xc1
	.byte	0xe0
	.byte	0xd5
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xab
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_GladToMeetYouMale,29
	.globl	sText_GladToMeetYouFemale
	.align	2, 0
	.type	 sText_GladToMeetYouFemale,object
sText_GladToMeetYouFemale:
	.byte	0xf7
	.byte	0x1
	.byte	0xf0
	.byte	0x0
	.byte	0xc1
	.byte	0xe0
	.byte	0xd5
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xab
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_GladToMeetYouFemale,25
	.globl	sGladToMeetYouTexts
	.align	2, 0
	.type	 sGladToMeetYouTexts,object
	.size	 sGladToMeetYouTexts,8
sGladToMeetYouTexts:
	.word	sText_GladToMeetYouMale
	.word	sText_GladToMeetYouFemale
	.globl	sText_FinishedCheckingPlayersTrainerCard
	.align	2, 0
	.type	 sText_FinishedCheckingPlayersTrainerCard,object
sText_FinishedCheckingPlayersTrainerCard:
	.byte	0xc0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdd
	.byte	0xe7
	.byte	0xdc
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xf7
	.byte	0x1
	.byte	0xb4
	.byte	0xe7
	.byte	0xfe
	.byte	0xce
	.byte	0xcc
	.byte	0xbb
	.byte	0xc3
	.byte	0xc8
	.byte	0xbf
	.byte	0xcc
	.byte	0x0
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xad
	.byte	0xfc
	.byte	0x8
	.byte	0x3c
	.byte	0xff
	.size	 sText_FinishedCheckingPlayersTrainerCard,40
	.globl	sLinkGroupActivityTexts
	.align	2, 0
	.type	 sLinkGroupActivityTexts,object
sLinkGroupActivityTexts:
	.word	sText_EmptyString
	.word	sText_SingleBattle
	.word	sText_DoubleBattle
	.word	sText_MultiBattle
	.word	sText_PokemonTrades
	.word	sText_Chat
	.word	sText_WonderCards
	.word	sText_WonderNews
	.word	sText_Cards
	.word	sText_PokemonJump
	.word	sText_BerryCrush
	.word	sText_BerryPicking
	.word	sText_Search
	.word	sText_EmptyString
	.word	sText_BattleTowerOpenLv
	.word	sText_RecordCorner
	.word	sText_BerryBlender
	.word	sText_EmptyString
	.word	sText_EmptyString
	.word	sText_EmptyString
	.word	sText_EmptyString
	.word	sText_WonderCards
	.word	sText_WonderNews
	.word	sText_CoolContest
	.word	sText_BeautyContest
	.word	sText_CuteContest
	.word	sText_SmartContest
	.word	sText_ToughContest
	.word	sText_BattleTowerLv50
	.size	 sLinkGroupActivityTexts,116
	.globl	gUnknown_082F00BC
	.align	2, 0
	.type	 gUnknown_082F00BC,object
	.size	 gUnknown_082F00BC,8
gUnknown_082F00BC:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xf
	.short	0x8
	.globl	gUnknown_082F00C4
	.align	2, 0
	.type	 gUnknown_082F00C4,object
	.size	 gUnknown_082F00C4,88
gUnknown_082F00C4:
	.word	0x201
	.word	0x202
	.word	0x403
	.word	0x204
	.word	0x2509
	.word	0x250a
	.word	0x350b
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x240f
	.word	0x2410
	.word	0x0
	.word	0x2417
	.word	0x2418
	.word	0x2419
	.word	0x241a
	.word	0x241b
	.word	0x21c
	.word	0x20e
	.globl	gUnknown_082F011C
	.align	2, 0
	.type	 gUnknown_082F011C,object
	.size	 gUnknown_082F011C,8
gUnknown_082F011C:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0xd
	.byte	0x8
	.byte	0xf
	.short	0x44
	.globl	gUnknown_082F0124
	.align	2, 0
	.type	 gUnknown_082F0124,object
	.size	 gUnknown_082F0124,8
gUnknown_082F0124:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0xd
	.byte	0xa
	.byte	0xf
	.short	0x44
	.globl	gUnknown_082F012C
	.align	2, 0
	.type	 gUnknown_082F012C,object
	.size	 gUnknown_082F012C,8
gUnknown_082F012C:
	.byte	0x0
	.byte	0x10
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xc6
	.globl	gUnknown_082F0134
	.align	2, 0
	.type	 gUnknown_082F0134,object
gUnknown_082F0134:
	.word	sText_EmptyString
	.word	0x0
	.word	sText_EmptyString
	.word	0x1
	.word	sText_EmptyString
	.word	0x2
	.word	sText_EmptyString
	.word	0x3
	.word	sText_EmptyString
	.word	0x4
	.size	 gUnknown_082F0134,40
	.globl	gUnknown_082F015C
	.align	2, 0
	.type	 gUnknown_082F015C,object
	.size	 gUnknown_082F015C,24
gUnknown_082F015C:
	.word	gUnknown_082F0134
	.word	0x0
	.word	sub_8013278
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x41
	.globl	gUnknown_082F0174
	.align	2, 0
	.type	 gUnknown_082F0174,object
	.size	 gUnknown_082F0174,8
gUnknown_082F0174:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x11
	.byte	0xa
	.byte	0xf
	.short	0x44
	.globl	gUnknown_082F017C
	.align	2, 0
	.type	 gUnknown_082F017C,object
	.size	 gUnknown_082F017C,8
gUnknown_082F017C:
	.byte	0x0
	.byte	0x14
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xee
	.globl	gUnknown_082F0184
	.align	2, 0
	.type	 gUnknown_082F0184,object
gUnknown_082F0184:
	.word	sText_EmptyString
	.word	0x0
	.word	sText_EmptyString
	.word	0x1
	.word	sText_EmptyString
	.word	0x2
	.word	sText_EmptyString
	.word	0x3
	.word	sText_EmptyString
	.word	0x4
	.word	sText_EmptyString
	.word	0x5
	.word	sText_EmptyString
	.word	0x6
	.word	sText_EmptyString
	.word	0x7
	.word	sText_EmptyString
	.word	0x8
	.word	sText_EmptyString
	.word	0x9
	.word	sText_EmptyString
	.word	0xa
	.word	sText_EmptyString
	.word	0xb
	.word	sText_EmptyString
	.word	0xc
	.word	sText_EmptyString
	.word	0xd
	.word	sText_EmptyString
	.word	0xe
	.word	sText_EmptyString
	.word	0xf
	.size	 gUnknown_082F0184,128
	.globl	gUnknown_082F0204
	.align	2, 0
	.type	 gUnknown_082F0204,object
	.size	 gUnknown_082F0204,24
gUnknown_082F0204:
	.word	gUnknown_082F0184
	.word	ListMenuDefaultCursorMoveFunc
	.word	sub_8013DF4
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x40
	.byte	0x1
	.globl	gUnknown_082F021C
	.align	2, 0
	.type	 gUnknown_082F021C,object
	.size	 gUnknown_082F021C,8
gUnknown_082F021C:
	.byte	0x0
	.byte	0x14
	.byte	0x5
	.byte	0x10
	.byte	0x8
	.byte	0xf
	.short	0x1
	.globl	gUnknown_082F0224
	.align	2, 0
	.type	 gUnknown_082F0224,object
gUnknown_082F0224:
	.word	sText_Greetings
	.word	0x208
	.word	sText_Battle
	.word	0x241
	.word	sText_Chat2
	.word	0x245
	.word	sText_Exit
	.word	0x40
	.size	 gUnknown_082F0224,32
	.globl	gUnknown_082F0244
	.align	2, 0
	.type	 gUnknown_082F0244,object
	.size	 gUnknown_082F0244,24
gUnknown_082F0244:
	.word	gUnknown_082F0224
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x4
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.globl	gUnknown_082F025C
	.align	2, 0
	.type	 gUnknown_082F025C,object
	.size	 gUnknown_082F025C,8
gUnknown_082F025C:
	.byte	0x0
	.byte	0x12
	.byte	0x7
	.byte	0x10
	.byte	0x6
	.byte	0xf
	.short	0x1
	.globl	gUnknown_082F0264
	.align	2, 0
	.type	 gUnknown_082F0264,object
gUnknown_082F0264:
	.word	gText_Register
	.word	0x1
	.word	sText_Info
	.word	0x2
	.word	sText_Exit
	.word	0x3
	.size	 gUnknown_082F0264,24
	.globl	gUnknown_082F027C
	.align	2, 0
	.type	 gUnknown_082F027C,object
	.size	 gUnknown_082F027C,24
gUnknown_082F027C:
	.word	gUnknown_082F0264
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.globl	gUnknown_082F0294
	.align	2, 0
	.type	 gUnknown_082F0294,object
	.size	 gUnknown_082F0294,8
gUnknown_082F0294:
	.byte	0x0
	.byte	0x14
	.byte	0x1
	.byte	0x10
	.byte	0xc
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sTradingBoardTypes,object
sTradingBoardTypes:
	.word	gTypeNames
	.word	0x0
	.word	gTypeNames+0x46
	.word	0xa
	.word	gTypeNames+0x4d
	.word	0xb
	.word	gTypeNames+0x5b
	.word	0xd
	.word	gTypeNames+0x54
	.word	0xc
	.word	gTypeNames+0x69
	.word	0xf
	.word	gTypeNames+0x1c
	.word	0x4
	.word	gTypeNames+0x23
	.word	0x5
	.word	gTypeNames+0xe
	.word	0x2
	.word	gTypeNames+0x62
	.word	0xe
	.word	gTypeNames+0x7
	.word	0x1
	.word	gTypeNames+0x15
	.word	0x3
	.word	gTypeNames+0x2a
	.word	0x6
	.word	gTypeNames+0x31
	.word	0x7
	.word	gTypeNames+0x70
	.word	0x10
	.word	gTypeNames+0x38
	.word	0x8
	.word	gTypeNames+0x77
	.word	0x11
	.word	sText_Exit
	.word	0x12
	.size	 sTradingBoardTypes,144
	.globl	sMenuTemplate_TradingBoardRequestType
	.align	2, 0
	.type	 sMenuTemplate_TradingBoardRequestType,object
	.size	 sMenuTemplate_TradingBoardRequestType,24
sMenuTemplate_TradingBoardRequestType:
	.word	sTradingBoardTypes
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x12
	.short	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x0
	.byte	0x1
	.globl	gUnknown_082F0344
	.align	2, 0
	.type	 gUnknown_082F0344,object
	.size	 gUnknown_082F0344,8
gUnknown_082F0344:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0xd
	.short	0x1
	.globl	gUnknown_082F034C
	.align	2, 0
	.type	 gUnknown_082F034C,object
	.size	 gUnknown_082F034C,8
gUnknown_082F034C:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xc
	.byte	0xd
	.short	0x39
	.globl	gUnknown_082F0354
	.align	2, 0
	.type	 gUnknown_082F0354,object
gUnknown_082F0354:
	.word	sText_EmptyString
	.word	-0x3
	.word	sText_EmptyString
	.word	0x0
	.word	sText_EmptyString
	.word	0x1
	.word	sText_EmptyString
	.word	0x2
	.word	sText_EmptyString
	.word	0x3
	.word	sText_EmptyString
	.word	0x4
	.word	sText_EmptyString
	.word	0x5
	.word	sText_EmptyString
	.word	0x6
	.word	sText_EmptyString
	.word	0x7
	.word	sText_Exit2
	.word	0x8
	.size	 gUnknown_082F0354,80
	.globl	gUnknown_082F03A4
	.align	2, 0
	.type	 gUnknown_082F03A4,object
	.size	 gUnknown_082F03A4,24
gUnknown_082F03A4:
	.word	gUnknown_082F0354
	.word	ListMenuDefaultCursorMoveFunc
	.word	sub_8017BE8
	.short	0xa
	.short	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0xe1
	.byte	0xdf
	.byte	0x0
	.byte	0x1
	.globl	UnrefWindowTemplate_082F03B4
	.align	2, 0
	.type	 UnrefWindowTemplate_082F03B4,object
	.size	 UnrefWindowTemplate_082F03B4,8
UnrefWindowTemplate_082F03B4:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xc
	.byte	0xd
	.short	0x39
	.globl	gUnknown_082F03C4
	.align	2, 0
	.type	 gUnknown_082F03C4,object
gUnknown_082F03C4:
	.word	sText_EmptyString
	.word	0x0
	.word	sText_EmptyString
	.word	0x1
	.word	sText_EmptyString
	.word	0x2
	.word	sText_EmptyString
	.word	0x3
	.word	sText_EmptyString
	.word	0x4
	.word	sText_EmptyString
	.word	0x5
	.word	sText_EmptyString
	.word	0x6
	.word	sText_EmptyString
	.word	0x7
	.word	sText_EmptyString
	.word	0x8
	.word	sText_EmptyString
	.word	0x9
	.word	sText_EmptyString
	.word	0xa
	.word	sText_EmptyString
	.word	0xb
	.word	sText_EmptyString
	.word	0xc
	.word	sText_EmptyString
	.word	0xd
	.word	sText_EmptyString
	.word	0xe
	.word	sText_EmptyString
	.word	0xf
	.size	 gUnknown_082F03C4,128
	.globl	UnrefListMenuTemplate_082F0444
	.align	2, 0
	.type	 UnrefListMenuTemplate_082F0444,object
	.size	 UnrefListMenuTemplate_082F0444,24
UnrefListMenuTemplate_082F0444:
	.word	gUnknown_082F03C4
	.word	ListMenuDefaultCursorMoveFunc
	.word	nullsub_14
	.short	0x10
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x31
	.byte	0x40
	.byte	0x1
	.globl	gUnknown_082F045C
	.align	2, 0
	.type	 gUnknown_082F045C,object
	.size	 gUnknown_082F045C,24
gUnknown_082F045C:
	.byte	0x0
	.space	3
	.space	10
	.space	10
	.globl	gUnknown_082F0474
	.align	2, 0
	.type	 gUnknown_082F0474,object
gUnknown_082F0474:
	.byte	0x1
	.byte	0xff
	.size	 gUnknown_082F0474,2
	.globl	gUnknown_082F0478
	.align	2, 0
	.type	 gUnknown_082F0478,object
gUnknown_082F0478:
	.byte	0x2
	.byte	0xff
	.size	 gUnknown_082F0478,2
	.globl	gUnknown_082F047C
	.align	2, 0
	.type	 gUnknown_082F047C,object
gUnknown_082F047C:
	.byte	0x3
	.byte	0xff
	.size	 gUnknown_082F047C,2
	.globl	gUnknown_082F0480
	.align	2, 0
	.type	 gUnknown_082F0480,object
gUnknown_082F0480:
	.byte	0x4
	.byte	0xff
	.size	 gUnknown_082F0480,2
	.globl	gUnknown_082F0484
	.align	2, 0
	.type	 gUnknown_082F0484,object
gUnknown_082F0484:
	.byte	0x9
	.byte	0xff
	.size	 gUnknown_082F0484,2
	.globl	gUnknown_082F0488
	.align	2, 0
	.type	 gUnknown_082F0488,object
gUnknown_082F0488:
	.byte	0xa
	.byte	0xff
	.size	 gUnknown_082F0488,2
	.globl	gUnknown_082F048C
	.align	2, 0
	.type	 gUnknown_082F048C,object
gUnknown_082F048C:
	.byte	0xb
	.byte	0xff
	.size	 gUnknown_082F048C,2
	.globl	gUnknown_082F0490
	.align	2, 0
	.type	 gUnknown_082F0490,object
gUnknown_082F0490:
	.byte	0x15
	.byte	0xff
	.size	 gUnknown_082F0490,2
	.globl	gUnknown_082F0494
	.align	2, 0
	.type	 gUnknown_082F0494,object
gUnknown_082F0494:
	.byte	0x16
	.byte	0xff
	.size	 gUnknown_082F0494,2
	.globl	gUnknown_082F0498
	.align	2, 0
	.type	 gUnknown_082F0498,object
gUnknown_082F0498:
	.byte	0x40
	.byte	0x41
	.byte	0x44
	.byte	0x45
	.byte	0x48
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0xff
	.size	 gUnknown_082F0498,10
	.globl	gUnknown_082F04A4
	.align	2, 0
	.type	 gUnknown_082F04A4,object
gUnknown_082F04A4:
	.byte	0xc
	.byte	0xff
	.size	 gUnknown_082F04A4,2
	.globl	gUnknown_082F04A8
	.align	2, 0
	.type	 gUnknown_082F04A8,object
gUnknown_082F04A8:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.byte	0xd
	.byte	0xff
	.size	 gUnknown_082F04A8,11
	.globl	gUnknown_082F04B4
	.align	2, 0
	.type	 gUnknown_082F04B4,object
gUnknown_082F04B4:
	.byte	0xf
	.byte	0xff
	.size	 gUnknown_082F04B4,2
	.globl	gUnknown_082F04B8
	.align	2, 0
	.type	 gUnknown_082F04B8,object
gUnknown_082F04B8:
	.byte	0x10
	.byte	0xff
	.size	 gUnknown_082F04B8,2
	.globl	gUnknown_082F04BC
	.align	2, 0
	.type	 gUnknown_082F04BC,object
gUnknown_082F04BC:
	.byte	0x17
	.byte	0xff
	.size	 gUnknown_082F04BC,2
	.globl	gUnknown_082F04C0
	.align	2, 0
	.type	 gUnknown_082F04C0,object
gUnknown_082F04C0:
	.byte	0x18
	.byte	0xff
	.size	 gUnknown_082F04C0,2
	.globl	gUnknown_082F04C4
	.align	2, 0
	.type	 gUnknown_082F04C4,object
gUnknown_082F04C4:
	.byte	0x19
	.byte	0xff
	.size	 gUnknown_082F04C4,2
	.globl	gUnknown_082F04C8
	.align	2, 0
	.type	 gUnknown_082F04C8,object
gUnknown_082F04C8:
	.byte	0x1a
	.byte	0xff
	.size	 gUnknown_082F04C8,2
	.globl	gUnknown_082F04CC
	.align	2, 0
	.type	 gUnknown_082F04CC,object
gUnknown_082F04CC:
	.byte	0x1b
	.byte	0xff
	.size	 gUnknown_082F04CC,2
	.globl	gUnknown_082F04D0
	.align	2, 0
	.type	 gUnknown_082F04D0,object
gUnknown_082F04D0:
	.byte	0x1c
	.byte	0xff
	.size	 gUnknown_082F04D0,2
	.globl	gUnknown_082F04D4
	.align	2, 0
	.type	 gUnknown_082F04D4,object
gUnknown_082F04D4:
	.byte	0xe
	.byte	0xff
	.size	 gUnknown_082F04D4,2
	.globl	gUnknown_082F04D8
	.align	2, 0
	.type	 gUnknown_082F04D8,object
	.size	 gUnknown_082F04D8,88
gUnknown_082F04D8:
	.word	gUnknown_082F0474
	.word	gUnknown_082F0478
	.word	gUnknown_082F047C
	.word	gUnknown_082F0480
	.word	gUnknown_082F0484
	.word	gUnknown_082F0488
	.word	gUnknown_082F048C
	.word	gUnknown_082F0490
	.word	gUnknown_082F0494
	.word	gUnknown_082F0498
	.word	gUnknown_082F04A4
	.word	gUnknown_082F04A8
	.word	gUnknown_082F04B4
	.word	gUnknown_082F04B8
	.word	0x0
	.word	gUnknown_082F04BC
	.word	gUnknown_082F04C0
	.word	gUnknown_082F04C4
	.word	gUnknown_082F04C8
	.word	gUnknown_082F04CC
	.word	gUnknown_082F04D0
	.word	gUnknown_082F04D4
	.globl	gUnknown_082F0530
	.type	 gUnknown_082F0530,object
	.size	 gUnknown_082F0530,24
gUnknown_082F0530:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x10
	.byte	0x0
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0xe
	.space	2
.text
	.align	2, 0
	.globl	sub_80124EC
	.type	 sub_80124EC,function
	.thumb_func
sub_80124EC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	add	r0, r6, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	lsl	r4, r4, #0x8
	mov	r0, #0x90
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L8	@cond_branch
	cmp	r4, r0
	bgt	.L11	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	cmp	r4, r0
	beq	.L4	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r4, r0
	beq	.L5	@cond_branch
	b	.L3
.L11:
	mov	r0, #0x94
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L6	@cond_branch
	mov	r0, #0xd4
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L7	@cond_branch
	b	.L3
.L4:
	ldr	r1, .L13
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	b	.L12
.L14:
	.align	2, 0
.L13:
	.word	sPlayersNeededOrModeTexts
.L5:
	ldr	r1, .L15
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x14
	b	.L12
.L16:
	.align	2, 0
.L15:
	.word	sPlayersNeededOrModeTexts
.L6:
	ldr	r1, .L17
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x28
	b	.L12
.L18:
	.align	2, 0
.L17:
	.word	sPlayersNeededOrModeTexts
.L7:
	ldr	r1, .L19
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x3c
.L12:
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	sub_80173E0
	b	.L3
.L20:
	.align	2, 0
.L19:
	.word	sPlayersNeededOrModeTexts
.L8:
	ldr	r1, .L21
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x50
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	sub_80173E0
.L3:
	add	r0, r6, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	sPlayersNeededOrModeTexts
.Lfe1:
	.size	 sub_80124EC,.Lfe1-sub_80124EC
	.align	2, 0
	.globl	sub_80125BC
	.type	 sub_80125BC,function
	.thumb_func
sub_80125BC:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x28
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L24
	ldr	r2, [r6]
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r8, r0
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	sub_80173E0
	ldr	r1, .L24+0x4
	add	r0, sp, #0x8
	bl	StringCopy
	add	r5, r0, #0
	ldr	r0, [r6]
	add	r0, r0, #0xa
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x11
	str	r0, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x1
	add	r2, sp, #0x8
	mov	r3, #0x0
	bl	sub_80173E0
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	gSaveBlock2Ptr
	.word	sText_ID
.Lfe2:
	.size	 sub_80125BC,.Lfe2-sub_80125BC
	.align	2, 0
	.globl	sub_801262C
	.type	 sub_801262C,function
	.thumb_func
sub_801262C:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x1b
	bhi	.L27	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L34
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L35:
	.align	2, 0
.L34:
	.word	.L32
	.align	2, 0
	.align	2, 0
.L32:
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L27
	.word	.L27
	.word	.L27
	.word	.L27
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L27
	.word	.L27
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L27
	.word	.L27
	.word	.L27
	.word	.L27
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
	.word	.L31
.L31:
	ldr	r0, .L36
	ldr	r1, .L36+0x4
	bl	StringExpandPlaceholders
.L27:
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gStringVar4
	.word	sText_AwaitingCommunication
.Lfe3:
	.size	 sub_801262C,.Lfe3-sub_801262C
	.align	2, 0
	.globl	sub_80126CC
	.type	 sub_80126CC,function
	.thumb_func
sub_80126CC:
	push	{lr}
	sub	r0, r0, #0x9
	cmp	r0, #0x12
	bhi	.L43	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L46
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L47:
	.align	2, 0
.L46:
	.word	.L44
	.align	2, 0
	.align	2, 0
.L44:
	.word	.L42
	.word	.L42
	.word	.L42
	.word	.L43
	.word	.L43
	.word	.L43
	.word	.L42
	.word	.L42
	.word	.L43
	.word	.L43
	.word	.L43
	.word	.L43
	.word	.L43
	.word	.L43
	.word	.L42
	.word	.L42
	.word	.L42
	.word	.L42
	.word	.L42
.L42:
	mov	r0, #0x1
	b	.L45
.L43:
	mov	r0, #0x0
.L45:
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 sub_80126CC,.Lfe4-sub_80126CC
	.align	2, 0
	.globl	TryBecomeLinkLeader
	.type	 TryBecomeLinkLeader,function
	.thumb_func
TryBecomeLinkLeader:
	push	{lr}
	ldr	r0, .L49
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L49+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L49+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L49+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0xc]
	strb	r0, [r1, #0xd]
	ldr	r1, .L49+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	sub_8012780
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gUnknown_03000DA0
	.word	gSpecialVar_Result
.Lfe5:
	.size	 TryBecomeLinkLeader,.Lfe5-TryBecomeLinkLeader
	.align	2, 0
	.globl	sub_8012780
	.type	 sub_8012780,function
	.thumb_func
sub_8012780:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L164
	ldr	r6, [r0]
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0x1e
	bls	.LCB351
	bl	.L52	@far jump
.LCB351:
	lsl	r0, r0, #0x2
	ldr	r1, .L164+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L165:
	.align	2, 0
.L164:
	.word	gUnknown_02022C30
	.word	.L157
	.align	2, 0
	.align	2, 0
.L157:
	.word	.L53
	.word	.L52
	.word	.L52
	.word	.L55
	.word	.L63
	.word	.L68
	.word	.L70
	.word	.L86
	.word	.L52
	.word	.L78
	.word	.L80
	.word	.L88
	.word	.L97
	.word	.L108
	.word	.L110
	.word	.L112
	.word	.L114
	.word	.L138
	.word	.L140
	.word	.L124
	.word	.L126
	.word	.L149
	.word	.L151
	.word	.L149
	.word	.L150
	.word	.L52
	.word	.L152
	.word	.L52
	.word	.L52
	.word	.L83
	.word	.L146
.L53:
	ldr	r0, .L166
	ldrh	r2, [r0]
	add	r3, r0, #0
	cmp	r2, #0x14
	bne	.L54	@cond_branch
	ldr	r0, .L166+0x4
	ldr	r0, [r0]
	ldr	r1, .L166+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L54	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r3]
.L54:
	ldr	r2, .L166+0xc
	ldr	r1, .L166+0x10
	ldrh	r0, [r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	strb	r0, [r2]
	ldr	r4, .L166+0x14
	ldrh	r0, [r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsr	r0, r0, #0x8
	strb	r0, [r4]
	ldrb	r0, [r2]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	ldrb	r1, [r4]
	mov	r0, #0xf
	and	r0, r0, r1
	bl	sub_8011C10
	mov	r0, #0x3
	strb	r0, [r6, #0xc]
	b	.L52
.L167:
	.align	2, 0
.L166:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	gUnknown_02022C2C
	.word	gUnknown_082F00C4
	.word	gUnknown_02022C2D
.L55:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r6, #0x8]
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r6]
	mov	r1, #0x5
	bl	sub_8017580
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	sub_800DF90
	ldr	r1, [r6]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r6]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r6]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r6, #0x4]
	mov	r1, #0xff
	bl	sub_8016FC0
	strb	r0, [r6, #0x17]
	ldr	r0, .L168
	bl	AddWindow
	strb	r0, [r6, #0x10]
	ldr	r0, .L168+0x4
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0x2
	blt	.L56	@cond_branch
	cmp	r1, #0x4
	ble	.L59	@cond_branch
	cmp	r1, #0x5
	beq	.L60	@cond_branch
	b	.L56
.L169:
	.align	2, 0
.L168:
	.word	gUnknown_082F00BC
	.word	gUnknown_02022C2D
.L59:
	ldr	r0, .L170
	b	.L159
.L171:
	.align	2, 0
.L170:
	.word	gUnknown_082F011C
.L60:
	ldr	r0, .L172
.L159:
	bl	AddWindow
	strb	r0, [r6, #0xf]
.L56:
	ldr	r0, .L172+0x4
	bl	AddWindow
	strb	r0, [r6, #0x11]
	ldrb	r0, [r6, #0x10]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r6, #0x10]
	ldr	r2, .L172+0x8
	mov	r3, #0x1
	mov	r8, r3
	str	r3, [sp]
	mov	r4, #0x4
	str	r4, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	sub_80173E0
	ldrb	r0, [r6, #0x10]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0x10]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r6, #0xf]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L172+0xc
	add	r2, r0, #0
	ldr	r1, .L172+0x10
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldrb	r1, [r6, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r6, #0x12]
	ldrb	r0, [r6, #0x11]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r6, #0x11]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0x11]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r5, r8
	strb	r5, [r6, #0x13]
	strb	r4, [r6, #0xc]
	b	.L52
.L173:
	.align	2, 0
.L172:
	.word	gUnknown_082F0124
	.word	gUnknown_082F012C
	.word	sText_BButtonCancel
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_082F015C
.L63:
	ldr	r0, .L174
	ldr	r2, .L174+0x4
	ldr	r4, .L174+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L174+0xc
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L64	@cond_branch
	ldrb	r1, [r6, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L65	@cond_branch
	mov	r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L65	@cond_branch
	ldr	r0, .L174+0x10
	ldr	r1, .L174+0x14
	bl	StringExpandPlaceholders
	b	.L67
.L175:
	.align	2, 0
.L174:
	.word	gStringVar1
	.word	sLinkGroupActivityTexts
	.word	gUnknown_02022C2C
	.word	gUnknown_02022C2D
	.word	gStringVar4
	.word	sText_AwaitingLinkPressStart
.L65:
	ldr	r0, .L176
	ldr	r1, .L176+0x4
	bl	StringExpandPlaceholders
	b	.L67
.L177:
	.align	2, 0
.L176:
	.word	gStringVar4
	.word	sText_AwaitingCommunication
.L64:
	ldr	r0, .L178
	ldrb	r1, [r4]
	bl	sub_801262C
.L67:
	ldrb	r0, [r6, #0x11]
	ldr	r1, .L178+0x4
	ldrb	r1, [r1]
	ldrb	r2, [r6, #0x13]
	bl	sub_80124EC
	mov	r0, #0x5
	strb	r0, [r6, #0xc]
	b	.L52
.L179:
	.align	2, 0
.L178:
	.word	gStringVar4
	.word	gUnknown_02022C2D
.L68:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L180
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB716
	b	.L52	@long jump
.LCB716:
	mov	r0, #0x6
	strb	r0, [r6, #0xc]
	b	.L52
.L181:
	.align	2, 0
.L180:
	.word	gStringVar4
.L70:
	add	r0, r6, #0
	mov	r1, #0x7
	mov	r2, #0xa
	bl	sub_801320C
	ldr	r0, .L182
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L71	@cond_branch
	ldrb	r0, [r6, #0x13]
	cmp	r0, #0x1
	bne	.L72	@cond_branch
	mov	r0, #0x17
	b	.L160
.L183:
	.align	2, 0
.L182:
	.word	gMain
.L72:
	ldr	r0, .L184
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L74	@cond_branch
	mov	r0, #0x1e
	b	.L160
.L185:
	.align	2, 0
.L184:
	.word	gUnknown_02022C2D
.L74:
	mov	r0, #0x13
.L160:
	strb	r0, [r6, #0xc]
.L71:
	ldr	r0, .L186
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L76	@cond_branch
	ldrb	r1, [r6, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L76	@cond_branch
	mov	r4, #0xf
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L76	@cond_branch
	bl	sub_8012240
	cmp	r0, #0
	beq	.L76	@cond_branch
	ldr	r0, .L186+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L76	@cond_branch
	strb	r4, [r6, #0xc]
	bl	sub_800EF38
.L76:
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0x6
	beq	.LCB818
	b	.L52	@long jump
.LCB818:
	bl	sub_80105EC
	cmp	r0, #0
	bne	.LCB822
	b	.L52	@long jump
.LCB822:
	b	.L93
.L187:
	.align	2, 0
.L186:
	.word	gUnknown_02022C2D
	.word	gMain
.L78:
	bl	sub_80105EC
	cmp	r0, #0
	beq	.LCB837
	b	.L52	@long jump
.LCB837:
	mov	r0, #0x6
	strb	r0, [r6, #0xc]
	ldr	r0, [r6]
	bl	sub_8013398
	strb	r0, [r6, #0x13]
	b	.L52
.L80:
	mov	r3, #0x0
	ldr	r0, .L188
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L81	@cond_branch
	mov	r3, #0x1
.L81:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r2, .L188+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB873
	b	.L52	@long jump
.LCB873:
	ldr	r0, [r6]
	bl	sub_8013398
	strb	r0, [r6, #0x13]
	ldrb	r0, [r6, #0x12]
	bl	RedrawListMenu
	b	.L133
.L189:
	.align	2, 0
.L188:
	.word	gUnknown_02022C2C
	.word	sPlayerUnavailableTexts
.L83:
	ldr	r0, .L190
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	mov	r0, #0x2
	eor	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r3, r0, #0x1f
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r2, .L190+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB919
	b	.L52	@long jump
.LCB919:
	mov	r0, #0x15
	strb	r0, [r6, #0xc]
	b	.L52
.L191:
	.align	2, 0
.L190:
	.word	gUnknown_02022C2D
	.word	sPlayerUnavailableTexts
.L86:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L192
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB943
	b	.L52	@long jump
.LCB943:
	mov	r0, #0xb
	strb	r0, [r6, #0xc]
	b	.L52
.L193:
	.align	2, 0
.L192:
	.word	gStringVar4
.L88:
	add	r4, r6, #0
	add	r4, r4, #0xd
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r6, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r6]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	sub_801064C
	add	r1, r0, #0
	add	r0, r4, #0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L92	@cond_branch
	cmp	r1, r0
	bgt	.L96	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L93	@cond_branch
	b	.L52
.L96:
	cmp	r1, #0
	beq	.L90	@cond_branch
	cmp	r1, #0x1
	beq	.L92	@cond_branch
	b	.L52
.L90:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	mov	r0, #0x5
	strb	r0, [r6, #0x19]
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r6, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r6]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L161
.L92:
	mov	r0, #0x6
	strb	r0, [r6, #0x19]
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r6, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r6]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L161:
	bl	sub_8010688
	mov	r0, #0xc
	strb	r0, [r6, #0xc]
	b	.L52
.L93:
	mov	r0, #0x9
	strb	r0, [r6, #0xc]
	b	.L52
.L97:
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r6, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r6]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	sub_8010714
	cmp	r0, #0x1
	bne	.L98	@cond_branch
	ldrb	r0, [r6, #0x19]
	cmp	r0, #0x5
	bne	.L99	@cond_branch
	ldr	r1, [r6]
	ldrb	r0, [r6, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r6, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r6, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x13]
	ldr	r1, .L194
	ldrb	r1, [r1]
	mov	r3, #0xf
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r2, r0
	bne	.L162	@cond_branch
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L102	@cond_branch
	cmp	r2, #0x4
	bne	.L101	@cond_branch
.L102:
	strb	r3, [r6, #0xc]
	b	.L103
.L195:
	.align	2, 0
.L194:
	.word	gUnknown_02022C2D
.L101:
	ldr	r0, .L196
	ldrb	r2, [r6, #0x13]
	lsl	r2, r2, #0x5
	sub	r2, r2, #0x20
	ldr	r1, [r6]
	add	r1, r1, r2
	bl	sub_8018404
	ldr	r0, .L196+0x4
	ldr	r1, .L196+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0xd
	strb	r0, [r6, #0xc]
.L103:
	bl	sub_800EF38
	ldrb	r0, [r6, #0x11]
	ldr	r1, .L196+0xc
	ldrb	r1, [r1]
	ldrb	r2, [r6, #0x13]
	bl	sub_80124EC
	b	.L105
.L197:
	.align	2, 0
.L196:
	.word	gStringVar1
	.word	gStringVar4
	.word	sText_AnOKWasSentToPlayer
	.word	gUnknown_02022C2D
.L99:
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8011DC0
	ldr	r1, [r6]
	ldrb	r0, [r6, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r6]
	bl	sub_8013398
	ldrb	r0, [r6, #0x12]
	bl	RedrawListMenu
.L162:
	mov	r0, #0x4
	strb	r0, [r6, #0xc]
.L105:
	mov	r0, #0x0
	strb	r0, [r6, #0x19]
	b	.L52
.L98:
	cmp	r0, #0x2
	beq	.LCB1219
	b	.L52	@long jump
.LCB1219:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	b	.L133
.L108:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L198
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1237
	b	.L52	@long jump
.LCB1237:
	mov	r0, #0xe
	strb	r0, [r6, #0xc]
	b	.L52
.L199:
	.align	2, 0
.L198:
	.word	gStringVar4
.L110:
	ldrb	r0, [r6, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r6, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB1257
	b	.L52	@long jump
.LCB1257:
	b	.L116
.L112:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L200
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1271
	b	.L52	@long jump
.LCB1271:
	mov	r0, #0x10
	strb	r0, [r6, #0xc]
	b	.L52
.L201:
	.align	2, 0
.L200:
	.word	sText_AreTheseMembersOK
.L114:
	add	r0, r6, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L116	@cond_branch
	cmp	r1, #0
	bgt	.L123	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L118	@cond_branch
	b	.L52
.L123:
	cmp	r1, #0x1
	beq	.L118	@cond_branch
	b	.L52
.L116:
	mov	r0, #0x11
	strb	r0, [r6, #0xc]
	b	.L52
.L118:
	ldr	r0, .L202
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L119	@cond_branch
	mov	r0, #0x1e
	strb	r0, [r6, #0xc]
	b	.L52
.L203:
	.align	2, 0
.L202:
	.word	gUnknown_02022C2D
.L119:
	mov	r0, #0x13
	strb	r0, [r6, #0xc]
	b	.L52
.L124:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L204
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1349
	b	.L52	@long jump
.LCB1349:
	mov	r0, #0x14
	strb	r0, [r6, #0xc]
	b	.L52
.L205:
	.align	2, 0
.L204:
	.word	sText_CancelModeWithTheseMembers
.L126:
	add	r0, r6, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L163	@cond_branch
	cmp	r1, #0
	bgt	.L137	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L130	@cond_branch
	b	.L52
.L137:
	cmp	r1, #0x1
	beq	.LCB1382
	b	.L52	@long jump
.LCB1382:
.L130:
	ldr	r0, .L206
	ldrb	r2, [r0]
	mov	r0, #0xf0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L131	@cond_branch
	mov	r0, #0xf
	strb	r0, [r6, #0xc]
	b	.L52
.L207:
	.align	2, 0
.L206:
	.word	gUnknown_02022C2D
.L131:
	mov	r3, #0xf
	ldrb	r1, [r6, #0x13]
	add	r0, r3, #0
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L133	@cond_branch
	strb	r3, [r6, #0xc]
	b	.L52
.L133:
	mov	r0, #0x4
	strb	r0, [r6, #0xc]
	b	.L52
.L138:
	add	r0, r6, #0
	mov	r1, #0x7
	mov	r2, #0x1d
	bl	sub_801320C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L52	@cond_branch
	mov	r0, #0x12
	strb	r0, [r6, #0xc]
	b	.L52
.L140:
	bl	sub_800EF1C
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L141	@cond_branch
	mov	r0, #0x0
	bl	sub_800EF58
	cmp	r0, #0
	beq	.L142	@cond_branch
	mov	r0, #0x1a
	strb	r0, [r6, #0xc]
	b	.L52
.L142:
	ldrh	r0, [r6, #0x1a]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x1a]
	lsl	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x11
	cmp	r0, r1
	bls	.L52	@cond_branch
	mov	r0, #0x1d
	strb	r0, [r6, #0xc]
	mov	r0, #0x0
	strb	r0, [r6, #0xd]
	b	.L52
.L141:
	mov	r0, #0x1d
	strb	r0, [r6, #0xc]
	strb	r1, [r6, #0xd]
	b	.L52
.L146:
	add	r0, r6, #0
	add	r0, r0, #0xd
	ldr	r1, .L208
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L52	@cond_branch
.L163:
	mov	r0, #0x17
	strb	r0, [r6, #0xc]
	b	.L52
.L209:
	.align	2, 0
.L208:
	.word	sText_ModeWithTheseMembersWillBeCanceled
.L149:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	sub_800EDD4
	add	r0, r6, #0
	bl	sub_8012F64
	ldrb	r0, [r6, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r6, #0xc]
	b	.L52
.L150:
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L210
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L52
.L211:
	.align	2, 0
.L210:
	.word	gSpecialVar_Result
.L151:
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L212
	mov	r0, #0x8
	strh	r0, [r1]
	b	.L52
.L213:
	.align	2, 0
.L212:
	.word	gSpecialVar_Result
.L152:
	bl	sub_8011A80
	cmp	r0, #0
	beq	.L153	@cond_branch
	mov	r0, #0x1d
	strb	r0, [r6, #0xc]
	b	.L52
.L153:
	ldr	r0, .L214
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L52	@cond_branch
	ldr	r0, .L214+0x4
	ldrb	r0, [r0]
	bl	sub_80126CC
	cmp	r0, #0
	beq	.L156	@cond_branch
	bl	sub_801103C
.L156:
	mov	r0, #0x1
	bl	sub_8011068
	bl	sub_80149C4
	add	r0, r6, #0
	bl	sub_8012F64
	add	r0, r4, #0
	bl	DestroyTask
.L52:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	gReceivedRemoteLinkPlayers
	.word	gUnknown_02022C2C
.Lfe6:
	.size	 sub_8012780,.Lfe6-sub_8012780
	.align	2, 0
	.globl	sub_8012F64
	.type	 sub_8012F64,function
	.thumb_func
sub_8012F64:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0x11]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x11]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0x10]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0xf]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4, #0x11]
	bl	RemoveWindow
	ldrb	r0, [r4, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x10]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x17]
	bl	DestroyTask
	ldr	r0, [r4, #0x8]
	bl	Free
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 sub_8012F64,.Lfe7-sub_8012F64
	.align	2, 0
	.globl	sub_8012FC4
	.type	 sub_8012FC4,function
	.thumb_func
sub_8012FC4:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x1b
	bhi	.L218	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L240
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L241:
	.align	2, 0
.L240:
	.word	.L237
	.align	2, 0
	.align	2, 0
.L237:
	.word	.L223
	.word	.L223
	.word	.L236
	.word	.L223
	.word	.L218
	.word	.L218
	.word	.L218
	.word	.L218
	.word	.L236
	.word	.L236
	.word	.L236
	.word	.L218
	.word	.L218
	.word	.L223
	.word	.L236
	.word	.L236
	.word	.L218
	.word	.L218
	.word	.L218
	.word	.L218
	.word	.L225
	.word	.L225
	.word	.L236
	.word	.L236
	.word	.L236
	.word	.L236
	.word	.L236
	.word	.L223
.L223:
	ldr	r1, .L242
	b	.L239
.L243:
	.align	2, 0
.L242:
	.word	sText_PlayerContactedYouForXAccept
.L225:
	ldr	r1, .L244
.L239:
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L218
.L245:
	.align	2, 0
.L244:
	.word	sText_PlayerContactedYouShareX
.L236:
	ldr	r1, .L246
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L218:
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	sText_PlayerContactedYouAddToMembers
.Lfe8:
	.size	 sub_8012FC4,.Lfe8-sub_8012FC4
	.align	2, 0
	.globl	sub_8013078
	.type	 sub_8013078,function
	.thumb_func
sub_8013078:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x44
	beq	.L251	@cond_branch
	cmp	r1, #0x44
	bgt	.L256	@cond_branch
	cmp	r1, #0x41
	beq	.L251	@cond_branch
	b	.L249
.L256:
	cmp	r2, #0x45
	beq	.L253	@cond_branch
	cmp	r2, #0x48
	beq	.L253	@cond_branch
	b	.L249
.L251:
	ldr	r1, .L257
	bl	StringExpandPlaceholders
	b	.L249
.L258:
	.align	2, 0
.L257:
	.word	sText_OfferDeclined1
.L253:
	ldr	r1, .L259
	bl	StringExpandPlaceholders
.L249:
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	sText_OfferDeclined2
.Lfe9:
	.size	 sub_8013078,.Lfe9-sub_8013078
	.align	2, 0
	.globl	sub_80130B4
	.type	 sub_80130B4,function
	.thumb_func
sub_80130B4:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x1b
	bhi	.L262	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L283
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L284:
	.align	2, 0
.L283:
	.word	.L281
	.align	2, 0
	.align	2, 0
.L281:
	.word	.L269
	.word	.L269
	.word	.L280
	.word	.L269
	.word	.L262
	.word	.L262
	.word	.L262
	.word	.L262
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L262
	.word	.L262
	.word	.L269
	.word	.L280
	.word	.L280
	.word	.L262
	.word	.L262
	.word	.L262
	.word	.L262
	.word	.L269
	.word	.L269
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L269
.L269:
	ldr	r1, .L285
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L262
.L286:
	.align	2, 0
.L285:
	.word	sText_AwaitingPlayersResponse
.L280:
	ldr	r1, .L287
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L262:
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	sText_PlayerHasBeenAskedToRegisterYouPleaseWait
.Lfe10:
	.size	 sub_80130B4,.Lfe10-sub_80130B4
	.align	2, 0
	.globl	sub_8013160
	.type	 sub_8013160,function
	.thumb_func
sub_8013160:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x1b
	bhi	.L290	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L311
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L312:
	.align	2, 0
.L311:
	.word	.L309
	.align	2, 0
	.align	2, 0
.L309:
	.word	.L297
	.word	.L297
	.word	.L308
	.word	.L297
	.word	.L290
	.word	.L290
	.word	.L290
	.word	.L290
	.word	.L308
	.word	.L308
	.word	.L308
	.word	.L290
	.word	.L290
	.word	.L297
	.word	.L308
	.word	.L308
	.word	.L290
	.word	.L290
	.word	.L290
	.word	.L290
	.word	.L297
	.word	.L297
	.word	.L308
	.word	.L308
	.word	.L308
	.word	.L308
	.word	.L308
	.word	.L297
.L297:
	ldr	r1, .L313
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L290
.L314:
	.align	2, 0
.L313:
	.word	sText_PlayerSentBackOK
.L308:
	ldr	r1, .L315
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L290:
	pop	{r0}
	bx	r0
.L316:
	.align	2, 0
.L315:
	.word	sText_PlayerOKdRegistration
.Lfe11:
	.size	 sub_8013160,.Lfe11-sub_8013160
	.align	2, 0
	.globl	sub_801320C
	.type	 sub_801320C,function
	.thumb_func
sub_801320C:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	ldr	r0, [r4]
	bl	sub_80132D4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L319	@cond_branch
	cmp	r0, #0x2
	beq	.L320	@cond_branch
	b	.L318
.L319:
	mov	r0, #0x2
	bl	PlaySE
	ldrb	r0, [r4, #0x12]
	bl	RedrawListMenu
	ldr	r0, .L324
	ldrb	r2, [r4, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r4]
	add	r1, r1, r2
	bl	sub_8018404
	ldr	r0, .L324+0x4
	ldr	r1, .L324+0x8
	ldrb	r1, [r1]
	bl	sub_8012FC4
	strb	r6, [r4, #0xc]
	b	.L318
.L325:
	.align	2, 0
.L324:
	.word	gStringVar2
	.word	gStringVar4
	.word	gUnknown_02022C2C
.L320:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	ldrb	r0, [r4, #0x12]
	bl	RedrawListMenu
	strb	r5, [r4, #0xc]
	mov	r0, #0x1
	b	.L323
.L318:
	mov	r0, #0x0
.L323:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 sub_801320C,.Lfe12-sub_801320C
	.align	2, 0
	.globl	sub_8013278
	.type	 sub_8013278,function
	.thumb_func
sub_8013278:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L333
	ldr	r3, [r0]
	mov	r2, #0x0
	ldr	r1, [r3]
	lsl	r0, r4, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	beq	.L328	@cond_branch
	cmp	r0, #0x2
	beq	.L330	@cond_branch
	b	.L327
.L334:
	.align	2, 0
.L333:
	.word	gUnknown_02022C30
.L328:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L327	@cond_branch
	mov	r2, #0x2
	b	.L327
.L330:
	mov	r2, #0x1
.L327:
	lsl	r0, r4, #0x5
	ldr	r3, [r3]
	add	r3, r3, r0
	str	r2, [sp]
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x0
	add	r2, r6, #0
	bl	sub_80178A0
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 sub_8013278,.Lfe13-sub_8013278
	.align	2, 0
	.globl	sub_80132D4
	.type	 sub_80132D4,function
	.thumb_func
sub_80132D4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L356
	ldr	r5, [r0]
	mov	r0, #0x0
	mov	r8, r0
	mov	r3, #0x1
.L339:
	ldr	r0, [r5]
	lsl	r6, r3, #0x5
	add	r2, r0, r6
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	mov	r9, r0
	cmp	r0, #0x1
	bne	.L338	@cond_branch
	ldr	r1, [r5, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	sub_80176E4
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L341	@cond_branch
	ldr	r1, [r5]
	ldr	r0, [r5, #0x4]
	lsl	r2, r4, #0x3
	sub	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r1, r1, r6
	add	r0, r0, r2
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r5]
	add	r0, r0, r6
	mov	r1, r9
	strh	r1, [r0, #0x18]
	b	.L338
.L357:
	.align	2, 0
.L356:
	.word	gUnknown_02022C30
.L341:
	ldr	r2, [r5]
	add	r2, r2, r6
	ldrb	r1, [r2, #0x1a]
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r1, r1, r0
	mov	r0, #0x2
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	mov	r7, #0x2
	mov	r8, r7
.L338:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x4
	bls	.L339	@cond_branch
	mov	r6, #0x0
	mov	r4, #0x3
.L347:
	ldr	r0, [r5]
	ldr	r1, [r5, #0x4]
	add	r1, r1, r6
	mov	r2, #0x5
	bl	sub_8017734
	add	r6, r6, #0x1c
	sub	r4, r4, #0x1
	ldr	r0, [r5]
	cmp	r4, #0
	bge	.L347	@cond_branch
	mov	r1, r8
	cmp	r1, #0x2
	beq	.L349	@cond_branch
	add	r1, r0, #0
	mov	r4, #0x4
.L353:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L352	@cond_branch
	mov	r2, #0x1
	mov	r8, r2
.L352:
	add	r1, r1, #0x20
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L353	@cond_branch
.L349:
	mov	r0, r8
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_80132D4,.Lfe14-sub_80132D4
	.align	2, 0
	.globl	sub_8013398
	.type	 sub_8013398,function
	.thumb_func
sub_8013398:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L382
	ldr	r4, [r0]
	mov	r3, #0x0
.L362:
	ldr	r0, [r4, #0x8]
	lsl	r2, r3, #0x5
	ldr	r1, [r4]
	add	r0, r0, r2
	add	r1, r1, r2
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r7}
	stmia	r0!, {r2, r5, r7}
	ldmia	r1!, {r6, r7}
	stmia	r0!, {r6, r7}
	add	r3, r3, #0x1
	ldr	r0, [r4, #0x8]
	ldr	r1, [r4]
	cmp	r3, #0x4
	ble	.L362	@cond_branch
	mov	r5, #0x0
	mov	r8, r1
	mov	r9, r0
	mov	r3, #0x4
.L367:
	mov	r1, r9
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L366	@cond_branch
	lsl	r0, r5, #0x5
	add	r0, r0, r8
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6}
	stmia	r0!, {r2, r6}
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L366:
	mov	r7, #0x20
	add	r9, r9, r7
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L367	@cond_branch
	mov	sl, r5
	cmp	r5, #0x4
	bhi	.L371	@cond_branch
	ldr	r0, .L382+0x4
	mov	r9, r0
	mov	r1, #0x0
	mov	ip, r1
	mov	r2, #0x4
	neg	r2, r2
	mov	r8, r2
.L373:
	ldr	r1, [r4]
	lsl	r3, r5, #0x5
	add	r1, r1, r3
	mov	r0, r9
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, r8
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r6, ip
	strb	r6, [r0, #0x1b]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L373	@cond_branch
.L371:
	mov	r3, #0x0
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L377	@cond_branch
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0x40
	bne	.L377	@cond_branch
	mov	sl, r3
	b	.L376
.L383:
	.align	2, 0
.L382:
	.word	gUnknown_02022C30
	.word	gUnknown_082F045C
.L377:
	add	r3, r3, #0x1
	cmp	r3, #0x4
	bgt	.L376	@cond_branch
	lsl	r0, r3, #0x5
	add	r2, r1, r0
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L377	@cond_branch
	ldrb	r0, [r2, #0x1b]
	cmp	r0, #0x40
	bne	.L377	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L376:
	mov	r0, sl
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 sub_8013398,.Lfe15-sub_8013398
	.align	2, 0
	.globl	TryJoinLinkGroup
	.type	 TryJoinLinkGroup,function
	.thumb_func
TryJoinLinkGroup:
	push	{lr}
	ldr	r0, .L385
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L385+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L385+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L385+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x8]
	strb	r0, [r1, #0x9]
	ldr	r1, .L385+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L386:
	.align	2, 0
.L385:
	.word	sub_80134E8
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gUnknown_03000DA4
	.word	gSpecialVar_Result
.Lfe16:
	.size	 TryJoinLinkGroup,.Lfe16-TryJoinLinkGroup
	.align	2, 0
	.globl	sub_80134E8
	.type	 sub_80134E8,function
	.thumb_func
sub_80134E8:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L479
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x8]
	cmp	r0, #0x17
	bls	.LCB2431
	b	.L387	@long jump
.LCB2431:
	lsl	r0, r0, #0x2
	ldr	r1, .L479+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L480:
	.align	2, 0
.L479:
	.word	gUnknown_02022C30
	.word	.L470
	.align	2, 0
	.align	2, 0
.L470:
	.word	.L389
	.word	.L391
	.word	.L393
	.word	.L394
	.word	.L387
	.word	.L407
	.word	.L409
	.word	.L443
	.word	.L445
	.word	.L454
	.word	.L460
	.word	.L463
	.word	.L460
	.word	.L461
	.word	.L460
	.word	.L464
	.word	.L387
	.word	.L387
	.word	.L460
	.word	.L466
	.word	.L460
	.word	.L469
	.word	.L387
	.word	.L468
.L389:
	ldr	r0, .L481
	ldrh	r2, [r0]
	add	r3, r0, #0
	cmp	r2, #0x14
	bne	.L390	@cond_branch
	ldr	r0, .L481+0x4
	ldr	r0, [r0]
	ldr	r1, .L481+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L390	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r3]
.L390:
	ldr	r2, .L481+0xc
	ldr	r1, .L481+0x10
	ldrh	r0, [r3]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldrb	r0, [r2]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C5C
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L387
.L482:
	.align	2, 0
.L481:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	gUnknown_02022C2C
	.word	gUnknown_082F0530
.L391:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r2, .L483
	ldr	r1, .L483+0x4
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2528
	b	.L387	@long jump
.LCB2528:
	mov	r0, #0x2
	strb	r0, [r6, #0x8]
	b	.L387
.L484:
	.align	2, 0
.L483:
	.word	sChooseTrainerTexts
	.word	gSpecialVar_0x8004
.L393:
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r6]
	mov	r1, #0x10
	bl	sub_8017580
	ldr	r0, [r6, #0x4]
	ldr	r1, .L485
	ldrh	r1, [r1]
	bl	sub_8016FC0
	mov	r4, #0x0
	strb	r0, [r6, #0x11]
	ldr	r0, .L485+0x4
	bl	AddWindow
	strb	r0, [r6, #0xc]
	ldr	r0, .L485+0x8
	bl	AddWindow
	strb	r0, [r6, #0xb]
	ldr	r0, .L485+0xc
	bl	AddWindow
	strb	r0, [r6, #0xd]
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r6, #0xc]
	ldr	r2, .L485+0x10
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x4
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	sub_80173E0
	ldrb	r0, [r6, #0xc]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L485+0x14
	add	r2, r0, #0
	ldr	r1, .L485+0x18
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldrb	r1, [r6, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r6, #0xe]
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r6, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xd]
	bl	sub_80125BC
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r4, [r6, #0xf]
	mov	r0, #0x3
	strb	r0, [r6, #0x8]
	b	.L387
.L486:
	.align	2, 0
.L485:
	.word	gSpecialVar_0x8004
	.word	gUnknown_082F00BC
	.word	gUnknown_082F0174
	.word	gUnknown_082F017C
	.word	sText_ChooseJoinCancel
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_082F0204
.L394:
	bl	sub_8013E44
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L397	@cond_branch
	cmp	r4, #0x1
	beq	.LCB2655
	b	.L472	@long jump
.LCB2655:
	mov	r0, #0x2
	bl	PlaySE
	b	.L472
.L397:
	ldrb	r0, [r6, #0xe]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldr	r0, .L487
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L398	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L398	@cond_branch
	ldr	r0, [r6]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L399	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L399	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_8013B8C
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L400	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_8013BD8
	mov	r0, #0x5
	b	.L473
.L488:
	.align	2, 0
.L487:
	.word	gMain
.L400:
	ldr	r0, .L489
	ldr	r2, .L489+0x4
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x12
.L473:
	strb	r0, [r6, #0x8]
	mov	r0, #0x6e
	bl	PlaySE
	b	.L387
.L490:
	.align	2, 0
.L489:
	.word	gStringVar4
	.word	sCantTransmitToTrainerTexts
.L399:
	mov	r0, #0x7
	bl	PlaySE
	b	.L387
.L398:
	ldr	r0, .L491
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2761
	b	.L387	@long jump
.LCB2761:
	mov	r0, #0xa
	strb	r0, [r6, #0x8]
	b	.L387
.L492:
	.align	2, 0
.L491:
	.word	gMain
.L407:
	ldr	r4, .L493
	ldr	r0, .L493+0x4
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	sub_80130B4
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2790
	b	.L387	@long jump
.LCB2790:
	ldr	r0, .L493+0x8
	ldrb	r2, [r6, #0xf]
	lsl	r2, r2, #0x5
	ldr	r1, [r6]
	add	r1, r1, r2
	bl	sub_8018404
	b	.L474
.L494:
	.align	2, 0
.L493:
	.word	gStringVar4
	.word	gUnknown_02022C2C
	.word	gStringVar1
.L409:
	ldr	r0, .L495
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L410	@cond_branch
	ldr	r4, .L495+0x4
	ldr	r1, [r6]
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x1b
	bhi	.L410	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L495+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L496:
	.align	2, 0
.L495:
	.word	gReceivedRemoteLinkPlayers
	.word	gUnknown_02022C2C
	.word	.L416
	.align	2, 0
	.align	2, 0
.L416:
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L410
	.word	.L410
	.word	.L410
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L410
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L410
	.word	.L410
	.word	.L410
	.word	.L410
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
	.word	.L415
.L415:
	mov	r0, #0x14
	strb	r0, [r6, #0x8]
	b	.L387
.L410:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bls	.LCB2867
	b	.L418	@long jump
.LCB2867:
	lsl	r0, r0, #0x2
	ldr	r1, .L497
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L498:
	.align	2, 0
.L497:
	.word	.L440
	.align	2, 0
	.align	2, 0
.L440:
	.word	.L419
	.word	.L422
	.word	.L418
	.word	.L418
	.word	.L423
	.word	.L422
	.word	.L428
	.word	.L418
	.word	.L422
.L419:
	mov	r0, #0xc
	strb	r0, [r6, #0x8]
	b	.L418
.L422:
	mov	r0, #0xe
	strb	r0, [r6, #0x8]
	b	.L418
.L423:
	ldr	r5, .L499
	ldr	r4, .L499+0x4
	ldrb	r1, [r4]
	add	r0, r5, #0
	bl	sub_8013160
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r5, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2911
	b	.L418	@long jump
.LCB2911:
	ldrb	r0, [r4]
	cmp	r0, #0x1c
	beq	.L426	@cond_branch
	cmp	r0, #0xe
	bne	.L425	@cond_branch
.L426:
	mov	r0, #0xc
	mov	r1, #0x0
	bl	sub_8011A64
	b	.L418
.L500:
	.align	2, 0
.L499:
	.word	gStringVar4
	.word	gUnknown_02022C2C
.L425:
	mov	r0, #0x7
	mov	r1, #0x0
	bl	sub_8011A64
	ldr	r0, .L501
	ldr	r2, .L501+0x4
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r1, .L501+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	b	.L418
.L502:
	.align	2, 0
.L501:
	.word	gStringVar1
	.word	sLinkGroupActivityTexts
	.word	sText_AwaitingOtherMembers
.L428:
	ldrb	r0, [r6, #0x15]
	add	r2, r0, #0
	cmp	r2, #0xf0
	bls	.L429	@cond_branch
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L503
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L418	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x0
	bl	sub_8011A64
	mov	r0, #0x0
	b	.L475
.L504:
	.align	2, 0
.L503:
	.word	gStringVar4
.L429:
	ldr	r0, .L505
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x1b
	bhi	.L438	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L505+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L506:
	.align	2, 0
.L505:
	.word	gUnknown_02022C2C
	.word	.L439
	.align	2, 0
	.align	2, 0
.L439:
	.word	.L418
	.word	.L418
	.word	.L438
	.word	.L418
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L418
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L438
	.word	.L418
.L438:
	add	r0, r2, #0x1
.L475:
	strb	r0, [r6, #0x15]
.L418:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB3030
	b	.L387	@long jump
.LCB3030:
	ldr	r0, .L507
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3038
	b	.L387	@long jump
.LCB3038:
	mov	r0, #0x7
	strb	r0, [r6, #0x8]
	b	.L387
.L508:
	.align	2, 0
.L507:
	.word	gMain
.L443:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L509
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3060
	b	.L387	@long jump
.LCB3060:
	mov	r0, #0x8
	strb	r0, [r6, #0x8]
	b	.L387
.L510:
	.align	2, 0
.L509:
	.word	sText_QuitBeingMember
.L445:
	add	r4, r6, #0
	add	r4, r4, #0x9
	bl	sub_8011A74
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L449	@cond_branch
	cmp	r1, r0
	bgt	.L453	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L450	@cond_branch
	b	.L387
.L453:
	cmp	r1, #0
	beq	.L447	@cond_branch
	cmp	r1, #0x1
	beq	.L449	@cond_branch
	b	.L387
.L447:
	bl	sub_80106D4
	mov	r0, #0x9
	b	.L476
.L449:
	mov	r0, #0x5
	b	.L476
.L450:
	mov	r0, #0x6
.L476:
	strb	r0, [r6, #0x8]
.L472:
	ldrb	r0, [r6, #0xe]
	bl	RedrawListMenu
	b	.L387
.L454:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3132
	b	.L387	@long jump
.LCB3132:
.L474:
	mov	r0, #0x6
	strb	r0, [r6, #0x8]
	b	.L387
.L460:
	ldrb	r0, [r6, #0xd]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r6, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r6, #0xc]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r6, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xc]
	bl	RemoveWindow
	ldrb	r0, [r6, #0x11]
	bl	DestroyTask
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	ldrb	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L387
.L461:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L511
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L387	@cond_branch
	ldr	r0, .L511+0x4
	mov	r1, #0x6
	b	.L477
.L512:
	.align	2, 0
.L511:
	.word	sPlayerDisconnectedTexts
	.word	gSpecialVar_Result
.L463:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L513
	mov	r1, #0x5
	b	.L477
.L514:
	.align	2, 0
.L513:
	.word	gSpecialVar_Result
.L464:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L515
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	b	.L478
.L516:
	.align	2, 0
.L515:
	.word	sPlayerDisconnectedTexts
.L466:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L517
.L478:
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L387	@cond_branch
	ldr	r0, .L517+0x4
	mov	r1, #0x8
.L477:
	strh	r1, [r0]
	mov	r0, #0x17
	strb	r0, [r6, #0x8]
	b	.L387
.L518:
	.align	2, 0
.L517:
	.word	gStringVar4
	.word	gSpecialVar_Result
.L468:
	add	r0, r4, #0
	bl	DestroyTask
	bl	sub_80173D4
	bl	sub_800EDD4
	b	.L387
.L469:
	bl	sub_80149C4
	add	r0, r4, #0
	bl	DestroyTask
.L387:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 sub_80134E8,.Lfe17-sub_80134E8
	.align	2, 0
	.globl	sub_8013B8C
	.type	 sub_8013B8C,function
	.thumb_func
sub_8013B8C:
	push	{lr}
	lsl	r1, r1, #0x5
	ldr	r0, [r0]
	add	r3, r0, r1
	ldr	r0, .L527
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L526	@cond_branch
	ldrb	r1, [r3, #0x1]
	mov	r0, #0x3c
	and	r0, r0, r1
	cmp	r0, #0xc
	beq	.L526	@cond_branch
	ldr	r0, .L527+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x9]
	mov	r2, #0x80
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L521	@cond_branch
	mov	r0, #0x1
	b	.L525
.L528:
	.align	2, 0
.L527:
	.word	gUnknown_02022C2C
	.word	gSaveBlock2Ptr
.L521:
	ldrb	r1, [r3]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L524	@cond_branch
.L526:
	mov	r0, #0x0
	b	.L525
.L524:
	mov	r0, #0x2
.L525:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 sub_8013B8C,.Lfe18-sub_8013B8C
	.align	2, 0
	.globl	sub_8013BD8
	.type	 sub_8013BD8,function
	.thumb_func
sub_8013BD8:
	push	{r4, lr}
	add	r4, r0, #0
	strb	r1, [r4, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r4, #0xe]
	bl	RedrawListMenu
	ldr	r0, .L530
	ldrb	r2, [r4, #0xf]
	lsl	r2, r2, #0x5
	ldr	r1, [r4]
	add	r1, r1, r2
	bl	sub_8018404
	ldr	r1, .L530+0x4
	ldr	r0, .L530+0x8
	ldrh	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	ldrb	r1, [r4, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r4]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8011FC8
	pop	{r4}
	pop	{r0}
	bx	r0
.L531:
	.align	2, 0
.L530:
	.word	gStringVar1
	.word	gUnknown_082F0530
	.word	gSpecialVar_0x8004
.Lfe19:
	.size	 sub_8013BD8,.Lfe19-sub_8013BD8
	.align	2, 0
	.globl	sub_8013C40
	.type	 sub_8013C40,function
	.thumb_func
sub_8013C40:
	push	{lr}
	ldr	r0, .L533
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L533+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L533+0x8
	add	r1, r1, r2
	str	r1, [r3]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	ldr	r2, .L533+0xc
	str	r1, [r2]
	pop	{r1}
	bx	r1
.L534:
	.align	2, 0
.L533:
	.word	sub_8013C7C
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gUnknown_03000DA4
.Lfe20:
	.size	 sub_8013C40,.Lfe20-sub_8013C40
	.align	2, 0
	.globl	sub_8013C7C
	.type	 sub_8013C7C,function
	.thumb_func
sub_8013C7C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L546
	ldr	r4, [r0]
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0xb
	bhi	.L536	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L546+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L547:
	.align	2, 0
.L546:
	.word	gUnknown_02022C30
	.word	.L544
	.align	2, 0
	.align	2, 0
.L544:
	.word	.L537
	.word	.L536
	.word	.L538
	.word	.L539
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L536
	.word	.L542
	.word	.L543
.L537:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C5C
	mov	r0, #0x1
	bl	sub_80111B0
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r4, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x2
	strb	r0, [r4, #0x8]
	b	.L536
.L538:
	ldr	r0, [r4, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r4]
	mov	r1, #0x10
	bl	sub_8017580
	ldr	r0, [r4, #0x4]
	mov	r1, #0xff
	bl	sub_8016FC0
	mov	r1, #0x0
	strb	r0, [r4, #0x11]
	strb	r1, [r4, #0xf]
	mov	r0, #0x3
	strb	r0, [r4, #0x8]
	b	.L536
.L539:
	bl	sub_8013E44
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L540	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L540:
	ldr	r0, .L548
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x26
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xff
	bne	.L536	@cond_branch
	mov	r0, #0xa
	strb	r0, [r4, #0x8]
	b	.L536
.L549:
	.align	2, 0
.L548:
	.word	gTasks
.L542:
	ldrb	r0, [r4, #0x11]
	bl	DestroyTask
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	bl	sub_800EDD4
	ldrb	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x8]
	b	.L536
.L543:
	bl	sub_800EDD4
	add	r0, r5, #0
	bl	DestroyTask
.L536:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 sub_8013C7C,.Lfe21-sub_8013C7C
	.align	2, 0
	.globl	sub_8013D88
	.type	 sub_8013D88,function
	.thumb_func
sub_8013D88:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0xff
	bne	.L551	@cond_branch
.L560:
	mov	r0, #0x1
	b	.L558
.L551:
	cmp	r1, #0x16
	bhi	.L552	@cond_branch
	ldr	r0, .L562
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L561
.L563:
	.align	2, 0
.L562:
	.word	gUnknown_082F04D8
.L555:
	ldrb	r0, [r1]
	cmp	r0, r2
	beq	.L560	@cond_branch
	add	r1, r1, #0x1
.L561:
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L555	@cond_branch
.L552:
	mov	r0, #0x0
.L558:
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 sub_8013D88,.Lfe22-sub_8013D88
	.align	2, 0
	.globl	sub_8013DBC
	.type	 sub_8013DBC,function
	.thumb_func
sub_8013DBC:
	push	{lr}
	ldr	r0, [r0]
	lsl	r1, r1, #0x5
	add	r1, r0, r1
	ldrb	r2, [r1, #0x1a]
	lsl	r0, r2, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L565	@cond_branch
	ldrb	r0, [r1, #0xa]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L566	@cond_branch
	mov	r0, #0x3
	b	.L571
.L566:
	lsl	r0, r2, #0x1d
	cmp	r0, #0
	bge	.L568	@cond_branch
	mov	r0, #0x1
	b	.L571
.L568:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L565	@cond_branch
	mov	r0, #0x2
	b	.L571
.L565:
	mov	r0, #0x0
.L571:
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 sub_8013DBC,.Lfe23-sub_8013DBC
	.align	2, 0
	.globl	sub_8013DF4
	.type	 sub_8013DF4,function
	.thumb_func
sub_8013DF4:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L573
	ldr	r0, [r0]
	mov	r8, r0
	bl	sub_8013DBC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x5
	mov	r2, r8
	ldr	r3, [r2]
	add	r3, r3, r1
	str	r0, [sp]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x8
	add	r2, r6, #0
	bl	sub_80177B8
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L574:
	.align	2, 0
.L573:
	.word	gUnknown_02022C30
.Lfe24:
	.size	 sub_8013DF4,.Lfe24-sub_8013DF4
	.align	2, 0
	.globl	sub_8013E44
	.type	 sub_8013E44,function
	.thumb_func
sub_8013E44:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	ldr	r0, .L599
	ldr	r6, [r0]
	mov	r7, #0x0
	mov	r3, #0x0
.L579:
	ldr	r0, [r6]
	lsl	r5, r3, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L578	@cond_branch
	ldr	r1, [r6, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	sub_80176E4
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L581	@cond_branch
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L582	@cond_branch
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r4, r0, #0x2
	ldr	r1, [r6, #0x4]
	add	r1, r1, r4
	add	r0, r2, #0
	bl	sub_8017678
	ldr	r3, [sp]
	cmp	r0, #0
	beq	.L583	@cond_branch
	ldr	r1, [r6]
	ldr	r0, [r6, #0x4]
	add	r1, r1, r5
	add	r0, r0, r4
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	b	.L598
.L600:
	.align	2, 0
.L599:
	.word	gUnknown_02022C30
.L583:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L587	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L587	@cond_branch
	mov	r7, #0x2
	b	.L587
.L582:
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
.L598:
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
.L587:
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L578
.L581:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x2
	beq	.L578	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L601
	cmp	r1, r0
	bls	.L578	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r7, #0x4
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
.L578:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L579	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x3
.L595:
	ldr	r0, [r6]
	ldr	r1, [r6, #0x4]
	add	r1, r1, r5
	mov	r2, #0x10
	bl	sub_8017734
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L594	@cond_branch
	mov	r7, #0x1
.L594:
	add	r5, r5, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L595	@cond_branch
	add	r0, r7, #0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L602:
	.align	2, 0
.L601:
	.word	0x12b
.Lfe25:
	.size	 sub_8013E44,.Lfe25-sub_8013E44
	.align	2, 0
	.type	 Task_CreateTradeMenu,function
	.thumb_func
Task_CreateTradeMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	CB2_StartCreateTradeMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_CreateTradeMenu,.Lfe26-Task_CreateTradeMenu
	.align	2, 0
	.globl	sub_8013F78
	.type	 sub_8013F78,function
	.thumb_func
sub_8013F78:
	push	{lr}
	ldr	r0, .L605
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L606:
	.align	2, 0
.L605:
	.word	Task_CreateTradeMenu
.Lfe27:
	.size	 sub_8013F78,.Lfe27-sub_8013F78
	.align	2, 0
	.globl	sub_8013F90
	.type	 sub_8013F90,function
	.thumb_func
sub_8013F90:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L620
	mov	r8, r0
	bl	GetMultiplayerId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	GetPartyPositionOfRegisteredMon
	add	r7, r0, #0
	ldr	r1, .L620+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L610	@cond_branch
	cmp	r0, #0x1
	bgt	.L618	@cond_branch
	cmp	r0, #0
	beq	.L609	@cond_branch
	b	.L608
.L621:
	.align	2, 0
.L620:
	.word	sUnionRoomTrade
	.word	gTasks
.L618:
	cmp	r0, #0x2
	beq	.L612	@cond_branch
	cmp	r0, #0x3
	beq	.L614	@cond_branch
	b	.L608
.L609:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L622
	add	r1, r1, r0
	mov	r0, #0x0
	mov	r2, #0x64
	bl	SendBlock
	b	.L608
.L623:
	.align	2, 0
.L622:
	.word	gPlayerParty
.L610:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L608	@cond_branch
	bl	GetMultiplayerId
	add	r1, r0, #0
	ldr	r0, .L624
	mov	r2, #0x1
	eor	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r2, .L624+0x4
	add	r1, r1, r2
	mov	r2, #0x64
	bl	memcpy
	mov	r0, #0x32
	bl	IncrementGameStat
	bl	ResetBlockReceivedFlags
	b	.L619
.L625:
	.align	2, 0
.L624:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
.L612:
	ldr	r4, .L626
	ldr	r0, .L626+0x4
	ldr	r1, [r0]
	ldr	r0, .L626+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xdc
	bl	memcpy
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0xdc
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L608	@cond_branch
.L619:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L608
.L627:
	.align	2, 0
.L626:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x2be0
.L614:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L608	@cond_branch
	ldr	r4, .L628
	bl	GetMultiplayerId
	add	r1, r0, #0
	mov	r0, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r0, .L628+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xd8
	bl	memcpy
	bl	ResetBlockReceivedFlags
	ldr	r1, .L628+0x8
	strb	r7, [r1]
	mov	r0, #0x6
	strb	r0, [r1, #0x1]
	ldr	r1, .L628+0xc
	ldr	r0, .L628+0x10
	str	r0, [r1, #0x8]
	ldr	r0, .L628+0x14
	bl	SetMainCallback2
	mov	r0, r8
	bl	ResetUnionRoomTrade
	add	r0, r6, #0
	bl	DestroyTask
.L608:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L629:
	.align	2, 0
.L628:
	.word	gTradeMail
	.word	gBlockRecvBuffer
	.word	gSelectedTradeMonPositions
	.word	gMain
	.word	CB2_ReturnToField
	.word	CB2_LinkTrade
.Lfe28:
	.size	 sub_8013F90,.Lfe28-sub_8013F90
	.align	2, 0
	.globl	sub_80140E0
	.type	 sub_80140E0,function
	.thumb_func
sub_80140E0:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L645
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L632	@cond_branch
	cmp	r0, #0x1
	beq	.L634	@cond_branch
	b	.L631
.L646:
	.align	2, 0
.L645:
	.word	gTasks
.L632:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L633	@cond_branch
	mov	r0, #0x2
	bl	sub_800A4D8
.L633:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L631
.L634:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	sub_800A9D8
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L631	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L647
	b	.L636
.L648:
	.align	2, 0
.L647:
	.word	gLinkPlayers
.L639:
	lsl	r1, r4, #0x8
	ldr	r0, .L649
	add	r3, r1, r0
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L649+0x4
	add	r0, r0, r1
	ldrb	r2, [r5]
	add	r1, r3, #0
	bl	CopyTrainerCardData
	add	r5, r5, #0x1c
	add	r4, r4, #0x1
.L636:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L639	@cond_branch
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L641	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L649
	add	r3, r0, r1
	add	r0, r3, #0
	add	r0, r0, #0x60
	ldrh	r0, [r0]
	bl	sub_801B94C
	b	.L642
.L650:
	.align	2, 0
.L649:
	.word	gBlockRecvBuffer
	.word	gTrainerCards
.L641:
	bl	sub_801B940
.L642:
	bl	ResetBlockReceivedFlags
	add	r0, r6, #0
	bl	DestroyTask
.L631:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 sub_80140E0,.Lfe29-sub_80140E0
	.align	2, 0
	.globl	sub_80141A4
	.type	 sub_80141A4,function
	.thumb_func
sub_80141A4:
	push	{r4, lr}
	ldr	r0, .L658
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L653	@cond_branch
	cmp	r0, #0x1
	beq	.L654	@cond_branch
	b	.L652
.L659:
	.align	2, 0
.L658:
	.word	gMain
.L653:
	ldr	r0, .L660
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L652
.L661:
	.align	2, 0
.L660:
	.word	sub_80140E0
.L654:
	ldr	r0, .L662
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L652	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L662+0x4
	bl	ShowTrainerCardInLink
.L652:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L663:
	.align	2, 0
.L662:
	.word	sub_80140E0
	.word	CB2_ReturnToField
.Lfe30:
	.size	 sub_80141A4,.Lfe30-sub_80141A4
	.align	2, 0
	.globl	sub_8014210
	.type	 sub_8014210,function
	.thumb_func
sub_8014210:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r5, .L665
	ldr	r0, .L665+0x4
	str	r0, [r5, #0x14]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	mov	r2, #0x1
	eor	r4, r4, r2
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	eor	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	ldr	r1, .L665+0x8
	ldr	r0, .L665+0xc
	str	r0, [r1, #0x8]
	ldr	r0, .L665+0x10
	str	r6, [r0]
	bl	PlayBattleBGM
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L666:
	.align	2, 0
.L665:
	.word	gLinkPlayers
	.word	0x2211
	.word	gMain
	.word	sub_80B360C
	.word	gBattleTypeFlags
.Lfe31:
	.size	 sub_8014210,.Lfe31-sub_8014210
	.align	2, 0
	.type	 sub_8014290,function
	.thumb_func
sub_8014290:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L668
	add	r1, r3, #0
	bl	VarSet
	ldr	r6, .L668+0x4
	ldr	r1, [r6]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	mov	r8, r2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	str	r5, [sp]
	add	r3, r4, #0
	bl	SetWarpDestination
	ldr	r0, [r6]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, r8
	bl	SetDynamicWarpWithCoords
	bl	WarpIntoMap
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L669:
	.align	2, 0
.L668:
	.word	0x4087
	.word	gSaveBlock1Ptr
.Lfe32:
	.size	 sub_8014290,.Lfe32-sub_8014290
	.align	2, 0
	.globl	sub_8014304
	.type	 sub_8014304,function
	.thumb_func
sub_8014304:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	add	r6, r3, #0
	ldr	r1, [sp, #0x18]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L671
	strh	r1, [r0]
	ldr	r0, .L671+0x4
	bl	VarSet
	bl	GetLinkPlayerCount
	ldr	r1, .L671+0x8
	strb	r0, [r1]
	bl	GetMultiplayerId
	ldr	r1, .L671+0xc
	strb	r0, [r1]
	bl	SetCableClubWarp
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, r8
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r0
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	str	r6, [sp]
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, r8
	bl	SetWarpDestination
	bl	WarpIntoMap
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	gSpecialVar_0x8004
	.word	0x4087
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
.Lfe33:
	.size	 sub_8014304,.Lfe33-sub_8014304
	.align	2, 0
	.globl	sub_8014384
	.type	 sub_8014384,function
	.thumb_func
sub_8014384:
	push	{r4, lr}
	ldr	r0, .L680
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L675	@cond_branch
	cmp	r0, #0x1
	beq	.L676	@cond_branch
	b	.L674
.L681:
	.align	2, 0
.L680:
	.word	gMain
.L675:
	ldr	r0, .L682
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L674
.L683:
	.align	2, 0
.L682:
	.word	sub_80140E0
.L676:
	ldr	r0, .L684
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L674	@cond_branch
	ldr	r0, .L684+0x4
	bl	SetMainCallback2
.L674:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L685:
	.align	2, 0
.L684:
	.word	sub_80140E0
	.word	CB2_ReturnToFieldCableClub
.Lfe34:
	.size	 sub_8014384,.Lfe34-sub_8014384
	.align	2, 0
	.globl	sub_80143E4
	.type	 sub_80143E4,function
	.thumb_func
sub_80143E4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	TrainerCard_GenerateCardForPlayer
	cmp	r5, #0
	beq	.L687	@cond_branch
	bl	GetWonderCardFlagID
	add	r1, r4, #0
	add	r1, r1, #0x60
	strh	r0, [r1]
	b	.L688
.L687:
	add	r0, r4, #0
	add	r0, r0, #0x60
	strh	r5, [r0]
.L688:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 sub_80143E4,.Lfe35-sub_80143E4
	.align	2, 0
	.globl	sub_801440C
	.type	 sub_801440C,function
	.thumb_func
sub_801440C:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_801B940
	ldr	r0, .L719
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xe
	bhi	.L690	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L719+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L720:
	.align	2, 0
.L719:
	.word	gUnknown_02022C2C
	.word	.L695
	.align	2, 0
	.align	2, 0
.L695:
	.word	.L694
	.word	.L694
	.word	.L694
	.word	.L694
	.word	.L690
	.word	.L690
	.word	.L690
	.word	.L690
	.word	.L694
	.word	.L694
	.word	.L694
	.word	.L690
	.word	.L694
	.word	.L690
	.word	.L694
.L694:
	bl	RecordMixTrainerNames
.L690:
	ldr	r0, .L721
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x50
	bls	.LCB4761
	b	.L697	@long jump
.LCB4761:
	lsl	r0, r0, #0x2
	ldr	r1, .L721+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L722:
	.align	2, 0
.L721:
	.word	gUnknown_02022C2C
	.word	.L715
	.align	2, 0
	.align	2, 0
.L715:
	.word	.L700
	.word	.L701
	.word	.L702
	.word	.L703
	.word	.L707
	.word	.L697
	.word	.L697
	.word	.L711
	.word	.L712
	.word	.L713
	.word	.L714
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L704
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L699
	.word	.L697
	.word	.L697
	.word	.L705
	.word	.L707
	.word	.L697
	.word	.L697
	.word	.L711
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L697
	.word	.L699
.L699:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L723
	ldr	r0, .L723+0x4
	str	r0, [r1, #0x8]
	mov	r0, #0x3
	bl	InitChooseHalfPartyForBattle
	b	.L697
.L724:
	.align	2, 0
.L723:
	.word	gMain
	.word	sub_801AC54
.L700:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L725
	mov	r1, #0x1
	bl	sub_80143E4
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x19
	mov	r1, #0x18
	mov	r2, #0x6
	mov	r3, #0x8
	b	.L718
.L726:
	.align	2, 0
.L725:
	.word	gBlockSendBuffer
.L701:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L727
	mov	r1, #0x1
	bl	sub_80143E4
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x19
	mov	r1, #0x18
	mov	r2, #0x6
	mov	r3, #0x8
	b	.L718
.L728:
	.align	2, 0
.L727:
	.word	gBlockSendBuffer
.L702:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L729
	mov	r1, #0x1
	bl	sub_80143E4
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x19
	mov	r1, #0x1b
	mov	r2, #0x5
	mov	r3, #0x8
	b	.L718
.L730:
	.align	2, 0
.L729:
	.word	gBlockSendBuffer
.L703:
	ldr	r0, .L731
	mov	r1, #0x1
	bl	sub_80143E4
	bl	CleanupOverworldWindowsAndTilemaps
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x19
	mov	r1, #0x19
	mov	r2, #0x5
	mov	r3, #0x8
	b	.L718
.L732:
	.align	2, 0
.L731:
	.word	gBlockSendBuffer
.L704:
	ldr	r0, .L733
	mov	r1, #0x1
	bl	sub_80143E4
	bl	CleanupOverworldWindowsAndTilemaps
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x19
	mov	r1, #0x1a
	mov	r2, #0x8
	mov	r3, #0x9
.L718:
	bl	sub_8014304
	ldr	r0, .L733+0x4
	bl	SetMainCallback2
	b	.L697
.L734:
	.align	2, 0
.L733:
	.word	gBlockSendBuffer
	.word	sub_8014384
.L705:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L735
	mov	r1, #0x0
	bl	CreateTask
	b	.L697
.L736:
	.align	2, 0
.L735:
	.word	sub_8013F90
.L707:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L708	@cond_branch
	bl	sub_800ED10
	b	.L709
.L708:
	bl	sub_800ED28
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8010F84
.L709:
	bl	sub_801DD98
	b	.L697
.L711:
	ldr	r0, .L737
	mov	r1, #0x0
	bl	sub_80143E4
	ldr	r0, .L737+0x4
	bl	SetMainCallback2
	b	.L697
.L738:
	.align	2, 0
.L737:
	.word	gBlockSendBuffer
	.word	sub_80141A4
.L712:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	sub_8014290
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L739
	bl	sub_802A9A8
	b	.L697
.L740:
	.align	2, 0
.L739:
	.word	CB2_LoadMap
.L713:
	mov	r0, #0x7
	mov	r1, #0x9
	mov	r2, #0x1
	bl	sub_8014290
	ldr	r0, .L741
	bl	sub_8020C70
	b	.L697
.L742:
	.align	2, 0
.L741:
	.word	CB2_LoadMap
.L714:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	sub_8014290
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L743
	bl	sub_802493C
.L697:
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L743+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L743+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x44
	beq	.L717	@cond_branch
	bl	ScriptContext2_Disable
.L717:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L744:
	.align	2, 0
.L743:
	.word	CB2_LoadMap
	.word	gSpecialVar_Result
	.word	gUnknown_02022C2C
.Lfe36:
	.size	 sub_801440C,.Lfe36-sub_801440C
	.align	2, 0
	.globl	sub_8014790
	.type	 sub_8014790,function
	.thumb_func
sub_8014790:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L775
	add	r7, r0, r1
	ldr	r0, .L775+0x4
	mov	r9, r0
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	mov	r2, r9
	cmp	r0, #0x8
	bls	.LCB5068
	b	.L746	@long jump
.LCB5068:
	lsl	r0, r0, #0x2
	ldr	r1, .L775+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L776:
	.align	2, 0
.L775:
	.word	gTasks+0x8
	.word	gBlockSendBuffer
	.word	.L773
	.align	2, 0
	.align	2, 0
.L773:
	.word	.L747
	.word	.L755
	.word	.L757
	.word	.L761
	.word	.L763
	.word	.L765
	.word	.L769
	.word	.L770
	.word	.L771
.L747:
	ldr	r1, .L777
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L777+0x4
	ldrb	r0, [r0]
	sub	r0, r0, #0xe
	cmp	r0, #0xe
	bhi	.L753	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L777+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L778:
	.align	2, 0
.L777:
	.word	gSpecialVar_Result
	.word	gUnknown_02022C2C
	.word	.L754
	.align	2, 0
	.align	2, 0
.L754:
	.word	.L750
	.word	.L753
	.word	.L752
	.word	.L753
	.word	.L753
	.word	.L753
	.word	.L753
	.word	.L753
	.word	.L753
	.word	.L752
	.word	.L752
	.word	.L752
	.word	.L752
	.word	.L752
	.word	.L750
.L750:
	ldr	r1, .L779
	ldr	r0, .L779+0x4
	str	r0, [r1, #0x14]
	mov	r2, #0x0
	mov	r8, r2
	mov	r0, r8
	strh	r0, [r1, #0x18]
	mov	r0, #0x2
	strh	r0, [r1, #0x34]
	ldr	r6, .L779+0x8
	ldrb	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L779+0xc
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, r9
	strh	r0, [r1]
	ldrb	r0, [r6, #0x1]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r2, r9
	strh	r0, [r2, #0x2]
	ldr	r0, .L779+0x10
	mov	r1, r8
	str	r1, [r0, #0x8]
	mov	r0, #0x4
	strh	r0, [r7]
	bl	RecordMixTrainerNames
	bl	ResetBlockReceivedFlags
	b	.L746
.L780:
	.align	2, 0
.L779:
	.word	gLinkPlayers
	.word	0x2211
	.word	gSelectedOrderFromParty
	.word	gPlayerParty+-0x64
	.word	gMain
.L752:
	bl	RecordMixTrainerNames
	add	r0, r4, #0
	bl	DestroyTask
.L753:
	bl	EnableBothScriptContexts
	mov	r0, #0x1
	strh	r0, [r7]
	b	.L746
.L755:
	bl	ScriptContext1_IsScriptSetUp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L746	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	mov	r0, #0x2
	strh	r0, [r7]
	b	.L746
.L757:
	ldr	r0, .L781
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L746	@cond_branch
	ldr	r0, .L781+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1d
	bne	.L759	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L781+0x8
	bl	SetMainCallback2
	b	.L746
.L782:
	.align	2, 0
.L781:
	.word	gPaletteFade
	.word	gUnknown_02022C2C
	.word	CB2_StartCreateTradeMenu
.L759:
	bl	sub_800ADF8
	mov	r0, #0x3
	strh	r0, [r7]
	b	.L746
.L761:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L746	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	sub_80149D8
	b	.L746
.L763:
	mov	r0, #0x0
	add	r1, r2, #0
	mov	r2, #0xe
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L746	@cond_branch
	mov	r0, #0x5
	strh	r0, [r7]
	b	.L746
.L765:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L746	@cond_branch
	bl	ResetBlockReceivedFlags
	ldr	r0, .L783
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	bl	sub_80B2AF4
	cmp	r0, #0
	beq	.L767	@cond_branch
	ldr	r0, .L783+0x4
	mov	r1, #0xb
	strh	r1, [r0]
	mov	r0, #0x7
	strh	r0, [r7]
	b	.L746
.L784:
	.align	2, 0
.L783:
	.word	gBlockRecvBuffer
	.word	gSpecialVar_Result
.L767:
	mov	r0, #0x6
	strh	r0, [r7]
	b	.L746
.L769:
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
	b	.L746
.L770:
	bl	sub_800AC34
	mov	r0, #0x8
	strh	r0, [r7]
	b	.L746
.L771:
	ldr	r0, .L785
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L746	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L746:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L786:
	.align	2, 0
.L785:
	.word	gReceivedRemoteLinkPlayers
.Lfe37:
	.size	 sub_8014790,.Lfe37-sub_8014790
	.align	2, 0
	.globl	sub_80149C4
	.type	 sub_80149C4,function
	.thumb_func
sub_80149C4:
	push	{lr}
	ldr	r0, .L788
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L789:
	.align	2, 0
.L788:
	.word	sub_8014790
.Lfe38:
	.size	 sub_80149C4,.Lfe38-sub_80149C4
	.align	2, 0
	.globl	sub_80149D8
	.type	 sub_80149D8,function
	.thumb_func
sub_80149D8:
	push	{lr}
	ldr	r0, .L791
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L791+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L792:
	.align	2, 0
.L791:
	.word	sub_801440C
	.word	gTasks
.Lfe39:
	.size	 sub_80149D8,.Lfe39-sub_80149D8
	.align	2, 0
	.globl	MEvent_CreateTask_Leader
	.type	 MEvent_CreateTask_Leader,function
	.thumb_func
MEvent_CreateTask_Leader:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L794
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L794+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L794+0x8
	add	r1, r1, r0
	str	r1, [r2]
	mov	r2, #0x0
	strb	r2, [r1, #0xc]
	strb	r2, [r1, #0xd]
	strb	r4, [r1, #0x18]
	ldr	r0, .L794+0xc
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L795:
	.align	2, 0
.L794:
	.word	sub_8014A40
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gSpecialVar_Result
.Lfe40:
	.size	 MEvent_CreateTask_Leader,.Lfe40-MEvent_CreateTask_Leader
	.align	2, 0
	.globl	sub_8014A40
	.type	 sub_8014A40,function
	.thumb_func
sub_8014A40:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L845
	ldr	r5, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x11
	bls	.LCB5442
	b	.L797	@long jump
.LCB5442:
	lsl	r0, r0, #0x2
	ldr	r1, .L845+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L846:
	.align	2, 0
.L845:
	.word	gUnknown_02022C30
	.word	.L840
	.align	2, 0
	.align	2, 0
.L840:
	.word	.L798
	.word	.L799
	.word	.L800
	.word	.L801
	.word	.L802
	.word	.L806
	.word	.L804
	.word	.L807
	.word	.L815
	.word	.L821
	.word	.L822
	.word	.L824
	.word	.L826
	.word	.L829
	.word	.L830
	.word	.L832
	.word	.L837
	.word	.L838
.L798:
	ldr	r1, .L847
	ldrb	r0, [r5, #0x18]
	strb	r0, [r1]
	ldr	r1, .L847+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	ldrb	r0, [r5, #0x18]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8010FA0
	bl	sub_800B488
	bl	OpenLink
	mov	r0, #0x2
	bl	sub_8011C10
	mov	r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L797
.L848:
	.align	2, 0
.L847:
	.word	gUnknown_02022C2C
	.word	gUnknown_02022C2D
.L799:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r5]
	mov	r1, #0x5
	bl	sub_8017580
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	sub_800DF90
	ldr	r1, [r5]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r5, #0x4]
	mov	r1, #0xff
	bl	sub_8016FC0
	strb	r0, [r5, #0x17]
	ldr	r0, .L849
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L849+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	ldr	r0, .L849+0x8
	and	r1, r1, r0
	mov	r0, #0xc0
	lsl	r0, r0, #0x4
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xf]
	ldrb	r0, [r5, #0xf]
	bl	MG_DrawTextBorder
	ldr	r0, .L849+0xc
	add	r2, r0, #0
	ldr	r1, .L849+0x10
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0x12]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	b	.L842
.L850:
	.align	2, 0
.L849:
	.word	gUnknown_082F011C
	.word	0xffff
	.word	-0xff01
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_082F015C
.L800:
	ldr	r0, .L851
	ldr	r2, .L851+0x4
	ldr	r4, .L851+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L851+0xc
	ldrb	r1, [r4]
	bl	sub_801262C
	mov	r0, #0x3
	strb	r0, [r5, #0xc]
	b	.L797
.L852:
	.align	2, 0
.L851:
	.word	gStringVar1
	.word	sLinkGroupActivityTexts
	.word	gUnknown_02022C2C
	.word	gStringVar4
.L801:
	ldr	r0, .L853
	bl	AddTextPrinterToWindow1
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
	b	.L797
.L854:
	.align	2, 0
.L853:
	.word	gStringVar4
.L802:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	sub_801320C
	ldr	r0, .L855
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB5657
	b	.L797	@long jump
.LCB5657:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L797
.L856:
	.align	2, 0
.L855:
	.word	gMain
.L804:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L857
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	bne	.LCB5679
	b	.L797	@long jump
.LCB5679:
	ldr	r0, [r5]
	bl	sub_8013398
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
.L842:
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
	b	.L797
.L858:
	.align	2, 0
.L857:
	.word	sText_LinkWithFriendDropped
.L806:
	mov	r0, #0x7
	strb	r0, [r5, #0xc]
	b	.L797
.L807:
	add	r0, r5, #0
	add	r0, r0, #0xd
	add	r1, r5, #0
	add	r1, r1, #0x14
	ldr	r3, .L859
	mov	r2, #0x0
	bl	mevent_message_print_and_prompt_yes_no
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L809	@cond_branch
	cmp	r4, #0
	bgt	.L814	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L811	@cond_branch
	b	.L797
.L860:
	.align	2, 0
.L859:
	.word	gStringVar4
.L814:
	cmp	r4, #0x1
	beq	.L811	@cond_branch
	b	.L797
.L809:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	strb	r4, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x5
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L843
.L811:
	mov	r0, #0x6
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L843:
	bl	sub_8010688
	mov	r0, #0x8
	strb	r0, [r5, #0xc]
	b	.L797
.L815:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	sub_8010714
	add	r4, r0, #0
	cmp	r4, #0x1
	bne	.L816	@cond_branch
	ldrb	r0, [r5, #0x19]
	cmp	r0, #0x5
	bne	.L817	@cond_branch
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r5, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x13]
	ldr	r0, .L861
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	sub	r2, r2, #0x20
	ldr	r1, [r5]
	add	r1, r1, r2
	bl	sub_8018404
	ldr	r0, .L861+0x4
	ldr	r1, .L861+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0x9
	strb	r0, [r5, #0xc]
	bl	sub_800EF38
	b	.L818
.L862:
	.align	2, 0
.L861:
	.word	gStringVar1
	.word	gStringVar4
	.word	sText_AnOKWasSentToPlayer
.L817:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8011DC0
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r5]
	bl	sub_8013398
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
.L818:
	mov	r0, #0x0
	strb	r0, [r5, #0x19]
	b	.L797
.L816:
	cmp	r4, #0x2
	beq	.LCB5915
	b	.L797	@long jump
.LCB5915:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	strb	r4, [r5, #0xc]
	b	.L797
.L821:
	ldr	r0, .L863
	bl	AddTextPrinterToWindow1
	mov	r0, #0xa
	strb	r0, [r5, #0xc]
	b	.L797
.L864:
	.align	2, 0
.L863:
	.word	gStringVar4
.L822:
	ldrb	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB5946
	b	.L797	@long jump
.LCB5946:
	mov	r0, #0xb
	strb	r0, [r5, #0xc]
	b	.L797
.L824:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	sub_801320C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB5960
	b	.L797	@long jump
.LCB5960:
	mov	r0, #0xc
	strb	r0, [r5, #0xc]
	b	.L797
.L826:
	bl	sub_800EF1C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L827	@cond_branch
	mov	r0, #0x0
	bl	sub_800EF58
	mov	r0, #0xf
	strb	r0, [r5, #0xc]
	b	.L797
.L827:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	b	.L797
.L829:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	sub_800EDD4
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	b	.L844
.L830:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L865
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L797	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L865+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L797
.L866:
	.align	2, 0
.L865:
	.word	sText_PleaseStartOver
	.word	gSpecialVar_Result
.L832:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L834	@cond_branch
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L833	@cond_branch
.L834:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	b	.L797
.L833:
	ldr	r0, .L867
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L797	@cond_branch
	mov	r0, #0x1
	bl	sub_8011068
	b	.L844
.L868:
	.align	2, 0
.L867:
	.word	gReceivedRemoteLinkPlayers
.L837:
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	bl	sub_800ADF8
.L844:
	ldrb	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L797
.L838:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L797	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L797:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 sub_8014A40,.Lfe41-sub_8014A40
	.align	2, 0
	.globl	MEvent_CreateTask_CardOrNewsWithFriend
	.type	 MEvent_CreateTask_CardOrNewsWithFriend,function
	.thumb_func
MEvent_CreateTask_CardOrNewsWithFriend:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L870
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L870+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L870+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L870+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L870+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L871:
	.align	2, 0
.L870:
	.word	sub_8014F48
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gUnknown_03000DA4
	.word	gSpecialVar_Result
.Lfe42:
	.size	 MEvent_CreateTask_CardOrNewsWithFriend,.Lfe42-MEvent_CreateTask_CardOrNewsWithFriend
	.align	2, 0
	.globl	sub_8014F48
	.type	 sub_8014F48,function
	.thumb_func
sub_8014F48:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L911
	ldr	r7, [r0]
	ldrb	r0, [r7, #0x8]
	cmp	r0, #0xc
	bls	.LCB6180
	b	.L873	@long jump
.LCB6180:
	lsl	r0, r0, #0x2
	ldr	r1, .L911+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L912:
	.align	2, 0
.L911:
	.word	gUnknown_02022C30
	.word	.L908
	.align	2, 0
	.align	2, 0
.L908:
	.word	.L874
	.word	.L875
	.word	.L876
	.word	.L877
	.word	.L888
	.word	.L889
	.word	.L901
	.word	.L904
	.word	.L901
	.word	.L902
	.word	.L901
	.word	.L905
	.word	.L906
.L874:
	ldrb	r0, [r7, #0x12]
	add	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C5C
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r7, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r7]
	mov	r0, #0x1
	strb	r0, [r7, #0x8]
	b	.L873
.L875:
	ldr	r0, .L913
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r7, #0x8]
	b	.L873
.L914:
	.align	2, 0
.L913:
	.word	sText_ChooseTrainer
.L876:
	ldr	r0, [r7, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r7]
	mov	r1, #0x10
	bl	sub_8017580
	ldr	r0, [r7, #0x4]
	ldrb	r1, [r7, #0x12]
	add	r1, r1, #0x7
	bl	sub_8016FC0
	mov	r6, #0x0
	strb	r0, [r7, #0x11]
	ldr	r0, .L915
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L915+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	ldr	r5, .L915+0x8
	and	r1, r1, r5
	mov	r4, #0xc0
	lsl	r4, r4, #0x4
	orr	r1, r1, r4
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r7, #0xb]
	ldr	r0, .L915+0xc
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r0, sp, #0x8
	ldr	r1, [r0, #0x4]
	and	r1, r1, r5
	orr	r1, r1, r4
	str	r1, [r0, #0x4]
	bl	AddWindow
	strb	r0, [r7, #0xd]
	ldrb	r0, [r7, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L915+0x10
	add	r2, r0, #0
	ldr	r1, .L915+0x14
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldrb	r1, [r7, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r7, #0xe]
	ldrb	r0, [r7, #0xd]
	bl	MG_DrawTextBorder
	ldrb	r0, [r7, #0xd]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r7, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r7, #0xd]
	bl	sub_80125BC
	ldrb	r0, [r7, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r6, [r7, #0xf]
	mov	r0, #0x3
	strb	r0, [r7, #0x8]
	b	.L873
.L916:
	.align	2, 0
.L915:
	.word	gUnknown_082F0174
	.word	0xffff
	.word	-0xff01
	.word	gUnknown_082F017C
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_082F0204
.L877:
	bl	sub_8013E44
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L881	@cond_branch
	cmp	r2, #0x1
	bne	.L880	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L880:
	ldrb	r0, [r7, #0xe]
	bl	RedrawListMenu
	b	.L873
.L881:
	ldrb	r0, [r7, #0xe]
	bl	ListMenu_ProcessInput
	add	r2, r0, #0
	ldr	r0, .L917
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L882	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L882	@cond_branch
	ldr	r0, [r7]
	lsl	r1, r2, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L883	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L883	@cond_branch
	strb	r2, [r7, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r7, #0xe]
	bl	RedrawListMenu
	ldr	r0, .L917+0x4
	ldrb	r2, [r7, #0xf]
	lsl	r2, r2, #0x5
	ldr	r1, [r7]
	add	r1, r1, r2
	bl	sub_8018404
	ldrb	r1, [r7, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r7]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8011FC8
	mov	r0, #0x6e
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r7, #0x8]
	b	.L873
.L918:
	.align	2, 0
.L917:
	.word	gMain
	.word	gStringVar1
.L883:
	mov	r0, #0x7
	bl	PlaySE
	b	.L873
.L882:
	ldr	r0, .L919
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB6463
	b	.L873	@long jump
.LCB6463:
	mov	r0, #0x6
	strb	r0, [r7, #0x8]
	b	.L873
.L920:
	.align	2, 0
.L919:
	.word	gMain
.L888:
	ldr	r0, .L921
	bl	AddTextPrinterToWindow1
	ldr	r0, .L921+0x4
	ldrb	r2, [r7, #0xf]
	lsl	r2, r2, #0x5
	ldr	r1, [r7]
	add	r1, r1, r2
	bl	sub_8018404
	mov	r0, #0x5
	strb	r0, [r7, #0x8]
	b	.L873
.L922:
	.align	2, 0
.L921:
	.word	sText_AwaitingPlayersResponse
	.word	gStringVar1
.L889:
	ldr	r0, .L923
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L890	@cond_branch
	ldr	r2, .L923+0x4
	ldr	r1, [r7]
	ldrb	r0, [r7, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xa
	strb	r0, [r7, #0x8]
.L890:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L895	@cond_branch
	cmp	r0, #0x5
	bgt	.L898	@cond_branch
	cmp	r0, #0x2
	bgt	.L873	@cond_branch
	cmp	r0, #0x1
	blt	.L873	@cond_branch
	b	.L894
.L924:
	.align	2, 0
.L923:
	.word	gReceivedRemoteLinkPlayers
	.word	gUnknown_02022C2C
.L898:
	cmp	r0, #0x6
	bne	.L873	@cond_branch
.L894:
	mov	r0, #0x8
	strb	r0, [r7, #0x8]
	b	.L873
.L895:
	ldr	r0, .L925
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	b	.L873
.L926:
	.align	2, 0
.L925:
	.word	sText_PlayerSentBackOK
.L901:
	ldrb	r0, [r7, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r7, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r7, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r7, #0x11]
	bl	DestroyTask
	ldr	r0, [r7]
	bl	Free
	ldr	r0, [r7, #0x4]
	bl	Free
	ldrb	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r7, #0x8]
	b	.L873
.L902:
	add	r5, r7, #0
	add	r5, r5, #0x9
	ldr	r4, .L927
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L873	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L910
.L928:
	.align	2, 0
.L927:
	.word	sLinkDroppedTexts
.L904:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L929
	bl	AddTextPrinterToWindow1
.L910:
	add	r0, r6, #0
	bl	DestroyTask
	bl	sub_800EDD4
	ldr	r1, .L929+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L873
.L930:
	.align	2, 0
.L929:
	.word	sText_PleaseStartOver
	.word	gSpecialVar_Result
.L905:
	ldrb	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r7, #0x8]
	bl	sub_800ADF8
	b	.L873
.L906:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L873	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L873:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 sub_8014F48,.Lfe43-sub_8014F48
	.align	2, 0
	.globl	MEvent_CreateTask_CardOrNewsOverWireless
	.type	 MEvent_CreateTask_CardOrNewsOverWireless,function
	.thumb_func
MEvent_CreateTask_CardOrNewsOverWireless:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L932
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L932+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L932+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L932+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L932+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L933:
	.align	2, 0
.L932:
	.word	sub_80152F4
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	gUnknown_03000DA4
	.word	gSpecialVar_Result
.Lfe44:
	.size	 MEvent_CreateTask_CardOrNewsOverWireless,.Lfe44-MEvent_CreateTask_CardOrNewsOverWireless
	.align	2, 0
	.globl	sub_80152F4
	.type	 sub_80152F4,function
	.thumb_func
sub_80152F4:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L982
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0xe
	bls	.LCB6724
	b	.L935	@long jump
.LCB6724:
	lsl	r0, r0, #0x2
	ldr	r1, .L982+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L983:
	.align	2, 0
.L982:
	.word	gUnknown_02022C30
	.word	.L979
	.align	2, 0
	.align	2, 0
.L979:
	.word	.L936
	.word	.L937
	.word	.L938
	.word	.L940
	.word	.L954
	.word	.L955
	.word	.L968
	.word	.L972
	.word	.L968
	.word	.L970
	.word	.L968
	.word	.L974
	.word	.L968
	.word	.L976
	.word	.L977
.L936:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C5C
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L935
.L937:
	ldr	r0, .L984
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L935
.L985:
	.align	2, 0
.L984:
	.word	sText_SearchingForWirelessSystemWait
.L938:
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r5]
	mov	r1, #0x10
	bl	sub_8017580
	ldr	r0, [r5, #0x4]
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	bl	sub_8016FF0
	strb	r0, [r5, #0x11]
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L939	@cond_branch
	ldr	r0, .L986
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L986+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xb]
	ldrb	r0, [r5, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L986+0x8
	add	r2, r0, #0
	ldr	r1, .L986+0xc
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0xe]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L939:
	mov	r0, #0x0
	strb	r0, [r5, #0xf]
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L935
.L987:
	.align	2, 0
.L986:
	.word	gUnknown_082F0174
	.word	0xffff
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_082F0204
.L940:
	bl	sub_8013E44
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L945	@cond_branch
	cmp	r0, #0x1
	bne	.L943	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L943:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	bne	.LCB6877
	b	.L935	@long jump
.LCB6877:
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	b	.L935
.L945:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L946	@cond_branch
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
.L946:
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x78
	bls	.L947	@cond_branch
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L951	@cond_branch
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L951	@cond_branch
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	add	r0, r2, #0
	bl	sub_8016F1C
	cmp	r0, #0
	beq	.L949	@cond_branch
	strb	r4, [r5, #0xf]
	strb	r4, [r5, #0x14]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r0, [r5]
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8011FC8
	mov	r0, #0x6e
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L951
.L949:
	mov	r0, #0x16
	bl	PlaySE
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
	b	.L951
.L947:
	ldr	r0, .L988
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L951	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	strb	r1, [r5, #0x14]
.L951:
	ldrb	r0, [r5, #0x14]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L935
.L989:
	.align	2, 0
.L988:
	.word	gMain
.L954:
	ldr	r0, .L990
	bl	AddTextPrinterToWindow1
	ldr	r0, .L990+0x4
	ldrb	r2, [r5, #0xf]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	bl	sub_8018404
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	b	.L935
.L991:
	.align	2, 0
.L990:
	.word	sText_AwaitingResponseFromWirelessSystem
	.word	gStringVar1
.L955:
	ldr	r0, .L992
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L956	@cond_branch
	ldr	r2, .L992+0x4
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xc
	strb	r0, [r5, #0x8]
.L956:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L961	@cond_branch
	cmp	r0, #0x5
	bgt	.L964	@cond_branch
	cmp	r0, #0x2
	bgt	.L935	@cond_branch
	cmp	r0, #0x1
	blt	.L935	@cond_branch
	b	.L960
.L993:
	.align	2, 0
.L992:
	.word	gReceivedRemoteLinkPlayers
	.word	gUnknown_02022C2C
.L964:
	cmp	r0, #0x6
	bne	.L935	@cond_branch
.L960:
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L935
.L961:
	ldr	r0, .L994
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_8011A64
	b	.L935
.L995:
	.align	2, 0
.L994:
	.word	sText_WirelessLinkEstablished
.L968:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L969	@cond_branch
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xb]
	bl	RemoveWindow
.L969:
	ldrb	r0, [r5, #0x11]
	bl	DestroyTask
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L935
.L970:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L996
	b	.L981
.L997:
	.align	2, 0
.L996:
	.word	sText_WirelessLinkDropped
.L972:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L998
	b	.L981
.L999:
	.align	2, 0
.L998:
	.word	sText_WirelessSearchCanceled
.L974:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r2, .L1000
	ldrb	r1, [r5, #0x12]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
.L981:
	bl	MG_PrintTextOnWindow1AndWaitButton
	cmp	r0, #0
	beq	.L935	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	add	r0, r4, #0
	bl	DestroyTask
	bl	sub_800EDD4
	ldr	r1, .L1000+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L935
.L1001:
	.align	2, 0
.L1000:
	.word	sNoWonderSharedTexts
	.word	gSpecialVar_Result
.L976:
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	bl	sub_800ADF8
	b	.L935
.L977:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L935	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L935:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 sub_80152F4,.Lfe45-sub_80152F4
	.align	2, 0
	.globl	UnionRoomSpecial
	.type	 UnionRoomSpecial,function
	.thumb_func
UnionRoomSpecial:
	push	{r4, lr}
	bl	sub_8010F60
	ldr	r0, .L1003
	mov	r1, #0xa
	bl	CreateTask
	ldr	r4, .L1003+0x4
	mov	r0, #0x9b
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L1003+0x8
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	ldr	r0, .L1003+0xc
	strh	r1, [r0]
	mov	r0, #0xd0
	mov	r1, #0x1
	bl	sub_819A2BC
	pop	{r4}
	pop	{r0}
	bx	r0
.L1004:
	.align	2, 0
.L1003:
	.word	sub_80156E0
	.word	gUnknown_02022C30
	.word	gUnknown_03000DA8
	.word	gSpecialVar_Result
.Lfe46:
	.size	 UnionRoomSpecial,.Lfe46-UnionRoomSpecial
	.align	2, 0
	.globl	ReadAsU16
	.type	 ReadAsU16,function
	.thumb_func
ReadAsU16:
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0]
	orr	r0, r0, r1
	bx	lr
.Lfe47:
	.size	 ReadAsU16,.Lfe47-ReadAsU16
	.align	2, 0
	.globl	sub_8015664
	.type	 sub_8015664,function
	.thumb_func
sub_8015664:
	push	{lr}
	add	r3, r1, #0
	ldr	r1, .L1008
	ldr	r2, [r1]
	mov	r1, #0x8
	strb	r1, [r2, #0x14]
	strb	r0, [r2, #0x15]
	ldr	r0, .L1008+0x4
	cmp	r3, r0
	beq	.L1007	@cond_branch
	add	r1, r3, #0
	bl	StringExpandPlaceholders
.L1007:
	pop	{r0}
	bx	r0
.L1009:
	.align	2, 0
.L1008:
	.word	gUnknown_02022C30
	.word	gStringVar4
.Lfe48:
	.size	 sub_8015664,.Lfe48-sub_8015664
	.align	2, 0
	.globl	sub_801568C
	.type	 sub_801568C,function
	.thumb_func
sub_801568C:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1012
	ldr	r1, [r0]
	mov	r0, #0x1a
	strb	r0, [r1, #0x14]
	ldr	r0, .L1012+0x4
	cmp	r2, r0
	beq	.L1011	@cond_branch
	add	r1, r2, #0
	bl	StringExpandPlaceholders
.L1011:
	pop	{r0}
	bx	r0
.L1013:
	.align	2, 0
.L1012:
	.word	gUnknown_02022C30
	.word	gStringVar4
.Lfe49:
	.size	 sub_801568C,.Lfe49-sub_801568C
	.align	2, 0
	.globl	sub_80156B0
	.type	 sub_80156B0,function
	.thumb_func
sub_80156B0:
	push	{lr}
	ldr	r3, .L1015
	ldr	r1, [r0]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r3, #0
	bl	memcpy
	pop	{r0}
	bx	r0
.L1016:
	.align	2, 0
.L1015:
	.word	gDecompressionBuffer+0x3f00
.Lfe50:
	.size	 sub_80156B0,.Lfe50-sub_80156B0
	.align	2, 0
	.globl	sub_80156C8
	.type	 sub_80156C8,function
	.thumb_func
sub_80156C8:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, .L1018
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	memcpy
	pop	{r0}
	bx	r0
.L1019:
	.align	2, 0
.L1018:
	.word	gDecompressionBuffer+0x3f00
.Lfe51:
	.size	 sub_80156C8,.Lfe51-sub_80156C8
	.align	2, 0
	.globl	sub_80156E0
	.type	 sub_80156E0,function
	.thumb_func
sub_80156E0:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	ldr	r0, .L1258
	ldr	r6, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L1258+0x4
	add	r7, r0, r1
	ldrb	r0, [r6, #0x14]
	cmp	r0, #0x38
	bls	.LCB7394
	bl	.L1021	@far jump
.LCB7394:
	lsl	r0, r0, #0x2
	ldr	r1, .L1258+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1259:
	.align	2, 0
.L1258:
	.word	gUnknown_02022C30
	.word	gTasks+0x8
	.word	.L1252
	.align	2, 0
	.align	2, 0
.L1252:
	.word	.L1022
	.word	.L1023
	.word	.L1025
	.word	.L1026
	.word	.L1041
	.word	.L1109
	.word	.L1087
	.word	.L1109
	.word	.L1250
	.word	.L1154
	.word	.L1170
	.word	.L1142
	.word	.L1143
	.word	.L1174
	.word	.L1175
	.word	.L1176
	.word	.L1178
	.word	.L1179
	.word	.L1180
	.word	.L1116
	.word	.L1124
	.word	.L1126
	.word	.L1137
	.word	.L1060
	.word	.L1062
	.word	.L1070
	.word	.L1248
	.word	.L1097
	.word	.L1096
	.word	.L1101
	.word	.L1084
	.word	.L1100
	.word	.L1099
	.word	.L1149
	.word	.L1151
	.word	.L1153
	.word	.L1171
	.word	.L1173
	.word	.L1080
	.word	.L1147
	.word	.L1110
	.word	.L1112
	.word	.L1182
	.word	.L1187
	.word	.L1210
	.word	.L1220
	.word	.L1222
	.word	.L1189
	.word	.L1223
	.word	.L1237
	.word	.L1245
	.word	.L1247
	.word	.L1202
	.word	.L1199
	.word	.L1200
	.word	.L1209
	.word	.L1218
.L1022:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0xc]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r6, #0x8]
	ldr	r0, [r6]
	mov	r1, #0x8
	bl	sub_8017580
	ldr	r1, .L1260
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r0, [r6, #0xc]
	ldr	r1, [r6, #0x4]
	mov	r2, #0x9
	bl	sub_8016DF0
	add	r1, r6, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0xa0
	bl	sub_8019BA8
	bl	sub_8019F2C
	mov	r0, #0x1
	bl	.L1254	@ far jump
.L1261:
	.align	2, 0
.L1260:
	.word	gUnknown_02022C2C
.L1023:
	add	r0, r6, #0
	add	r0, r0, #0x21
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	sub_8019E70
	ldrh	r0, [r7]
	add	r0, r0, #0x1
	strh	r0, [r7]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.LCB7478
	bl	.L1021	@far jump
.LCB7478:
	mov	r0, #0x2
	bl	.L1254	@ far jump
.L1025:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	ldr	r2, .L1262
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	sub_8010FCC
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C84
	ldr	r0, [r6, #0x8]
	mov	r1, #0x1
	bl	sub_8017580
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r0, [r6, #0xc]
	mov	r1, #0x4
	bl	sub_80175EC
	ldr	r1, .L1262+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r0, #0x3
	bl	.L1254	@ far jump
.L1263:
	.align	2, 0
.L1262:
	.word	sUnionRoomTrade
	.word	gSpecialVar_Result
.L1026:
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	beq	.L1028	@cond_branch
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L1027	@cond_branch
.L1028:
	ldr	r4, .L1264
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L1027	@cond_branch
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4]
	cmp	r0, #0x1
	beq	.L1030	@cond_branch
	cmp	r0, #0x2
	beq	.L1035	@cond_branch
	b	.L1029
.L1265:
	.align	2, 0
.L1264:
	.word	sUnionRoomTrade
.L1030:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	cmp	r5, #0x5
	bls	.L1031	@cond_branch
	add	r0, r4, #0
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010FCC
	ldr	r0, .L1266
	bl	sub_801568C
	b	.L1029
.L1267:
	.align	2, 0
.L1266:
	.word	sText_RegistrationCanceled
.L1031:
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMonAndGetIsEgg
	cmp	r0, #0
	bne	.L1033	@cond_branch
	ldr	r1, .L1268
	mov	r0, #0x34
	bl	sub_8015664
	b	.L1029
.L1269:
	.align	2, 0
.L1268:
	.word	sText_ChooseRequestedMonType
.L1033:
	mov	r0, #0x37
	b	.L1255
.L1035:
	add	r0, r6, #0
	bl	sub_80156C8
	ldrb	r0, [r4, #0x8]
	strh	r0, [r7, #0x2]
	cmp	r5, #0x5
	bls	.L1036	@cond_branch
	ldr	r0, .L1270
	bl	sub_801568C
	b	.L1029
.L1271:
	.align	2, 0
.L1270:
	.word	sText_TradeCanceled
.L1036:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	ldr	r1, .L1272
	mov	r0, #0x44
	strb	r0, [r1]
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMon
	mov	r0, #0x33
.L1255:
	strb	r0, [r6, #0x14]
.L1029:
	ldr	r1, .L1272+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	bl	.L1021	@ far jump
.L1273:
	.align	2, 0
.L1272:
	.word	gUnknown_02022C2C
	.word	sUnionRoomTrade
.L1027:
	mov	r0, #0x4
	bl	.L1254	@ far jump
.L1041:
	ldr	r4, .L1274
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L1042	@cond_branch
	cmp	r0, #0x9
	bne	.L1043	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	mov	r0, #0x2
	bl	PlaySE
	ldr	r0, .L1274+0x4
	ldr	r1, .L1274+0x8
	ldr	r1, [r1]
	bl	StringCopy
	mov	r1, #0x0
	mov	r0, #0x2a
	b	.L1256
.L1275:
	.align	2, 0
.L1274:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L1043:
	cmp	r0, #0xb
	bne	.L1045	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	mov	r1, #0x0
	mov	r0, #0x17
	b	.L1256
.L1045:
	mov	r0, #0x0
	strh	r0, [r7]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r7, #0x2]
	mov	r1, #0x0
	mov	r0, #0x18
.L1256:
	strb	r0, [r6, #0x14]
	strh	r1, [r4]
	bl	.L1021	@ far jump
.L1042:
	bl	ScriptContext2_IsEnabled
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB7741
	bl	.L1021	@far jump
.LCB7741:
	ldr	r0, .L1276
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1049	@cond_branch
	ldr	r0, [r6]
	add	r2, r7, #0x2
	add	r3, r6, #0
	add	r3, r3, #0x21
	add	r1, r7, #0
	bl	sub_801A2A8
	cmp	r0, #0
	beq	.L1050	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	sub_80181CC
	mov	r0, #0x18
	bl	.L1254	@ far jump
.L1277:
	.align	2, 0
.L1276:
	.word	gMain
.L1050:
	bl	sub_8017940
	cmp	r0, #0
	beq	.L1049	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	mov	r0, #0x2
	bl	PlaySE
	bl	sub_80181CC
	ldr	r0, .L1278
	ldr	r1, .L1278+0x4
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x2d
	bl	.L1254	@ far jump
.L1279:
	.align	2, 0
.L1278:
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L1049:
	bl	sub_8016B00
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L1055	@cond_branch
	cmp	r0, #0x2
	bgt	.L1059	@cond_branch
	cmp	r0, #0x1
	beq	.L1054	@cond_branch
	b	.L1053
.L1059:
	cmp	r0, #0x4
	beq	.L1056	@cond_branch
	b	.L1053
.L1054:
	mov	r0, #0x2
	bl	PlaySE
.L1055:
	add	r0, r6, #0
	bl	sub_801A274
	b	.L1053
.L1056:
	mov	r0, #0xb
	strb	r0, [r6, #0x14]
	bl	sub_80181CC
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010FCC
	add	r0, r6, #0
	bl	sub_80181DC
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x53
	mov	r2, #0x0
	bl	sub_8011090
.L1053:
	add	r0, r6, #0
	bl	sub_801A284
	bl	.L1021	@ far jump
.L1060:
	ldr	r0, .L1280
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7867
	bl	.L1021	@far jump
.LCB7867:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8011090
	mov	r0, #0x4
	bl	.L1254	@ far jump
.L1281:
	.align	2, 0
.L1280:
	.word	Task_ShowStartMenu
.L1062:
	bl	sub_801704C
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	ldr	r0, [r6]
	ldrb	r1, [r7]
	ldrb	r2, [r7, #0x2]
	add	r3, r4, #0
	bl	sub_80179D4
	cmp	r0, #0x1
	beq	.L1065	@cond_branch
	cmp	r0, #0x1
	bgt	.L1069	@cond_branch
	cmp	r0, #0
	beq	.L1064	@cond_branch
	bl	.L1021	@ far jump
.L1069:
	cmp	r0, #0x2
	beq	.L1066	@cond_branch
	bl	.L1021	@ far jump
.L1064:
	mov	r0, #0x1a
	bl	.L1254	@ far jump
.L1065:
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldr	r2, .L1282
	ldrb	r2, [r2]
	bl	sub_8012188
	strh	r5, [r6, #0x12]
	mov	r0, #0x19
	bl	.L1254	@ far jump
.L1283:
	.align	2, 0
.L1282:
	.word	gUnknown_02022C2C
.L1066:
	ldr	r1, .L1284
	mov	r0, #0x13
	bl	sub_8015664
	bl	.L1021	@ far jump
.L1285:
	.align	2, 0
.L1284:
	.word	gStringVar4
.L1070:
	bl	sub_801704C
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	blt	.L1071	@cond_branch
	cmp	r4, #0x2
	ble	.L1074	@cond_branch
	cmp	r4, #0x4
	bne	.L1071	@cond_branch
	mov	r0, #0x1
	bl	sub_801818C
	strb	r4, [r6, #0x14]
	b	.L1071
.L1074:
	bl	sub_8011B90
	cmp	r0, #0x1
	bne	.L1075	@cond_branch
	ldr	r0, .L1286
	bl	sub_801568C
	b	.L1076
.L1287:
	.align	2, 0
.L1286:
	.word	sText_TrainerAppearsBusy
.L1075:
	ldr	r1, .L1288
	mov	r0, #0x1e
	bl	sub_8015664
.L1076:
	ldr	r1, .L1288+0x4
	mov	r0, #0x40
	strb	r0, [r1]
.L1071:
	ldr	r0, .L1288+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8017
	bl	.L1021	@far jump
.LCB8017:
	ldr	r0, .L1288+0xc
	mov	r1, #0x1
	bl	sub_80143E4
	ldr	r0, .L1288+0x10
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x26
	bl	.L1254	@ far jump
.L1289:
	.align	2, 0
.L1288:
	.word	sText_TrainerAppearsBusy
	.word	gUnknown_02022C2C
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	sub_80140E0
.L1080:
	ldr	r0, .L1290
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8048
	bl	.L1021	@far jump
.LCB8048:
	ldr	r0, .L1290+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x44
	bne	.L1082	@cond_branch
	ldr	r1, .L1290+0x8
	mov	r0, #0x1f
	bl	sub_8015664
	bl	.L1021	@ far jump
.L1291:
	.align	2, 0
.L1290:
	.word	sub_80140E0
	.word	gUnknown_02022C2C
	.word	sText_AwaitingPlayersResponseAboutTrade
.L1082:
	mov	r0, #0x5
	bl	.L1254	@ far jump
.L1084:
	ldr	r0, .L1292
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB8080
	bl	.L1021	@far jump
.LCB8080:
	mov	r0, #0x0
	bl	sub_801818C
	mov	r2, #0x0
	ldrsh	r0, [r7, r2]
	mov	r3, #0x2
	ldrsh	r1, [r7, r3]
	ldr	r2, [r6]
	bl	sub_801A3D0
	mov	r0, #0x2
	bl	.L1254	@ far jump
.L1293:
	.align	2, 0
.L1292:
	.word	gReceivedRemoteLinkPlayers
.L1087:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1b
	add	r2, r6, #0
	add	r2, r2, #0x1c
	ldr	r3, .L1294
	ldr	r4, .L1294+0x4
	str	r4, [sp]
	bl	sub_8017178
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB8123
	bl	.L1021	@far jump
.LCB8123:
	ldr	r0, .L1294+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1089	@cond_branch
	mov	r0, #0x1c
	bl	.L1254	@ far jump
.L1295:
	.align	2, 0
.L1294:
	.word	gUnknown_082F021C
	.word	gUnknown_082F0244
	.word	gReceivedRemoteLinkPlayers
.L1089:
	add	r1, r6, #0
	add	r1, r1, #0x98
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	sub_8017CF8
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L1092	@cond_branch
	cmp	r5, #0x40
	bne	.L1091	@cond_branch
.L1092:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x40
	strh	r1, [r0]
	bl	sub_800FE50
	ldr	r0, .L1296
	ldr	r2, .L1296+0x4
	ldr	r1, .L1296+0x8
	ldrb	r1, [r1, #0x13]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x20
	bl	.L1254	@ far jump
.L1297:
	.align	2, 0
.L1296:
	.word	gStringVar4
	.word	sIfYouWantToDoSomethingTexts
	.word	gLinkPlayers
.L1091:
	ldr	r0, .L1298
	strb	r5, [r0]
	ldr	r1, .L1298+0x4
	lsr	r0, r5, #0x8
	strb	r0, [r1]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x41
	bne	.L1094	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1094	@cond_branch
	ldr	r1, .L1298+0x8
	mov	r0, #0x5
	bl	sub_8015664
	bl	.L1021	@ far jump
.L1299:
	.align	2, 0
.L1298:
	.word	gUnknown_02022C2C
	.word	gUnknown_02022C2D
	.word	sText_NeedTwoMonsOfLevel30OrLower1
.L1094:
	ldr	r0, .L1300
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	strh	r1, [r0]
	bl	sub_800FE50
	mov	r0, #0x1b
	bl	.L1254	@ far jump
.L1301:
	.align	2, 0
.L1300:
	.word	gUnknown_02022C2C
.L1096:
	ldr	r0, .L1302
	ldr	r1, .L1302+0x4
	bl	StringCopy
	mov	r0, #0x24
	bl	.L1254	@ far jump
.L1303:
	.align	2, 0
.L1302:
	.word	gStringVar4
	.word	sText_TrainerBattleBusy
.L1097:
	add	r0, r6, #0
	bl	sub_8017FD8
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	ldrh	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	bl	sub_8017984
	add	r5, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r3, .L1304
	lsl	r1, r5, #0x2
	lsl	r2, r4, #0x4
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8293
	bl	.L1021	@far jump
.LCB8293:
	mov	r0, #0x0
	strh	r0, [r7, #0x6]
	mov	r0, #0x1d
	bl	.L1254	@ far jump
.L1305:
	.align	2, 0
.L1304:
	.word	sText_WaitOrShowCardTexts
.L1099:
	bl	sub_800AC34
	mov	r0, #0x24
	bl	.L1254	@ far jump
.L1100:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x44
	strh	r1, [r0]
	ldr	r2, .L1306
	ldrh	r1, [r2, #0xe]
	add	r3, r6, #0
	add	r3, r3, #0x4e
	strh	r1, [r3]
	ldrh	r2, [r2, #0x10]
	add	r1, r6, #0
	add	r1, r1, #0x50
	strh	r2, [r1]
	bl	sub_800FE50
	mov	r0, #0x1d
	bl	.L1254	@ far jump
.L1307:
	.align	2, 0
.L1306:
	.word	sUnionRoomTrade
.L1101:
	ldr	r0, .L1308
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1102	@cond_branch
	ldr	r0, .L1308+0x4
	ldr	r1, .L1308+0x8
	bl	StringCopy
	mov	r0, #0x1c
	bl	.L1254	@ far jump
.L1309:
	.align	2, 0
.L1308:
	.word	gReceivedRemoteLinkPlayers
	.word	gStringVar4
	.word	sText_TrainerBattleBusy
.L1102:
	add	r0, r6, #0
	bl	sub_8017FD8
	add	r0, r6, #0
	add	r0, r0, #0x98
	ldrh	r0, [r0]
	cmp	r0, #0x51
	bne	.L1104	@cond_branch
	ldr	r0, .L1310
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bne	.L1105	@cond_branch
	ldr	r0, .L1310+0x4
	add	r1, r6, #0
	mov	r2, #0x0
	bl	sub_8018220
	mov	r0, #0x28
	bl	.L1254	@ far jump
.L1311:
	.align	2, 0
.L1310:
	.word	gUnknown_02022C2C
	.word	gStringVar4
.L1105:
	mov	r0, #0xd
	bl	.L1254	@ far jump
.L1104:
	cmp	r0, #0x52
	beq	.LCB8401
	bl	.L1021	@far jump
.LCB8401:
	mov	r5, #0x0
	mov	r0, #0x20
	strb	r0, [r6, #0x14]
	ldr	r0, .L1312
	ldr	r4, .L1312+0x4
	ldrb	r2, [r4]
	mov	r1, #0x40
	orr	r1, r1, r2
	ldr	r2, .L1312+0x8
	ldrb	r2, [r2, #0x13]
	bl	sub_8017D9C
	strb	r5, [r4]
	bl	.L1021	@ far jump
.L1313:
	.align	2, 0
.L1312:
	.word	gStringVar4
	.word	gUnknown_02022C2C
	.word	gLinkPlayers
.L1109:
	mov	r0, #0x2
	ldrsh	r1, [r7, r0]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	bl	sub_80179AC
	add	r5, r0, #0
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	ldr	r2, .L1314
	lsl	r0, r4, #0x2
	lsl	r1, r5, #0x3
	add	r0, r0, r1
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x6
	bl	sub_8015664
	bl	.L1021	@ far jump
.L1315:
	.align	2, 0
.L1314:
	.word	sHiDoSomethingTexts
.L1110:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1316
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8472
	bl	.L1021	@far jump
.LCB8472:
	mov	r4, #0x0
	mov	r0, #0x29
	strb	r0, [r6, #0x14]
	bl	sub_800ADF8
	add	r0, r6, #0
	add	r0, r0, #0x98
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	bl	.L1021	@ far jump
.L1317:
	.align	2, 0
.L1316:
	.word	gStringVar4
.L1112:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8498
	bl	.L1021	@far jump
.LCB8498:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1114	@cond_branch
	ldr	r5, .L1318
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r4, .L1318+0x4
	add	r1, r1, r4
	add	r0, r5, #0
	bl	StringCopy
	ldrh	r0, [r4, #0x18]
	add	r4, r4, #0x1c
	add	r1, r4, #0
	bl	sub_800E540
	add	r5, r0, #0
	ldr	r0, .L1318+0x8
	ldr	r2, .L1318+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x21
	bl	.L1254	@ far jump
.L1319:
	.align	2, 0
.L1318:
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar4
	.word	sAwaitingResponseTexts
.L1114:
	mov	r0, #0x7
	bl	.L1254	@ far jump
.L1116:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L1118	@cond_branch
	cmp	r5, #0
	bgt	.L1123	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L1120	@cond_branch
	bl	.L1021	@ far jump
.L1123:
	cmp	r5, #0x1
	beq	.L1120	@cond_branch
	bl	.L1021	@ far jump
.L1118:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r4, .L1320
	mov	r0, #0x45
	strb	r0, [r4]
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldrb	r2, [r4]
	bl	sub_8012188
	ldrh	r0, [r7, #0x2]
	strh	r0, [r6, #0x12]
	mov	r0, #0x14
	strb	r0, [r6, #0x14]
	strh	r5, [r7, #0x6]
	bl	.L1021	@ far jump
.L1321:
	.align	2, 0
.L1320:
	.word	gUnknown_02022C2C
.L1120:
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	ldr	r1, .L1322
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	sub_801568C
	bl	.L1021	@ far jump
.L1323:
	.align	2, 0
.L1322:
	.word	sDeclineBattleTexts
.L1124:
	ldrh	r0, [r7, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	bgt	.LCB8647
	bl	.L1021	@far jump
.LCB8647:
	mov	r1, #0x0
	mov	r0, #0x15
	strb	r0, [r6, #0x14]
	strh	r1, [r7, #0x4]
	bl	.L1021	@ far jump
.L1126:
	bl	sub_8011A74
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	beq	.L1133	@cond_branch
	cmp	r4, #0x3
	ble	.L1136	@cond_branch
	cmp	r4, #0x4
	bne	.L1127	@cond_branch
	mov	r0, #0x1
	bl	sub_801818C
	strb	r4, [r6, #0x14]
	b	.L1127
.L1136:
	cmp	r4, #0x1
	blt	.L1127	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	bl	sub_8011B90
	cmp	r0, #0x1
	bne	.L1131	@cond_branch
	ldr	r0, .L1324
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	sub_801568C
	b	.L1127
.L1325:
	.align	2, 0
.L1324:
	.word	sChatDeclinedTexts
.L1131:
	ldr	r0, .L1326
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	sub_8015664
	b	.L1127
.L1327:
	.align	2, 0
.L1326:
	.word	sChatDeclinedTexts
.L1133:
	mov	r0, #0x16
	strb	r0, [r6, #0x14]
.L1127:
	ldrh	r0, [r7, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x6]
	bl	.L1021	@ far jump
.L1137:
	bl	sub_8011A80
	cmp	r0, #0
	beq	.L1138	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	sub_8017CF8
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_8011090
	bl	sub_8011B90
	cmp	r0, #0x1
	bne	.L1139	@cond_branch
	ldr	r0, .L1328
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	sub_801568C
	b	.L1138
.L1329:
	.align	2, 0
.L1328:
	.word	sChatDeclinedTexts
.L1139:
	ldr	r0, .L1330
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	sub_8015664
.L1138:
	ldr	r0, .L1330+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8779
	bl	.L1021	@far jump
.LCB8779:
	mov	r0, #0x10
	bl	.L1254	@ far jump
.L1331:
	.align	2, 0
.L1330:
	.word	sChatDeclinedTexts
	.word	gReceivedRemoteLinkPlayers
.L1142:
	mov	r0, #0x49
	bl	PlaySE
	bl	sub_800EF7C
	mov	r0, #0x0
	mov	r1, #0xc
	strb	r1, [r6, #0x14]
	add	r1, r6, #0
	add	r1, r1, #0x9a
	strh	r0, [r1]
	bl	.L1021	@ far jump
.L1143:
	bl	sub_8011A80
	cmp	r0, #0
	beq	.L1144	@cond_branch
	mov	r0, #0x0
	bl	sub_801818C
	mov	r0, #0x2
	bl	.L1254	@ far jump
.L1144:
	ldr	r0, .L1332
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8819
	b	.L1021	@long jump
.LCB8819:
	ldr	r0, .L1332+0x4
	mov	r1, #0x1
	bl	sub_80143E4
	ldr	r0, .L1332+0x8
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x27
	b	.L1254
.L1333:
	.align	2, 0
.L1332:
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	sub_80140E0
.L1147:
	add	r0, r6, #0
	bl	sub_801689C
	ldr	r0, .L1334
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8850
	b	.L1021	@long jump
.LCB8850:
	mov	r0, #0x21
	strb	r0, [r6, #0x14]
	ldr	r0, .L1334+0x4
	ldr	r4, .L1334+0x8
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	sub	r0, r0, #0x24
	ldrh	r0, [r0, #0x20]
	add	r1, r4, #0
	bl	sub_800E540
	add	r5, r0, #0
	ldr	r0, .L1334+0xc
	ldr	r2, .L1334+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	b	.L1021
.L1335:
	.align	2, 0
.L1334:
	.word	sub_80140E0
	.word	gStringVar1
	.word	gLinkPlayers+0x24
	.word	gStringVar4
	.word	sPlayerContactedYouTexts
.L1149:
	add	r0, r6, #0
	bl	sub_801689C
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1336
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8902
	b	.L1021	@long jump
.LCB8902:
	mov	r0, #0x22
	b	.L1254
.L1337:
	.align	2, 0
.L1336:
	.word	gStringVar4
.L1151:
	add	r0, r6, #0
	bl	sub_801689C
	add	r0, r6, #0
	bl	sub_80168DC
	cmp	r0, #0
	bne	.LCB8919
	b	.L1021	@long jump
.LCB8919:
	ldr	r0, .L1338
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB8927
	b	.L1021	@long jump
.LCB8927:
	mov	r0, #0x1
	bl	sub_8011DE0
	ldr	r0, .L1338+0x4
	ldr	r1, .L1338+0x8
	bl	StringCopy
	mov	r0, #0x24
	b	.L1254
.L1339:
	.align	2, 0
.L1338:
	.word	gMain
	.word	gStringVar4
	.word	sText_ChatEnded
.L1153:
	ldr	r1, .L1340
	mov	r0, #0x9
	bl	sub_8015664
	b	.L1021
.L1341:
	.align	2, 0
.L1340:
	.word	gStringVar4
.L1154:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1156	@cond_branch
	cmp	r1, #0
	bgt	.L1169	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1166	@cond_branch
	b	.L1021
.L1169:
	cmp	r1, #0x1
	beq	.L1166	@cond_branch
	b	.L1021
.L1156:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x51
	strh	r1, [r0]
	ldr	r1, .L1342
	ldrb	r1, [r1]
	add	r5, r0, #0
	cmp	r1, #0x45
	bne	.L1157	@cond_branch
	mov	r4, #0x40
	orr	r4, r4, r1
	mov	r0, #0x1
	bl	sub_801100C
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	bl	sub_8011090
	b	.L1158
.L1343:
	.align	2, 0
.L1342:
	.word	gUnknown_02022C2C
.L1157:
	mov	r0, #0x40
	add	r4, r1, #0
	orr	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	sub_801100C
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x1
	bl	sub_8011090
.L1158:
	ldr	r1, [r6, #0x8]
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	strh	r0, [r7, #0x6]
	ldr	r0, .L1344
	ldrb	r0, [r0]
	cmp	r0, #0x41
	bne	.L1159	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1160	@cond_branch
	mov	r0, #0x52
	strh	r0, [r5]
	add	r0, r5, #0
	bl	sub_800FE50
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1344+0x4
	ldr	r1, .L1344+0x8
	bl	StringCopy
	b	.L1021
.L1345:
	.align	2, 0
.L1344:
	.word	gUnknown_02022C2C
	.word	gStringVar4
	.word	sText_NeedTwoMonsOfLevel30OrLower2
.L1160:
	add	r0, r5, #0
	bl	sub_800FE50
	mov	r0, #0xd
	b	.L1254
.L1159:
	cmp	r0, #0x48
	bne	.L1163	@cond_branch
	add	r0, r5, #0
	bl	sub_800FE50
	ldr	r0, .L1346
	add	r1, r6, #0
	mov	r2, #0x1
	bl	sub_8018220
	mov	r0, #0x28
	b	.L1254
.L1347:
	.align	2, 0
.L1346:
	.word	gStringVar4
.L1163:
	add	r0, r5, #0
	bl	sub_800FE50
	mov	r0, #0xd
	b	.L1254
.L1166:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x52
	strh	r1, [r0]
	bl	sub_800FE50
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1348
	ldr	r1, .L1348+0x4
	ldrb	r1, [r1]
	bl	sub_8013078
	b	.L1021
.L1349:
	.align	2, 0
.L1348:
	.word	gStringVar4
	.word	gUnknown_02022C2C
.L1170:
	bl	sub_800AC34
	mov	r0, #0x24
	b	.L1254
.L1171:
	ldr	r0, .L1350
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.LCB9147
	b	.L1021	@long jump
.LCB9147:
	ldr	r1, .L1350+0x4
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r1, .L1350+0x8
	mov	r0, #0x25
	bl	sub_8015664
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	add	r0, r6, #0
	add	r0, r0, #0x9a
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	b	.L1021
.L1351:
	.align	2, 0
.L1350:
	.word	gReceivedRemoteLinkPlayers
	.word	gUnknown_02022C2C
	.word	gStringVar4
.L1173:
	mov	r0, #0x2
	strb	r0, [r6, #0x14]
	mov	r0, #0x0
	bl	sub_801818C
	b	.L1021
.L1174:
	ldr	r4, .L1352
	ldr	r0, .L1352+0x4
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r4, #0
	bl	sub_8017E00
	mov	r0, #0xe
	add	r1, r4, #0
	bl	sub_8015664
	b	.L1021
.L1353:
	.align	2, 0
.L1352:
	.word	gStringVar4
	.word	gUnknown_02022C2C
.L1175:
	bl	sub_800ADF8
	mov	r0, #0xf
	b	.L1254
.L1176:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9219
	b	.L1021	@long jump
.LCB9219:
	mov	r0, #0x10
	b	.L1254
.L1178:
	ldr	r0, [r6, #0x8]
	bl	Free
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0xc]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	add	r0, r6, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r6, #0
	add	r0, r0, #0x21
	bl	sub_8019F04
	mov	r0, #0x11
	b	.L1254
.L1179:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x12
	b	.L1254
.L1180:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB9267
	b	.L1021	@long jump
.LCB9267:
	bl	sub_8019E3C
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L1354
	ldr	r0, [r0]
	bl	Free
	bl	sub_80149D8
	b	.L1021
.L1355:
	.align	2, 0
.L1354:
	.word	gUnknown_02022C30
.L1182:
	bl	sub_800F7DC
	ldrh	r1, [r0, #0x8]
	ldr	r4, .L1356
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1183	@cond_branch
	mov	r0, #0x2b
	b	.L1254
.L1357:
	.align	2, 0
.L1356:
	.word	0x3ff
.L1183:
	bl	sub_800F7DC
	ldrh	r1, [r0, #0x8]
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bne	.L1185	@cond_branch
	ldr	r0, .L1358
	ldr	r1, .L1358+0x4
	bl	StringCopy
	b	.L1186
.L1359:
	.align	2, 0
.L1358:
	.word	gStringVar4
	.word	sText_CancelRegistrationOfEgg
.L1185:
	ldr	r4, .L1360
	bl	sub_800F7DC
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1360+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L1360+0x8
	bl	sub_800F7DC
	ldrb	r1, [r0, #0xb]
	lsr	r1, r1, #0x1
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L1360+0xc
	ldr	r1, .L1360+0x10
	bl	StringExpandPlaceholders
.L1186:
	ldr	r1, .L1360+0xc
	mov	r0, #0x2c
	bl	sub_8015664
	b	.L1021
.L1361:
	.align	2, 0
.L1360:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar4
	.word	sText_CancelRegistrationOfMon
.L1187:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1362
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9401
	b	.L1021	@long jump
.LCB9401:
	mov	r0, #0x2f
	b	.L1254
.L1363:
	.align	2, 0
.L1362:
	.word	sText_RegisterMonAtTradingBoard
.L1189:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1364
	ldr	r4, .L1364+0x4
	str	r4, [sp]
	bl	sub_8017178
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9430
	b	.L1021	@long jump
.LCB9430:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1192	@cond_branch
	cmp	r5, #0x3
	bne	.L1191	@cond_branch
.L1192:
	mov	r0, #0x4
	strb	r0, [r6, #0x14]
	mov	r0, #0x1
	bl	sub_801818C
	b	.L1021
.L1365:
	.align	2, 0
.L1364:
	.word	gUnknown_082F025C
	.word	gUnknown_082F027C
.L1191:
	cmp	r5, #0x1
	beq	.L1195	@cond_branch
	cmp	r5, #0x2
	beq	.L1196	@cond_branch
	b	.L1021
.L1195:
	ldr	r1, .L1366
	mov	r0, #0x35
	bl	sub_8015664
	b	.L1021
.L1367:
	.align	2, 0
.L1366:
	.word	sText_WhichMonWillYouOffer
.L1196:
	ldr	r1, .L1368
	mov	r0, #0x2f
	bl	sub_8015664
	b	.L1021
.L1369:
	.align	2, 0
.L1368:
	.word	sText_TradingBoardInfo
.L1199:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x36
	b	.L1254
.L1200:
	ldr	r0, .L1370
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB9509
	b	.L1021	@long jump
.LCB9509:
	ldr	r1, .L1370+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L1370+0x8
	ldr	r0, .L1370+0xc
	str	r0, [r1]
	ldr	r1, .L1370+0x10
	mov	r0, #0x8
	bl	ChooseMonForTradingBoard
	b	.L1021
.L1371:
	.align	2, 0
.L1370:
	.word	gPaletteFade
	.word	sUnionRoomTrade
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1202:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1372
	ldr	r4, .L1372+0x4
	str	r4, [sp]
	bl	sub_8017178
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9552
	b	.L1021	@long jump
.LCB9552:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1206	@cond_branch
	cmp	r5, #0x12
	bne	.L1207	@cond_branch
.L1206:
	ldr	r0, .L1372+0x8
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010FCC
	ldr	r0, .L1372+0xc
	bl	sub_801568C
	b	.L1021
.L1373:
	.align	2, 0
.L1372:
	.word	gUnknown_082F0294
	.word	sMenuTemplate_TradingBoardRequestType
	.word	sUnionRoomTrade
	.word	sText_RegistrationCanceled
.L1207:
	ldr	r0, .L1374
	strh	r5, [r0, #0x2]
	mov	r0, #0x37
	b	.L1254
.L1375:
	.align	2, 0
.L1374:
	.word	sUnionRoomTrade
.L1209:
	ldr	r2, .L1376
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	sub_8010FCC
	ldr	r0, .L1376+0x4
	bl	sub_801568C
	b	.L1021
.L1377:
	.align	2, 0
.L1376:
	.word	sUnionRoomTrade
	.word	sText_RegistraionCompleted
.L1210:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1212	@cond_branch
	cmp	r1, #0
	bgt	.L1217	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1214	@cond_branch
	b	.L1021
.L1217:
	cmp	r1, #0x1
	beq	.L1214	@cond_branch
	b	.L1021
.L1212:
	mov	r0, #0x38
	b	.L1254
.L1214:
	mov	r0, #0x1
	bl	sub_801818C
	mov	r0, #0x4
	b	.L1254
.L1218:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1378
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9664
	b	.L1021	@long jump
.LCB9664:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010FCC
	ldr	r0, .L1378+0x4
	bl	ResetUnionRoomTrade
	mov	r0, #0x1
	bl	sub_801818C
	mov	r0, #0x4
	b	.L1254
.L1379:
	.align	2, 0
.L1378:
	.word	sText_RegistrationCanceled2
	.word	sUnionRoomTrade
.L1220:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1380
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9696
	b	.L1021	@long jump
.LCB9696:
	mov	r0, #0x2e
	b	.L1254
.L1381:
	.align	2, 0
.L1380:
	.word	sText_XCheckedTradingBoard
.L1222:
	bl	sub_80173B0
	mov	r0, #0x30
	b	.L1254
.L1223:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x4a
	add	r3, r6, #0
	add	r3, r3, #0x1e
	ldr	r4, .L1382
	str	r4, [sp]
	ldr	r4, .L1382+0x4
	str	r4, [sp, #0x4]
	ldr	r4, [r6]
	str	r4, [sp, #0x8]
	bl	sub_80172A0
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9735
	b	.L1021	@long jump
.LCB9735:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1227	@cond_branch
	cmp	r5, #0x8
	bne	.L1228	@cond_branch
.L1227:
	mov	r0, #0x1
	bl	sub_801818C
	mov	r0, #0x4
	b	.L1254
.L1383:
	.align	2, 0
.L1382:
	.word	gUnknown_082F034C
	.word	gUnknown_082F03A4
.L1228:
	bl	sub_80173B0
	ldr	r1, [r6]
	lsl	r4, r5, #0x5
	add	r1, r1, r4
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	ldrh	r1, [r1, #0x8]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	bl	sub_8017D04
	cmp	r0, #0x1
	beq	.L1231	@cond_branch
	cmp	r0, #0x1
	bgt	.L1235	@cond_branch
	cmp	r0, #0
	beq	.L1230	@cond_branch
	b	.L1021
.L1235:
	cmp	r0, #0x2
	beq	.L1232	@cond_branch
	b	.L1021
.L1230:
	ldr	r0, .L1384
	ldr	r1, [r6]
	add	r1, r1, r4
	bl	sub_8018404
	ldr	r1, .L1384+0x4
	mov	r0, #0x31
	bl	sub_8015664
	strh	r5, [r7, #0x2]
	b	.L1021
.L1385:
	.align	2, 0
.L1384:
	.word	gStringVar1
	.word	sText_AskTrainerToMakeTrade
.L1231:
	ldr	r0, .L1386
	ldr	r1, [r6]
	add	r1, r1, r4
	bl	sub_8018404
	ldr	r0, .L1386+0x4
	ldr	r1, [r6]
	add	r1, r1, r4
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1386+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1386+0xc
	b	.L1257
.L1387:
	.align	2, 0
.L1386:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	sText_DontHaveTypeTrainerWants
.L1232:
	ldr	r0, .L1388
	ldr	r1, [r6]
	add	r1, r1, r4
	bl	sub_8018404
	ldr	r0, .L1388+0x4
	ldr	r1, [r6]
	add	r1, r1, r4
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1388+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1388+0xc
.L1257:
	mov	r0, #0x2e
	bl	sub_8015664
	b	.L1021
.L1389:
	.align	2, 0
.L1388:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	sText_DontHaveEggTrainerWants
.L1237:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	sub_80170B8
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1239	@cond_branch
	cmp	r1, #0
	bgt	.L1244	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1241	@cond_branch
	b	.L1021
.L1244:
	cmp	r1, #0x1
	beq	.L1241	@cond_branch
	b	.L1021
.L1239:
	mov	r0, #0x32
	b	.L1254
.L1241:
	mov	r0, #0x1
	bl	sub_801818C
	mov	r0, #0x4
	b	.L1254
.L1245:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1390
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9934
	b	.L1021	@long jump
.LCB9934:
	ldr	r4, .L1390+0x4
	mov	r0, #0x2
	strh	r0, [r4]
	ldr	r2, .L1390+0x8
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r2, .L1390+0xc
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	strb	r0, [r2]
	ldr	r2, .L1390+0x10
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	strh	r0, [r2]
	ldr	r1, .L1390+0x14
	ldr	r0, .L1390+0x18
	str	r0, [r1]
	ldr	r1, .L1390+0x1c
	mov	r0, #0x9
	bl	ChooseMonForTradingBoard
	add	r0, r6, #0
	bl	sub_80156B0
	ldrh	r0, [r7, #0x2]
	strb	r0, [r4, #0x8]
	b	.L1021
.L1391:
	.align	2, 0
.L1390:
	.word	sText_WhichMonWillYouOffer
	.word	sUnionRoomTrade
	.word	gUnknown_02022C38
	.word	gUnionRoomRequestedMonType
	.word	gUnionRoomOfferedSpecies
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1247:
	ldr	r1, .L1392
	mov	r0, #0x44
	strb	r0, [r1]
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	mov	r2, #0x44
	bl	sub_8012188
	ldr	r0, .L1392+0x4
	mov	r3, #0x2
	ldrsh	r2, [r7, r3]
	lsl	r2, r2, #0x5
	ldr	r1, [r6]
	add	r1, r1, r2
	bl	sub_8018404
	ldr	r0, .L1392+0x8
	ldr	r0, [r0, #0x8]
	bl	sub_8017020
	mov	r0, #0x19
	b	.L1254
.L1393:
	.align	2, 0
.L1392:
	.word	gUnknown_02022C2C
	.word	gStringVar1
	.word	sCommunicatingWaitTexts
.L1248:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1394
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1021	@cond_branch
	mov	r0, #0x1
	bl	sub_801818C
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	mov	r2, #0x2
	ldrsh	r1, [r7, r2]
	ldr	r2, [r6]
	bl	sub_801A3D0
	mov	r0, #0x4
	b	.L1254
.L1395:
	.align	2, 0
.L1394:
	.word	gStringVar4
.L1250:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1396
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1021	@cond_branch
	ldrb	r0, [r6, #0x15]
.L1254:
	strb	r0, [r6, #0x14]
.L1021:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1397:
	.align	2, 0
.L1396:
	.word	gStringVar4
.Lfe52:
	.size	 sub_80156E0,.Lfe52-sub_80156E0
	.align	2, 0
	.globl	var_800D_set_xB
	.type	 var_800D_set_xB,function
	.thumb_func
var_800D_set_xB:
	push	{lr}
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L1399	@cond_branch
	ldr	r1, .L1400
	mov	r0, #0xb
	strh	r0, [r1]
.L1399:
	pop	{r0}
	bx	r0
.L1401:
	.align	2, 0
.L1400:
	.word	gSpecialVar_Result
.Lfe53:
	.size	 var_800D_set_xB,.Lfe53-var_800D_set_xB
	.align	2, 0
	.globl	sub_801689C
	.type	 sub_801689C,function
	.thumb_func
sub_801689C:
	push	{r4, r5, lr}
	add	r2, r0, #0
	ldr	r3, .L1405
	ldrh	r5, [r3, #0x12]
	add	r4, r5, #0
	cmp	r4, #0
	beq	.L1403	@cond_branch
	ldrh	r0, [r3, #0x10]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0xbc
	lsl	r0, r0, #0x6
	cmp	r1, r0
	bne	.L1403	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x9a
	strh	r5, [r0]
	cmp	r4, #0x44
	bne	.L1403	@cond_branch
	ldrh	r1, [r3, #0x14]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldrh	r1, [r3, #0x16]
	add	r0, r0, #0x2
	strh	r1, [r0]
.L1403:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1406:
	.align	2, 0
.L1405:
	.word	gRecvCmds
.Lfe54:
	.size	 sub_801689C,.Lfe54-sub_801689C
	.align	2, 0
	.globl	sub_80168DC
	.type	 sub_80168DC,function
	.thumb_func
sub_80168DC:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	add	r5, r5, #0x9a
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L1408	@cond_branch
	ldr	r0, .L1415
	ldr	r1, .L1415+0x4
	add	r1, r1, #0x2f
	ldrb	r1, [r1]
	add	r2, r5, #0
	add	r3, r4, #0
	bl	sub_8017EA0
	cmp	r0, #0
	beq	.L1408	@cond_branch
	cmp	r0, #0x1
	bne	.L1411	@cond_branch
	mov	r0, #0x23
	strb	r0, [r4, #0x14]
	ldr	r1, .L1415+0x8
	ldrh	r0, [r5]
	strb	r0, [r1]
	mov	r0, #0x0
	b	.L1414
.L1416:
	.align	2, 0
.L1415:
	.word	gStringVar4
	.word	gLinkPlayers
	.word	gUnknown_02022C2C
.L1411:
	cmp	r0, #0x2
	bne	.L1408	@cond_branch
	mov	r0, #0x24
	strb	r0, [r4, #0x14]
	bl	sub_800AC34
	mov	r0, #0x0
	b	.L1414
.L1408:
	mov	r0, #0x1
.L1414:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 sub_80168DC,.Lfe55-sub_80168DC
	.align	2, 0
	.globl	InitUnionRoom
	.type	 InitUnionRoom,function
	.thumb_func
InitUnionRoom:
	push	{r4, r5, lr}
	ldr	r5, .L1418
	mov	r0, #0xff
	strb	r0, [r5]
	ldr	r0, .L1418+0x4
	mov	r1, #0x0
	bl	CreateTask
	ldr	r4, .L1418+0x8
	mov	r0, #0x9b
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L1418+0xc
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	mov	r0, #0x1
	neg	r0, r0
	strb	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1419:
	.align	2, 0
.L1418:
	.word	sUnionRoomPlayerName
	.word	sub_801697C
	.word	gUnknown_02022C30
	.word	gUnknown_03000DA8
.Lfe56:
	.size	 InitUnionRoom,.Lfe56-InitUnionRoom
	.align	2, 0
	.globl	sub_801697C
	.type	 sub_801697C,function
	.thumb_func
sub_801697C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1444
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x4
	bls	.LCB10290
	b	.L1421	@long jump
.LCB10290:
	lsl	r0, r0, #0x2
	ldr	r1, .L1444+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1445:
	.align	2, 0
.L1444:
	.word	gUnknown_02022C30
	.word	.L1441
	.align	2, 0
	.align	2, 0
.L1441:
	.word	.L1422
	.word	.L1423
	.word	.L1424
	.word	.L1425
	.word	.L1440
.L1422:
	mov	r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L1421
.L1423:
	mov	r0, #0xc
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8010F84
	bl	sub_800B488
	bl	OpenLink
	bl	sub_8011C84
	mov	r0, #0x1
	bl	sub_80111B0
	mov	r0, #0x2
	strb	r0, [r5, #0x14]
	b	.L1421
.L1424:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	sub_80175EC
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0xc]
	mov	r1, #0x4
	bl	sub_80175EC
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r5]
	mov	r1, #0x8
	bl	sub_8017580
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	mov	r1, #0x1
	bl	sub_8017580
	ldr	r0, [r5, #0xc]
	ldr	r1, [r5, #0x4]
	mov	r2, #0xa
	bl	sub_8016DF0
	add	r1, r5, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	mov	r0, #0x3
	strb	r0, [r5, #0x14]
	b	.L1421
.L1425:
	bl	sub_8016B00
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	blt	.L1421	@cond_branch
	cmp	r0, #0x2
	bgt	.L1421	@cond_branch
	ldr	r0, .L1446
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L1421	@cond_branch
	mov	r6, #0x0
.L1433:
	ldr	r0, [r5]
	lsl	r4, r6, #0x5
	add	r1, r0, r4
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1432	@cond_branch
	mov	r0, sp
	bl	sub_8018404
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	sub_800E540
	cmp	r0, #0
	bne	.L1443	@cond_branch
.L1432:
	add	r6, r6, #0x1
	cmp	r6, #0x7
	ble	.L1433	@cond_branch
	b	.L1421
.L1447:
	.align	2, 0
.L1446:
	.word	sUnionRoomPlayerName
.L1443:
	ldr	r0, .L1448
	mov	r1, sp
	bl	StringCopy
	b	.L1421
.L1449:
	.align	2, 0
.L1448:
	.word	sUnionRoomPlayerName
.L1440:
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0xc]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	add	r0, r5, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r0, .L1450
	ldr	r0, [r0]
	bl	Free
	bl	sub_800EDD4
	add	r0, r4, #0
	bl	DestroyTask
.L1421:
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1451:
	.align	2, 0
.L1450:
	.word	gUnknown_02022C30
.Lfe57:
	.size	 sub_801697C,.Lfe57-sub_801697C
	.align	2, 0
	.globl	BufferUnionRoomPlayerName
	.type	 BufferUnionRoomPlayerName,function
	.thumb_func
BufferUnionRoomPlayerName:
	push	{r4, lr}
	ldr	r4, .L1456
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L1453	@cond_branch
	mov	r0, #0x0
	b	.L1455
.L1457:
	.align	2, 0
.L1456:
	.word	sUnionRoomPlayerName
.L1453:
	ldr	r0, .L1458
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x1
.L1455:
	pop	{r4}
	pop	{r1}
	bx	r1
.L1459:
	.align	2, 0
.L1458:
	.word	gStringVar1
.Lfe58:
	.size	 BufferUnionRoomPlayerName,.Lfe58-BufferUnionRoomPlayerName
	.align	2, 0
	.globl	sub_8016B00
	.type	 sub_8016B00,function
	.thumb_func
sub_8016B00:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L1494
	ldr	r4, [r0]
	mov	r7, #0x0
	mov	r6, #0x0
	mov	r5, #0x0
.L1464:
	ldr	r0, [r4, #0xc]
	add	r0, r0, r5
	ldr	r1, .L1494+0x4
	bl	sub_8017630
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x1
	bne	.L1463	@cond_branch
	ldr	r1, [r4, #0xc]
	ldr	r0, [r4, #0x8]
	add	r1, r1, r5
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldr	r1, [r4, #0x8]
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r4, #0x8]
	ldrb	r1, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r0, r5, #0
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	ldr	r0, [r4, #0x8]
	strb	r3, [r0, #0x1b]
	mov	r0, #0x4
	b	.L1492
.L1495:
	.align	2, 0
.L1494:
	.word	gUnknown_02022C30
	.word	gUnknown_082F045C
.L1463:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1464	@cond_branch
	mov	r6, #0x0
	mov	r9, r6
.L1470:
	ldr	r0, [r4]
	mov	r1, r9
	lsl	r5, r1, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L1469	@cond_branch
	ldr	r1, [r4, #0x4]
	add	r0, r2, #0
	bl	sub_80176E4
	add	r6, r0, #0
	cmp	r6, #0xff
	beq	.L1472	@cond_branch
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1473	@cond_branch
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r6, r0, #0x2
	ldr	r1, [r4, #0x4]
	add	r1, r1, r6
	add	r0, r2, #0
	bl	sub_8017678
	cmp	r0, #0
	beq	.L1474	@cond_branch
	ldr	r1, [r4]
	ldr	r0, [r4, #0x4]
	add	r1, r1, r5
	add	r0, r0, r6
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
	b	.L1478
.L1474:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L1478	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L1478	@cond_branch
	b	.L1493
.L1473:
	mov	r3, #0x4
	neg	r3, r3
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0, #0x1b]
.L1493:
	mov	r7, #0x2
.L1478:
	ldr	r0, [r4]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L1469
.L1472:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r2, r0, #0x1e
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	beq	.L1480	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1496
	cmp	r1, r0
	bls	.L1469	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r1, r5, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
	b	.L1469
.L1497:
	.align	2, 0
.L1496:
	.word	0x257
.L1480:
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	bne	.L1469	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1498
	cmp	r1, r0
	bls	.L1469	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x1
	bl	sub_8017580
.L1469:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	cmp	r0, #0x7
	bhi	.LCB10794
	b	.L1470	@long jump
.LCB10794:
	mov	r5, #0x0
	mov	r6, #0x3
.L1489:
	ldr	r0, [r4]
	ldr	r1, [r4, #0x4]
	add	r1, r1, r5
	mov	r2, #0x8
	bl	sub_8017734
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L1488	@cond_branch
	mov	r7, #0x1
.L1488:
	add	r5, r5, #0x1c
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L1489	@cond_branch
	add	r0, r7, #0
.L1492:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1499:
	.align	2, 0
.L1498:
	.word	0x383
.Lfe59:
	.size	 sub_8016B00,.Lfe59-sub_8016B00
	.align	2, 0
	.globl	sub_8016CA0
	.type	 sub_8016CA0,function
	.thumb_func
sub_8016CA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1516
	add	r6, r0, r1
	mov	r7, #0x0
	mov	r0, sp
	add	r0, r0, #0x10
	str	r0, [sp, #0x18]
.L1504:
	lsl	r2, r7, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sp
	ldr	r1, [sp, #0x18]
	bl	sub_800DE7C
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, sp
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r3, .L1516+0x4
	add	r1, r1, r3
	mov	r5, #0x10
	ldrsh	r1, [r1, r5]
	bl	sub_8013D88
	cmp	r0, #0
	bne	.L1505	@cond_branch
	mov	r1, sp
	ldr	r0, .L1516+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1505:
	mov	r0, sp
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1506	@cond_branch
	mov	r1, sp
	ldr	r0, .L1516+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1506:
	cmp	r4, #0
	bne	.L1507	@cond_branch
	lsl	r0, r7, #0x3
	mov	r8, r0
	add	r1, r7, #0x1
	mov	r9, r1
	cmp	r7, #0
	ble	.L1509	@cond_branch
	mov	r2, #0x0
	str	r2, [sp, #0x1c]
	add	r4, r7, #0
.L1511:
	ldr	r0, [r6, #0x4]
	ldr	r3, [sp, #0x1c]
	add	r0, r0, r3
	mov	r1, sp
	bl	sub_8017630
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1510	@cond_branch
	mov	r1, sp
	ldr	r0, .L1516+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1510:
	ldr	r5, [sp, #0x1c]
	add	r5, r5, #0x1c
	str	r5, [sp, #0x1c]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1511	@cond_branch
.L1509:
	ldr	r1, [r6, #0x4]
	mov	r0, r8
	sub	r4, r0, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6, #0x4]
	add	r0, r0, r4
	ldr	r1, .L1516+0x8
	bl	sub_8017630
	ldr	r3, [r6, #0x4]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	b	.L1503
.L1517:
	.align	2, 0
.L1516:
	.word	gTasks+0x8
	.word	gTasks
	.word	gUnknown_082F045C
.L1507:
	ldr	r1, [r6]
	lsl	r4, r7, #0x3
	sub	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1518
	bl	sub_8017630
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r7, r7, #0x1
	mov	r9, r7
.L1503:
	mov	r7, r9
	cmp	r7, #0x3
	bgt	.LCB11043
	b	.L1504	@long jump
.LCB11043:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1519:
	.align	2, 0
.L1518:
	.word	gUnknown_082F045C
.Lfe60:
	.size	 sub_8016CA0,.Lfe60-sub_8016CA0
	.align	2, 0
	.globl	sub_8016DF0
	.type	 sub_8016DF0,function
	.thumb_func
sub_8016DF0:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r0, .L1521
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L1521+0x4
	add	r3, r1, r2
	str	r4, [r3]
	str	r5, [r3, #0x4]
	add	r2, r2, r1
	strh	r6, [r2, #0x8]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1522:
	.align	2, 0
.L1521:
	.word	sub_8016CA0
	.word	gTasks+0x8
.Lfe61:
	.size	 sub_8016DF0,.Lfe61-sub_8016DF0
	.align	2, 0
	.globl	sub_8016E24
	.type	 sub_8016E24,function
	.thumb_func
sub_8016E24:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1536
	add	r6, r0, r1
	mov	r3, #0x0
.L1527:
	lsl	r4, r3, #0x3
	sub	r0, r4, r3
	lsl	r5, r0, #0x2
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	str	r3, [sp]
	bl	sub_800DE7C
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r7, .L1536+0x4
	add	r1, r1, r7
	mov	r2, #0xc
	ldrsh	r1, [r1, r2]
	bl	sub_8013D88
	mov	r8, r4
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1528	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, r5
	ldr	r0, .L1536+0x8
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
.L1528:
	add	r4, r3, #0x1
	mov	r9, r4
	cmp	r3, #0
	ble	.L1530	@cond_branch
	str	r5, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	add	r4, r3, #0
.L1532:
	ldr	r1, [r6]
	ldr	r7, [sp, #0x8]
	add	r0, r1, r7
	ldr	r2, [sp, #0x4]
	add	r1, r1, r2
	str	r3, [sp]
	bl	sub_8017630
	lsl	r0, r0, #0x18
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1531	@cond_branch
	ldr	r1, [r6]
	ldr	r5, [sp, #0x4]
	add	r1, r1, r5
	ldr	r0, .L1536+0x8
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
.L1531:
	ldr	r7, [sp, #0x8]
	add	r7, r7, #0x1c
	str	r7, [sp, #0x8]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1532	@cond_branch
.L1530:
	mov	r0, r8
	sub	r4, r0, r3
	lsl	r4, r4, #0x2
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1536+0x8
	bl	sub_8017630
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	mov	r3, r9
	cmp	r3, #0x3
	ble	.L1527	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1537:
	.align	2, 0
.L1536:
	.word	gTasks+0x8
	.word	gTasks
	.word	gUnknown_082F045C
.Lfe62:
	.size	 sub_8016E24,.Lfe62-sub_8016E24
	.align	2, 0
	.globl	sub_8016F1C
	.type	 sub_8016F1C,function
	.thumb_func
sub_8016F1C:
	push	{lr}
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7
	bne	.L1539	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x20
	b	.L1548
.L1539:
	cmp	r1, #0x8
	bne	.L1543	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x10
.L1548:
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1543	@cond_branch
	mov	r0, #0x1
	b	.L1547
.L1543:
	mov	r0, #0x0
.L1547:
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 sub_8016F1C,.Lfe63-sub_8016F1C
	.align	2, 0
	.globl	sub_8016F44
	.type	 sub_8016F44,function
	.thumb_func
sub_8016F44:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1556
	add	r4, r1, r0
	mov	r6, #0x0
	sub	r0, r0, #0x8
	mov	r5, #0x0
	add	r1, r1, r0
	mov	r8, r1
.L1553:
	ldr	r0, [r4]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	bl	sub_800DF34
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1554	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r2, r8
	mov	r3, #0xc
	ldrsh	r1, [r2, r3]
	bl	sub_8016F1C
.L1554:
	ldr	r0, [r4]
	add	r0, r0, r5
	ldr	r1, .L1556+0x4
	bl	sub_8017630
	ldr	r3, [r4]
	add	r3, r3, r5
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r7, #0x2
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1553	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1557:
	.align	2, 0
.L1556:
	.word	gTasks+0x8
	.word	gUnknown_082F045C
.Lfe64:
	.size	 sub_8016F44,.Lfe64-sub_8016F44
	.align	2, 0
	.globl	sub_8016FC0
	.type	 sub_8016FC0,function
	.thumb_func
sub_8016FC0:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1559
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1559+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1560:
	.align	2, 0
.L1559:
	.word	sub_8016E24
	.word	gTasks+0x8
.Lfe65:
	.size	 sub_8016FC0,.Lfe65-sub_8016FC0
	.align	2, 0
	.globl	sub_8016FF0
	.type	 sub_8016FF0,function
	.thumb_func
sub_8016FF0:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1562
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1562+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1563:
	.align	2, 0
.L1562:
	.word	sub_8016F44
	.word	gTasks+0x8
.Lfe66:
	.size	 sub_8016FF0,.Lfe66-sub_8016FF0
	.align	2, 0
	.globl	sub_8017020
	.type	 sub_8017020,function
	.thumb_func
sub_8017020:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LoadMessageBoxAndBorderGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1565
	add	r1, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x1
	bl	AddTextPrinterWithCustomSpeedForMessage
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1566:
	.align	2, 0
.L1565:
	.word	gStringVar4
.Lfe67:
	.size	 sub_8017020,.Lfe67-sub_8017020
	.align	2, 0
	.globl	sub_801704C
	.type	 sub_801704C,function
	.thumb_func
sub_801704C:
	push	{lr}
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1568	@cond_branch
	mov	r0, #0x0
	b	.L1570
.L1568:
	mov	r0, #0x1
.L1570:
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 sub_801704C,.Lfe68-sub_801704C
	.align	2, 0
	.globl	PrintOnTextbox
	.type	 PrintOnTextbox,function
	.thumb_func
PrintOnTextbox:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1573	@cond_branch
	cmp	r0, #0x1
	beq	.L1574	@cond_branch
	b	.L1572
.L1573:
	bl	LoadMessageBoxAndBorderGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1579
	add	r1, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage_2
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1572
.L1580:
	.align	2, 0
.L1579:
	.word	gStringVar4
.L1574:
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1572	@cond_branch
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L1578
.L1572:
	mov	r0, #0x0
.L1578:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 PrintOnTextbox,.Lfe69-PrintOnTextbox
	.align	2, 0
	.globl	sub_80170B8
	.type	 sub_80170B8,function
	.thumb_func
sub_80170B8:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1583	@cond_branch
	cmp	r0, #0x1
	beq	.L1585	@cond_branch
	b	.L1582
.L1583:
	cmp	r5, #0
	beq	.L1584	@cond_branch
	mov	r0, #0x3
	neg	r0, r0
	b	.L1590
.L1584:
	bl	DisplayYesNoMenuDefaultYes
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1582
.L1585:
	cmp	r5, #0
	beq	.L1586	@cond_branch
	bl	sub_8198C78
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x3
	neg	r0, r0
	b	.L1590
.L1586:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L1582	@cond_branch
	strb	r5, [r4]
	add	r0, r1, #0
	b	.L1590
.L1582:
	mov	r0, #0x2
	neg	r0, r0
.L1590:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 sub_80170B8,.Lfe70-sub_80170B8
	.align	2, 0
	.globl	sub_8017118
	.type	 sub_8017118,function
	.thumb_func
sub_8017118:
	push	{r4, lr}
	add	sp, sp, #-0x8
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r4, #0
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	ldr	r2, .L1592
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r3, #0x8
	bl	sub_80173E0
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L1593:
	.align	2, 0
.L1592:
	.word	sText_NameWantedOfferLv
.Lfe71:
	.size	 sub_8017118,.Lfe71-sub_8017118
	.align	2, 0
	.globl	sub_8017168
	.type	 sub_8017168,function
	.thumb_func
sub_8017168:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveWindow
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 sub_8017168,.Lfe72-sub_8017168
	.align	2, 0
	.globl	sub_8017178
	.type	 sub_8017178,function
	.thumb_func
sub_8017178:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	ldrb	r4, [r7]
	cmp	r4, #0
	beq	.L1597	@cond_branch
	cmp	r4, #0x1
	beq	.L1601	@cond_branch
	b	.L1596
.L1597:
	ldr	r0, [r3]		@ created by thumb_load_double_from_address
	ldr	r1, [r3, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r0, [sp, #0x24]
	bl	Intl_GetListMenuWidth
	add	r1, r0, #0
	ldr	r2, [sp]
	lsr	r0, r2, #0x18
	cmp	r0, r1
	ble	.L1598	@cond_branch
	lsl	r1, r1, #0x18
	ldr	r0, .L1608
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp]
.L1598:
	ldr	r2, [sp]
	lsr	r0, r2, #0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsr	r1, r2, #0x18
	add	r0, r0, r1
	cmp	r0, #0x1d
	ble	.L1599	@cond_branch
	mov	r0, #0x1d
	sub	r0, r0, r1
	cmp	r0, #0
	bge	.L1600	@cond_branch
	mov	r0, #0x0
.L1600:
	lsl	r1, r0, #0x18
	lsr	r1, r1, #0x10
	ldr	r0, .L1608+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp]
.L1599:
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1608+0x8
	add	r2, r0, #0
	ldr	r1, [sp, #0x24]
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	mov	r1, r9
	strb	r0, [r1]
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	b	.L1596
.L1609:
	.align	2, 0
.L1608:
	.word	0xffffff
	.word	-0xff01
	.word	gMultiuseListMenuTemplate
.L1601:
	mov	r3, r9
	ldrb	r0, [r3]
	bl	ListMenu_ProcessInput
	mov	r8, r0
	ldr	r0, .L1610
	ldrh	r1, [r0, #0x2e]
	and	r4, r4, r1
	cmp	r4, #0
	beq	.L1602	@cond_branch
	mov	r4, r9
	ldrb	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	mov	r0, #0x0
	strb	r0, [r7]
	mov	r0, r8
	b	.L1607
.L1611:
	.align	2, 0
.L1610:
	.word	gMain
.L1602:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1596	@cond_branch
	mov	r6, r9
	ldrb	r0, [r6]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	strb	r4, [r7]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1607
.L1596:
	mov	r0, #0x1
	neg	r0, r0
.L1607:
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 sub_8017178,.Lfe73-sub_8017178
	.align	2, 0
	.globl	sub_80172A0
	.type	 sub_80172A0,function
	.thumb_func
sub_80172A0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	sl, r2
	mov	r9, r3
	ldrb	r4, [r5]
	cmp	r4, #0x1
	beq	.L1615	@cond_branch
	cmp	r4, #0x1
	bgt	.L1625	@cond_branch
	cmp	r4, #0
	beq	.L1614	@cond_branch
	b	.L1613
.L1625:
	cmp	r4, #0x2
	beq	.L1616	@cond_branch
	b	.L1613
.L1614:
	ldr	r0, .L1628
	bl	sub_8017118
	mov	r1, r9
	strb	r0, [r1]
	ldr	r0, [sp, #0x20]
	bl	AddWindow
	strb	r0, [r6]
	ldrb	r0, [r6]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1628+0x4
	add	r2, r0, #0
	ldr	r1, [sp, #0x24]
	ldmia	r1!, {r3, r4, r7}
	stmia	r2!, {r3, r4, r7}
	ldmia	r1!, {r3, r4, r7}
	stmia	r2!, {r3, r4, r7}
	ldrb	r1, [r6]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	ListMenuInit
	mov	r1, sl
	strb	r0, [r1]
	b	.L1627
.L1629:
	.align	2, 0
.L1628:
	.word	gUnknown_082F0344
	.word	gMultiuseListMenuTemplate
.L1615:
	ldrb	r0, [r6]
	mov	r1, #0x1
	bl	CopyWindowToVram
.L1627:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L1613
.L1616:
	mov	r3, sl
	ldrb	r0, [r3]
	bl	ListMenu_ProcessInput
	add	r1, r0, #0
	ldr	r0, .L1630
	ldrh	r2, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1613	@cond_branch
	cmp	r1, #0x8
	beq	.L1619	@cond_branch
	and	r4, r4, r2
	mov	r8, r4
	cmp	r4, #0
	beq	.L1618	@cond_branch
.L1619:
	mov	r4, sl
	ldrb	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r6]
	bl	RemoveWindow
	mov	r7, r9
	ldrb	r0, [r7]
	bl	sub_8017168
	mov	r0, #0x0
	strb	r0, [r5]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1626
.L1631:
	.align	2, 0
.L1630:
	.word	gMain
.L1618:
	ldr	r0, [sp, #0x28]
	bl	sub_8017CB0
	add	r4, r0, #0
	cmp	r4, #0
	blt	.L1621	@cond_branch
	mov	r1, sl
	ldrb	r0, [r1]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r6]
	bl	RemoveWindow
	mov	r3, r9
	ldrb	r0, [r3]
	bl	sub_8017168
	mov	r7, r8
	strb	r7, [r5]
	add	r0, r4, #0
	b	.L1626
.L1621:
	mov	r0, #0x7
	bl	PlaySE
.L1613:
	mov	r0, #0x1
	neg	r0, r0
.L1626:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 sub_80172A0,.Lfe74-sub_80172A0
	.align	2, 0
	.globl	sub_80173B0
	.type	 sub_80173B0,function
	.thumb_func
sub_80173B0:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 sub_80173B0,.Lfe75-sub_80173B0
	.align	2, 0
	.globl	sub_80173D4
	.type	 sub_80173D4,function
	.thumb_func
sub_80173D4:
	push	{lr}
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 sub_80173D4,.Lfe76-sub_80173D4
	.align	2, 0
	.globl	sub_80173E0
	.type	 sub_80173E0,function
	.thumb_func
sub_80173E0:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	ldr	r5, [sp, #0x1c]
	ldr	r4, [sp, #0x20]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r2, [sp]
	mov	r2, sp
	strb	r0, [r2, #0x4]
	mov	r0, sp
	strb	r1, [r0, #0x5]
	strb	r3, [r0, #0x6]
	strb	r5, [r0, #0x7]
	strb	r3, [r0, #0x8]
	strb	r5, [r0, #0x9]
	ldrb	r1, [r2, #0xc]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldr	r2, .L1647
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	cmp	r4, #0x6
	bls	.LCB12178
	b	.L1635	@long jump
.LCB12178:
	lsl	r0, r4, #0x2
	ldr	r1, .L1647+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1648:
	.align	2, 0
.L1647:
	.word	gTextFlags
	.word	.L1643
	.align	2, 0
	.align	2, 0
.L1643:
	.word	.L1636
	.word	.L1637
	.word	.L1638
	.word	.L1639
	.word	.L1640
	.word	.L1641
	.word	.L1642
.L1636:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1645
.L1637:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x50
	b	.L1645
.L1638:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x60
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x70
	b	.L1645
.L1639:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1645
.L1640:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1645
.L1641:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x70
	b	.L1646
.L1642:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0xe0
.L1646:
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	mov	r1, sp
	ldrb	r0, [r1, #0xd]
	orr	r0, r0, r4
	strb	r0, [r1, #0xd]
	and	r0, r0, r3
	mov	r1, #0x90
.L1645:
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
.L1635:
	mov	r0, sp
	mov	r1, #0xff
	mov	r2, #0x0
	bl	AddTextPrinter
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 sub_80173E0,.Lfe77-sub_80173E0
	.align	2, 0
	.globl	sub_8017580
	.type	 sub_8017580,function
	.thumb_func
sub_8017580:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	beq	.L1651	@cond_branch
	ldr	r2, .L1655
	mov	r8, r2
	mov	r5, #0x0
	mov	r9, r5
	mov	r6, #0x4
	neg	r6, r6
	mov	ip, r6
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r4, r0, #0
	mov	r7, #0xff
	mov	sl, r7
	add	r3, r1, #0
.L1653:
	add	r1, r4, #0
	mov	r0, r8
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	mov	r0, sl
	strh	r0, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, #0x5
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r5, r9
	strb	r5, [r2, #0x3]
	add	r2, r2, #0x20
	add	r4, r4, #0x20
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1653	@cond_branch
.L1651:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1656:
	.align	2, 0
.L1655:
	.word	gUnknown_082F045C
.Lfe78:
	.size	 sub_8017580,.Lfe78-sub_8017580
	.align	2, 0
	.globl	sub_80175EC
	.type	 sub_80175EC,function
	.thumb_func
sub_80175EC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L1663
	mov	ip, r1
	mov	r5, #0x2
	neg	r5, r5
	mov	r8, r5
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r3, r0, #0
	mov	r4, #0x3
.L1661:
	add	r1, r3, #0
	mov	r0, ip
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldrb	r1, [r2]
	mov	r0, r8
	and	r0, r0, r1
	strb	r0, [r2]
	add	r2, r2, #0x1c
	add	r3, r3, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L1661	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1664:
	.align	2, 0
.L1663:
	.word	gUnknown_082F045C
.Lfe79:
	.size	 sub_80175EC,.Lfe79-sub_80175EC
	.align	2, 0
	.globl	sub_8017630
	.type	 sub_8017630,function
	.thumb_func
sub_8017630:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r2, #0x0
	add	r4, r5, #0x2
	add	r3, r6, #0x2
.L1669:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1679	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x1
	ble	.L1669	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0
	add	r4, r4, #0x10
	add	r3, r6, #0
	add	r3, r3, #0x10
.L1675:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L1674	@cond_branch
.L1679:
	mov	r0, #0x1
	b	.L1678
.L1674:
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L1675	@cond_branch
	mov	r0, #0x0
.L1678:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 sub_8017630,.Lfe80-sub_8017630
	.align	2, 0
	.globl	sub_8017678
	.type	 sub_8017678,function
	.thumb_func
sub_8017678:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldrb	r3, [r5, #0xa]
	mov	r0, #0x7f
	ldrb	r2, [r6, #0xa]
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1690	@cond_branch
	mov	r0, #0x80
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1690	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0x4
	add	r3, r6, #0x4
.L1686:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1692	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L1686	@cond_branch
	ldrh	r2, [r5, #0x8]
	ldr	r0, .L1693
	ldrh	r3, [r6, #0x8]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1690	@cond_branch
	ldrb	r2, [r5, #0x9]
	mov	r0, #0xfc
	ldrb	r3, [r6, #0x9]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1690	@cond_branch
	mov	r0, #0x0
	b	.L1691
.L1694:
	.align	2, 0
.L1693:
	.word	0x3ff
.L1692:
.L1690:
	mov	r0, #0x1
.L1691:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 sub_8017678,.Lfe81-sub_8017678
	.align	2, 0
	.globl	sub_80176E4
	.type	 sub_80176E4,function
	.thumb_func
sub_80176E4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	mov	r7, #0xff
	mov	r6, #0x0
	add	r4, r1, #0
	add	r4, r4, #0x18
	add	r5, r1, #0
.L1699:
	ldrb	r1, [r4]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1698	@cond_branch
	mov	r0, r8
	add	r1, r5, #0
	bl	sub_8017630
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1698	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r7, r0, #0x18
	ldrb	r0, [r4]
	mov	r2, #0x2
	neg	r2, r2
	add	r1, r2, #0
	and	r0, r0, r1
	strb	r0, [r4]
.L1698:
	add	r4, r4, #0x1c
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1699	@cond_branch
	add	r0, r7, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 sub_80176E4,.Lfe82-sub_80176E4
	.align	2, 0
	.globl	sub_8017734
	.type	 sub_8017734,function
	.thumb_func
sub_8017734:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r3, r0, #0
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r1, [r1, #0x18]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1703	@cond_branch
	mov	r5, #0x0
	cmp	r5, r6
	bge	.L1703	@cond_branch
	mov	r0, #0x4
	neg	r0, r0
	mov	r9, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	ip, r1
	add	r2, r3, #0
	add	r2, r2, #0x18
	add	r1, r3, #0
.L1707:
	ldrb	r0, [r2, #0x2]
	mov	r3, #0x3
	and	r3, r3, r0
	cmp	r3, #0
	bne	.L1706	@cond_branch
	mov	r0, r8
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	strh	r3, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, r9
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r0, #0x40
	strb	r0, [r2, #0x3]
	mov	r0, r8
	ldrb	r1, [r0, #0x18]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1, #0x18]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	b	.L1710
.L1706:
	add	r2, r2, #0x20
	add	r1, r1, #0x20
	add	r5, r5, #0x1
	cmp	r5, r6
	blt	.L1707	@cond_branch
.L1703:
	mov	r0, #0xff
.L1710:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 sub_8017734,.Lfe83-sub_8017734
	.align	2, 0
	.globl	sub_80177B8
	.type	 sub_80177B8,function
	.thumb_func
sub_80177B8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	add	r4, r1, #0
	add	r6, r3, #0
	ldr	r3, [sp, #0x2c]
	ldr	r1, [sp, #0x30]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r9, r3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r5, .L1713
	add	r1, r1, #0x1
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1713+0x4
	add	r0, r5, #0
	bl	StringAppend
	str	r7, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r0, r8
	mov	r1, #0x1
	add	r2, r5, #0
	add	r3, r4, #0
	bl	sub_80173E0
	add	r4, r4, #0x12
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrb	r0, [r6, #0xa]
	lsl	r0, r0, #0x19
	lsr	r2, r0, #0x19
	ldrb	r1, [r6, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1712	@cond_branch
	mov	r0, #0x40
	and	r2, r2, r0
	cmp	r2, #0
	bne	.L1712	@cond_branch
	add	r0, r5, #0
	add	r1, r6, #0
	bl	sub_8018404
	str	r7, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, r8
	mov	r1, #0x1
	add	r2, r5, #0
	add	r3, r4, #0
	bl	sub_80173E0
	ldrb	r1, [r6, #0x2]
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1713+0x8
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0x88
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r7, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	mov	r0, r8
	mov	r1, #0x1
	add	r2, r5, #0
	bl	sub_80173E0
.L1712:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1714:
	.align	2, 0
.L1713:
	.word	gStringVar4
	.word	sText_Colon
	.word	sText_ID
.Lfe84:
	.size	 sub_80177B8,.Lfe84-sub_80177B8
	.align	2, 0
	.globl	sub_80178A0
	.type	 sub_80178A0,function
	.thumb_func
sub_80178A0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	add	r5, r3, #0
	ldr	r3, [sp, #0x2c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	ldrb	r1, [r5, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1716	@cond_branch
	ldr	r4, .L1717
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_8018404
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x1
	add	r2, r4, #0
	add	r3, r6, #0
	bl	sub_80173E0
	ldrb	r1, [r5, #0x2]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1717+0x4
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x68
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x1
	add	r2, r4, #0
	bl	sub_80173E0
.L1716:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1718:
	.align	2, 0
.L1717:
	.word	gStringVar4
	.word	sText_ID
.Lfe85:
	.size	 sub_80178A0,.Lfe85-sub_80178A0
	.align	2, 0
	.globl	sub_8017940
	.type	 sub_8017940,function
	.thumb_func
sub_8017940:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x9
	bne	.L1722	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	bne	.L1722	@cond_branch
	ldr	r0, .L1725
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x2
	beq	.L1723	@cond_branch
	cmp	r0, #0
	bne	.L1722	@cond_branch
.L1723:
	mov	r0, #0x1
	b	.L1724
.L1726:
	.align	2, 0
.L1725:
	.word	gPlayerAvatar
.L1722:
	mov	r0, #0x0
.L1724:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 sub_8017940,.Lfe86-sub_8017940
	.align	2, 0
	.globl	sub_8017984
	.type	 sub_8017984,function
	.thumb_func
sub_8017984:
	push	{lr}
	cmp	r0, #0x4
	beq	.L1730	@cond_branch
	cmp	r0, #0x4
	ble	.L1733	@cond_branch
	cmp	r0, #0x5
	beq	.L1729	@cond_branch
	cmp	r0, #0x8
	beq	.L1731	@cond_branch
	b	.L1733
.L1729:
	mov	r0, #0x1
	b	.L1736
.L1730:
	mov	r0, #0x2
	b	.L1736
.L1731:
	mov	r0, #0x3
	b	.L1736
.L1733:
	mov	r0, #0x0
.L1736:
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 sub_8017984,.Lfe87-sub_8017984
	.align	2, 0
	.globl	sub_80179AC
	.type	 sub_80179AC,function
	.thumb_func
sub_80179AC:
	push	{r4, lr}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	mov	r0, sp
	add	r1, r4, #0
	bl	sub_8018404
	add	r4, r4, #0x2
	add	r0, r4, #0
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	sub_800E540
	add	sp, sp, #0x20
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 sub_80179AC,.Lfe88-sub_80179AC
	.align	2, 0
	.globl	sub_80179D4
	.type	 sub_80179D4,function
	.thumb_func
sub_80179D4:
	push	{r4, r5, r6, lr}
	add	r6, r3, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x13
	add	r5, r0, r2
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1739	@cond_branch
	cmp	r4, #0
	bne	.L1739	@cond_branch
	ldr	r4, .L1755
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_8018404
	add	r0, r5, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	sub_800E540
	add	r2, r0, #0
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x7f
	and	r0, r0, r1
	cmp	r0, #0x45
	bne	.L1740	@cond_branch
	ldr	r0, .L1755+0x4
	ldr	r3, .L1755+0x8
	lsl	r1, r6, #0x2
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	b	.L1752
.L1756:
	.align	2, 0
.L1755:
	.word	gStringVar1
	.word	gStringVar4
	.word	sJoinChatTexts
.L1740:
	ldr	r0, .L1757
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	sub_8017020
	mov	r0, #0x1
	b	.L1752
.L1758:
	.align	2, 0
.L1757:
	.word	sCommunicatingWaitTexts
.L1739:
	ldr	r0, .L1759
	add	r1, r5, #0
	bl	sub_8018404
	cmp	r4, #0
	beq	.L1743	@cond_branch
	add	r0, r5, r4
	ldrb	r0, [r0, #0x3]
	lsr	r6, r0, #0x3
	mov	r0, #0x1
	and	r6, r6, r0
.L1743:
	ldrb	r0, [r5, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r1, #0x3f
	and	r1, r1, r0
	cmp	r1, #0x4
	beq	.L1746	@cond_branch
	cmp	r1, #0x4
	bgt	.L1751	@cond_branch
	cmp	r1, #0x1
	beq	.L1745	@cond_branch
	b	.L1749
.L1760:
	.align	2, 0
.L1759:
	.word	gStringVar1
.L1751:
	cmp	r1, #0x5
	beq	.L1747	@cond_branch
	cmp	r1, #0x8
	beq	.L1748	@cond_branch
	b	.L1749
.L1745:
	ldr	r5, .L1761
	ldr	r4, .L1761+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r6, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1753
.L1762:
	.align	2, 0
.L1761:
	.word	gStringVar4
	.word	sBattleReactionTexts
.L1746:
	ldr	r5, .L1763
	ldr	r4, .L1763+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r6, #0x4
	b	.L1754
.L1764:
	.align	2, 0
.L1763:
	.word	gStringVar4
	.word	sTradeReactionTexts
.L1747:
	ldr	r5, .L1765
	ldr	r4, .L1765+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r6, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1753
.L1766:
	.align	2, 0
.L1765:
	.word	gStringVar4
	.word	sChatReactionTexts
.L1748:
	ldr	r5, .L1767
	ldr	r4, .L1767+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r6, #0x3
.L1754:
	add	r0, r0, r1
	add	r0, r0, r4
	ldr	r1, [r0]
.L1753:
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	b	.L1744
.L1768:
	.align	2, 0
.L1767:
	.word	gStringVar4
	.word	sTrainerCardReactionTexts
.L1749:
	ldr	r0, .L1769
	ldr	r1, .L1769+0x4
	bl	StringExpandPlaceholders
.L1744:
	mov	r0, #0x0
.L1752:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1770:
	.align	2, 0
.L1769:
	.word	gStringVar4
	.word	sText_TrainerAppearsBusy
.Lfe89:
	.size	 sub_80179D4,.Lfe89-sub_80179D4
	.align	2, 0
	.globl	nullsub_14
	.type	 nullsub_14,function
	.thumb_func
nullsub_14:
	bx	lr
.Lfe90:
	.size	 nullsub_14,.Lfe90-nullsub_14
	.align	2, 0
	.globl	sub_8017B3C
	.type	 sub_8017B3C,function
	.thumb_func
sub_8017B3C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	ldr	r4, [sp, #0x28]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrh	r0, [r2, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r8, r0
	ldrb	r0, [r2, #0x9]
	lsr	r7, r0, #0x2
	ldrb	r0, [r2, #0xb]
	lsr	r0, r0, #0x1
	mov	r9, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, r3, #0
	mov	r3, #0x8
	bl	sub_80173E0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r8, r0
	bne	.L1773	@cond_branch
	ldr	r2, .L1775
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r3, #0x44
	bl	sub_80173E0
	b	.L1774
.L1776:
	.align	2, 0
.L1775:
	.word	sText_EggTrade
.L1773:
	add	r1, r7, #0x1
	add	r0, r6, #0
	mov	r2, #0x44
	add	r3, r5, #0
	bl	blit_move_info_icon
	mov	r0, #0xb
	mov	r2, r8
	mul	r2, r2, r0
	ldr	r0, .L1777
	add	r2, r2, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r3, #0x76
	bl	sub_80173E0
	add	r0, sp, #0x8
	mov	r1, r9
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, sp, #0x8
	mov	r3, #0xc6
	bl	sub_80173E0
.L1774:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1778:
	.align	2, 0
.L1777:
	.word	gSpeciesNames
.Lfe91:
	.size	 sub_8017B3C,.Lfe91-sub_8017B3C
	.align	2, 0
	.globl	sub_8017BE8
	.type	 sub_8017BE8,function
	.thumb_func
sub_8017BE8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r0, .L1791
	ldr	r0, [r0]
	mov	r8, r0
	mov	r0, #0x3
	neg	r0, r0
	cmp	r4, r0
	bne	.L1780	@cond_branch
	ldr	r0, .L1791+0x4
	ldrb	r0, [r0, #0x14]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r7, r0
	bne	.L1780	@cond_branch
	bl	sub_800F7DC
	add	r2, r0, #0
	ldrh	r1, [r2, #0x8]
	ldr	r0, .L1791+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1782	@cond_branch
	ldr	r0, .L1791+0xc
	ldr	r3, [r0]
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, r9
	add	r1, r7, #0
	bl	sub_8017B3C
	b	.L1782
.L1792:
	.align	2, 0
.L1791:
	.word	gUnknown_02022C30
	.word	gUnknown_082F03A4
	.word	0x3ff
	.word	gSaveBlock2Ptr
.L1790:
	mov	r0, ip
	add	r1, r0, r4
	add	r0, sp, #0x4
	bl	sub_8018404
	mov	r0, r8
	ldr	r2, [r0]
	add	r2, r2, r4
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, r9
	add	r1, r7, #0
	add	r3, sp, #0x4
	bl	sub_8017B3C
	b	.L1782
.L1780:
	mov	r5, #0x0
	mov	r1, #0x0
	mov	r2, r8
	ldr	r2, [r2]
	mov	ip, r2
	add	r2, r2, #0x8
	mov	r3, #0x0
	add	r6, r4, #0x1
.L1786:
	ldrb	r0, [r2, #0x12]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	add	r4, r3, #0
	cmp	r0, #0x1
	bne	.L1787	@cond_branch
	ldrh	r0, [r2]
	lsl	r0, r0, #0x16
	cmp	r0, #0
	beq	.L1787	@cond_branch
	add	r5, r5, #0x1
.L1787:
	cmp	r5, r6
	beq	.L1790	@cond_branch
	add	r2, r2, #0x20
	add	r3, r3, #0x20
	add	r1, r1, #0x1
	cmp	r1, #0x7
	ble	.L1786	@cond_branch
.L1782:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe92:
	.size	 sub_8017BE8,.Lfe92-sub_8017BE8
	.align	2, 0
	.globl	sub_8017CB0
	.type	 sub_8017CB0,function
	.thumb_func
sub_8017CB0:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	mov	r3, #0x0
	mov	r7, #0x3
	ldr	r6, .L1802
	add	r2, r0, #0
	add	r2, r2, #0x8
	add	r5, r1, #0x1
.L1797:
	ldrb	r1, [r2, #0x12]
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1798	@cond_branch
	ldrh	r1, [r2]
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1798	@cond_branch
	add	r4, r4, #0x1
.L1798:
	cmp	r4, r5
	bne	.L1796	@cond_branch
	add	r0, r3, #0
	b	.L1801
.L1803:
	.align	2, 0
.L1802:
	.word	0x3ff
.L1796:
	add	r2, r2, #0x20
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1797	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1801:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe93:
	.size	 sub_8017CB0,.Lfe93-sub_8017CB0
	.align	2, 0
	.globl	sub_8017CF8
	.type	 sub_8017CF8,function
	.thumb_func
sub_8017CF8:
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	bx	lr
.Lfe94:
	.size	 sub_8017CF8,.Lfe94-sub_8017CF8
	.align	2, 0
	.globl	sub_8017D04
	.type	 sub_8017D04,function
	.thumb_func
sub_8017D04:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1806	@cond_branch
	mov	r4, #0x0
	b	.L1823
.L1810:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1824
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1819	@cond_branch
	add	r4, r4, #0x1
.L1823:
	ldr	r0, .L1824+0x4
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1810	@cond_branch
	mov	r0, #0x2
	b	.L1821
.L1825:
	.align	2, 0
.L1824:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.L1806:
	mov	r4, #0x0
	ldr	r0, .L1826
	ldrb	r0, [r0]
	cmp	r4, r0
	bge	.L1815	@cond_branch
	ldr	r6, .L1826+0x4
.L1817:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1826+0x8
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	ldrb	r0, [r1, #0x6]
	cmp	r0, r5
	beq	.L1819	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, r5
	bne	.L1816	@cond_branch
.L1819:
	mov	r0, #0x0
	b	.L1821
.L1827:
	.align	2, 0
.L1826:
	.word	gPlayerPartyCount
	.word	gBaseStats
	.word	gPlayerParty
.L1816:
	add	r4, r4, #0x1
	ldr	r0, .L1828
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1817	@cond_branch
.L1815:
	mov	r0, #0x1
.L1821:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1829:
	.align	2, 0
.L1828:
	.word	gPlayerPartyCount
.Lfe95:
	.size	 sub_8017D04,.Lfe95-sub_8017D04
	.align	2, 0
	.globl	sub_8017D9C
	.type	 sub_8017D9C,function
	.thumb_func
sub_8017D9C:
	push	{lr}
	add	r3, r0, #0
	cmp	r1, #0x44
	beq	.L1834	@cond_branch
	cmp	r1, #0x44
	bgt	.L1838	@cond_branch
	cmp	r1, #0x41
	beq	.L1832	@cond_branch
	b	.L1831
.L1838:
	cmp	r1, #0x45
	beq	.L1833	@cond_branch
	cmp	r1, #0x48
	beq	.L1835	@cond_branch
	b	.L1831
.L1832:
	ldr	r0, .L1840
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1839
.L1841:
	.align	2, 0
.L1840:
	.word	sBattleDeclinedTexts
.L1833:
	ldr	r0, .L1842
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1839
.L1843:
	.align	2, 0
.L1842:
	.word	sChatDeclinedTexts
.L1834:
	ldr	r1, .L1844
.L1839:
	add	r0, r3, #0
	bl	StringExpandPlaceholders
	b	.L1831
.L1845:
	.align	2, 0
.L1844:
	.word	sText_TradeOfferRejected
.L1835:
	ldr	r0, .L1846
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r3, #0
	bl	StringExpandPlaceholders
.L1831:
	pop	{r0}
	bx	r0
.L1847:
	.align	2, 0
.L1846:
	.word	sShowTrainerCardDeclinedTexts
.Lfe96:
	.size	 sub_8017D9C,.Lfe96-sub_8017D9C
	.align	2, 0
	.globl	sub_8017E00
	.type	 sub_8017E00,function
	.thumb_func
sub_8017E00:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r6, r4, #0
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L1857
	mov	r0, #0x1
	add	r1, r3, #0
	eor	r1, r1, r0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x13]
	cmp	r4, #0x44
	beq	.L1851	@cond_branch
	cmp	r4, #0x44
	bgt	.L1855	@cond_branch
	cmp	r4, #0x41
	beq	.L1850	@cond_branch
	b	.L1849
.L1858:
	.align	2, 0
.L1857:
	.word	gLinkPlayers
.L1855:
	cmp	r6, #0x45
	beq	.L1852	@cond_branch
	b	.L1849
.L1850:
	ldr	r2, .L1859
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L1856
.L1860:
	.align	2, 0
.L1859:
	.word	sStartActivityTexts
.L1851:
	ldr	r2, .L1861
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x8
.L1856:
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
	b	.L1849
.L1862:
	.align	2, 0
.L1861:
	.word	sStartActivityTexts
.L1852:
	ldr	r2, .L1863
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
.L1849:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1864:
	.align	2, 0
.L1863:
	.word	sStartActivityTexts
.Lfe97:
	.size	 sub_8017E00,.Lfe97-sub_8017E00
	.align	2, 0
	.globl	sub_8017EA0
	.type	 sub_8017EA0,function
	.thumb_func
sub_8017EA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r5, r2, #0
	add	r6, r3, #0
	mov	r2, #0x0
	mov	r8, r2
	ldrh	r0, [r5]
	sub	r0, r0, #0x40
	cmp	r0, #0x8
	bls	.LCB14115
	b	.L1866	@long jump
.LCB14115:
	lsl	r0, r0, #0x2
	ldr	r1, .L1889
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1890:
	.align	2, 0
.L1889:
	.word	.L1885
	.align	2, 0
	.align	2, 0
.L1885:
	.word	.L1884
	.word	.L1867
	.word	.L1866
	.word	.L1866
	.word	.L1869
	.word	.L1868
	.word	.L1866
	.word	.L1866
	.word	.L1883
.L1867:
	ldr	r1, .L1891
	b	.L1887
.L1892:
	.align	2, 0
.L1891:
	.word	sText_BattleChallenge
.L1868:
	ldr	r1, .L1893
	b	.L1887
.L1894:
	.align	2, 0
.L1893:
	.word	sText_ChatInvitation
.L1869:
	add	r0, r6, #0
	add	r0, r0, #0x58
	ldr	r4, .L1895
	ldrh	r1, [r4, #0xc]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	add	r0, r0, #0x68
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1895+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r4, #0x0
	b	.L1870
.L1896:
	.align	2, 0
.L1895:
	.word	sUnionRoomTrade
	.word	gSpeciesNames
.L1872:
	add	r4, r4, #0x1
.L1870:
	cmp	r4, #0x3
	bgt	.L1871	@cond_branch
	ldr	r0, .L1897
	ldr	r0, [r0]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bne	.L1872	@cond_branch
	ldrh	r1, [r5, #0x4]
	add	r0, r6, #0
	add	r0, r0, #0x78
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldrh	r1, [r5, #0x2]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1897+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x88
	bl	StringCopy
	ldrh	r5, [r5, #0x2]
	mov	r8, r5
.L1871:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r8, r0
	bne	.L1876	@cond_branch
	ldr	r1, .L1897+0x8
	add	r0, r7, #0
	bl	StringCopy
	b	.L1888
.L1898:
	.align	2, 0
.L1897:
	.word	gRfuLinkStatus
	.word	gSpeciesNames
	.word	sText_OfferToTradeEgg
.L1876:
	mov	r4, #0x0
	add	r5, r6, #0
	add	r5, r5, #0x58
.L1881:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	add	r5, r5, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L1881	@cond_branch
	ldr	r1, .L1899
	add	r0, r7, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L1888
.L1900:
	.align	2, 0
.L1899:
	.word	sText_OfferToTradeMon
.L1883:
	ldr	r1, .L1901
.L1887:
	add	r0, r7, #0
	bl	StringExpandPlaceholders
.L1888:
	mov	r2, #0x1
	b	.L1866
.L1902:
	.align	2, 0
.L1901:
	.word	sText_ShowTrainerCard
.L1884:
	ldr	r1, .L1903
	add	r0, r7, #0
	bl	StringExpandPlaceholders
	mov	r2, #0x2
.L1866:
	add	r0, r2, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1904:
	.align	2, 0
.L1903:
	.word	sText_ChatDropped
.Lfe98:
	.size	 sub_8017EA0,.Lfe98-sub_8017EA0
	.align	2, 0
	.globl	sub_8017FD8
	.type	 sub_8017FD8,function
	.thumb_func
sub_8017FD8:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1912
	ldrh	r1, [r0, #0x2]
	cmp	r1, #0
	beq	.L1906	@cond_branch
	cmp	r1, #0x51
	beq	.L1911	@cond_branch
	cmp	r1, #0x52
	bne	.L1906	@cond_branch
.L1911:
	add	r0, r2, #0
	add	r0, r0, #0x98
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L1910
.L1913:
	.align	2, 0
.L1912:
	.word	gRecvCmds
.L1906:
	mov	r0, #0x0
.L1910:
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 sub_8017FD8,.Lfe99-sub_8017FD8
	.align	2, 0
	.globl	InUnionRoom
	.type	 InUnionRoom,function
	.thumb_func
InUnionRoom:
	push	{lr}
	mov	r2, #0x0
	ldr	r0, .L1916
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L1916+0x4
	cmp	r1, r0
	bne	.L1915	@cond_branch
	mov	r2, #0x1
.L1915:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L1917:
	.align	2, 0
.L1916:
	.word	gSaveBlock1Ptr
	.word	0x3c19
.Lfe100:
	.size	 InUnionRoom,.Lfe100-InUnionRoom
	.align	2, 0
	.globl	HasAtLeastTwoMonsOfLevel30OrLower
	.type	 HasAtLeastTwoMonsOfLevel30OrLower,function
	.thumb_func
HasAtLeastTwoMonsOfLevel30OrLower:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r0, .L1928
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L1920	@cond_branch
.L1922:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1928+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x1e
	bhi	.L1921	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	beq	.L1921	@cond_branch
	add	r6, r6, #0x1
.L1921:
	add	r5, r5, #0x1
	ldr	r0, .L1928
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1922	@cond_branch
.L1920:
	cmp	r6, #0x1
	bgt	.L1925	@cond_branch
	mov	r0, #0x0
	b	.L1927
.L1929:
	.align	2, 0
.L1928:
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L1925:
	mov	r0, #0x1
.L1927:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe101:
	.size	 HasAtLeastTwoMonsOfLevel30OrLower,.Lfe101-HasAtLeastTwoMonsOfLevel30OrLower
	.align	2, 0
	.type	 ResetUnionRoomTrade,function
	.thumb_func
ResetUnionRoomTrade:
	mov	r1, #0x0
	strh	r1, [r0]
	strh	r1, [r0, #0x2]
	str	r1, [r0, #0x4]
	strh	r1, [r0, #0xa]
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
	strh	r1, [r0, #0x10]
	str	r1, [r0, #0x14]
	bx	lr
.Lfe102:
	.size	 ResetUnionRoomTrade,.Lfe102-ResetUnionRoomTrade
	.align	2, 0
	.globl	Script_ResetUnionRoomTrade
	.type	 Script_ResetUnionRoomTrade,function
	.thumb_func
Script_ResetUnionRoomTrade:
	push	{lr}
	ldr	r0, .L1932
	bl	ResetUnionRoomTrade
	pop	{r0}
	bx	r0
.L1933:
	.align	2, 0
.L1932:
	.word	sUnionRoomTrade
.Lfe103:
	.size	 Script_ResetUnionRoomTrade,.Lfe103-Script_ResetUnionRoomTrade
	.align	2, 0
	.type	 RegisterTradeMonAndGetIsEgg,function
	.thumb_func
RegisterTradeMonAndGetIsEgg:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1938
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xa]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0xc]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x4]
	ldrh	r1, [r5, #0xa]
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1935	@cond_branch
	mov	r0, #0x0
	b	.L1937
.L1939:
	.align	2, 0
.L1938:
	.word	gPlayerParty
.L1935:
	mov	r0, #0x1
.L1937:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 RegisterTradeMonAndGetIsEgg,.Lfe104-RegisterTradeMonAndGetIsEgg
	.align	2, 0
	.type	 RegisterTradeMon,function
	.thumb_func
RegisterTradeMon:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1941
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xe]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x14]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1942:
	.align	2, 0
.L1941:
	.word	gPlayerParty
.Lfe105:
	.size	 RegisterTradeMon,.Lfe105-RegisterTradeMon
	.align	2, 0
	.type	 GetPartyPositionOfRegisteredMon,function
	.thumb_func
GetPartyPositionOfRegisteredMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r1, r1, #0x18
	mov	r2, #0x0
	mov	r8, r2
	cmp	r1, #0
	bne	.L1944	@cond_branch
	ldrh	r7, [r0, #0xa]
	ldr	r6, [r0, #0x4]
	b	.L1945
.L1953:
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	b	.L1947
.L1944:
	ldrh	r7, [r0, #0xe]
	ldr	r6, [r0, #0x14]
.L1945:
	mov	r5, #0x0
	b	.L1954
.L1949:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1955
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	cmp	r0, r6
	bne	.L1948	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r7
	beq	.L1953	@cond_branch
.L1948:
	add	r5, r5, #0x1
.L1954:
	ldr	r0, .L1955+0x4
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1949	@cond_branch
.L1947:
	mov	r0, r8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1956:
	.align	2, 0
.L1955:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.Lfe106:
	.size	 GetPartyPositionOfRegisteredMon,.Lfe106-GetPartyPositionOfRegisteredMon
	.align	2, 0
	.globl	sub_801818C
	.type	 sub_801818C,function
	.thumb_func
sub_801818C:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_80173B0
	bl	ScriptContext2_Disable
	bl	sub_8098524
	ldr	r1, .L1959
	mov	r0, #0x0
	strb	r0, [r1]
	cmp	r4, #0
	beq	.L1958	@cond_branch
	ldr	r2, .L1959+0x4
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	sub_8010FCC
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8011090
.L1958:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1960:
	.align	2, 0
.L1959:
	.word	gUnknown_02022C2C
	.word	sUnionRoomTrade
.Lfe107:
	.size	 sub_801818C,.Lfe107-sub_801818C
	.align	2, 0
	.globl	sub_80181CC
	.type	 sub_80181CC,function
	.thumb_func
sub_80181CC:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	ScriptFreezeObjectEvents
	pop	{r0}
	bx	r0
.Lfe108:
	.size	 sub_80181CC,.Lfe108-sub_80181CC
	.align	2, 0
	.globl	sub_80181DC
	.type	 sub_80181DC,function
	.thumb_func
sub_80181DC:
	push	{r4, lr}
	mov	r3, #0x80
	mov	r2, #0x0
	ldr	r4, [r0, #0xc]
.L1966:
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldrb	r0, [r1, #0x18]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L1965	@cond_branch
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	lsl	r0, r0, #0x3
	orr	r3, r3, r0
	ldrb	r1, [r1, #0x2]
	mov	r0, #0x7
	and	r0, r0, r1
	orr	r3, r3, r0
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	b	.L1964
.L1965:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L1966	@cond_branch
.L1964:
	add	r0, r3, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe109:
	.size	 sub_80181DC,.Lfe109-sub_80181DC
	.align	2, 0
	.globl	sub_8018220
	.type	 sub_8018220,function
	.thumb_func
sub_8018220:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L1980
	add	r1, r1, r0
	mov	r8, r1
	bl	DynamicPlaceholderTextUtil_Reset
	mov	r6, r9
	add	r6, r6, #0xc0
	bl	sub_8068BB0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L1980+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r1, r8
	add	r1, r1, #0x30
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xba
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1980+0x8
	mov	r2, r8
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r5, r9
	add	r5, r5, #0xde
	mov	r0, r8
	ldrh	r1, [r0, #0xc]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0xed
	add	r2, r2, r9
	mov	sl, r2
	mov	r0, r8
	ldrh	r1, [r0, #0x10]
	mov	r0, sl
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r4, r9
	add	r4, r4, #0xfc
	mov	r2, r8
	ldrh	r1, [r2, #0x12]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	mov	r1, sl
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x5
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1980+0xc
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r0, .L1980+0x10
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, r8
	ldrh	r1, [r0, #0x14]
	ldr	r4, .L1980+0x14
	cmp	r1, r4
	ble	.L1970	@cond_branch
	add	r1, r4, #0
.L1970:
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, r8
	ldrh	r1, [r2, #0x16]
	cmp	r1, r4
	ble	.L1971	@cond_branch
	add	r1, r4, #0
.L1971:
	mov	r4, r9
	add	r4, r4, #0xcf
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, r8
	ldrh	r1, [r0, #0x20]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r7, #0x0
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r5, r8
	add	r5, r5, #0x28
	mov	r4, sl
.L1975:
	ldrh	r1, [r5]
	add	r0, r4, #0
	bl	CopyEasyChatWord
	lsr	r0, r6, #0x18
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r6, r6, r2
	add	r5, r5, #0x2
	add	r4, r4, #0xf
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L1975	@cond_branch
	mov	r4, #0xd2
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1980+0x18
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r5, .L1980+0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	ldr	r0, [sp]
	cmp	r0, #0x1
	bne	.L1977	@cond_branch
	ldr	r1, .L1980+0x1c
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	b	.L1978
.L1981:
	.align	2, 0
.L1980:
	.word	gTrainerCards
	.word	gTrainerClassNames
	.word	sCardColorTexts
	.word	sText_TrainerCardInfoPage1
	.word	gStringVar4
	.word	0x270f
	.word	sText_TrainerCardInfoPage2
	.word	sText_FinishedCheckingPlayersTrainerCard
.L1977:
	ldr	r2, [sp]
	cmp	r2, #0
	bne	.L1978	@cond_branch
	ldr	r0, .L1982
	mov	r2, r8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
.L1978:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1983:
	.align	2, 0
.L1982:
	.word	sGladToMeetYouTexts
.Lfe110:
	.size	 sub_8018220,.Lfe110-sub_8018220
	.align	2, 0
	.globl	sub_8018404
	.type	 sub_8018404,function
	.thumb_func
sub_8018404:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r1, r1, #0x10
	bl	StringCopy7
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r5, #0
	bl	ConvertInternationalString
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe111:
	.size	 sub_8018404,.Lfe111-sub_8018404

	.lcomm	gUnknown_03000DA0,4

	.lcomm	gUnknown_03000DA4,4

	.lcomm	gUnknown_03000DA8,4
.text
	.align	2, 0

