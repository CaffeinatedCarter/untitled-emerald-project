@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gPyramidBagResources
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gPyramidBagResources,object
	.size	 gPyramidBagResources,4
gPyramidBagResources:
	.word	0x0
	.globl	gPyramidBagCursorData
	.align	2, 0
	.type	 gPyramidBagCursorData,object
	.size	 gPyramidBagCursorData,12
gPyramidBagCursorData:
	.word	0x0
	.space	8
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0861F2B4,object
	.size	 gUnknown_0861F2B4,12
gUnknown_0861F2B4:
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xde
	.byte	0x21
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 gUnknown_0861F2C0,object
	.size	 gUnknown_0861F2C0,24
gUnknown_0861F2C0:
	.word	0x0
	.word	PyramidBagMoveCursorFunc
	.word	PrintItemQuantity
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x21
	.byte	0x30
	.byte	0x0
	.byte	0x7
	.align	2, 0
	.type	 sMenuActions,object
sMenuActions:
	.word	gMenuText_Use
	.word	BagAction_UseOnField
	.word	gMenuText_Toss
	.word	BagAction_Toss
	.word	gMenuText_Give
	.word	BagAction_Give
	.word	gText_Cancel2
	.word	BagAction_Cancel
	.word	gMenuText_Use
	.word	BagAction_UseInBattle
	.word	gText_EmptyString2
	.word	0x0
	.size	 sMenuActions,48
	.type	 sFieldMenuActionIds,object
sFieldMenuActionIds:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.size	 sFieldMenuActionIds,4
	.type	 gUnknown_0861F30C,object
gUnknown_0861F30C:
	.byte	0x1
	.byte	0x3
	.size	 gUnknown_0861F30C,2
	.type	 sBattleMenuActionIds,object
sBattleMenuActionIds:
	.byte	0x4
	.byte	0x3
	.size	 sBattleMenuActionIds,2
	.type	 gUnknown_0861F310,object
gUnknown_0861F310:
	.byte	0x3
	.size	 gUnknown_0861F310,1
	.align	2, 0
	.type	 sYesNoTossFuncions,object
	.size	 sYesNoTossFuncions,8
sYesNoTossFuncions:
	.word	TossItem
	.word	DontTossItem
	.type	 sColorTable,object
sColorTable:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sColorTable,9
	.align	2, 0
	.type	 gUnknown_0861F328,object
gUnknown_0861F328:
	.byte	0x0
	.byte	0xe
	.byte	0x2
	.byte	0xf
	.byte	0x10
	.byte	0xf
	.short	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0xe
	.byte	0x6
	.byte	0xf
	.short	0x10e
	.byte	0x1
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xf
	.short	0x162
	.byte	0x1
	.byte	0x18
	.byte	0x11
	.byte	0x5
	.byte	0x2
	.byte	0xf
	.short	0x1ce
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_0861F328,40
	.align	2, 0
	.type	 gUnknown_0861F350,object
gUnknown_0861F350:
	.byte	0x1
	.byte	0x16
	.byte	0x11
	.byte	0x7
	.byte	0x2
	.byte	0xf
	.short	0x1d8
	.byte	0x1
	.byte	0x16
	.byte	0xf
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0x1d8
	.byte	0x1
	.byte	0xf
	.byte	0xf
	.byte	0xe
	.byte	0x4
	.byte	0xf
	.short	0x1d8
	.byte	0x1
	.byte	0xf
	.byte	0xd
	.byte	0xe
	.byte	0x6
	.byte	0xf
	.short	0x1d8
	.byte	0x1
	.byte	0x18
	.byte	0xf
	.byte	0x5
	.byte	0x4
	.byte	0xf
	.short	0x1d8
	.size	 gUnknown_0861F350,40
	.align	2, 0
	.type	 gOamData_861F378,object
	.size	 gOamData_861F378,8
gOamData_861F378:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 gSpriteAnim_861F380,object
gSpriteAnim_861F380:
	.short	0x0
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_861F380,8
	.align	2, 0
	.type	 gSpriteAnimTable_861F388,object
gSpriteAnimTable_861F388:
	.word	gSpriteAnim_861F380
	.size	 gSpriteAnimTable_861F388,4
	.align	2, 0
	.type	 gSpriteAffineAnim_861F38C,object
gSpriteAffineAnim_861F38C:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_861F38C,16
	.align	2, 0
	.type	 gSpriteAffineAnim_861F39C,object
gSpriteAffineAnim_861F39C:
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x2
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_861F39C,40
	.align	2, 0
	.type	 gSpriteAffineAnimTable_861F3C4,object
gSpriteAffineAnimTable_861F3C4:
	.word	gSpriteAffineAnim_861F38C
	.word	gSpriteAffineAnim_861F39C
	.size	 gSpriteAffineAnimTable_861F3C4,8
	.align	2, 0
	.type	 gPyramidBagSpriteSheet,object
	.size	 gPyramidBagSpriteSheet,8
gPyramidBagSpriteSheet:
	.word	gBattleFrontierGfx_PyramidBag
	.short	0x800
	.short	0x1024
	.align	2, 0
	.type	 gUnknown_0861F3D4,object
	.size	 gUnknown_0861F3D4,24
gUnknown_0861F3D4:
	.short	0x1024
	.short	0x1024
	.word	gOamData_861F378
	.word	gSpriteAnimTable_861F388
	.word	0x0
	.word	gSpriteAffineAnimTable_861F3C4
	.word	SpriteCallbackDummy
.text
	.align	2, 0
	.globl	InitBattlePyramidBagCursorPosition
	.type	 InitBattlePyramidBagCursorPosition,function
	.thumb_func
InitBattlePyramidBagCursorPosition:
	ldr	r1, .L3
	mov	r0, #0x0
	strh	r0, [r1, #0x6]
	strh	r0, [r1, #0x8]
	bx	lr
.L4:
	.align	2, 0
.L3:
	.word	gPyramidBagCursorData
.Lfe1:
	.size	 InitBattlePyramidBagCursorPosition,.Lfe1-InitBattlePyramidBagCursorPosition
	.align	2, 0
	.globl	CB2_PyramidBagMenuFromStartMenu
	.type	 CB2_PyramidBagMenuFromStartMenu,function
	.thumb_func
CB2_PyramidBagMenuFromStartMenu:
	push	{lr}
	ldr	r1, .L6
	mov	r0, #0x0
	bl	GoToBattlePyramidBagMenu
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe2:
	.size	 CB2_PyramidBagMenuFromStartMenu,.Lfe2-CB2_PyramidBagMenuFromStartMenu
	.align	2, 0
	.type	 sub_81C4F10,function
	.thumb_func
sub_81C4F10:
	push	{lr}
	ldr	r1, .L9
	mov	r0, #0x1
	bl	GoToBattlePyramidBagMenu
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	CB2_SetUpReshowBattleScreenAfterMenu2
.Lfe3:
	.size	 sub_81C4F10,.Lfe3-sub_81C4F10
	.align	2, 0
	.globl	ChooseItemsToTossFromPyramidBag
	.type	 ChooseItemsToTossFromPyramidBag,function
	.thumb_func
ChooseItemsToTossFromPyramidBag:
	push	{lr}
	bl	ScriptContext2_Enable
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L12
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	Task_ChooseItemsToTossFromPyramidBag
.Lfe4:
	.size	 ChooseItemsToTossFromPyramidBag,.Lfe4-ChooseItemsToTossFromPyramidBag
	.align	2, 0
	.type	 Task_ChooseItemsToTossFromPyramidBag,function
	.thumb_func
Task_ChooseItemsToTossFromPyramidBag:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L16
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L15	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L16+0x4
	ldr	r1, .L16+0x8
	str	r1, [r0]
	ldr	r1, .L16+0xc
	mov	r0, #0x3
	bl	GoToBattlePyramidBagMenu
	add	r0, r4, #0
	bl	DestroyTask
.L15:
	pop	{r4}
	pop	{r0}
	bx	r0
.L17:
	.align	2, 0
.L16:
	.word	gPaletteFade
	.word	gFieldCallback2
	.word	CB2_FadeFromPartyMenu
	.word	CB2_ReturnToField
.Lfe5:
	.size	 Task_ChooseItemsToTossFromPyramidBag,.Lfe5-Task_ChooseItemsToTossFromPyramidBag
	.align	2, 0
	.globl	CB2_ReturnToPyramidBagMenu
	.type	 CB2_ReturnToPyramidBagMenu,function
	.thumb_func
CB2_ReturnToPyramidBagMenu:
	push	{lr}
	ldr	r0, .L19
	ldr	r1, [r0]
	mov	r0, #0x4
	bl	GoToBattlePyramidBagMenu
	pop	{r0}
	bx	r0
.L20:
	.align	2, 0
.L19:
	.word	gPyramidBagCursorData
.Lfe6:
	.size	 CB2_ReturnToPyramidBagMenu,.Lfe6-CB2_ReturnToPyramidBagMenu
	.align	2, 0
	.globl	GoToBattlePyramidBagMenu
	.type	 GoToBattlePyramidBagMenu,function
	.thumb_func
GoToBattlePyramidBagMenu:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L24
	ldr	r0, .L24+0x4
	bl	AllocZeroed
	str	r0, [r6]
	cmp	r4, #0x4
	beq	.L22	@cond_branch
	ldr	r0, .L24+0x8
	strb	r4, [r0, #0x4]
.L22:
	cmp	r5, #0
	beq	.L23	@cond_branch
	ldr	r0, .L24+0x8
	str	r5, [r0]
.L23:
	ldr	r0, [r6]
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r1, .L24+0xc
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r6]
	ldr	r1, .L24+0x10
	add	r0, r0, r1
	mov	r1, #0x1
	neg	r1, r1
	strb	r1, [r0]
	ldr	r0, [r6]
	ldr	r1, .L24+0x14
	add	r0, r0, r1
	mov	r1, #0xff
	mov	r2, #0xb
	bl	memset
	ldr	r0, [r6]
	ldr	r1, .L24+0x18
	add	r0, r0, r1
	mov	r1, #0xff
	mov	r2, #0x5
	bl	memset
	ldr	r0, .L24+0x1c
	bl	SetMainCallback2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	gPyramidBagResources
	.word	0x98c
	.word	gPyramidBagCursorData
	.word	0x814
	.word	0x816
	.word	0x804
	.word	0x80f
	.word	sub_81C504C
.Lfe7:
	.size	 GoToBattlePyramidBagMenu,.Lfe7-GoToBattlePyramidBagMenu
	.align	2, 0
	.type	 sub_81C501C,function
	.thumb_func
sub_81C501C:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	do_scheduled_bg_tilemap_copies_to_vram
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 sub_81C501C,.Lfe8-sub_81C501C
	.align	2, 0
	.type	 sub_81C5038,function
	.thumb_func
sub_81C5038:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 sub_81C5038,.Lfe9-sub_81C5038
	.align	2, 0
	.type	 sub_81C504C,function
	.thumb_func
sub_81C504C:
	push	{lr}
.L29:
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L30	@cond_branch
	bl	sub_81C5078
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L30	@cond_branch
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L29	@cond_branch
.L30:
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 sub_81C504C,.Lfe10-sub_81C504C
	.align	2, 0
	.type	 sub_81C5078,function
	.thumb_func
sub_81C5078:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L60
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x10
	bls	.LCB294
	b	.L55	@long jump
.LCB294:
	lsl	r0, r0, #0x2
	ldr	r1, .L60+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L61:
	.align	2, 0
.L60:
	.word	gMain
	.word	.L56
	.align	2, 0
	.align	2, 0
.L56:
	.word	.L36
	.word	.L37
	.word	.L38
	.word	.L39
	.word	.L40
	.word	.L41
	.word	.L43
	.word	.L44
	.word	.L46
	.word	.L47
	.word	.L48
	.word	.L49
	.word	.L50
	.word	.L51
	.word	.L52
	.word	.L53
	.word	.L54
.L36:
	bl	SetVBlankHBlankCallbacksToNull
	bl	clear_scheduled_bg_copies_to_vram
	b	.L58
.L37:
	bl	ScanlineEffect_Stop
	b	.L58
.L38:
	bl	FreeAllSpritePalettes
	b	.L58
.L39:
	bl	ResetPaletteFade
	ldr	r2, .L62
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	b	.L59
.L63:
	.align	2, 0
.L62:
	.word	gPaletteFade
.L40:
	bl	ResetSpriteData
	b	.L58
.L41:
	bl	MenuHelpers_LinkSomething
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L58	@cond_branch
	bl	ResetTasks
	b	.L58
.L43:
	bl	sub_81C51DC
	ldr	r0, .L64
	ldr	r0, [r0]
	ldr	r1, .L64+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	b	.L58
.L65:
	.align	2, 0
.L64:
	.word	gPyramidBagResources
	.word	0x984
.L44:
	bl	sub_81C5238
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L35	@cond_branch
	b	.L58
.L46:
	bl	sub_81C6BD8
	b	.L58
.L47:
	bl	sub_81C5924
	bl	sub_81C59BC
	bl	sub_81C5A20
	b	.L58
.L48:
	bl	SetBagItemsListTemplate
	b	.L58
.L49:
	bl	sub_81C56F8
	b	.L58
.L50:
	bl	sub_81C6EF4
	b	.L58
.L51:
	bl	AddScrollArrow
	b	.L58
.L52:
	bl	sub_81C700C
	b	.L58
.L53:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L58
.L54:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L66
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
.L59:
	strb	r0, [r2, #0x8]
.L58:
	ldr	r1, .L66+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L35
.L67:
	.align	2, 0
.L66:
	.word	gPaletteFade
	.word	gMain
.L55:
	ldr	r0, .L68
	bl	SetVBlankCallback
	ldr	r0, .L68+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L57
.L69:
	.align	2, 0
.L68:
	.word	sub_81C5038
	.word	sub_81C501C
.L35:
	mov	r0, #0x0
.L57:
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 sub_81C5078,.Lfe11-sub_81C5078
	.align	2, 0
	.type	 sub_81C51DC,function
	.thumb_func
sub_81C51DC:
	push	{lr}
	bl	ResetVramOamAndBgCntRegs
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L71
	mov	r0, #0x0
	mov	r2, #0x3
	bl	InitBgsFromTemplates
	ldr	r0, .L71+0x4
	ldr	r1, [r0]
	add	r1, r1, #0x4
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	bl	ResetAllBgsCoordinates
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	gUnknown_0861F2B4
	.word	gPyramidBagResources
.Lfe12:
	.size	 sub_81C51DC,.Lfe12-sub_81C51DC
	.align	2, 0
	.type	 sub_81C5238,function
	.thumb_func
sub_81C5238:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L86
	ldr	r0, [r4]
	ldr	r1, .L86+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x4
	bhi	.L81	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L86+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L87:
	.align	2, 0
.L86:
	.word	gPyramidBagResources
	.word	0x984
	.word	.L82
	.align	2, 0
	.align	2, 0
.L82:
	.word	.L75
	.word	.L76
	.word	.L78
	.word	.L79
	.word	.L80
.L75:
	bl	ResetTempTileDataBuffers
	ldr	r1, .L88
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L84
.L89:
	.align	2, 0
.L88:
	.word	gBagScreen_Gfx
.L76:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L74	@cond_branch
	ldr	r0, .L90
	ldr	r4, .L90+0x4
	ldr	r1, [r4]
	add	r1, r1, #0x4
	bl	LZDecompressWram
	ldr	r1, [r4]
	b	.L85
.L91:
	.align	2, 0
.L90:
	.word	gBattleFrontierGfx_PyramidBagTileMap
	.word	gPyramidBagResources
.L78:
	ldr	r0, .L92
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	b	.L84
.L93:
	.align	2, 0
.L92:
	.word	gUnknown_08D9AF44
.L79:
	ldr	r0, .L94
	bl	LoadCompressedSpriteSheet
	b	.L84
.L95:
	.align	2, 0
.L94:
	.word	gPyramidBagSpriteSheet
.L80:
	bl	sub_81C6E98
.L84:
	ldr	r0, .L96
	ldr	r1, [r0]
.L85:
	ldr	r0, .L96+0x4
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L74
.L97:
	.align	2, 0
.L96:
	.word	gPyramidBagResources
	.word	0x984
.L81:
	bl	LoadListMenuArrowsGfx
	ldr	r0, [r4]
	ldr	r1, .L98
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L83
.L99:
	.align	2, 0
.L98:
	.word	0x984
.L74:
	mov	r0, #0x0
.L83:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 sub_81C5238,.Lfe13-sub_81C5238
	.align	2, 0
	.type	 SetBagItemsListTemplate,function
	.thumb_func
SetBagItemsListTemplate:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L106
	ldr	r2, [r0]
	ldr	r1, .L106+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r3, .L106+0x8
	add	r0, r0, r3
	add	r7, r2, r0
	mov	r6, #0x0
	ldr	r1, .L106+0xc
	ldr	r0, [r1]
	ldr	r4, .L106+0x10
	add	r0, r0, r4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r6, r0
	bge	.L102	@cond_branch
	add	r5, r1, #0
.L104:
	lsl	r1, r6, #0x1
	add	r4, r1, r6
	lsl	r4, r4, #0x3
	ldr	r0, .L106+0x14
	add	r4, r4, r0
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r1, r7
	ldrh	r1, [r1]
	bl	PyramidBag_CopyItemName
	ldr	r1, [r5]
	lsl	r2, r6, #0x3
	ldr	r3, .L106+0x18
	add	r0, r1, r3
	add	r0, r0, r2
	add	r4, r1, r4
	str	r4, [r0]
	ldr	r4, .L106+0x1c
	add	r0, r1, r4
	add	r0, r0, r2
	str	r6, [r0]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L106+0x10
	add	r1, r1, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r6, r0
	blt	.L104	@cond_branch
.L102:
	ldr	r5, .L106+0xc
	lsl	r4, r6, #0x1
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	ldr	r1, .L106+0x14
	add	r4, r4, r1
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L106+0x20
	bl	StringCopy
	ldr	r1, [r5]
	lsl	r2, r6, #0x3
	ldr	r3, .L106+0x18
	add	r0, r1, r3
	add	r0, r0, r2
	add	r4, r1, r4
	str	r4, [r0]
	ldr	r4, .L106+0x1c
	add	r1, r1, r4
	add	r1, r1, r2
	mov	r0, #0x2
	neg	r0, r0
	str	r0, [r1]
	ldr	r2, .L106+0x24
	add	r1, r2, #0
	ldr	r0, .L106+0x28
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldr	r1, [r5]
	ldr	r6, .L106+0x10
	add	r0, r1, r6
	ldrb	r0, [r0]
	strh	r0, [r2, #0xc]
	add	r3, r1, r3
	str	r3, [r2]
	ldr	r7, .L106+0x2c
	add	r1, r1, r7
	ldrb	r0, [r1]
	strh	r0, [r2, #0xe]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	gPyramidBagResources
	.word	0x821
	.word	0x87c
	.word	0x824
	.word	0x828
	.word	gText_CloseBag
	.word	gMultiuseListMenuTemplate
	.word	gUnknown_0861F2C0
	.word	0x822
.Lfe14:
	.size	 SetBagItemsListTemplate,.Lfe14-SetBagItemsListTemplate
	.align	2, 0
	.type	 PyramidBag_CopyItemName,function
	.thumb_func
PyramidBag_CopyItemName:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	add	r0, r4, #0
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bne	.L109	@cond_branch
	ldr	r0, .L111
	add	r1, r4, #0
	sub	r1, r1, #0x84
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L111+0x4
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r1, .L111+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	b	.L110
.L112:
	.align	2, 0
.L111:
	.word	gStringVar1
	.word	gStringVar2
	.word	gText_NumberVar1Clear7Var2
.L109:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CopyItemName
.L110:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 PyramidBag_CopyItemName,.Lfe15-PyramidBag_CopyItemName
	.align	2, 0
	.type	 PyramidBagMoveCursorFunc,function
	.thumb_func
PyramidBagMoveCursorFunc:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L114	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	sub_81C6F20
.L114:
	ldr	r5, .L118
	ldr	r1, [r5]
	ldr	r2, .L118+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L115	@cond_branch
	add	r2, r2, #0x1
	add	r0, r1, r2
	ldrb	r1, [r0]
	mov	r0, #0x1
	eor	r0, r0, r1
	bl	sub_81C6FF8
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L116	@cond_branch
	ldr	r0, .L118+0x8
	ldr	r2, [r0]
	lsl	r3, r4, #0x1
	ldr	r1, .L118+0xc
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r3, r0
	ldr	r0, .L118+0x10
	add	r2, r2, r0
	add	r2, r2, r3
	ldrh	r0, [r2]
	ldr	r1, [r5]
	ldr	r2, .L118+0x14
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	ShowItemImage
	b	.L117
.L119:
	.align	2, 0
.L118:
	.word	gPyramidBagResources
	.word	0x814
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0x815
.L116:
	ldr	r0, .L120
	ldr	r1, [r5]
	ldr	r2, .L120+0x4
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	ShowItemImage
.L117:
	ldr	r0, .L120+0x8
	ldr	r1, [r0]
	ldr	r0, .L120+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x1
	eor	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0
	bl	PrintItemDescription
.L115:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	0xffff
	.word	0x815
	.word	gPyramidBagResources
.Lfe16:
	.size	 PyramidBagMoveCursorFunc,.Lfe16-PyramidBagMoveCursorFunc
	.align	2, 0
	.type	 PrintItemQuantity,function
	.thumb_func
PrintItemQuantity:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L122	@cond_branch
	ldr	r0, .L127
	ldr	r0, [r0]
	ldr	r1, .L127+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r1, #0xff
	beq	.L124	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L125	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	sub_81C5AB8
	b	.L124
.L128:
	.align	2, 0
.L127:
	.word	gPyramidBagResources
	.word	0x814
.L125:
	add	r0, r5, #0
	mov	r1, #0xff
	bl	sub_81C5AB8
.L124:
	ldr	r0, .L129
	ldr	r1, .L129+0x4
	ldr	r3, [r1]
	ldr	r2, .L129+0x8
	add	r1, r3, r2
	ldrb	r2, [r1]
	lsl	r2, r2, #0x1e
	lsr	r2, r2, #0x1e
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r4, r1
	ldr	r2, .L129+0xc
	add	r3, r3, r2
	add	r3, r3, r1
	ldrb	r1, [r3]
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L129+0x10
	ldr	r1, .L129+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x7
	add	r1, r4, #0
	mov	r2, #0x77
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r0, #0xff
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r0, r6, #0
	add	r1, r4, #0
	add	r3, r5, #0
	bl	PrintOnWindow_Font7
.L122:
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L130:
	.align	2, 0
.L129:
	.word	gStringVar1
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe54
	.word	gStringVar4
	.word	gText_xVar1
.Lfe17:
	.size	 PrintItemQuantity,.Lfe17-PrintItemQuantity
	.align	2, 0
	.type	 PrintItemDescription,function
	.thumb_func
PrintItemDescription:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r3, r0, #0
	mov	r0, #0x2
	neg	r0, r0
	cmp	r3, r0
	beq	.L132	@cond_branch
	ldr	r0, .L134
	ldr	r2, [r0]
	lsl	r3, r3, #0x1
	ldr	r1, .L134+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r3, r0
	ldr	r0, .L134+0x8
	add	r2, r2, r0
	add	r2, r2, r3
	ldrh	r0, [r2]
	bl	ItemId_GetDescription
	add	r4, r0, #0
	b	.L133
.L135:
	.align	2, 0
.L134:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
.L132:
	ldr	r0, .L136
	ldr	r2, .L136+0x4
	ldr	r1, .L136+0x8
	ldrb	r1, [r1, #0x4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L136+0xc
	ldr	r1, .L136+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
.L133:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r4, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gStringVar1
	.word	gReturnToXStringsTable2
	.word	gPyramidBagCursorData
	.word	gStringVar4
	.word	gText_ReturnToVar1
.Lfe18:
	.size	 PrintItemDescription,.Lfe18-PrintItemDescription
	.align	2, 0
	.type	 AddScrollArrow,function
	.thumb_func
AddScrollArrow:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L140
	ldr	r1, [r4]
	ldr	r2, .L140+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L139	@cond_branch
	add	r2, r2, #0xb
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r2, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	sub	r0, r0, r1
	str	r0, [sp]
	ldr	r0, .L140+0x8
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	ldr	r0, .L140+0xc
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xac
	mov	r2, #0xc
	mov	r3, #0x94
	bl	AddScrollIndicatorArrowPairParameterized
	ldr	r1, [r4]
	ldr	r2, .L140+0x4
	add	r1, r1, r2
	strb	r0, [r1]
.L139:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	gPyramidBagResources
	.word	0x816
	.word	0xb5e
	.word	gPyramidBagCursorData+0x8
.Lfe19:
	.size	 AddScrollArrow,.Lfe19-AddScrollArrow
	.align	2, 0
	.type	 RemoveScrollArrow,function
	.thumb_func
RemoveScrollArrow:
	push	{r4, lr}
	ldr	r4, .L144
	ldr	r0, [r4]
	ldr	r2, .L144+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L143	@cond_branch
	bl	RemoveScrollIndicatorArrowPair
	ldr	r0, [r4]
	ldr	r1, .L144+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
.L143:
	pop	{r4}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gPyramidBagResources
	.word	0x816
.Lfe20:
	.size	 RemoveScrollArrow,.Lfe20-RemoveScrollArrow
	.align	2, 0
	.type	 sub_81C56F8,function
	.thumb_func
sub_81C56F8:
	push	{r4, lr}
	ldr	r0, .L147
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L147+0x4
	add	r4, r4, r0
	ldr	r0, .L147+0x8
	ldr	r2, .L147+0xc
	ldrh	r1, [r2, #0x8]
	ldrh	r2, [r2, #0x6]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	Task_HandlePyramidBagInput
	.word	gTasks+0x8
	.word	gMultiuseListMenuTemplate
	.word	gPyramidBagCursorData
.Lfe21:
	.size	 sub_81C56F8,.Lfe21-sub_81C56F8
	.align	2, 0
	.type	 SwapItems,function
	.thumb_func
SwapItems:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L150
	ldr	r6, [r2]
	ldr	r3, .L150+0x4
	add	r2, r6, r3
	ldrb	r3, [r2]
	lsl	r3, r3, #0x1e
	lsr	r2, r3, #0x1e
	lsl	r4, r2, #0x2
	add	r4, r4, r2
	lsl	r4, r4, #0x2
	ldr	r2, .L150+0x8
	add	r4, r4, r2
	add	r4, r6, r4
	lsr	r3, r3, #0x1e
	lsl	r2, r3, #0x2
	add	r2, r2, r3
	lsl	r2, r2, #0x1
	ldr	r3, .L150+0xc
	add	r2, r2, r3
	add	r6, r6, r2
	lsl	r5, r0, #0x1
	add	r5, r5, r4
	ldrh	r2, [r5]
	mov	r8, r2
	lsl	r2, r1, #0x1
	add	r2, r2, r4
	ldrh	r3, [r2]
	strh	r3, [r5]
	mov	r3, r8
	strh	r3, [r2]
	add	r0, r6, r0
	ldrb	r2, [r0]
	add	r6, r6, r1
	ldrb	r1, [r6]
	strb	r1, [r0]
	strb	r2, [r6]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0xe54
.Lfe22:
	.size	 SwapItems,.Lfe22-SwapItems
	.align	2, 0
	.type	 MovePyramidBagItemSlotInList,function
	.thumb_func
MovePyramidBagItemSlotInList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r0, .L166
	ldr	r3, [r0]
	ldr	r1, .L166+0x4
	add	r0, r3, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r2, r1, #0x1e
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L166+0x8
	add	r0, r0, r2
	add	r6, r3, r0
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r1, .L166+0xc
	add	r0, r0, r1
	add	r3, r3, r0
	cmp	r4, r5
	beq	.L153	@cond_branch
	lsl	r0, r4, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	mov	ip, r0
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r8, r0
	cmp	r5, r4
	bls	.L154	@cond_branch
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r4, #0x10
	cmp	r4, r5
	bge	.L160	@cond_branch
.L158:
	asr	r2, r2, #0x10
	lsl	r0, r2, #0x1
	add	r0, r0, r6
	ldrh	r1, [r0, #0x2]
	strh	r1, [r0]
	add	r1, r3, r2
	ldrb	r0, [r1, #0x1]
	strb	r0, [r1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x10
	asr	r0, r2, #0x10
	cmp	r0, r5
	blt	.L158	@cond_branch
	b	.L160
.L167:
	.align	2, 0
.L166:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0xe54
.L154:
	lsl	r2, r7, #0x10
	cmp	r7, r5
	ble	.L160	@cond_branch
.L164:
	asr	r2, r2, #0x10
	lsl	r1, r2, #0x1
	add	r1, r1, r6
	sub	r0, r1, #0x2
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r3, r2
	sub	r0, r1, #0x1
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x10
	asr	r0, r2, #0x10
	cmp	r0, r5
	bgt	.L164	@cond_branch
.L160:
	lsl	r0, r5, #0x1
	add	r0, r0, r6
	mov	r2, ip
	strh	r2, [r0]
	add	r0, r3, r5
	mov	r1, r8
	strb	r1, [r0]
.L153:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 MovePyramidBagItemSlotInList,.Lfe23-MovePyramidBagItemSlotInList
	.align	2, 0
	.type	 CompactItems,function
	.thumb_func
CompactItems:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L188
	ldr	r3, [r0]
	ldr	r1, .L188+0x4
	add	r0, r3, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r2, r1, #0x1e
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L188+0x8
	add	r0, r0, r2
	add	r0, r0, r3
	mov	r9, r0
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r4, .L188+0xc
	add	r0, r0, r4
	add	r3, r3, r0
	mov	r8, r3
	mov	r5, #0x0
	mov	r3, #0x0
.L172:
	lsl	r0, r5, #0x1
	mov	r1, r9
	add	r2, r0, r1
	ldrh	r0, [r2]
	mov	r4, r8
	add	r1, r4, r5
	cmp	r0, #0
	beq	.L174	@cond_branch
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L171	@cond_branch
.L174:
	strh	r3, [r2]
	strb	r3, [r1]
.L171:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x9
	bls	.L172	@cond_branch
	mov	r5, #0x0
.L179:
	add	r1, r5, #0x1
	lsl	r0, r1, #0x18
	lsr	r4, r0, #0x18
	add	r7, r1, #0
	cmp	r4, #0x9
	bhi	.L178	@cond_branch
	lsl	r0, r5, #0x1
	mov	r1, r9
	add	r6, r0, r1
.L183:
	ldrh	r0, [r6]
	cmp	r0, #0
	beq	.L185	@cond_branch
	mov	r2, r8
	add	r0, r2, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L182	@cond_branch
.L185:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SwapItems
.L182:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x9
	bls	.L183	@cond_branch
.L178:
	lsl	r0, r7, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x8
	bls	.L179	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0xe54
.Lfe24:
	.size	 CompactItems,.Lfe24-CompactItems
	.align	2, 0
	.globl	sub_81C5924
	.type	 sub_81C5924,function
	.thumb_func
sub_81C5924:
	push	{r4, r5, r6, lr}
	ldr	r0, .L199
	ldr	r2, [r0]
	ldr	r1, .L199+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L199+0x8
	add	r0, r0, r1
	add	r5, r2, r0
	bl	CompactItems
	ldr	r3, .L199+0xc
	ldr	r0, [r3]
	ldr	r2, .L199+0x10
	add	r0, r0, r2
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r4, #0x0
	add	r6, r3, #0
.L194:
	lsl	r0, r4, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	ldr	r3, .L199+0xc
	cmp	r0, #0
	beq	.L193	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L193:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x9
	bls	.L194	@cond_branch
	ldr	r0, [r3]
	ldr	r2, .L199+0x10
	add	r0, r0, r2
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r3]
	add	r2, r0, r2
	ldrb	r2, [r2]
	cmp	r2, #0x8
	bls	.L197	@cond_branch
	ldr	r2, .L199+0x14
	add	r1, r0, r2
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L198
.L200:
	.align	2, 0
.L199:
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	gPyramidBagResources
	.word	0x821
	.word	0x822
.L197:
	ldr	r1, .L201
	add	r0, r0, r1
	strb	r2, [r0]
.L198:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L202:
	.align	2, 0
.L201:
	.word	0x822
.Lfe25:
	.size	 sub_81C5924,.Lfe25-sub_81C5924
	.align	2, 0
	.globl	sub_81C59BC
	.type	 sub_81C59BC,function
	.thumb_func
sub_81C59BC:
	push	{r4, r5, lr}
	ldr	r0, .L208
	ldrh	r1, [r0, #0x8]
	add	r3, r0, #0
	ldr	r4, .L208+0x4
	cmp	r1, #0
	beq	.L204	@cond_branch
	ldrh	r0, [r3, #0x8]
	ldr	r1, [r4]
	ldr	r5, .L208+0x8
	add	r2, r1, r5
	ldrb	r2, [r2]
	add	r0, r0, r2
	sub	r5, r5, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	cmp	r0, r1
	ble	.L204	@cond_branch
	sub	r0, r1, r2
	strh	r0, [r3, #0x8]
.L204:
	add	r2, r3, #0
	ldrh	r1, [r2, #0x8]
	ldrh	r0, [r2, #0x6]
	add	r1, r1, r0
	ldr	r0, [r4]
	ldr	r4, .L208+0xc
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r1, r0
	blt	.L205	@cond_branch
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L206	@cond_branch
	strh	r1, [r2, #0x6]
	b	.L205
.L209:
	.align	2, 0
.L208:
	.word	gPyramidBagCursorData
	.word	gPyramidBagResources
	.word	0x822
	.word	0x821
.L206:
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x6]
.L205:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 sub_81C59BC,.Lfe26-sub_81C59BC
	.align	2, 0
	.type	 sub_81C5A20,function
	.thumb_func
sub_81C5A20:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L218
	ldrh	r1, [r0, #0x6]
	add	r5, r0, #0
	cmp	r1, #0x4
	bls	.L211	@cond_branch
	mov	r4, #0x0
	ldrh	r0, [r5, #0x6]
	sub	r0, r0, #0x4
	cmp	r4, r0
	bgt	.L211	@cond_branch
	ldrh	r2, [r5, #0x8]
	ldr	r6, .L218+0x4
	ldr	r0, [r6]
	ldr	r3, .L218+0x8
	add	r1, r0, r3
	ldrb	r1, [r1]
	add	r2, r2, r1
	ldr	r7, .L218+0xc
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r2, r0
	beq	.L211	@cond_branch
	add	r3, r5, #0
.L216:
	ldrh	r0, [r3, #0x6]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x6]
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrh	r0, [r3, #0x6]
	sub	r0, r0, #0x4
	cmp	r4, r0
	bgt	.L211	@cond_branch
	ldrh	r2, [r5, #0x8]
	ldr	r1, [r6]
	ldr	r7, .L218+0x8
	add	r0, r1, r7
	ldrb	r0, [r0]
	add	r2, r2, r0
	ldr	r0, .L218+0xc
	add	r1, r1, r0
	ldrb	r1, [r1]
	cmp	r2, r1
	bne	.L216	@cond_branch
.L211:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gPyramidBagCursorData
	.word	gPyramidBagResources
	.word	0x822
	.word	0x821
.Lfe27:
	.size	 sub_81C5A20,.Lfe27-sub_81C5A20
	.align	2, 0
	.type	 sub_81C5A98,function
	.thumb_func
sub_81C5A98:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	sub_81C5AB8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 sub_81C5A98,.Lfe28-sub_81C5A98
	.align	2, 0
	.type	 sub_81C5AB8,function
	.thumb_func
sub_81C5AB8:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	cmp	r2, #0xff
	bne	.L222	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x1
	bl	GetMenuCursorDimensionByFont
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	add	r3, r5, #0
	bl	FillWindowPixelRect
	b	.L223
.L222:
	ldr	r1, .L224
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r2, [sp, #0xc]
	mov	r2, #0x0
	add	r3, r5, #0
	bl	PrintOnWindow_Font1
.L223:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	gText_SelectorArrow2
.Lfe29:
	.size	 sub_81C5AB8,.Lfe29-sub_81C5AB8
	.align	2, 0
	.globl	CloseBattlePyramidBagAndSetCallback
	.type	 CloseBattlePyramidBagAndSetCallback,function
	.thumb_func
CloseBattlePyramidBagAndSetCallback:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L227
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L227+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	gTasks
	.word	sub_81C5B4C
.Lfe30:
	.size	 CloseBattlePyramidBagAndSetCallback,.Lfe30-CloseBattlePyramidBagAndSetCallback
	.align	2, 0
	.type	 sub_81C5B4C,function
	.thumb_func
sub_81C5B4C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L233
	add	r2, r0, r1
	ldr	r0, .L233+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L230	@cond_branch
	ldrb	r0, [r2]
	ldr	r4, .L233+0x8
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	DestroyListMenuTask
	ldr	r0, .L233+0xc
	ldr	r0, [r0]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L231	@cond_branch
	bl	SetMainCallback2
	b	.L232
.L234:
	.align	2, 0
.L233:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gPyramidBagCursorData+0x8
	.word	gPyramidBagResources
.L231:
	add	r0, r4, #0
	sub	r0, r0, #0x8
	ldr	r0, [r0]
	bl	SetMainCallback2
.L232:
	bl	RemoveScrollArrow
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	FreeAllWindowBuffers
	ldr	r0, .L235
	ldr	r0, [r0]
	bl	Free
	add	r0, r5, #0
	bl	DestroyTask
.L230:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	gPyramidBagResources
.Lfe31:
	.size	 sub_81C5B4C,.Lfe31-sub_81C5B4C
	.align	2, 0
	.type	 Task_HandlePyramidBagInput,function
	.thumb_func
Task_HandlePyramidBagInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L250
	add	r7, r0, r1
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB2206
	b	.L238	@long jump
.LCB2206:
	ldr	r0, .L250+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2214
	b	.L238	@long jump
.LCB2214:
	ldr	r0, .L250+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	beq	.L239	@cond_branch
	ldr	r4, .L250+0xc
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x2
	bne	.LCB2230
	b	.L238	@long jump
.LCB2230:
	ldrb	r0, [r7]
	add	r1, r4, #0
	add	r1, r1, #0x8
	add	r2, r4, #0x6
	bl	ListMenuGetScrollAndRow
	ldrh	r1, [r4, #0x8]
	ldrh	r0, [r4, #0x6]
	add	r1, r1, r0
	ldr	r0, .L250+0x10
	ldr	r0, [r0]
	ldr	r2, .L250+0x14
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L238	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	Task_BeginItemSwap
	b	.L238
.L251:
	.align	2, 0
.L250:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gMain
	.word	gPyramidBagCursorData
	.word	gPyramidBagResources
	.word	0x821
.L239:
	ldrb	r0, [r7]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r7]
	ldr	r1, .L252
	mov	r8, r1
	mov	r2, r8
	sub	r2, r2, #0x2
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L245	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L246	@cond_branch
	b	.L238
.L253:
	.align	2, 0
.L252:
	.word	gPyramidBagCursorData+0x8
.L245:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L254
	strh	r4, [r0]
	add	r0, r5, #0
	bl	CloseBattlePyramidBagAndSetCallback
	b	.L238
.L255:
	.align	2, 0
.L254:
	.word	gSpecialVar_ItemId
.L246:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L256
	mov	ip, r2
	ldr	r0, .L256+0x4
	ldr	r2, [r0]
	lsl	r3, r6, #0x1
	ldr	r0, .L256+0x8
	add	r4, r2, r0
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r3, r3, r0
	ldr	r1, .L256+0xc
	add	r0, r2, r1
	add	r0, r0, r3
	ldrh	r0, [r0]
	mov	r1, ip
	strh	r0, [r1]
	strh	r6, [r7, #0x2]
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r6, r0
	ldr	r1, .L256+0x10
	add	r2, r2, r1
	add	r2, r2, r0
	ldrb	r0, [r2]
	strh	r0, [r7, #0x4]
	mov	r0, r8
	sub	r0, r0, #0x8
	ldrb	r0, [r0, #0x4]
	cmp	r0, #0x2
	bne	.L247	@cond_branch
	add	r0, r5, #0
	bl	sub_81C674C
	b	.L238
.L257:
	.align	2, 0
.L256:
	.word	gSpecialVar_ItemId
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0xe54
.L247:
	add	r0, r5, #0
	bl	sub_81C5D20
.L238:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 Task_HandlePyramidBagInput,.Lfe32-Task_HandlePyramidBagInput
	.align	2, 0
	.type	 sub_81C5D20,function
	.thumb_func
sub_81C5D20:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L276
	add	r4, r4, r0
	bl	RemoveScrollArrow
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	sub_81C5A98
	ldr	r0, .L276+0x4
	ldrb	r4, [r0, #0x4]
	cmp	r4, #0x1
	beq	.L261	@cond_branch
	cmp	r4, #0x3
	beq	.L264	@cond_branch
	ldr	r0, .L276+0x8
	ldr	r1, [r0]
	ldr	r0, .L276+0xc
	add	r2, r1, r0
	ldr	r0, .L276+0x10
	str	r0, [r2]
	mov	r0, #0x82
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x4
	b	.L272
.L277:
	.align	2, 0
.L276:
	.word	gTasks+0x8
	.word	gPyramidBagCursorData
	.word	gPyramidBagResources
	.word	0x818
	.word	sFieldMenuActionIds
.L261:
	ldr	r0, .L278
	ldrh	r0, [r0]
	bl	ItemId_GetBattleUsage
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L262	@cond_branch
	ldr	r0, .L278+0x4
	ldr	r1, [r0]
	ldr	r0, .L278+0x8
	add	r2, r1, r0
	ldr	r0, .L278+0xc
	b	.L273
.L279:
	.align	2, 0
.L278:
	.word	gSpecialVar_ItemId
	.word	gPyramidBagResources
	.word	0x818
	.word	sBattleMenuActionIds
.L262:
	ldr	r0, .L280
	ldr	r0, [r0]
	ldr	r1, .L280+0x4
	add	r2, r0, r1
	ldr	r1, .L280+0x8
	str	r1, [r2]
	mov	r1, #0x82
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	strb	r4, [r0]
	b	.L259
.L281:
	.align	2, 0
.L280:
	.word	gPyramidBagResources
	.word	0x818
	.word	gUnknown_0861F310
.L264:
	ldr	r0, .L282
	ldr	r1, [r0]
	ldr	r0, .L282+0x4
	add	r2, r1, r0
	ldr	r0, .L282+0x8
.L273:
	str	r0, [r2]
	mov	r0, #0x82
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x2
.L272:
	strb	r0, [r1]
.L259:
	ldr	r0, .L282+0xc
	ldrh	r0, [r0]
	ldr	r1, .L282+0x10
	bl	CopyItemName
	ldr	r4, .L282+0x14
	ldr	r1, .L282+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r4, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	ldr	r0, .L282
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L266	@cond_branch
	mov	r0, #0x0
	b	.L274
.L283:
	.align	2, 0
.L282:
	.word	gPyramidBagResources
	.word	0x818
	.word	gUnknown_0861F30C
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_Var1IsSelected
.L266:
	cmp	r0, #0x2
	bne	.L268	@cond_branch
	mov	r0, #0x1
.L274:
	bl	sub_81C6D24
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_81C5EAC
	b	.L267
.L268:
	mov	r0, #0x2
	bl	sub_81C6D24
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	mov	r2, #0x2
	bl	sub_81C5F08
.L267:
	ldr	r0, .L284
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L270	@cond_branch
	ldr	r0, .L284+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L284+0x8
	b	.L275
.L285:
	.align	2, 0
.L284:
	.word	gPyramidBagResources
	.word	gTasks
	.word	HandleMenuActionInput
.L270:
	ldr	r0, .L286
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L286+0x4
.L275:
	str	r0, [r1]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	gTasks
	.word	HandleFewMenuActionsInput
.Lfe33:
	.size	 sub_81C5D20,.Lfe33-sub_81C5D20
	.align	2, 0
	.type	 sub_81C5EAC,function
	.thumb_func
sub_81C5EAC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x10
	str	r0, [sp, #0x4]
	ldr	r6, .L289
	ldr	r1, [r6]
	mov	r5, #0x82
	lsl	r5, r5, #0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	str	r0, [sp, #0x8]
	ldr	r0, .L289+0x4
	str	r0, [sp, #0xc]
	ldr	r0, .L289+0x8
	add	r1, r1, r0
	ldr	r0, [r1]
	str	r0, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, #0x8
	mov	r3, #0x1
	bl	AddItemMenuActionTextPrinters
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	add	r0, r4, #0
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gPyramidBagResources
	.word	sMenuActions
	.word	0x818
.Lfe34:
	.size	 sub_81C5EAC,.Lfe34-sub_81C5EAC
	.align	2, 0
	.type	 sub_81C5F08,function
	.thumb_func
sub_81C5F08:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x38
	str	r0, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	ldr	r0, .L292
	str	r0, [sp, #0xc]
	ldr	r0, .L292+0x4
	ldr	r0, [r0]
	ldr	r1, .L292+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, #0x8
	mov	r3, #0x1
	bl	sub_8198DBC
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x38
	add	r2, r5, #0
	add	r3, r6, #0
	bl	sub_8199944
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L293:
	.align	2, 0
.L292:
	.word	sMenuActions
	.word	gPyramidBagResources
	.word	0x818
.Lfe35:
	.size	 sub_81C5F08,.Lfe35-sub_81C5F08
	.align	2, 0
	.type	 HandleFewMenuActionsInput,function
	.thumb_func
HandleFewMenuActionsInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L295	@cond_branch
	bl	Menu_ProcessInputNoWrap
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L295	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L299	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L302
	ldr	r1, [r0, #0x1c]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L295
.L303:
	.align	2, 0
.L302:
	.word	sMenuActions
.L299:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L304
	ldr	r0, .L304+0x4
	ldr	r0, [r0]
	ldr	r2, .L304+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L295	@cond_branch
	add	r0, r6, #0
	bl	_call_via_r1
.L295:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	sMenuActions
	.word	gPyramidBagResources
	.word	0x818
.Lfe36:
	.size	 HandleFewMenuActionsInput,.Lfe36-HandleFewMenuActionsInput
	.align	2, 0
	.type	 HandleMenuActionInput,function
	.thumb_func
HandleMenuActionInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB2855
	b	.L307	@long jump
.LCB2855:
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L327
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L308	@cond_branch
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0
	bgt	.LCB2873
	b	.L307	@long jump
.LCB2873:
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	IsValidMenuAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2883
	b	.L307	@long jump
.LCB2883:
	mov	r0, #0x5
	bl	PlaySE
	mov	r1, #0x1
	neg	r1, r1
	mov	r0, #0x0
	bl	sub_8199134
	b	.L307
.L328:
	.align	2, 0
.L327:
	.word	gMain
.L308:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L311	@cond_branch
	lsl	r0, r4, #0x18
	asr	r1, r0, #0x18
	ldr	r0, .L329
	ldr	r0, [r0]
	mov	r2, #0x82
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	cmp	r1, r0
	blt	.LCB2919
	b	.L307	@long jump
.LCB2919:
	add	r0, r1, #0x2
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	IsValidMenuAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L307	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_8199134
	b	.L307
.L330:
	.align	2, 0
.L329:
	.word	gPyramidBagResources
.L311:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L315	@cond_branch
	bl	GetLRKeysPressed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L314	@cond_branch
.L315:
	lsl	r0, r4, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L307	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	IsValidMenuAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L307	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L326
.L314:
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L319	@cond_branch
	bl	GetLRKeysPressed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L318	@cond_branch
.L319:
	lsl	r0, r4, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L307	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	IsValidMenuAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L307	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L326:
	mov	r1, #0x0
	bl	sub_8199134
	b	.L307
.L318:
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L322	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L331
	ldr	r0, .L331+0x4
	ldr	r0, [r0]
	lsl	r1, r4, #0x18
	asr	r1, r1, #0x18
	ldr	r3, .L331+0x8
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L307	@cond_branch
	add	r0, r6, #0
	bl	_call_via_r1
	b	.L307
.L332:
	.align	2, 0
.L331:
	.word	sMenuActions
	.word	gPyramidBagResources
	.word	0x818
.L322:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L307	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L333
	ldr	r1, [r0, #0x1c]
	add	r0, r6, #0
	bl	_call_via_r1
.L307:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	sMenuActions
.Lfe37:
	.size	 HandleMenuActionInput,.Lfe37-HandleMenuActionInput
	.align	2, 0
	.type	 IsValidMenuAction,function
	.thumb_func
IsValidMenuAction:
	push	{lr}
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	blt	.L340	@cond_branch
	ldr	r0, .L343
	ldr	r2, [r0]
	mov	r3, #0x82
	lsl	r3, r3, #0x4
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r1, r0
	bgt	.L340	@cond_branch
	ldr	r3, .L343+0x4
	add	r0, r2, r3
	ldr	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x5
	beq	.L340	@cond_branch
	mov	r0, #0x1
	b	.L342
.L344:
	.align	2, 0
.L343:
	.word	gPyramidBagResources
	.word	0x818
.L340:
	mov	r0, #0x0
.L342:
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 IsValidMenuAction,.Lfe38-IsValidMenuAction
	.align	2, 0
	.type	 sub_81C61A8,function
	.thumb_func
sub_81C61A8:
	push	{lr}
	ldr	r0, .L350
	ldr	r0, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L346	@cond_branch
	mov	r0, #0x0
	bl	sub_81C6D6C
	b	.L347
.L351:
	.align	2, 0
.L350:
	.word	gPyramidBagResources
.L346:
	cmp	r0, #0x2
	bne	.L348	@cond_branch
	mov	r0, #0x1
	bl	sub_81C6D6C
	b	.L347
.L348:
	mov	r0, #0x2
	bl	sub_81C6D6C
.L347:
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 sub_81C61A8,.Lfe39-sub_81C61A8
	.align	2, 0
	.type	 BagAction_UseOnField,function
	.thumb_func
BagAction_UseOnField:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L357
	ldrh	r0, [r4]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L354	@cond_branch
	cmp	r0, #0x2
	beq	.L354	@cond_branch
	cmp	r0, #0x3
	beq	.L354	@cond_branch
	ldrh	r0, [r4]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L353	@cond_branch
.L354:
	bl	sub_81C61A8
	ldr	r1, .L357+0x4
	ldr	r2, .L357+0x8
	add	r0, r5, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L355
.L358:
	.align	2, 0
.L357:
	.word	gSpecialVar_ItemId
	.word	gText_DadsAdvice
	.word	Task_CloseBattlePyramidBagMessage
.L353:
	ldrh	r0, [r4]
	bl	ItemId_GetFieldFunc
	cmp	r0, #0
	beq	.L355	@cond_branch
	bl	sub_81C61A8
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldrh	r0, [r4]
	bl	ItemId_GetFieldFunc
	add	r1, r0, #0
	add	r0, r5, #0
	bl	_call_via_r1
.L355:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 BagAction_UseOnField,.Lfe40-BagAction_UseOnField
	.align	2, 0
	.type	 BagAction_Cancel,function
	.thumb_func
BagAction_Cancel:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L360
	add	r4, r4, r0
	bl	sub_81C61A8
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	bl	PrintItemDescription
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	sub_81C5A98
	add	r0, r5, #0
	bl	SetTaskToMainPyramidBagInputHandler
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L361:
	.align	2, 0
.L360:
	.word	gTasks+0x8
.Lfe41:
	.size	 BagAction_Cancel,.Lfe41-BagAction_Cancel
	.align	2, 0
	.type	 SetTaskToMainPyramidBagInputHandler,function
	.thumb_func
SetTaskToMainPyramidBagInputHandler:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	AddScrollArrow
	ldr	r1, .L363
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L363+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L364:
	.align	2, 0
.L363:
	.word	gTasks
	.word	Task_HandlePyramidBagInput
.Lfe42:
	.size	 SetTaskToMainPyramidBagInputHandler,.Lfe42-SetTaskToMainPyramidBagInputHandler
	.align	2, 0
	.type	 BagAction_Toss,function
	.thumb_func
BagAction_Toss:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r6, r0, #0x3
	ldr	r7, .L368
	add	r4, r6, r7
	bl	sub_81C61A8
	mov	r0, #0x1
	strh	r0, [r4, #0x10]
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	bne	.L366	@cond_branch
	add	r0, r5, #0
	bl	sub_81C6350
	b	.L367
.L369:
	.align	2, 0
.L368:
	.word	gTasks+0x8
.L366:
	ldr	r0, .L370
	ldrh	r0, [r0]
	ldr	r1, .L370+0x4
	bl	CopyItemName
	ldr	r4, .L370+0x8
	ldr	r1, .L370+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r4, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	bl	sub_81C6404
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L370+0x10
	str	r1, [r0]
.L367:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TossHowManyVar1s
	.word	sub_81C64B4
.Lfe43:
	.size	 BagAction_Toss,.Lfe43-BagAction_Toss
	.align	2, 0
	.type	 sub_81C6350,function
	.thumb_func
sub_81C6350:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L373
	add	r4, r4, r0
	ldr	r0, .L373+0x4
	ldrh	r0, [r0]
	ldr	r1, .L373+0x8
	bl	CopyItemName
	ldr	r0, .L373+0xc
	mov	r2, #0x10
	ldrsh	r1, [r4, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L373+0x10
	ldr	r1, .L373+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r4, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	ldr	r1, .L373+0x18
	add	r0, r5, #0
	bl	sub_81C6DAC
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	gTasks+0x8
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_ConfirmTossItems
	.word	sYesNoTossFuncions
.Lfe44:
	.size	 sub_81C6350,.Lfe44-sub_81C6350
	.align	2, 0
	.type	 DontTossItem,function
	.thumb_func
DontTossItem:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L376
	add	r4, r4, r0
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	bl	PrintItemDescription
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	sub_81C5A98
	add	r0, r5, #0
	bl	SetTaskToMainPyramidBagInputHandler
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L377:
	.align	2, 0
.L376:
	.word	gTasks+0x8
.Lfe45:
	.size	 DontTossItem,.Lfe45-DontTossItem
	.align	2, 0
	.type	 sub_81C6404,function
	.thumb_func
sub_81C6404:
	push	{r4, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L379
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L379+0x4
	ldr	r1, .L379+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x3
	bl	sub_81C6CEC
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x28
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L380:
	.align	2, 0
.L379:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_xVar1
.Lfe46:
	.size	 sub_81C6404,.Lfe46-sub_81C6404
	.align	2, 0
	.type	 sub_81C645C,function
	.thumb_func
sub_81C645C:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r1, r0, #0
	ldr	r0, .L382
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L382+0x4
	ldr	r1, .L382+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x28
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_xVar1
.Lfe47:
	.size	 sub_81C645C,.Lfe47-sub_81C645C
	.align	2, 0
	.type	 sub_81C64B4,function
	.thumb_func
sub_81C64B4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L390
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldrh	r1, [r4, #0x4]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L385	@cond_branch
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	bl	sub_81C645C
	b	.L386
.L391:
	.align	2, 0
.L390:
	.word	gTasks+0x8
.L385:
	ldr	r0, .L392
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L387	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	r0, r5, #0
	bl	sub_81C6350
	b	.L386
.L393:
	.align	2, 0
.L392:
	.word	gMain
.L387:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L386	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	r0, r6, #0
	bl	DontTossItem
.L386:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 sub_81C64B4,.Lfe48-sub_81C64B4
	.align	2, 0
	.type	 TossItem,function
	.thumb_func
TossItem:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r5, .L395
	add	r6, r4, r5
	ldr	r0, .L395+0x4
	ldrh	r0, [r0]
	ldr	r1, .L395+0x8
	bl	CopyItemName
	ldr	r0, .L395+0xc
	mov	r2, #0x10
	ldrsh	r1, [r6, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L395+0x10
	ldr	r1, .L395+0x14
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r6, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	sub	r5, r5, #0x8
	add	r4, r4, r5
	ldr	r0, .L395+0x18
	str	r0, [r4]
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L396:
	.align	2, 0
.L395:
	.word	gTasks+0x8
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_ThrewAwayVar2Var1s
	.word	sub_81C65CC
.Lfe49:
	.size	 TossItem,.Lfe49-TossItem
	.align	2, 0
	.type	 sub_81C65CC,function
	.thumb_func
sub_81C65CC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L399
	add	r4, r0, r1
	ldr	r6, .L399+0x4
	sub	r7, r6, #0x2
	ldr	r0, .L399+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L398	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L399+0xc
	ldrh	r0, [r0]
	ldrh	r1, [r4, #0x10]
	bl	RemovePyramidBagItem
	ldrb	r0, [r4]
	add	r1, r6, #0
	add	r2, r7, #0
	bl	DestroyListMenuTask
	bl	sub_81C5924
	bl	sub_81C59BC
	bl	SetBagItemsListTemplate
	ldr	r0, .L399+0x10
	ldrh	r1, [r6]
	ldrh	r2, [r7]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	add	r0, r5, #0
	bl	SetTaskToMainPyramidBagInputHandler
.L398:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	gTasks+0x8
	.word	gPyramidBagCursorData+0x8
	.word	gMain
	.word	gSpecialVar_ItemId
	.word	gMultiuseListMenuTemplate
.Lfe50:
	.size	 sub_81C65CC,.Lfe50-sub_81C65CC
	.align	2, 0
	.type	 BagAction_Give,function
	.thumb_func
BagAction_Give:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	bl	sub_81C61A8
	ldr	r5, .L406
	ldrh	r0, [r5]
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L402	@cond_branch
	ldr	r1, .L406+0x4
	ldr	r2, .L406+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L403
.L407:
	.align	2, 0
.L406:
	.word	gSpecialVar_ItemId
	.word	gText_CantWriteMail
	.word	sub_81C66EC
.L402:
	ldrh	r0, [r5]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L404	@cond_branch
	ldr	r0, .L408
	ldr	r1, [r0]
	ldr	r0, .L408+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	CloseBattlePyramidBagAndSetCallback
	b	.L403
.L409:
	.align	2, 0
.L408:
	.word	gPyramidBagResources
	.word	CB2_ChooseMonToGiveItem
.L404:
	add	r0, r6, #0
	bl	sub_81C66AC
.L403:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 BagAction_Give,.Lfe51-BagAction_Give
	.align	2, 0
	.type	 sub_81C66AC,function
	.thumb_func
sub_81C66AC:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L411
	ldrh	r0, [r0]
	ldr	r1, .L411+0x4
	bl	CopyItemName
	ldr	r5, .L411+0x8
	ldr	r1, .L411+0xc
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L411+0x10
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DisplayItemMessageInBattlePyramid
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gSpecialVar_ItemId
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_Var1CantBeHeld
	.word	sub_81C66EC
.Lfe52:
	.size	 sub_81C66AC,.Lfe52-sub_81C66AC
	.align	2, 0
	.type	 sub_81C66EC,function
	.thumb_func
sub_81C66EC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L415
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L414	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_CloseBattlePyramidBagMessage
.L414:
	pop	{r4}
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	gMain
.Lfe53:
	.size	 sub_81C66EC,.Lfe53-sub_81C66EC
	.align	2, 0
	.globl	Task_CloseBattlePyramidBagMessage
	.type	 Task_CloseBattlePyramidBagMessage,function
	.thumb_func
Task_CloseBattlePyramidBagMessage:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L418
	add	r4, r4, r0
	bl	CloseBattlePyramidBagTextWindow
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	bl	PrintItemDescription
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	sub_81C5A98
	add	r0, r5, #0
	bl	SetTaskToMainPyramidBagInputHandler
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	gTasks+0x8
.Lfe54:
	.size	 Task_CloseBattlePyramidBagMessage,.Lfe54-Task_CloseBattlePyramidBagMessage
	.align	2, 0
	.type	 sub_81C674C,function
	.thumb_func
sub_81C674C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r5, .L425
	ldrh	r0, [r5]
	bl	itemid_80BF6D8_mail_related
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L421	@cond_branch
	ldr	r1, .L425+0x4
	ldr	r2, .L425+0x8
	add	r0, r4, #0
	bl	DisplayItemMessageInBattlePyramid
	b	.L422
.L426:
	.align	2, 0
.L425:
	.word	gSpecialVar_ItemId
	.word	gText_CantWriteMail
	.word	sub_81C66EC
.L421:
	ldrh	r0, [r5]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L423	@cond_branch
	add	r0, r4, #0
	bl	CloseBattlePyramidBagAndSetCallback
	b	.L422
.L423:
	add	r0, r6, #0
	bl	sub_81C66AC
.L422:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 sub_81C674C,.Lfe55-sub_81C674C
	.align	2, 0
	.type	 BagAction_UseInBattle,function
	.thumb_func
BagAction_UseInBattle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L429
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	cmp	r0, #0
	beq	.L428	@cond_branch
	bl	sub_81C61A8
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	add	r1, r0, #0
	add	r0, r5, #0
	bl	_call_via_r1
.L428:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L430:
	.align	2, 0
.L429:
	.word	gSpecialVar_ItemId
.Lfe56:
	.size	 BagAction_UseInBattle,.Lfe56-BagAction_UseInBattle
	.align	2, 0
	.type	 Task_BeginItemSwap,function
	.thumb_func
Task_BeginItemSwap:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L432
	mov	r9, r0
	add	r5, r4, r0
	ldr	r0, .L432+0x4
	ldrh	r1, [r0, #0x6]
	ldrh	r0, [r0, #0x8]
	add	r1, r1, r0
	strh	r1, [r5, #0x2]
	ldr	r0, .L432+0x8
	ldr	r0, [r0]
	ldr	r2, .L432+0xc
	add	r0, r0, r2
	mov	r2, #0x0
	mov	r8, r2
	strb	r1, [r0]
	ldrb	r0, [r5]
	mov	r1, #0x10
	mov	r2, #0x1
	bl	ListMenuSetUnkIndicatorsStructField
	ldr	r0, .L432+0x10
	ldr	r3, [r0]
	mov	r0, #0x2
	ldrsh	r2, [r5, r0]
	lsl	r2, r2, #0x1
	ldr	r1, .L432+0x14
	add	r0, r3, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L432+0x18
	add	r3, r3, r0
	add	r3, r3, r2
	ldrh	r0, [r3]
	ldr	r1, .L432+0x1c
	bl	CopyItemName
	ldr	r6, .L432+0x20
	ldr	r1, .L432+0x24
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r1, r8
	str	r1, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r1, [sp, #0xc]
	add	r1, r6, #0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	PrintOnWindow_Font1
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	sub_81C5A98
	ldrb	r0, [r5, #0x2]
	bl	sub_81C704C
	mov	r2, #0x8
	neg	r2, r2
	add	r9, r9, r2
	add	r4, r4, r9
	ldr	r0, .L432+0x28
	str	r0, [r4]
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L433:
	.align	2, 0
.L432:
	.word	gTasks+0x8
	.word	gPyramidBagCursorData
	.word	gPyramidBagResources
	.word	0x814
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_MoveVar1Where
	.word	Task_ItemSwapHandleInput
.Lfe57:
	.size	 Task_BeginItemSwap,.Lfe57-Task_BeginItemSwap
	.align	2, 0
	.type	 Task_ItemSwapHandleInput,function
	.thumb_func
Task_ItemSwapHandleInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L446
	add	r4, r0, r1
	bl	MenuHelpers_CallLinkSomething
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L435	@cond_branch
	ldr	r7, .L446+0x4
	ldrh	r1, [r7, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L436	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4]
	ldr	r1, .L446+0x8
	sub	r2, r1, #0x2
	bl	ListMenuGetScrollAndRow
	b	.L445
.L447:
	.align	2, 0
.L446:
	.word	gTasks+0x8
	.word	gMain
	.word	gPyramidBagCursorData+0x8
.L436:
	ldrb	r0, [r4]
	bl	ListMenu_ProcessInput
	add	r6, r0, #0
	ldrb	r0, [r4]
	ldr	r4, .L448
	sub	r2, r4, #0x2
	add	r1, r4, #0
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x0
	bl	sub_81C7028
	sub	r4, r4, #0x8
	ldrb	r0, [r4, #0x6]
	bl	sub_81C704C
	mov	r0, #0x2
	neg	r0, r0
	cmp	r6, r0
	beq	.L440	@cond_branch
	add	r0, r0, #0x1
	cmp	r6, r0
	bne	.L443	@cond_branch
	b	.L435
.L449:
	.align	2, 0
.L448:
	.word	gPyramidBagCursorData+0x8
.L440:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r7, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L441	@cond_branch
.L445:
	add	r0, r5, #0
	bl	PerformItemSwap
	b	.L435
.L441:
	add	r0, r5, #0
	bl	sub_81C6A14
	b	.L435
.L443:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	PerformItemSwap
.L435:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 Task_ItemSwapHandleInput,.Lfe58-Task_ItemSwapHandleInput
	.align	2, 0
	.type	 PerformItemSwap,function
	.thumb_func
PerformItemSwap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L455
	add	r5, r0, r1
	ldr	r7, .L455+0x4
	sub	r0, r7, #0x2
	mov	r8, r0
	ldrh	r0, [r0]
	ldrh	r1, [r7]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r3, #0x2
	ldrsh	r1, [r5, r3]
	cmp	r1, r4
	beq	.L452	@cond_branch
	sub	r0, r4, #0x1
	cmp	r1, r0
	bne	.L451	@cond_branch
.L452:
	add	r0, r6, #0
	bl	sub_81C6A14
	b	.L453
.L456:
	.align	2, 0
.L455:
	.word	gTasks+0x8
	.word	gPyramidBagCursorData+0x8
.L451:
	ldrb	r0, [r5, #0x2]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	MovePyramidBagItemSlotInList
	ldr	r0, .L457
	ldr	r0, [r0]
	ldr	r1, .L457+0x4
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	mov	r0, #0x1
	bl	sub_81C7028
	ldrb	r0, [r5]
	add	r1, r7, #0
	mov	r2, r8
	bl	DestroyListMenuTask
	mov	r3, #0x2
	ldrsh	r0, [r5, r3]
	cmp	r0, r4
	bge	.L454	@cond_branch
	add	r1, r7, #0
	sub	r1, r1, #0x8
	ldrh	r0, [r1, #0x6]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x6]
.L454:
	bl	SetBagItemsListTemplate
	ldr	r0, .L457+0x8
	ldrh	r1, [r7]
	mov	r3, r8
	ldrh	r2, [r3]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	add	r0, r6, #0
	bl	SetTaskToMainPyramidBagInputHandler
.L453:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	gPyramidBagResources
	.word	0x814
	.word	gMultiuseListMenuTemplate
.Lfe59:
	.size	 PerformItemSwap,.Lfe59-PerformItemSwap
	.align	2, 0
	.type	 sub_81C6A14,function
	.thumb_func
sub_81C6A14:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r0, #0
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L461
	add	r4, r0, r1
	ldr	r5, .L461+0x4
	sub	r7, r5, #0x2
	ldr	r0, .L461+0x8
	ldr	r0, [r0]
	ldr	r1, .L461+0xc
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	mov	r0, #0x1
	bl	sub_81C7028
	ldrb	r0, [r4]
	add	r1, r5, #0
	add	r2, r7, #0
	bl	DestroyListMenuTask
	mov	r0, #0x2
	ldrsh	r2, [r4, r0]
	ldrh	r0, [r5]
	ldrh	r1, [r7]
	add	r0, r0, r1
	cmp	r2, r0
	bge	.L460	@cond_branch
	add	r1, r5, #0
	sub	r1, r1, #0x8
	ldrh	r0, [r1, #0x6]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x6]
.L460:
	bl	SetBagItemsListTemplate
	ldr	r0, .L461+0x10
	ldrh	r1, [r5]
	ldrh	r2, [r7]
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	add	r0, r6, #0
	bl	SetTaskToMainPyramidBagInputHandler
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gTasks+0x8
	.word	gPyramidBagCursorData+0x8
	.word	gPyramidBagResources
	.word	0x814
	.word	gMultiuseListMenuTemplate
.Lfe60:
	.size	 sub_81C6A14,.Lfe60-sub_81C6A14
	.align	2, 0
	.globl	TryStoreHeldItemsInPyramidBag
	.type	 TryStoreHeldItemsInPyramidBag,function
	.thumb_func
TryStoreHeldItemsInPyramidBag:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L475
	mov	r9, r0
	mov	r0, #0x14
	bl	Alloc
	add	r7, r0, #0
	mov	r0, #0xa
	bl	Alloc
	add	r5, r0, #0
	ldr	r1, .L475+0x4
	mov	r8, r1
	ldr	r2, [r1]
	ldr	r4, .L475+0x8
	add	r0, r2, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, .L475+0xc
	add	r1, r1, r0
	add	r0, r7, #0
	mov	r2, #0x14
	bl	memcpy
	mov	r1, r8
	ldr	r2, [r1]
	add	r0, r2, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldr	r0, .L475+0x10
	add	r1, r1, r0
	add	r0, r5, #0
	mov	r2, #0xa
	bl	memcpy
	mov	r6, #0x0
.L467:
	mov	r0, #0x64
	mul	r0, r0, r6
	add	r0, r0, r9
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	strh	r0, [r1]
	cmp	r0, #0
	beq	.L466	@cond_branch
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L466	@cond_branch
	mov	r1, r8
	ldr	r2, [r1]
	add	r0, r2, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L475+0xc
	add	r0, r0, r1
	add	r1, r7, #0
	mov	r2, #0x14
	bl	memcpy
	mov	r0, r8
	ldr	r2, [r0]
	add	r0, r2, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1e
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldr	r1, .L475+0x10
	add	r0, r0, r1
	add	r1, r5, #0
	mov	r2, #0xa
	bl	memcpy
	add	r0, r7, #0
	bl	Free
	add	r0, r5, #0
	bl	Free
	ldr	r1, .L475+0x14
	mov	r0, #0x1
	strh	r0, [r1]
	b	.L463
.L476:
	.align	2, 0
.L475:
	.word	gPlayerParty
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	0xe2c
	.word	0xe54
	.word	gSpecialVar_Result
.L466:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L467	@cond_branch
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	mov	r6, #0x0
	mov	r4, #0x64
.L473:
	mov	r0, r6
	mul	r0, r0, r4
	add	r0, r0, r9
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x2
	bls	.L473	@cond_branch
	ldr	r1, .L477
	mov	r0, #0x0
	strh	r0, [r1]
	add	r0, r7, #0
	bl	Free
	add	r0, r5, #0
	bl	Free
.L463:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L478:
	.align	2, 0
.L477:
	.word	gSpecialVar_Result
.Lfe61:
	.size	 TryStoreHeldItemsInPyramidBag,.Lfe61-TryStoreHeldItemsInPyramidBag
	.align	2, 0
	.type	 sub_81C6BD8,function
	.thumb_func
sub_81C6BD8:
	push	{r4, lr}
	ldr	r0, .L485
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowBorderGfx
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd0
	bl	LoadMessageBoxGfx
	ldr	r0, .L485+0x4
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r4, #0x0
.L483:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L483	@cond_branch
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L486:
	.align	2, 0
.L485:
	.word	gUnknown_0861F328
	.word	gUnknown_0860F074
.Lfe62:
	.size	 sub_81C6BD8,.Lfe62-sub_81C6BD8
	.align	2, 0
	.type	 PrintOnWindow_Font1,function
	.thumb_func
PrintOnWindow_Font1:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x14
	ldr	r4, [sp, #0x28]
	ldr	r6, [sp, #0x2c]
	ldr	r5, [sp, #0x30]
	mov	r8, r5
	ldr	r5, [sp, #0x34]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	str	r4, [sp]
	str	r6, [sp, #0x4]
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	ldr	r5, .L488
	add	r4, r4, r5
	str	r4, [sp, #0x8]
	mov	r4, r8
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r1, #0x1
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L489:
	.align	2, 0
.L488:
	.word	sColorTable
.Lfe63:
	.size	 PrintOnWindow_Font1,.Lfe63-PrintOnWindow_Font1
	.align	2, 0
	.type	 PrintOnWindow_Font7,function
	.thumb_func
PrintOnWindow_Font7:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x14
	ldr	r4, [sp, #0x28]
	ldr	r6, [sp, #0x2c]
	ldr	r5, [sp, #0x30]
	mov	r8, r5
	ldr	r5, [sp, #0x34]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	str	r4, [sp]
	str	r6, [sp, #0x4]
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	ldr	r5, .L491
	add	r4, r4, r5
	str	r4, [sp, #0x8]
	mov	r4, r8
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r1, #0x7
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L492:
	.align	2, 0
.L491:
	.word	sColorTable
.Lfe64:
	.size	 PrintOnWindow_Font7,.Lfe64-PrintOnWindow_Font7
	.align	2, 0
	.type	 sub_81C6CEC,function
	.thumb_func
sub_81C6CEC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 sub_81C6CEC,.Lfe65-sub_81C6CEC
	.align	2, 0
	.type	 sub_81C6D08,function
	.thumb_func
sub_81C6D08:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L495
	ldr	r1, [r1]
	ldr	r2, .L495+0x4
	add	r1, r1, r2
	add	r1, r1, r0
	ldrb	r0, [r1]
	bx	lr
.L496:
	.align	2, 0
.L495:
	.word	gPyramidBagResources
	.word	0x80f
.Lfe66:
	.size	 sub_81C6D08,.Lfe66-sub_81C6D08
	.align	2, 0
	.type	 sub_81C6D24,function
	.thumb_func
sub_81C6D24:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L499
	ldr	r3, .L499+0x4
	add	r1, r2, r3
	ldr	r0, [r0]
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L498	@cond_branch
	lsl	r0, r2, #0x3
	ldr	r1, .L499+0x8
	add	r0, r0, r1
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xe
	bl	DrawStdFrameWithCustomTileAndPalette
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
.L498:
	ldrb	r0, [r4]
	pop	{r4}
	pop	{r1}
	bx	r1
.L500:
	.align	2, 0
.L499:
	.word	gPyramidBagResources
	.word	0x80f
	.word	gUnknown_0861F350
.Lfe67:
	.size	 sub_81C6D24,.Lfe67-sub_81C6D24
	.align	2, 0
	.type	 sub_81C6D6C,function
	.thumb_func
sub_81C6D6C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L503
	ldr	r2, .L503+0x4
	add	r0, r0, r2
	ldr	r1, [r1]
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L502	@cond_branch
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0xff
	strb	r0, [r4]
.L502:
	pop	{r4}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	gPyramidBagResources
	.word	0x80f
.Lfe68:
	.size	 sub_81C6D6C,.Lfe68-sub_81C6D6C
	.align	2, 0
	.type	 sub_81C6DAC,function
	.thumb_func
sub_81C6DAC:
	push	{lr}
	add	sp, sp, #-0x10
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L506
	mov	r2, #0x2
	str	r2, [sp]
	mov	r2, #0x1
	str	r2, [sp, #0x4]
	mov	r2, #0xe
	str	r2, [sp, #0x8]
	str	r3, [sp, #0xc]
	mov	r2, #0x1
	mov	r3, #0x0
	bl	CreateYesNoMenuWithCallbacks
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	gUnknown_0861F350+0x20
.Lfe69:
	.size	 sub_81C6DAC,.Lfe69-sub_81C6DAC
	.align	2, 0
	.globl	DisplayItemMessageInBattlePyramid
	.type	 DisplayItemMessageInBattlePyramid,function
	.thumb_func
DisplayItemMessageInBattlePyramid:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	bl	GetPlayerTextSpeedDelay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	str	r6, [sp, #0xc]
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0xa
	mov	r3, #0xd
	bl	DisplayMessageAndContinueTask
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 DisplayItemMessageInBattlePyramid,.Lfe70-DisplayItemMessageInBattlePyramid
	.align	2, 0
	.type	 CloseBattlePyramidBagTextWindow,function
	.thumb_func
CloseBattlePyramidBagTextWindow:
	push	{lr}
	mov	r0, #0x2
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	mov	r0, #0x2
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 CloseBattlePyramidBagTextWindow,.Lfe71-CloseBattlePyramidBagTextWindow
	.align	2, 0
	.type	 sub_81C6E38,function
	.thumb_func
sub_81C6E38:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L512
	ldr	r2, .L512+0x4
	add	r1, r4, r2
	ldr	r0, [r0]
	add	r5, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L511	@cond_branch
	ldr	r0, .L512+0x8
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L512+0xc
	add	r0, r0, r4
	bl	FreeSpriteOamMatrix
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	mov	r0, #0xff
	strb	r0, [r5]
.L511:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L513:
	.align	2, 0
.L512:
	.word	gPyramidBagResources
	.word	0x804
	.word	0x1024
	.word	gSprites
.Lfe72:
	.size	 sub_81C6E38,.Lfe72-sub_81C6E38
	.align	2, 0
	.type	 sub_81C6E98,function
	.thumb_func
sub_81C6E98:
	push	{r4, lr}
	add	sp, sp, #-0x8
	mov	r0, #0x40
	bl	Alloc
	add	r4, r0, #0
	ldr	r0, .L515
	add	r1, r4, #0
	bl	LZDecompressWram
	ldr	r0, .L515+0x4
	ldr	r0, [r0]
	ldr	r1, .L515+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x19
	add	r0, r4, r0
	str	r0, [sp]
	ldr	r1, .L515+0xc
	ldr	r0, [sp, #0x4]
	and	r0, r0, r1
	ldr	r1, .L515+0x10
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpritePalette
	add	r0, r4, #0
	bl	Free
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gBattleFrontierGfx_PyramidBag_Pal
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	-0x10000
	.word	0x1024
.Lfe73:
	.size	 sub_81C6E98,.Lfe73-sub_81C6E98
	.align	2, 0
	.type	 sub_81C6EF4,function
	.thumb_func
sub_81C6EF4:
	push	{r4, lr}
	ldr	r0, .L518
	ldr	r4, [r0]
	ldr	r0, .L518+0x4
	add	r4, r4, r0
	ldr	r0, .L518+0x8
	mov	r1, #0x44
	mov	r2, #0x38
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L519:
	.align	2, 0
.L518:
	.word	gPyramidBagResources
	.word	0x804
	.word	gUnknown_0861F3D4
.Lfe74:
	.size	 sub_81C6EF4,.Lfe74-sub_81C6EF4
	.align	2, 0
	.type	 sub_81C6F20,function
	.thumb_func
sub_81C6F20:
	push	{r4, lr}
	ldr	r0, .L522
	ldr	r0, [r0]
	ldr	r1, .L522+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L522+0x8
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L521	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	ldr	r0, .L522+0xc
	str	r0, [r4, #0x1c]
.L521:
	pop	{r4}
	pop	{r0}
	bx	r0
.L523:
	.align	2, 0
.L522:
	.word	gPyramidBagResources
	.word	0x804
	.word	gSprites
	.word	sub_81C6F68
.Lfe75:
	.size	 sub_81C6F20,.Lfe75-sub_81C6F20
	.align	2, 0
	.type	 sub_81C6F68,function
	.thumb_func
sub_81C6F68:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L525	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	ldr	r0, .L526
	str	r0, [r4, #0x1c]
.L525:
	pop	{r4}
	pop	{r0}
	bx	r0
.L527:
	.align	2, 0
.L526:
	.word	SpriteCallbackDummy
.Lfe76:
	.size	 sub_81C6F68,.Lfe76-sub_81C6F68
	.align	2, 0
	.type	 ShowItemImage,function
	.thumb_func
ShowItemImage:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r0, .L531
	ldr	r2, .L531+0x4
	add	r1, r4, r2
	ldr	r0, [r0]
	add	r5, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0xff
	bne	.L529	@cond_branch
	ldr	r0, .L531+0x8
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	add	r0, r4, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	AddItemIconSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L529	@cond_branch
	strb	r2, [r5]
	ldr	r1, .L531+0xc
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x18
	strh	r1, [r0, #0x24]
	mov	r1, #0x58
	strh	r1, [r0, #0x26]
.L529:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L532:
	.align	2, 0
.L531:
	.word	gPyramidBagResources
	.word	0x805
	.word	0x1025
	.word	gSprites
.Lfe77:
	.size	 ShowItemImage,.Lfe77-ShowItemImage
	.align	2, 0
	.type	 sub_81C6FF8,function
	.thumb_func
sub_81C6FF8:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	bl	sub_81C6E38
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 sub_81C6FF8,.Lfe78-sub_81C6FF8
	.align	2, 0
	.type	 sub_81C700C,function
	.thumb_func
sub_81C700C:
	push	{lr}
	ldr	r0, .L535
	ldr	r0, [r0]
	ldr	r1, .L535+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	bl	sub_8122344
	pop	{r0}
	bx	r0
.L536:
	.align	2, 0
.L535:
	.word	gPyramidBagResources
	.word	0x807
.Lfe79:
	.size	 sub_81C700C,.Lfe79-sub_81C700C
	.align	2, 0
	.type	 sub_81C7028,function
	.thumb_func
sub_81C7028:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L538
	ldr	r0, [r0]
	ldr	r1, .L538+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	bl	sub_81223FC
	pop	{r0}
	bx	r0
.L539:
	.align	2, 0
.L538:
	.word	gPyramidBagResources
	.word	0x807
.Lfe80:
	.size	 sub_81C7028,.Lfe80-sub_81C7028
	.align	2, 0
	.type	 sub_81C704C,function
	.thumb_func
sub_81C704C:
	push	{lr}
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	ldr	r0, .L541
	ldr	r0, [r0]
	ldr	r1, .L541+0x4
	add	r0, r0, r1
	lsr	r3, r3, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0xd
	add	r3, r3, r1
	lsr	r3, r3, #0x10
	mov	r1, #0x88
	mov	r2, #0x78
	bl	sub_8122448
	pop	{r0}
	bx	r0
.L542:
	.align	2, 0
.L541:
	.word	gPyramidBagResources
	.word	0x807
.Lfe81:
	.size	 sub_81C704C,.Lfe81-sub_81C704C
.text
	.align	2, 0

