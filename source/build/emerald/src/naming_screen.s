@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gNamingScreenData,object
	.size	 gNamingScreenData,4
gNamingScreenData:
	.word	0x0
	.section .rodata
	.type	 gSpriteImage_858BBF8,object
gSpriteImage_858BBF8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x3
	.byte	0x30
	.byte	0x58
	.byte	0x55
	.byte	0x55
	.byte	0x30
	.byte	0x58
	.byte	0x5d
	.byte	0x5d
	.byte	0x30
	.byte	0x58
	.byte	0xd5
	.byte	0xd5
	.byte	0x30
	.byte	0x58
	.byte	0x5d
	.byte	0x5d
	.byte	0x30
	.byte	0x58
	.byte	0xd5
	.byte	0xd5
	.byte	0x30
	.byte	0x58
	.byte	0x5d
	.byte	0x5d
	.byte	0x30
	.byte	0x58
	.byte	0x55
	.byte	0x55
	.byte	0x30
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x55
	.byte	0x55
	.byte	0x85
	.byte	0x3
	.byte	0x5d
	.byte	0x5d
	.byte	0x85
	.byte	0x3
	.byte	0xd5
	.byte	0xd5
	.byte	0x85
	.byte	0x3
	.byte	0x5d
	.byte	0x5d
	.byte	0x85
	.byte	0x3
	.byte	0xd5
	.byte	0xd5
	.byte	0x85
	.byte	0x3
	.byte	0x5d
	.byte	0x5d
	.byte	0x85
	.byte	0x3
	.byte	0x55
	.byte	0x55
	.byte	0x85
	.byte	0x3
	.byte	0x88
	.byte	0xa8
	.byte	0x88
	.byte	0x3
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0xff
	.byte	0xff
	.byte	0x8f
	.byte	0x30
	.byte	0xa8
	.byte	0x88
	.byte	0x88
	.byte	0x30
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x3
	.byte	0x38
	.byte	0xdd
	.byte	0x8d
	.byte	0x3
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x3
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_858BBF8,192
	.type	 gSpriteImage_858BCB8,object
gSpriteImage_858BCB8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x3
	.byte	0x30
	.byte	0xe8
	.byte	0xe8
	.byte	0xe8
	.byte	0x30
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x30
	.byte	0xe8
	.byte	0xff
	.byte	0xff
	.byte	0x30
	.byte	0x88
	.byte	0x8e
	.byte	0x8e
	.byte	0x30
	.byte	0xe8
	.byte	0xef
	.byte	0xff
	.byte	0x30
	.byte	0x88
	.byte	0x8f
	.byte	0xff
	.byte	0x30
	.byte	0xe8
	.byte	0xe8
	.byte	0xe8
	.byte	0x30
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xe8
	.byte	0xe8
	.byte	0x88
	.byte	0x3
	.byte	0xff
	.byte	0xff
	.byte	0x8e
	.byte	0x3
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0x3
	.byte	0x8e
	.byte	0x8e
	.byte	0x8e
	.byte	0x3
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0x3
	.byte	0xfe
	.byte	0x8e
	.byte	0x8e
	.byte	0x3
	.byte	0xe8
	.byte	0xe8
	.byte	0x88
	.byte	0x3
	.byte	0x88
	.byte	0xa8
	.byte	0x88
	.byte	0x3
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0xff
	.byte	0xff
	.byte	0x8f
	.byte	0x30
	.byte	0xa8
	.byte	0x88
	.byte	0x88
	.byte	0x30
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x3
	.byte	0x38
	.byte	0xdd
	.byte	0x8d
	.byte	0x3
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x3
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_858BCB8,192
	.align	1, 0
	.type	 gUnknown_0858BD78,object
gUnknown_0858BD78:
	.short	0x7fff
	.short	0x7fff
	.short	0x318c
	.short	0x675a
	.short	0x43c
	.short	0x3aff
	.short	0x664
	.short	0x4bd2
	.short	0x6546
	.short	0x7b14
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x62af
	.short	0x3a7a
	.short	0x36f2
	.size	 gUnknown_0858BD78,32
	.align	1, 0
	.type	 gUnknown_0858BD98,object
gUnknown_0858BD98:
	.short	0x530e
	.short	0x5b5f
	.short	0x4b1f
	.short	0x3a5b
	.short	0x210f
	.short	0x22ba
	.short	0x11b3
	.short	0x112d
	.short	0x2ee
	.short	0x1e8
	.short	0x904
	.short	0x51da
	.short	0x3914
	.short	0x208a
	.short	0x1b9c
	.short	0x0
	.size	 gUnknown_0858BD98,32
	.align	2, 0
	.type	 sTransferredToPCMessages,object
sTransferredToPCMessages:
	.word	gText_PkmnTransferredSomeonesPC
	.word	gText_PkmnTransferredLanettesPC
	.word	gText_PkmnTransferredSomeonesPCBoxFull
	.word	gText_PkmnTransferredLanettesPCBoxFull
	.size	 sTransferredToPCMessages,16
	.type	 sText_AlphabetUpperLower,object
sText_AlphabetUpperLower:
	.byte	0xbb
	.byte	0xbc
	.byte	0xbd
	.byte	0xbe
	.byte	0xbf
	.byte	0xc0
	.byte	0xc1
	.byte	0xc2
	.byte	0xc3
	.byte	0xc4
	.byte	0xc5
	.byte	0xc6
	.byte	0xc7
	.byte	0xc8
	.byte	0xc9
	.byte	0xca
	.byte	0xcb
	.byte	0xcc
	.byte	0xcd
	.byte	0xce
	.byte	0xcf
	.byte	0xd0
	.byte	0xd1
	.byte	0xd2
	.byte	0xd3
	.byte	0xd4
	.byte	0xd5
	.byte	0xd6
	.byte	0xd7
	.byte	0xd8
	.byte	0xd9
	.byte	0xda
	.byte	0xdb
	.byte	0xdc
	.byte	0xdd
	.byte	0xde
	.byte	0xdf
	.byte	0xe0
	.byte	0xe1
	.byte	0xe2
	.byte	0xe3
	.byte	0xe4
	.byte	0xe5
	.byte	0xe6
	.byte	0xe7
	.byte	0xe8
	.byte	0xe9
	.byte	0xea
	.byte	0xeb
	.byte	0xec
	.byte	0xed
	.byte	0xee
	.byte	0xab
	.byte	0xff
	.size	 sText_AlphabetUpperLower,54
	.align	2, 0
	.type	 gUnknown_0858BE00,object
	.size	 gUnknown_0858BE00,16
gUnknown_0858BE00:
	.byte	0xe0
	.byte	0x1
	.space	2
	.byte	0xd9
	.byte	0x11
	.space	2
	.byte	0xca
	.byte	0x21
	.space	2
	.byte	0xff
	.byte	0x31
	.space	2
	.align	2, 0
	.type	 gUnknown_0858BE10,object
gUnknown_0858BE10:
	.byte	0x1
	.byte	0x3
	.byte	0xa
	.byte	0x13
	.byte	0x8
	.byte	0xa
	.short	0x30
	.byte	0x2
	.byte	0x3
	.byte	0xa
	.byte	0x13
	.byte	0x8
	.byte	0xa
	.short	0xc8
	.byte	0x3
	.byte	0x8
	.byte	0x6
	.byte	0x11
	.byte	0x2
	.byte	0xa
	.short	0x30
	.byte	0x3
	.byte	0x8
	.byte	0x4
	.byte	0x11
	.byte	0x2
	.byte	0xa
	.short	0x52
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xb
	.short	0x74
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gUnknown_0858BE10,48
	.type	 gUnknown_0858BE40,object
gUnknown_0858BE40:
	.byte	0xd5
	.byte	0xd6
	.byte	0xd7
	.byte	0xd8
	.byte	0xd9
	.byte	0xda
	.byte	0x0
	.byte	0xad
	.byte	0xdb
	.byte	0xdc
	.byte	0xdd
	.byte	0xde
	.byte	0xdf
	.byte	0xe0
	.byte	0x0
	.byte	0xb8
	.byte	0xe1
	.byte	0xe2
	.byte	0xe3
	.byte	0xe4
	.byte	0xe5
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xea
	.byte	0xeb
	.byte	0xec
	.byte	0xed
	.byte	0xee
	.byte	0x0
	.byte	0xbb
	.byte	0xbc
	.byte	0xbd
	.byte	0xbe
	.byte	0xbf
	.byte	0xc0
	.byte	0x0
	.byte	0xad
	.byte	0xc1
	.byte	0xc2
	.byte	0xc3
	.byte	0xc4
	.byte	0xc5
	.byte	0xc6
	.byte	0x0
	.byte	0xb8
	.byte	0xc7
	.byte	0xc8
	.byte	0xc9
	.byte	0xca
	.byte	0xcb
	.byte	0xcc
	.byte	0xcd
	.byte	0x0
	.byte	0xce
	.byte	0xcf
	.byte	0xd0
	.byte	0xd1
	.byte	0xd2
	.byte	0xd3
	.byte	0xd4
	.byte	0x0
	.byte	0xa1
	.byte	0xa2
	.byte	0xa3
	.byte	0xa4
	.byte	0xa5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa6
	.byte	0xa7
	.byte	0xa8
	.byte	0xa9
	.byte	0xaa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xab
	.byte	0xac
	.byte	0xb5
	.byte	0xb6
	.byte	0xba
	.byte	0xae
	.byte	0x0
	.byte	0x0
	.byte	0xb0
	.byte	0xb1
	.byte	0xb2
	.byte	0xb3
	.byte	0xb4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0858BE40,96
	.type	 gUnknown_0858BEA0,object
gUnknown_0858BEA0:
	.byte	0x8
	.byte	0x8
	.byte	0x6
	.size	 gUnknown_0858BEA0,3
	.type	 gUnknown_0858BEA3,object
gUnknown_0858BEA3:
	.byte	0x0
	.byte	0xc
	.byte	0x18
	.byte	0x38
	.byte	0x44
	.byte	0x50
	.byte	0x5c
	.byte	0x7b
	.byte	0x0
	.byte	0xc
	.byte	0x18
	.byte	0x38
	.byte	0x44
	.byte	0x50
	.byte	0x5c
	.byte	0x7b
	.byte	0x0
	.byte	0x16
	.byte	0x2c
	.byte	0x42
	.byte	0x58
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_0858BEA3,24
.text
	.align	2, 0
	.globl	DoNamingScreen
	.type	 DoNamingScreen,function
	.thumb_func
DoNamingScreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	ldr	r4, .L6
	mov	r0, #0xf2
	lsl	r0, r0, #0x5
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r0, [sp, #0x1c]
	bl	SetMainCallback2
	b	.L4
.L7:
	.align	2, 0
.L6:
	.word	gNamingScreenData
.L3:
	ldr	r1, .L8
	add	r0, r0, r1
	strb	r7, [r0]
	ldr	r0, [r4]
	ldr	r2, .L8+0x4
	add	r1, r0, r2
	strh	r5, [r1]
	add	r2, r2, #0x2
	add	r1, r0, r2
	strh	r6, [r1]
	ldr	r1, .L8+0x8
	add	r2, r0, r1
	ldr	r1, [sp, #0x18]
	str	r1, [r2]
	ldr	r2, .L8+0xc
	add	r1, r0, r2
	mov	r2, r8
	str	r2, [r1]
	ldr	r1, .L8+0x10
	add	r0, r0, r1
	ldr	r2, [sp, #0x1c]
	str	r2, [r0]
	cmp	r7, #0
	bne	.L5	@cond_branch
	bl	StartTimer1
.L5:
	ldr	r0, .L8+0x14
	bl	SetMainCallback2
.L4:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	0x1e2c
	.word	0x1e34
	.word	0x1e38
	.word	0x1e30
	.word	0x1e3c
	.word	C2_NamingScreen
.Lfe1:
	.size	 DoNamingScreen,.Lfe1-DoNamingScreen
	.align	2, 0
	.type	 C2_NamingScreen,function
	.thumb_func
C2_NamingScreen:
	push	{lr}
	ldr	r0, .L23
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bhi	.L20	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L23+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L24:
	.align	2, 0
.L23:
	.word	gMain
	.word	.L21
	.align	2, 0
	.align	2, 0
.L21:
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
.L12:
	bl	NamingScreen_TurnOffScreen
	bl	NamingScreen_Init
	b	.L22
.L13:
	bl	NamingScreen_InitBGs
	b	.L22
.L14:
	bl	ResetPaletteFade
	b	.L22
.L15:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L22
.L16:
	bl	ResetTasks
	b	.L22
.L17:
	bl	choose_name_or_words_screen_apply_bg_pals
	b	.L22
.L18:
	bl	choose_name_or_words_screen_load_bg_tile_patterns
	b	.L22
.L19:
	bl	sub_80E3CC8
	bl	UpdatePaletteFade
	bl	sub_80E501C
.L22:
	ldr	r1, .L25
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L11
.L26:
	.align	2, 0
.L25:
	.word	gMain
.L20:
	bl	sub_80E4CB8
	bl	sub_80E3194
.L11:
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 C2_NamingScreen,.Lfe2-C2_NamingScreen
	.align	2, 0
	.type	 NamingScreen_Init,function
	.thumb_func
NamingScreen_Init:
	push	{r4, r5, r6, r7, lr}
	ldr	r5, .L30
	ldr	r0, [r5]
	ldr	r1, .L30+0x4
	add	r0, r0, r1
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r1, [r5]
	ldr	r3, .L30+0x8
	add	r0, r1, r3
	mov	r4, #0x0
	strh	r2, [r0]
	ldr	r7, .L30+0xc
	add	r0, r1, r7
	strh	r2, [r0]
	ldr	r0, .L30+0x10
	add	r2, r1, r0
	mov	r3, #0x1
	mov	r0, #0x1
	strh	r0, [r2]
	add	r7, r7, #0x4
	add	r2, r1, r7
	mov	r0, #0x2
	strh	r0, [r2]
	mov	r0, #0xf1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	strb	r4, [r1]
	ldr	r0, [r5]
	ldr	r1, .L30+0x14
	add	r0, r0, r1
	strb	r3, [r0]
	ldr	r1, [r5]
	ldr	r6, .L30+0x18
	add	r3, r1, r6
	ldr	r2, .L30+0x1c
	ldr	r4, .L30+0x20
	add	r0, r1, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	str	r0, [r3]
	ldrb	r0, [r0, #0x4]
	ldr	r2, .L30+0x24
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r2, [r5]
	add	r0, r2, r6
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x3
	mov	r0, #0xf0
	sub	r0, r0, r1
	asr	r3, r0, #0x1
	add	r0, r3, #0x6
	sub	r7, r7, #0x8
	add	r1, r2, r7
	strh	r0, [r1]
	add	r2, r2, r4
	ldrb	r0, [r2]
	cmp	r0, #0x4
	bne	.L28	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x11
	strh	r0, [r1]
.L28:
	ldr	r0, [r5]
	ldr	r4, .L30+0x28
	ldrh	r1, [r4]
	ldr	r2, .L30+0x2c
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	mov	r3, #0xc0
	lsl	r3, r3, #0x5
	add	r0, r0, r3
	mov	r1, #0xff
	mov	r2, #0x10
	bl	memset
	ldr	r1, [r5]
	add	r0, r1, r6
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L29	@cond_branch
	mov	r7, #0xc0
	lsl	r7, r7, #0x5
	add	r0, r1, r7
	ldr	r2, .L30+0x30
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
.L29:
	mov	r0, #0x10
	strh	r0, [r4]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	gNamingScreenData
	.word	0x1e10
	.word	0x1e18
	.word	0x1e1a
	.word	0x1e1c
	.word	0x1e21
	.word	0x1e28
	.word	sNamingScreenTemplates
	.word	0x1e2c
	.word	0x1e22
	.word	gKeyRepeatStartDelay
	.word	0x1e25
	.word	0x1e30
.Lfe3:
	.size	 NamingScreen_Init,.Lfe3-NamingScreen_Init
	.align	2, 0
	.type	 sub_80E2FA4,function
	.thumb_func
sub_80E2FA4:
	push	{r4, r5, lr}
	mov	r3, #0x0
	ldr	r4, .L39
	mov	r5, #0x5
	neg	r5, r5
.L36:
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r2, r0, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	lsl	r0, r1, #0x1f
	cmp	r0, #0
	beq	.L35	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r1
	strb	r0, [r2]
.L35:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3f
	bls	.L36	@cond_branch
	mov	r0, #0x0
	bl	sub_80E3E3C
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	gSprites
.Lfe4:
	.size	 sub_80E2FA4,.Lfe4-sub_80E2FA4
	.align	2, 0
	.type	 NamingScreen_InitBGs,function
	.thumb_func
NamingScreen_InitBGs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0xc
	mov	r8, r0
	add	r2, sp, #0x8
	mov	r6, #0x0
	ldr	r1, .L52
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L52+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L44:
	strh	r6, [r2]
	add	r0, sp, #0x8
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L44	@cond_branch
	strh	r6, [r2]
	add	r2, sp, #0x8
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0xc]
	ldr	r2, .L52
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, sp, #0x8
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L52+0x8
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	bl	InitStandardTextBoxWindows
	bl	sub_8197200
.L50:
	lsl	r0, r4, #0x3
	ldr	r1, .L52+0xc
	add	r0, r0, r1
	bl	AddWindow
	ldr	r5, .L52+0x10
	ldr	r1, [r5]
	ldr	r2, .L52+0x14
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L50	@cond_branch
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r1, #0xc8
	lsl	r1, r1, #0x3
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L52+0x18
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r1, [r5]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	0x40000d4
	.word	-0x7efff800
	.word	gUnknown_0858BE00
	.word	gUnknown_0858BE10
	.word	gNamingScreenData
	.word	0x1e11
	.word	0x80c
.Lfe5:
	.size	 NamingScreen_InitBGs,.Lfe5-NamingScreen_InitBGs
	.align	2, 0
	.type	 sub_80E3194,function
	.thumb_func
sub_80E3194:
	push	{lr}
	ldr	r0, .L55
	mov	r1, #0x2
	bl	CreateTask
	ldr	r0, .L55+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	sub_80E31B0
	.word	sub_80E4F58
.Lfe6:
	.size	 sub_80E3194,.Lfe6-sub_80E3194
	.align	2, 0
	.type	 sub_80E31B0,function
	.thumb_func
sub_80E31B0:
	push	{lr}
	ldr	r0, .L72
	ldr	r0, [r0]
	ldr	r1, .L72+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x9
	bhi	.L58	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L72+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L73:
	.align	2, 0
.L72:
	.word	gNamingScreenData
	.word	0x1e10
	.word	.L69
	.align	2, 0
	.align	2, 0
.L69:
	.word	.L59
	.word	.L60
	.word	.L71
	.word	.L62
	.word	.L63
	.word	.L64
	.word	.L65
	.word	.L66
	.word	.L67
	.word	.L68
.L59:
	bl	MainState_BeginFadeIn
	bl	sub_80E2FA4
	bl	NamingScreen_InitDisplayMode
	b	.L58
.L60:
	bl	MainState_WaitFadeIn
	b	.L58
.L62:
	bl	MainState_MoveToOKButton
.L71:
	bl	MainState_HandleInput
	b	.L58
.L63:
	bl	MainState_StartPageSwap
	b	.L58
.L64:
	bl	MainState_WaitPageSwap
	b	.L58
.L65:
	bl	MainState_6
	b	.L58
.L66:
	bl	sub_80E3604
	b	.L58
.L67:
	bl	MainState_BeginFadeInOut
	b	.L58
.L68:
	bl	MainState_WaitFadeOutAndExit
.L58:
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 sub_80E31B0,.Lfe7-sub_80E31B0
	.section .rodata
	.type	 sPageOrderLowerFirst,object
sPageOrderLowerFirst:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.size	 sPageOrderLowerFirst,3
	.type	 sPageOrderUpperFirst,object
sPageOrderUpperFirst:
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.size	 sPageOrderUpperFirst,3
	.type	 sPageOrderSymbolsFirst,object
sPageOrderSymbolsFirst:
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.size	 sPageOrderSymbolsFirst,3
.text
	.align	2, 0
	.type	 sub_80E3244,function
	.thumb_func
sub_80E3244:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L75
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L76:
	.align	2, 0
.L75:
	.word	sPageOrderLowerFirst
.Lfe8:
	.size	 sub_80E3244,.Lfe8-sub_80E3244
	.align	2, 0
	.type	 sub_80E3254,function
	.thumb_func
sub_80E3254:
	ldr	r1, .L78
	ldr	r0, .L78+0x4
	ldr	r0, [r0]
	ldr	r2, .L78+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L79:
	.align	2, 0
.L78:
	.word	sPageOrderUpperFirst
	.word	gNamingScreenData
	.word	0x1e22
.Lfe9:
	.size	 sub_80E3254,.Lfe9-sub_80E3254
	.align	2, 0
	.type	 sub_80E3274,function
	.thumb_func
sub_80E3274:
	ldr	r1, .L81
	ldr	r0, .L81+0x4
	ldr	r0, [r0]
	ldr	r2, .L81+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L82:
	.align	2, 0
.L81:
	.word	sPageOrderSymbolsFirst
	.word	gNamingScreenData
	.word	0x1e22
.Lfe10:
	.size	 sub_80E3274,.Lfe10-sub_80E3274
	.align	2, 0
	.type	 MainState_BeginFadeIn,function
	.thumb_func
MainState_BeginFadeIn:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L84
	mov	r0, #0x3
	bl	sub_80E4CF8
	ldr	r5, .L84+0x4
	ldr	r0, [r5]
	ldr	r1, .L84+0x8
	add	r0, r0, r1
	mov	r6, #0x0
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, .L84+0xc
	mov	r0, #0x2
	bl	sub_80E4CF8
	ldr	r1, .L84+0x10
	mov	r0, #0x1
	bl	sub_80E4CF8
	ldr	r0, [r5]
	ldr	r1, .L84+0x14
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	sub_80E4DE4
	ldr	r0, [r5]
	ldr	r1, .L84+0x18
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	sub_80E4DE4
	mov	r0, #0x2
	mov	r1, #0x0
	bl	nullsub_10
	mov	r0, #0x1
	mov	r1, #0x1
	bl	nullsub_10
	bl	sub_80E4D10
	bl	sub_80E4964
	bl	sub_80E4EF0
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r6, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	ldr	r0, .L84+0x1c
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L85:
	.align	2, 0
.L84:
	.word	gUnknown_08DD4544
	.word	gNamingScreenData
	.word	0x1e22
	.word	gUnknown_08DD46E0
	.word	gUnknown_08DD4620
	.word	0x1e12
	.word	0x1e11
	.word	0x1e10
.Lfe11:
	.size	 MainState_BeginFadeIn,.Lfe11-MainState_BeginFadeIn
	.align	2, 0
	.type	 MainState_WaitFadeIn,function
	.thumb_func
MainState_WaitFadeIn:
	push	{lr}
	ldr	r0, .L88
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L87	@cond_branch
	mov	r0, #0x1
	bl	SetInputState
	mov	r0, #0x1
	bl	sub_80E3E94
	ldr	r0, .L88+0x4
	ldr	r1, [r0]
	ldr	r0, .L88+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L87:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L89:
	.align	2, 0
.L88:
	.word	gPaletteFade
	.word	gNamingScreenData
	.word	0x1e10
.Lfe12:
	.size	 MainState_WaitFadeIn,.Lfe12-MainState_WaitFadeIn
	.align	2, 0
	.type	 MainState_HandleInput,function
	.thumb_func
MainState_HandleInput:
	push	{lr}
	bl	HandleKeyboardEvent
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 MainState_HandleInput,.Lfe13-MainState_HandleInput
	.align	2, 0
	.type	 MainState_MoveToOKButton,function
	.thumb_func
MainState_MoveToOKButton:
	push	{lr}
	bl	IsCursorAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L92	@cond_branch
	mov	r0, #0x1
	bl	SetInputState
	bl	MoveCursorToOKButton
	ldr	r0, .L93
	ldr	r0, [r0]
	ldr	r1, .L93+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
.L92:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L94:
	.align	2, 0
.L93:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe14:
	.size	 MainState_MoveToOKButton,.Lfe14-MainState_MoveToOKButton
	.align	2, 0
	.type	 MainState_6,function
	.thumb_func
MainState_6:
	push	{r4, lr}
	bl	sub_80E4BE4
	mov	r0, #0x0
	bl	SetInputState
	mov	r0, #0x0
	bl	sub_80E3E94
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_80E3948
	ldr	r4, .L99
	ldr	r0, [r4]
	ldr	r1, .L99+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L96	@cond_branch
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L96	@cond_branch
	bl	DisplaySentToPCMessage
	ldr	r0, [r4]
	ldr	r1, .L99+0x8
	add	r0, r0, r1
	mov	r1, #0x7
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L98
.L100:
	.align	2, 0
.L99:
	.word	gNamingScreenData
	.word	0x1e2c
	.word	0x1e10
.L96:
	ldr	r0, .L101
	ldr	r0, [r0]
	ldr	r1, .L101+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	strb	r1, [r0]
	mov	r0, #0x1
.L98:
	pop	{r4}
	pop	{r1}
	bx	r1
.L102:
	.align	2, 0
.L101:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe15:
	.size	 MainState_6,.Lfe15-MainState_6
	.align	2, 0
	.type	 MainState_BeginFadeInOut,function
	.thumb_func
MainState_BeginFadeInOut:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L104
	ldr	r1, [r0]
	ldr	r0, .L104+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.L105:
	.align	2, 0
.L104:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe16:
	.size	 MainState_BeginFadeInOut,.Lfe16-MainState_BeginFadeInOut
	.align	2, 0
	.type	 MainState_WaitFadeOutAndExit,function
	.thumb_func
MainState_WaitFadeOutAndExit:
	push	{r4, r5, lr}
	ldr	r0, .L109
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L107	@cond_branch
	ldr	r4, .L109+0x4
	ldr	r0, [r4]
	ldr	r1, .L109+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L108	@cond_branch
	bl	SeedRngAndSetTrainerId
.L108:
	ldr	r0, [r4]
	ldr	r1, .L109+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	SetMainCallback2
	ldr	r0, .L109+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	FreeAllWindowBuffers
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
.L107:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L110:
	.align	2, 0
.L109:
	.word	gPaletteFade
	.word	gNamingScreenData
	.word	0x1e2c
	.word	0x1e3c
	.word	sub_80E31B0
.Lfe17:
	.size	 MainState_WaitFadeOutAndExit,.Lfe17-MainState_WaitFadeOutAndExit
	.align	2, 0
	.type	 DisplaySentToPCMessage,function
	.thumb_func
DisplaySentToPCMessage:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	mov	r5, #0x0
	bl	IsDestinationBoxFull
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L112	@cond_branch
	ldr	r4, .L115
	ldr	r0, .L115+0x4
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L115+0x8
	ldr	r1, .L115+0xc
	ldr	r1, [r1]
	ldr	r2, .L115+0x10
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	b	.L113
.L116:
	.align	2, 0
.L115:
	.word	gStringVar1
	.word	0x4036
	.word	gStringVar2
	.word	gNamingScreenData
	.word	0x1e30
.L112:
	ldr	r4, .L117
	ldr	r0, .L117+0x4
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L117+0x8
	ldr	r1, .L117+0xc
	ldr	r1, [r1]
	ldr	r2, .L117+0x10
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L117+0x14
	bl	GetPCBoxToSendMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBoxNamePtr
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	mov	r5, #0x2
.L113:
	ldr	r0, .L117+0x18
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L114	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L114:
	ldr	r4, .L117+0x1c
	ldr	r1, .L117+0x20
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x0
	bl	DrawDialogueFrame
	ldr	r2, .L117+0x24
	ldrb	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	bl	GetPlayerTextSpeedDelay
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized2
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L118:
	.align	2, 0
.L117:
	.word	gStringVar1
	.word	0x4036
	.word	gStringVar2
	.word	gNamingScreenData
	.word	0x1e30
	.word	gStringVar3
	.word	0x8ab
	.word	gStringVar4
	.word	sTransferredToPCMessages
	.word	gTextFlags
.Lfe18:
	.size	 DisplaySentToPCMessage,.Lfe18-DisplaySentToPCMessage
	.align	2, 0
	.type	 sub_80E3604,function
	.thumb_func
sub_80E3604:
	push	{lr}
	bl	RunTextPrinters
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L120	@cond_branch
	ldr	r0, .L121
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L120	@cond_branch
	ldr	r0, .L121+0x4
	ldr	r0, [r0]
	ldr	r1, .L121+0x8
	add	r0, r0, r1
	mov	r1, #0x8
	strb	r1, [r0]
.L120:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L122:
	.align	2, 0
.L121:
	.word	gMain
	.word	gNamingScreenData
	.word	0x1e10
.Lfe19:
	.size	 sub_80E3604,.Lfe19-sub_80E3604
	.align	2, 0
	.type	 MainState_StartPageSwap,function
	.thumb_func
MainState_StartPageSwap:
	push	{lr}
	mov	r0, #0x0
	bl	SetInputState
	bl	sub_80E4050
	bl	StartPageSwapAnim
	mov	r0, #0x1
	bl	sub_80E3E3C
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_80E3948
	mov	r0, #0x6
	bl	PlaySE
	ldr	r0, .L124
	ldr	r0, [r0]
	ldr	r1, .L124+0x4
	add	r0, r0, r1
	mov	r1, #0x5
	strb	r1, [r0]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L125:
	.align	2, 0
.L124:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe20:
	.size	 MainState_StartPageSwap,.Lfe20-MainState_StartPageSwap
	.align	2, 0
	.type	 MainState_WaitPageSwap,function
	.thumb_func
MainState_WaitPageSwap:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	bl	IsPageSwapAnimNotInProgress
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L127	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCursorPos
	bl	GetCurrentPageColumnCount
	mov	r5, #0x0
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r4, #0
	cmp	r1, r0
	bne	.L128	@cond_branch
	mov	r5, #0x1
.L128:
	ldr	r2, .L133
	ldr	r0, [r2]
	ldr	r1, .L133+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r1, [r2]
	ldr	r3, .L133+0x8
	add	r1, r1, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r4, [r2]
	add	r4, r4, r3
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4]
	cmp	r5, #0
	beq	.L129	@cond_branch
	mov	r4, sp
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L132
.L134:
	.align	2, 0
.L133:
	.word	gNamingScreenData
	.word	0x1e10
	.word	0x1e22
.L129:
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r4, [r0, r2]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L130	@cond_branch
	mov	r4, sp
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
.L132:
	strh	r0, [r4]
.L130:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	bl	SetCursorPos
	bl	sub_80E4E5C
	mov	r0, #0x1
	bl	SetInputState
	mov	r0, #0x0
	bl	sub_80E3E3C
.L127:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 MainState_WaitPageSwap,.Lfe21-MainState_WaitPageSwap
	.section .rodata
	.align	2, 0
	.type	 sPageSwapAnimStateFuncs,object
sPageSwapAnimStateFuncs:
	.word	PageSwapAnimState_Init
	.word	PageSwapAnimState_1
	.word	PageSwapAnimState_2
	.word	PageSwapAnimState_Done
	.size	 sPageSwapAnimStateFuncs,16
.text
	.align	2, 0
	.type	 StartPageSwapAnim,function
	.thumb_func
StartPageSwapAnim:
	push	{r4, lr}
	ldr	r4, .L136
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	Task_HandlePageSwapAnim
.Lfe22:
	.size	 StartPageSwapAnim,.Lfe22-StartPageSwapAnim
	.align	2, 0
	.type	 Task_HandlePageSwapAnim,function
	.thumb_func
Task_HandlePageSwapAnim:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L143
	ldr	r2, .L143+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L139:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L139	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L144:
	.align	2, 0
.L143:
	.word	sPageSwapAnimStateFuncs
	.word	gTasks
.Lfe23:
	.size	 Task_HandlePageSwapAnim,.Lfe23-Task_HandlePageSwapAnim
	.align	2, 0
	.type	 IsPageSwapAnimNotInProgress,function
	.thumb_func
IsPageSwapAnimNotInProgress:
	push	{lr}
	ldr	r0, .L149
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L146	@cond_branch
	mov	r0, #0x0
	b	.L148
.L150:
	.align	2, 0
.L149:
	.word	Task_HandlePageSwapAnim
.L146:
	mov	r0, #0x1
.L148:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 IsPageSwapAnimNotInProgress,.Lfe24-IsPageSwapAnimNotInProgress
	.align	2, 0
	.type	 PageSwapAnimState_Init,function
	.thumb_func
PageSwapAnimState_Init:
	ldr	r1, .L152
	ldr	r1, [r1]
	ldr	r3, .L152+0x4
	add	r2, r1, r3
	mov	r3, #0x0
	strh	r3, [r2]
	ldr	r2, .L152+0x8
	add	r1, r1, r2
	strh	r3, [r1]
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	mov	r0, #0x0
	bx	lr
.L153:
	.align	2, 0
.L152:
	.word	gNamingScreenData
	.word	0x1e18
	.word	0x1e1a
.Lfe25:
	.size	 PageSwapAnimState_Init,.Lfe25-PageSwapAnimState_Init
	.align	2, 0
	.type	 PageSwapAnimState_1,function
	.thumb_func
PageSwapAnimState_1:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r5, .L156
	ldr	r0, [r5]
	ldr	r2, .L156+0x4
	add	r1, r0, r2
	str	r1, [sp]
	ldr	r1, .L156+0x8
	add	r0, r0, r1
	str	r0, [sp, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x4
	strh	r0, [r4, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x80
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	ldr	r2, .L156+0xc
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3f
	ble	.L155	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L156+0x10
	add	r2, r0, r1
	ldrb	r3, [r2]
	add	r1, r1, #0x2
	add	r0, r0, r1
	ldrh	r1, [r0]
	strh	r1, [r2]
	strh	r3, [r0]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L155:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L157:
	.align	2, 0
.L156:
	.word	gNamingScreenData
	.word	0x1e1a
	.word	0x1e18
	.word	0x1e21
	.word	0x1e1c
.Lfe26:
	.size	 PageSwapAnimState_1,.Lfe26-PageSwapAnimState_1
	.align	2, 0
	.type	 PageSwapAnimState_2,function
	.thumb_func
PageSwapAnimState_2:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r5, .L160
	ldr	r0, [r5]
	ldr	r2, .L160+0x4
	add	r1, r0, r2
	str	r1, [sp]
	ldr	r3, .L160+0x8
	add	r0, r0, r3
	str	r0, [sp, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x4
	strh	r0, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x80
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r1, #0x28
	bl	Sin
	ldr	r1, [r5]
	ldr	r3, .L160+0xc
	add	r1, r1, r3
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, sp
	ldr	r1, [r1]
	strh	r0, [r1]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	ble	.L159	@cond_branch
	ldr	r0, [r5]
	mov	r2, #0xf1
	lsl	r2, r2, #0x5
	add	r1, r0, r2
	ldrb	r2, [r1]
	add	r0, r0, r3
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, r3
	strb	r2, [r0]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L159:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L161:
	.align	2, 0
.L160:
	.word	gNamingScreenData
	.word	0x1e1a
	.word	0x1e18
	.word	0x1e21
.Lfe27:
	.size	 PageSwapAnimState_2,.Lfe27-PageSwapAnimState_2
	.align	2, 0
	.type	 PageSwapAnimState_Done,function
	.thumb_func
PageSwapAnimState_Done:
	push	{lr}
	ldr	r0, .L163
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L164:
	.align	2, 0
.L163:
	.word	Task_HandlePageSwapAnim
.Lfe28:
	.size	 PageSwapAnimState_Done,.Lfe28-PageSwapAnimState_Done
	.align	2, 0
	.type	 sub_80E3920,function
	.thumb_func
sub_80E3920:
	push	{lr}
	ldr	r0, .L166
	mov	r1, #0x3
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L166+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x3
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	Task_80E39BC
	.word	gTasks
.Lfe29:
	.size	 sub_80E3920,.Lfe29-sub_80E3920
	.align	2, 0
	.type	 sub_80E3948,function
	.thumb_func
sub_80E3948:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L172
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L172+0x4
	add	r4, r1, r0
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	bne	.L169	@cond_branch
	cmp	r6, #0
	bne	.L169	@cond_branch
	strh	r7, [r4, #0xa]
	mov	r0, #0x1
	strh	r0, [r4, #0xc]
	b	.L168
.L173:
	.align	2, 0
.L172:
	.word	Task_80E39BC
	.word	gTasks
.L169:
	cmp	r5, #0x3
	bne	.L170	@cond_branch
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L170	@cond_branch
	cmp	r6, #0
	beq	.L168	@cond_branch
.L170:
	ldrh	r1, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3
	beq	.L171	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80E3AE8
.L171:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r7, #0
	bl	sub_80E3B10
.L168:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 sub_80E3948,.Lfe30-sub_80E3948
	.align	2, 0
	.type	 Task_80E39BC,function
	.thumb_func
Task_80E39BC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L188
	add	r4, r1, r0
	ldrh	r1, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x3
	beq	.L174	@cond_branch
	mov	r3, #0xc
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L174	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80E3A74
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r3, [r4, #0xe]
	add	r1, r3, #0
	add	r2, r3, #0
	bl	MultiplyInvertedPaletteRGBComponents
	ldrh	r1, [r4, #0x12]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L177	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x12]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L174	@cond_branch
.L177:
	mov	r0, #0x2
	strh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	blt	.L179	@cond_branch
	ldrh	r2, [r4, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	cmp	r0, #0xd
	bgt	.L180	@cond_branch
	add	r0, r2, r1
	b	.L186
.L189:
	.align	2, 0
.L188:
	.word	gTasks
.L180:
	mov	r0, #0x10
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0x14]
	add	r0, r0, #0x1
	b	.L187
.L179:
	ldrh	r3, [r4, #0xe]
	add	r0, r1, r3
.L186:
	strh	r0, [r4, #0xe]
	ldrh	r2, [r4, #0x14]
	add	r0, r1, r2
.L187:
	strh	r0, [r4, #0x14]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	ldrh	r1, [r4, #0xe]
	cmp	r0, #0x10
	bne	.L183	@cond_branch
	mov	r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x16
	bne	.L183	@cond_branch
	ldr	r0, .L190
	strh	r0, [r4, #0x10]
	b	.L174
.L191:
	.align	2, 0
.L190:
	.word	0xfffc
.L183:
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L174	@cond_branch
	ldrh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	mov	r0, #0x2
	strh	r0, [r4, #0x10]
	strh	r1, [r4, #0x14]
.L174:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 Task_80E39BC,.Lfe31-Task_80E39BC
	.align	2, 0
	.type	 sub_80E3A74,function
	.thumb_func
sub_80E3A74:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x4
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	mov	r1, #0x87
	lsl	r1, r1, #0x1
	add	r5, r1, #0
	add	r0, r0, r5
	add	r6, sp, #0x8
	strh	r0, [r6]
	mov	r0, #0x6
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	add	r0, r0, r5
	mov	r1, sp
	add	r1, r1, #0xa
	strh	r0, [r1]
	mov	r0, #0x7
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	add	r0, r0, r5
	add	r1, sp, #0xc
	strh	r0, [r1]
	mov	r0, #0x7
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x14
	ldr	r1, .L193
	add	r0, r0, r1
	mov	r1, sp
	add	r1, r1, #0xe
	strh	r0, [r1]
	mov	r0, sp
	add	r1, r6, #0
	mov	r2, #0x8
	bl	memcpy
	lsl	r4, r4, #0x1
	mov	r1, sp
	add	r0, r1, r4
	ldrh	r0, [r0]
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L194:
	.align	2, 0
.L193:
	.word	0x101
.Lfe32:
	.size	 sub_80E3A74,.Lfe32-sub_80E3A74
	.align	2, 0
	.type	 sub_80E3AE8,function
	.thumb_func
sub_80E3AE8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80E3A74
	lsl	r0, r0, #0x10
	ldr	r2, .L196
	lsr	r0, r0, #0xf
	add	r2, r0, r2
	ldr	r1, .L196+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
.Lfe33:
	.size	 sub_80E3AE8,.Lfe33-sub_80E3AE8
	.align	2, 0
	.type	 sub_80E3B10,function
	.thumb_func
sub_80E3B10:
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, #0x0
	strh	r1, [r0, #0x8]
	strh	r2, [r0, #0xa]
	mov	r1, #0x1
	strh	r1, [r0, #0xc]
	mov	r2, #0x4
	strh	r2, [r0, #0xe]
	mov	r1, #0x2
	strh	r1, [r0, #0x10]
	strh	r3, [r0, #0x12]
	strh	r2, [r0, #0x14]
	bx	lr
.Lfe34:
	.size	 sub_80E3B10,.Lfe34-sub_80E3B10
	.align	2, 0
	.type	 sub_80E3B30,function
	.thumb_func
sub_80E3B30:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L200	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L200:
	ldrh	r0, [r5, #0x36]
	mov	r1, #0xff
	and	r1, r1, r0
	add	r6, r5, #0
	add	r6, r6, #0x3e
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r6]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L201	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
.L201:
	ldrb	r1, [r6]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L203	@cond_branch
	mov	r1, #0x36
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L203	@cond_branch
	mov	r2, #0x2e
	ldrsh	r1, [r5, r2]
	mov	r2, #0x32
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	bne	.L203	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r5, r0]
	mov	r2, #0x34
	ldrsh	r0, [r5, r2]
	cmp	r1, r0
	beq	.L202	@cond_branch
.L203:
	mov	r0, #0x0
	strh	r0, [r5, #0x38]
	mov	r0, #0x2
	strh	r0, [r5, #0x3a]
	strh	r0, [r5, #0x3c]
.L202:
	ldrh	r0, [r5, #0x3c]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L204	@cond_branch
	ldrh	r1, [r5, #0x3a]
	ldrh	r2, [r5, #0x38]
	add	r0, r1, r2
	strh	r0, [r5, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x10
	beq	.L206	@cond_branch
	cmp	r0, #0
	bne	.L205	@cond_branch
.L206:
	neg	r0, r1
	strh	r0, [r5, #0x3a]
.L205:
	mov	r0, #0x2
	strh	r0, [r5, #0x3c]
.L204:
	mov	r1, #0x36
	ldrsh	r0, [r5, r1]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L207	@cond_branch
	ldrh	r4, [r5, #0x38]
	lsl	r5, r4, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x11
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x4
	ldr	r2, .L208
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r5, #0
	bl	MultiplyInvertedPaletteRGBComponents
.L207:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L209:
	.align	2, 0
.L208:
	.word	0x1010000
.Lfe35:
	.size	 sub_80E3B30,.Lfe35-sub_80E3B30
	.section .rodata
	.align	1, 0
.LC62:
	.short	0x0
	.short	-0x4
	.short	-0x2
	.short	-0x1
.text
	.align	2, 0
	.type	 sub_80E3C20,function
	.thumb_func
sub_80E3C20:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L213
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	ldrh	r1, [r4, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L212	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L211	@cond_branch
.L212:
	mov	r0, #0x8
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0x30]
.L211:
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x24]
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	.LC62
.Lfe36:
	.size	 sub_80E3C20,.Lfe36-sub_80E3C20
	.section .rodata
	.align	1, 0
.LC64:
	.short	0x2
	.short	0x3
	.short	0x2
	.short	0x1
.text
	.align	2, 0
	.type	 sub_80E3C6C,function
	.thumb_func
sub_80E3C6C:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldr	r1, .L220
	mov	r0, sp
	mov	r2, #0x8
	bl	memcpy
	bl	GetTextCaretPosition
	lsl	r0, r0, #0x18
	ldrh	r1, [r4, #0x2e]
	lsl	r1, r1, #0x18
	cmp	r0, r1
	beq	.L216	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x26]
	strh	r0, [r4, #0x30]
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	.LC64
.L216:
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L217	@cond_branch
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0x30]
	mov	r0, #0x0
.L219:
	strh	r0, [r4, #0x32]
.L217:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 sub_80E3C6C,.Lfe37-sub_80E3C6C
	.align	2, 0
	.type	 sub_80E3CC8,function
	.thumb_func
sub_80E3CC8:
	push	{lr}
	bl	CursorInit
	bl	CreatePageSwitcherSprites
	bl	CreateBackOkSprites
	bl	CreateUnderscoreSprites
	bl	CreateInputTargetIcon
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 sub_80E3CC8,.Lfe38-sub_80E3CC8
	.align	2, 0
	.type	 CursorInit,function
	.thumb_func
CursorInit:
	push	{r4, r5, r6, lr}
	ldr	r0, .L224
	mov	r1, #0x26
	mov	r2, #0x58
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r5, .L224+0x4
	ldr	r1, [r5]
	ldr	r4, .L224+0x8
	add	r1, r1, r4
	strb	r0, [r1]
	mov	r0, #0x1
	bl	sub_80E3E3C
	ldr	r6, .L224+0xc
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r3, [r1, #0x5]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0, #0x1]
	and	r2, r2, r1
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	ldr	r2, [r5]
	add	r2, r2, r4
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x1
	strh	r1, [r0, #0x3a]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x2
	strh	r1, [r0, #0x3a]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetCursorPos
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	gUnknown_0858C138
	.word	gNamingScreenData
	.word	0x1e23
	.word	gSprites
.Lfe39:
	.size	 CursorInit,.Lfe39-CursorInit
	.align	2, 0
	.type	 SetCursorPos,function
	.thumb_func
SetCursorPos:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	ldr	r1, .L230
	ldr	r1, [r1]
	ldr	r2, .L230+0x4
	add	r1, r1, r2
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L230+0x8
	add	r5, r1, r2
	lsr	r1, r0, #0x10
	mov	r8, r1
	asr	r6, r0, #0x10
	ldr	r4, .L230+0xc
	bl	sub_80E3274
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L227	@cond_branch
	bl	sub_80E3274
	ldr	r1, .L230+0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x15
	add	r0, r6, r0
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x26
	b	.L229
.L231:
	.align	2, 0
.L230:
	.word	gNamingScreenData
	.word	0x1e23
	.word	gSprites
	.word	gUnknown_0858BEA0
	.word	gUnknown_0858BEA3
.L227:
	mov	r0, #0x0
.L229:
	strh	r0, [r5, #0x20]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0xc
	add	r0, r0, #0x58
	strh	r0, [r5, #0x22]
	ldrh	r0, [r5, #0x2e]
	strh	r0, [r5, #0x32]
	ldrh	r0, [r5, #0x30]
	strh	r0, [r5, #0x34]
	mov	r2, r8
	strh	r2, [r5, #0x2e]
	strh	r7, [r5, #0x30]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 SetCursorPos,.Lfe40-SetCursorPos
	.align	2, 0
	.type	 GetCursorPos,function
	.thumb_func
GetCursorPos:
	ldr	r2, .L233
	ldr	r2, [r2]
	ldr	r3, .L233+0x4
	add	r2, r2, r3
	ldrb	r3, [r2]
	lsl	r2, r3, #0x4
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	ldr	r3, .L233+0x8
	add	r2, r2, r3
	ldrh	r3, [r2, #0x2e]
	strh	r3, [r0]
	ldrh	r0, [r2, #0x30]
	strh	r0, [r1]
	bx	lr
.L234:
	.align	2, 0
.L233:
	.word	gNamingScreenData
	.word	0x1e23
	.word	gSprites
.Lfe41:
	.size	 GetCursorPos,.Lfe41-GetCursorPos
	.align	2, 0
	.type	 MoveCursorToOKButton,function
	.thumb_func
MoveCursorToOKButton:
	push	{lr}
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	SetCursorPos
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 MoveCursorToOKButton,.Lfe42-MoveCursorToOKButton
	.align	2, 0
	.type	 sub_80E3E3C,function
	.thumb_func
sub_80E3E3C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L237
	ldr	r1, .L237+0x4
	ldr	r4, [r1]
	ldr	r1, .L237+0x8
	add	r4, r4, r1
	ldrb	r1, [r4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r3, [r2, #0x36]
	ldr	r1, .L237+0xc
	and	r1, r1, r3
	strh	r1, [r2, #0x36]
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrh	r2, [r1, #0x36]
	orr	r0, r0, r2
	strh	r0, [r1, #0x36]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L238:
	.align	2, 0
.L237:
	.word	gSprites
	.word	gNamingScreenData
	.word	0x1e23
	.word	-0x100
.Lfe43:
	.size	 sub_80E3E3C,.Lfe43-sub_80E3E3C
	.align	2, 0
	.type	 sub_80E3E94,function
	.thumb_func
sub_80E3E94:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	ldr	r5, .L240
	ldr	r1, .L240+0x4
	ldr	r4, [r1]
	ldr	r1, .L240+0x8
	add	r4, r4, r1
	ldrb	r1, [r4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r3, [r2, #0x36]
	mov	r1, #0xff
	and	r1, r1, r3
	strh	r1, [r2, #0x36]
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsr	r0, r0, #0x10
	ldrh	r2, [r1, #0x36]
	orr	r0, r0, r2
	strh	r0, [r1, #0x36]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	gSprites
	.word	gNamingScreenData
	.word	0x1e23
.Lfe44:
	.size	 sub_80E3E94,.Lfe44-sub_80E3E94
	.align	2, 0
	.type	 sub_80E3ED8,function
	.thumb_func
sub_80E3ED8:
	push	{lr}
	ldr	r0, .L243
	ldr	r0, [r0]
	ldr	r1, .L243+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L243+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	pop	{r0}
	bx	r0
.L244:
	.align	2, 0
.L243:
	.word	gNamingScreenData
	.word	0x1e23
	.word	gSprites
.Lfe45:
	.size	 sub_80E3ED8,.Lfe45-sub_80E3ED8
	.align	2, 0
	.type	 IsCursorAnimFinished,function
	.thumb_func
IsCursorAnimFinished:
	ldr	r2, .L246
	ldr	r0, .L246+0x4
	ldr	r0, [r0]
	ldr	r1, .L246+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L247:
	.align	2, 0
.L246:
	.word	gSprites
	.word	gNamingScreenData
	.word	0x1e23
.Lfe46:
	.size	 IsCursorAnimFinished,.Lfe46-IsCursorAnimFinished
	.section .rodata
	.type	 sKeyRoles,object
sKeyRoles:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sKeyRoles,3
.text
	.align	2, 0
	.type	 GetKeyRoleAtCursorPos,function
	.thumb_func
GetKeyRoleAtCursorPos:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r5, sp
	add	r5, r5, #0x2
	mov	r0, sp
	add	r1, r5, #0
	bl	GetCursorPos
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r4, [r0, r1]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L249	@cond_branch
	ldr	r0, .L252
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	add	r1, r1, r0
	ldrb	r0, [r1]
	b	.L251
.L253:
	.align	2, 0
.L252:
	.word	sKeyRoles
.L249:
	mov	r0, #0x0
.L251:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 GetKeyRoleAtCursorPos,.Lfe47-GetKeyRoleAtCursorPos
	.align	2, 0
	.type	 GetCurrentPageColumnCount,function
	.thumb_func
GetCurrentPageColumnCount:
	push	{r4, lr}
	ldr	r4, .L255
	bl	sub_80E3274
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r0, [r0]
	pop	{r4}
	pop	{r1}
	bx	r1
.L256:
	.align	2, 0
.L255:
	.word	gUnknown_0858BEA0
.Lfe48:
	.size	 GetCurrentPageColumnCount,.Lfe48-GetCurrentPageColumnCount
	.align	2, 0
	.type	 CreatePageSwitcherSprites,function
	.thumb_func
CreatePageSwitcherSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L258
	mov	r1, #0xcc
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L258+0x4
	ldr	r1, [r1]
	ldr	r2, .L258+0x8
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L258+0xc
	mov	r8, r0
	add	r5, r5, r8
	ldr	r1, .L258+0x10
	add	r0, r5, #0
	bl	SetSubspriteTables
	add	r1, r5, #0
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r6, #0x4
	orr	r0, r0, r6
	strb	r0, [r1]
	ldr	r0, .L258+0x14
	mov	r1, #0xcc
	mov	r2, #0x54
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x3a]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r8
	ldr	r1, .L258+0x18
	add	r0, r4, #0
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	orr	r0, r0, r6
	strb	r0, [r4]
	ldr	r0, .L258+0x1c
	mov	r1, #0xcc
	mov	r2, #0x53
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r6
	strb	r1, [r2, #0x5]
	strh	r0, [r5, #0x3c]
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	orr	r0, r0, r6
	strb	r0, [r2]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L259:
	.align	2, 0
.L258:
	.word	gUnknown_0858C0C0
	.word	gNamingScreenData
	.word	0x1e24
	.word	gSprites
	.word	gUnknown_0858C050
	.word	gUnknown_0858C0F0
	.word	gUnknown_0858C058
	.word	gUnknown_0858C0D8
.Lfe49:
	.size	 CreatePageSwitcherSprites,.Lfe49-CreatePageSwitcherSprites
	.align	2, 0
	.type	 sub_80E4050,function
	.thumb_func
sub_80E4050:
	ldr	r0, .L261
	ldr	r2, [r0]
	ldr	r1, .L261+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L261+0x8
	add	r0, r0, r1
	mov	r1, #0x2
	strh	r1, [r0, #0x2e]
	ldr	r1, .L261+0xc
	add	r2, r2, r1
	ldrb	r1, [r2]
	strh	r1, [r0, #0x30]
	bx	lr
.L262:
	.align	2, 0
.L261:
	.word	gNamingScreenData
	.word	0x1e24
	.word	gSprites
	.word	0x1e22
.Lfe50:
	.size	 sub_80E4050,.Lfe50-sub_80E4050
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0858BEE8,object
gUnknown_0858BEE8:
	.word	sub_80E40AC
	.word	sub_80E4100
	.word	sub_80E4104
	.word	sub_80E4178
	.size	 gUnknown_0858BEE8,16
.text
	.align	2, 0
	.type	 sub_80E4084,function
	.thumb_func
sub_80E4084:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L268
.L264:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L264	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	gUnknown_0858BEE8
.Lfe51:
	.size	 sub_80E4084,.Lfe51-sub_80E4084
	.align	2, 0
	.type	 sub_80E40AC,function
	.thumb_func
sub_80E40AC:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x3a
	ldrsh	r0, [r6, r1]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r1, .L271
	add	r5, r5, r1
	mov	r2, #0x3c
	ldrsh	r0, [r6, r2]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r1
	ldr	r0, .L271+0x4
	ldr	r0, [r0]
	ldr	r1, .L271+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_80E3244
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	sub_80E41B8
	ldrh	r0, [r6, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2e]
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L272:
	.align	2, 0
.L271:
	.word	gSprites
	.word	gNamingScreenData
	.word	0x1e22
.Lfe52:
	.size	 sub_80E40AC,.Lfe52-sub_80E40AC
	.align	2, 0
	.type	 sub_80E4100,function
	.thumb_func
sub_80E4100:
	mov	r0, #0x0
	bx	lr
.Lfe53:
	.size	 sub_80E4100,.Lfe53-sub_80E4100
	.align	2, 0
	.type	 sub_80E4104,function
	.thumb_func
sub_80E4104:
	push	{r4, r5, lr}
	add	r3, r0, #0
	mov	r0, #0x3a
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L276
	add	r4, r0, r2
	mov	r0, #0x3c
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r2
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L275	@cond_branch
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	ldr	r0, .L276+0x4
	strh	r0, [r4, #0x26]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r3, #0x30]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x1
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80E3244
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_80E41B8
.L275:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L277:
	.align	2, 0
.L276:
	.word	gSprites
	.word	0xfffc
.Lfe54:
	.size	 sub_80E4104,.Lfe54-sub_80E4104
	.align	2, 0
	.type	 sub_80E4178,function
	.thumb_func
sub_80E4178:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x3a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L280
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x26]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	blt	.L279	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x26]
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
.L279:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L281:
	.align	2, 0
.L280:
	.word	gSprites
.Lfe55:
	.size	 sub_80E4178,.Lfe55-sub_80E4178
	.section .rodata
	.align	1, 0
	.type	 gUnknown_0858BEF8,object
gUnknown_0858BEF8:
	.short	0x1
	.short	0x3
	.short	0x2
	.size	 gUnknown_0858BEF8,6
	.align	1, 0
	.type	 gUnknown_0858BEFE,object
gUnknown_0858BEFE:
	.short	0x4
	.short	0x6
	.short	0x5
	.size	 gUnknown_0858BEFE,6
.text
	.align	2, 0
	.type	 sub_80E41B8,function
	.thumb_func
sub_80E41B8:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L283
	lsl	r4, r5, #0x1
	add	r0, r4, r0
	ldrh	r0, [r0]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	mov	r1, r8
	ldrb	r2, [r1, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	mov	r0, r8
	strb	r1, [r0, #0x5]
	ldr	r0, .L283+0x4
	add	r4, r4, r0
	ldrh	r0, [r4]
	bl	GetSpriteTileStartByTag
	add	r1, r6, #0
	add	r1, r1, #0x40
	strh	r0, [r1]
	add	r6, r6, #0x42
	mov	r1, #0x3f
	and	r1, r1, r5
	ldrb	r2, [r6]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	gUnknown_0858BEF8
	.word	gUnknown_0858BEFE
.Lfe56:
	.size	 sub_80E41B8,.Lfe56-sub_80E41B8
	.align	2, 0
	.type	 CreateBackOkSprites,function
	.thumb_func
CreateBackOkSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L286
	mov	r1, #0xcc
	mov	r2, #0x74
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r6, .L286+0x4
	add	r4, r4, r6
	ldr	r0, .L286+0x8
	mov	r8, r0
	add	r0, r4, #0
	mov	r1, r8
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	mov	r5, #0x4
	orr	r0, r0, r5
	strb	r0, [r4]
	ldr	r0, .L286+0xc
	mov	r1, #0xcc
	mov	r2, #0x8c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	add	r0, r4, #0
	mov	r1, r8
	bl	SetSubspriteTables
	add	r4, r4, #0x3e
	ldrb	r0, [r4]
	orr	r0, r0, r5
	strb	r0, [r4]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	gUnknown_0858C108
	.word	gSprites
	.word	gUnknown_0858C070
	.word	gUnknown_0858C120
.Lfe57:
	.size	 CreateBackOkSprites,.Lfe57-CreateBackOkSprites
	.align	2, 0
	.type	 CreateUnderscoreSprites,function
	.thumb_func
CreateUnderscoreSprites:
	push	{r4, r5, r6, lr}
	ldr	r5, .L294
	ldr	r0, [r5]
	ldr	r4, .L294+0x4
	add	r0, r0, r4
	ldrh	r1, [r0]
	sub	r1, r1, #0x5
	ldr	r0, .L294+0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x38
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r3, .L294+0xc
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r4, r0, r4
	ldrh	r1, [r4]
	mov	r5, #0x0
	ldr	r2, .L294+0x10
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r5, r0
	bcs	.L290	@cond_branch
	add	r6, r3, #0
.L292:
	lsl	r1, r1, #0x10
	asr	r4, r1, #0x10
	mov	r0, #0xc0
	lsl	r0, r0, #0xa
	add	r1, r1, r0
	asr	r1, r1, #0x10
	ldr	r0, .L294+0x14
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	strh	r5, [r0, #0x2e]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r4, #0x8
	lsl	r4, r4, #0x10
	lsr	r1, r4, #0x10
	ldr	r0, .L294
	ldr	r0, [r0]
	ldr	r2, .L294+0x10
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	cmp	r5, r0
	bcc	.L292	@cond_branch
.L290:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	gNamingScreenData
	.word	0x1e16
	.word	sSpriteTemplate_InputArrow
	.word	gSprites
	.word	0x1e28
	.word	sSpriteTemplate_Underscore
.Lfe58:
	.size	 CreateUnderscoreSprites,.Lfe58-CreateUnderscoreSprites
	.section .rodata
	.align	2, 0
	.type	 sIconFunctions,object
sIconFunctions:
	.word	TaskDummy2
	.word	NamingScreen_CreatePlayerIcon
	.word	NamingScreen_CreatePCIcon
	.word	NamingScreen_CreateMonIcon
	.word	NamingScreen_CreateWandaDadIcon
	.size	 sIconFunctions,20
.text
	.align	2, 0
	.type	 CreateInputTargetIcon,function
	.thumb_func
CreateInputTargetIcon:
	push	{lr}
	ldr	r1, .L297
	ldr	r0, .L297+0x4
	ldr	r0, [r0]
	ldr	r2, .L297+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L298:
	.align	2, 0
.L297:
	.word	sIconFunctions
	.word	gNamingScreenData
	.word	0x1e28
.Lfe59:
	.size	 CreateInputTargetIcon,.Lfe59-CreateInputTargetIcon
	.align	2, 0
	.type	 TaskDummy2,function
	.thumb_func
TaskDummy2:
	bx	lr
.Lfe60:
	.size	 TaskDummy2,.Lfe60-TaskDummy2
	.align	2, 0
	.type	 NamingScreen_CreatePlayerIcon,function
	.thumb_func
NamingScreen_CreatePlayerIcon:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L301
	ldr	r0, [r0]
	ldr	r1, .L301+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x0
	bl	GetRivalAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L301+0x8
	mov	r2, #0x0
	str	r2, [sp]
	mov	r2, #0x38
	mov	r3, #0x25
	bl	AddPseudoObjectEvent
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L301+0xc
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x4
	bl	StartSpriteAnim
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	gNamingScreenData
	.word	0x1e34
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe61:
	.size	 NamingScreen_CreatePlayerIcon,.Lfe61-NamingScreen_CreatePlayerIcon
	.align	2, 0
	.type	 NamingScreen_CreatePCIcon,function
	.thumb_func
NamingScreen_CreatePCIcon:
	push	{r4, lr}
	ldr	r0, .L304
	mov	r1, #0x38
	mov	r2, #0x29
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L304+0x4
	add	r4, r4, r0
	ldr	r1, .L304+0x8
	add	r0, r4, #0
	bl	SetSubspriteTables
	ldrb	r0, [r4, #0x5]
	mov	r1, #0xc
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	pop	{r4}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	gUnknown_0858C180
	.word	gSprites
	.word	gUnknown_0858C078
.Lfe62:
	.size	 NamingScreen_CreatePCIcon,.Lfe62-NamingScreen_CreatePCIcon
	.align	2, 0
	.type	 NamingScreen_CreateMonIcon,function
	.thumb_func
NamingScreen_CreateMonIcon:
	push	{lr}
	add	sp, sp, #-0xc
	bl	LoadMonIconPalettes
	ldr	r0, .L307
	ldr	r3, [r0]
	ldr	r1, .L307+0x4
	add	r0, r3, r1
	ldrh	r0, [r0]
	ldr	r1, .L307+0x8
	mov	r2, #0x0
	str	r2, [sp]
	ldr	r2, .L307+0xc
	add	r3, r3, r2
	ldr	r2, [r3]
	str	r2, [sp, #0x4]
	mov	r2, #0x1
	str	r2, [sp, #0x8]
	mov	r2, #0x38
	mov	r3, #0x28
	bl	CreateMonIcon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L307+0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L308:
	.align	2, 0
.L307:
	.word	gNamingScreenData
	.word	0x1e34
	.word	SpriteCallbackDummy
	.word	0x1e38
	.word	gSprites
.Lfe63:
	.size	 NamingScreen_CreateMonIcon,.Lfe63-NamingScreen_CreateMonIcon
	.align	2, 0
	.type	 NamingScreen_CreateWandaDadIcon,function
	.thumb_func
NamingScreen_CreateWandaDadIcon:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L310
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x13
	mov	r2, #0x38
	mov	r3, #0x25
	bl	AddPseudoObjectEvent
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L310+0x4
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x5]
	mov	r2, #0xc
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x4
	bl	StartSpriteAnim
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L311:
	.align	2, 0
.L310:
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe64:
	.size	 NamingScreen_CreateWandaDadIcon,.Lfe64-NamingScreen_CreateWandaDadIcon
	.section .rodata
	.align	2, 0
	.type	 sKeyboardKeyHandlers,object
sKeyboardKeyHandlers:
	.word	KeyboardKeyHandler_Character
	.word	KeyboardKeyHandler_Page
	.word	KeyboardKeyHandler_Backspace
	.word	KeyboardKeyHandler_OK
	.size	 sKeyboardKeyHandlers,16
.text
	.align	2, 0
	.type	 HandleKeyboardEvent,function
	.thumb_func
HandleKeyboardEvent:
	push	{r4, r5, lr}
	bl	GetInputEvent
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	GetKeyRoleAtCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, #0x8
	bne	.L313	@cond_branch
	bl	sub_80E45E0
	b	.L320
.L313:
	cmp	r4, #0x6
	bne	.L315	@cond_branch
	bl	DeleteTextCharacter
	b	.L321
.L315:
	cmp	r5, #0x9
	beq	.L317	@cond_branch
	ldr	r1, .L322
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
.L320:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L319
.L323:
	.align	2, 0
.L322:
	.word	sKeyboardKeyHandlers
.L317:
	bl	MoveCursorToOKButton
.L321:
	mov	r0, #0x0
.L319:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 HandleKeyboardEvent,.Lfe65-HandleKeyboardEvent
	.align	2, 0
	.type	 KeyboardKeyHandler_Character,function
	.thumb_func
KeyboardKeyHandler_Character:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_80E3948
	cmp	r4, #0x5
	bne	.L325	@cond_branch
	bl	sub_80E4B54
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_80E3ED8
	cmp	r4, #0
	beq	.L325	@cond_branch
	mov	r0, #0x2
	bl	SetInputState
	ldr	r0, .L327
	ldr	r0, [r0]
	ldr	r1, .L327+0x4
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
.L325:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L328:
	.align	2, 0
.L327:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe66:
	.size	 KeyboardKeyHandler_Character,.Lfe66-KeyboardKeyHandler_Character
	.align	2, 0
	.type	 KeyboardKeyHandler_Page,function
	.thumb_func
KeyboardKeyHandler_Page:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	sub_80E3948
	cmp	r4, #0x5
	beq	.L330	@cond_branch
	mov	r0, #0x0
	b	.L332
.L330:
	bl	sub_80E45E0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L332:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 KeyboardKeyHandler_Page,.Lfe67-KeyboardKeyHandler_Page
	.align	2, 0
	.type	 KeyboardKeyHandler_Backspace,function
	.thumb_func
KeyboardKeyHandler_Backspace:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	sub_80E3948
	cmp	r4, #0x5
	bne	.L334	@cond_branch
	bl	DeleteTextCharacter
.L334:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 KeyboardKeyHandler_Backspace,.Lfe68-KeyboardKeyHandler_Backspace
	.align	2, 0
	.type	 KeyboardKeyHandler_OK,function
	.thumb_func
KeyboardKeyHandler_OK:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	bl	sub_80E3948
	cmp	r4, #0x5
	beq	.L336	@cond_branch
	mov	r0, #0x0
	b	.L338
.L336:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L339
	ldr	r0, [r0]
	ldr	r1, .L339+0x4
	add	r0, r0, r1
	mov	r1, #0x6
	strb	r1, [r0]
	mov	r0, #0x1
.L338:
	pop	{r4}
	pop	{r1}
	bx	r1
.L340:
	.align	2, 0
.L339:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe69:
	.size	 KeyboardKeyHandler_OK,.Lfe69-KeyboardKeyHandler_OK
	.align	2, 0
	.type	 sub_80E45E0,function
	.thumb_func
sub_80E45E0:
	ldr	r0, .L342
	ldr	r0, [r0]
	ldr	r1, .L342+0x4
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	mov	r0, #0x1
	bx	lr
.L343:
	.align	2, 0
.L342:
	.word	gNamingScreenData
	.word	0x1e10
.Lfe70:
	.size	 sub_80E45E0,.Lfe70-sub_80E45E0
	.section .rodata
	.align	2, 0
	.type	 sInputStateFuncs,object
sInputStateFuncs:
	.word	InputState_Disabled
	.word	InputState_Enabled
	.word	InputState_2
	.size	 sInputStateFuncs,12
.text
	.align	2, 0
	.type	 InputInit,function
	.thumb_func
InputInit:
	push	{lr}
	ldr	r0, .L345
	mov	r1, #0x1
	bl	CreateTask
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	Task_HandleInput
.Lfe71:
	.size	 InputInit,.Lfe71-InputInit
	.align	2, 0
	.type	 GetInputEvent,function
	.thumb_func
GetInputEvent:
	push	{lr}
	ldr	r0, .L348
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L348+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0xa]
	pop	{r1}
	bx	r1
.L349:
	.align	2, 0
.L348:
	.word	Task_HandleInput
	.word	gTasks
.Lfe72:
	.size	 GetInputEvent,.Lfe72-GetInputEvent
	.align	2, 0
	.type	 SetInputState,function
	.thumb_func
SetInputState:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L351
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L351+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	Task_HandleInput
	.word	gTasks
.Lfe73:
	.size	 SetInputState,.Lfe73-SetInputState
	.align	2, 0
	.type	 Task_HandleInput,function
	.thumb_func
Task_HandleInput:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L354
	ldr	r2, .L354+0x4
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	sInputStateFuncs
	.word	gTasks
.Lfe74:
	.size	 Task_HandleInput,.Lfe74-Task_HandleInput
	.align	2, 0
	.type	 InputState_Disabled,function
	.thumb_func
InputState_Disabled:
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	bx	lr
.Lfe75:
	.size	 InputState_Disabled,.Lfe75-InputState_Disabled
	.align	2, 0
	.type	 InputState_Enabled,function
	.thumb_func
InputState_Enabled:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x0
	strh	r0, [r2, #0xa]
	ldr	r0, .L366
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L358	@cond_branch
	mov	r0, #0x5
	strh	r0, [r2, #0xa]
	b	.L359
.L367:
	.align	2, 0
.L366:
	.word	gMain
.L358:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L360	@cond_branch
	mov	r0, #0x6
	strh	r0, [r2, #0xa]
	b	.L359
.L360:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L362	@cond_branch
	mov	r0, #0x8
	strh	r0, [r2, #0xa]
	b	.L359
.L362:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L364	@cond_branch
	mov	r0, #0x9
	strh	r0, [r2, #0xa]
	b	.L359
.L364:
	add	r0, r2, #0
	bl	HandleDpadMovement
.L359:
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 InputState_Enabled,.Lfe76-InputState_Enabled
	.align	2, 0
	.type	 InputState_2,function
	.thumb_func
InputState_2:
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	bx	lr
.Lfe77:
	.size	 InputState_2,.Lfe77-InputState_2
	.section .rodata
	.align	1, 0
.LC135:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	-0x1
	.short	0x1
	.align	1, 0
.LC137:
	.short	0x0
	.short	-0x1
	.short	0x1
	.short	0x0
	.short	0x0
	.align	1, 0
.LC139:
	.short	0x0
	.short	0x1
	.short	0x1
	.short	0x2
	.align	1, 0
.LC141:
	.short	0x0
	.short	0x0
	.short	0x3
.text
	.align	2, 0
	.type	 HandleDpadMovement,function
	.thumb_func
HandleDpadMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x34
	mov	r9, r0
	ldr	r1, .L393
	mov	r0, sp
	mov	r2, #0xa
	bl	memcpy
	add	r0, sp, #0xc
	mov	sl, r0
	ldr	r1, .L393+0x4
	mov	r2, #0xa
	bl	memcpy
	mov	r1, sp
	add	r1, r1, #0x18
	str	r1, [sp, #0x2c]
	ldr	r1, .L393+0x8
	ldr	r0, [sp, #0x2c]
	mov	r2, #0x8
	bl	memcpy
	mov	r2, sp
	add	r2, r2, #0x20
	str	r2, [sp, #0x30]
	ldr	r1, .L393+0xc
	add	r0, r2, #0
	mov	r2, #0x6
	bl	memcpy
	add	r4, sp, #0x28
	mov	r5, sp
	add	r5, r5, #0x2a
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetCursorPos
	ldr	r0, .L393+0x10
	ldrh	r2, [r0, #0x30]
	mov	r0, #0x40
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	neg	r0, r0
	lsr	r1, r0, #0x1f
	mov	r0, #0x80
	and	r0, r0, r2
	add	r6, r4, #0
	cmp	r0, #0
	beq	.L371	@cond_branch
	mov	r1, #0x2
.L371:
	mov	r0, #0x20
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L372	@cond_branch
	mov	r1, #0x3
.L372:
	mov	r0, #0x10
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L373	@cond_branch
	mov	r1, #0x4
.L373:
	ldrh	r0, [r6]
	mov	r8, r0
	lsl	r1, r1, #0x1
	mov	r2, sp
	add	r7, r2, r1
	ldrh	r0, [r7]
	add	r0, r0, r8
	strh	r0, [r6]
	add	r1, r1, sl
	ldrh	r0, [r1]
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0
	bge	.L374	@cond_branch
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6]
.L374:
	mov	r0, #0x0
	ldrsh	r4, [r6, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	ble	.L375	@cond_branch
	mov	r0, #0x0
	strh	r0, [r6]
.L375:
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L376	@cond_branch
	mov	r2, #0x0
	ldrsh	r4, [r6, r2]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L377	@cond_branch
	ldrh	r0, [r5]
	mov	r1, r9
	strh	r0, [r1, #0xc]
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x1
	ldr	r1, [sp, #0x2c]
	add	r0, r1, r0
	b	.L391
.L394:
	.align	2, 0
.L393:
	.word	.LC135
	.word	.LC137
	.word	.LC139
	.word	.LC141
	.word	gMain
.L377:
	mov	r2, r8
	lsl	r4, r2, #0x10
	asr	r4, r4, #0x10
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L376	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	bne	.L380	@cond_branch
	mov	r2, r9
	ldrh	r0, [r2, #0xc]
	b	.L392
.L380:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x1
	ldr	r2, [sp, #0x30]
	add	r0, r2, r0
.L391:
	ldrh	r0, [r0]
.L392:
	strh	r0, [r5]
.L376:
	mov	r0, #0x0
	ldrsh	r4, [r6, r0]
	bl	GetCurrentPageColumnCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L382	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bge	.L383	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5]
.L383:
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x2
	ble	.L384	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
.L384:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L385	@cond_branch
	mov	r0, #0x1
	mov	r2, r9
	strh	r0, [r2, #0xc]
	b	.L388
.L385:
	cmp	r0, #0x2
	bne	.L388	@cond_branch
	mov	r1, r9
	strh	r0, [r1, #0xc]
	b	.L388
.L382:
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bge	.L389	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5]
.L389:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3
	ble	.L388	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
.L388:
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	SetCursorPos
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 HandleDpadMovement,.Lfe78-HandleDpadMovement
	.align	2, 0
	.type	 sub_80E4894,function
	.thumb_func
sub_80E4894:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L396
	ldr	r0, [r5]
	ldr	r4, .L396+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r1, [r5]
	add	r0, r1, r4
	ldrb	r0, [r0]
	ldr	r2, .L396+0x8
	add	r1, r1, r2
	ldr	r1, [r1]
	ldr	r2, [r1, #0x8]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	gNamingScreenData
	.word	0x1e14
	.word	0x1e28
.Lfe79:
	.size	 sub_80E4894,.Lfe79-sub_80E4894
	.align	2, 0
	.type	 sub_80E48E8,function
	.thumb_func
sub_80E48E8:
	push	{r4, r5, lr}
	add	sp, sp, #-0x2c
	ldr	r5, .L399
	ldr	r0, [r5]
	ldr	r1, .L399+0x4
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L399+0x8
	add	r1, r1, r0
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r0, [r5]
	ldr	r1, .L399+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r0, #0x8]
	add	r0, sp, #0xc
	mov	r2, #0xf
	bl	StringAppendN
	ldr	r0, [r5]
	ldr	r4, .L399+0x10
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	mov	r3, #0x8
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0x2c
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	gNamingScreenData
	.word	0x1e34
	.word	gSpeciesNames
	.word	0x1e28
	.word	0x1e14
.Lfe80:
	.size	 sub_80E48E8,.Lfe80-sub_80E48E8
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0858BF58,object
gUnknown_0858BF58:
	.word	sub_80E4894
	.word	sub_80E4894
	.word	sub_80E48E8
	.word	sub_80E48E8
	.word	sub_80E4894
	.size	 gUnknown_0858BF58,20
.text
	.align	2, 0
	.type	 sub_80E4964,function
	.thumb_func
sub_80E4964:
	push	{lr}
	ldr	r1, .L402
	ldr	r0, .L402+0x4
	ldr	r0, [r0]
	ldr	r2, .L402+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gUnknown_0858BF58
	.word	gNamingScreenData
	.word	0x1e2c
.Lfe81:
	.size	 sub_80E4964,.Lfe81-sub_80E4964
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0858BF6C,object
gUnknown_0858BF6C:
	.word	TaskDummy3
	.word	sub_80E49BC
	.size	 gUnknown_0858BF6C,8
.text
	.align	2, 0
	.type	 sub_80E498C,function
	.thumb_func
sub_80E498C:
	push	{lr}
	ldr	r1, .L405
	ldr	r0, .L405+0x4
	ldr	r0, [r0]
	ldr	r2, .L405+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	pop	{r0}
	bx	r0
.L406:
	.align	2, 0
.L405:
	.word	gUnknown_0858BF6C
	.word	gNamingScreenData
	.word	0x1e28
.Lfe82:
	.size	 sub_80E498C,.Lfe82-sub_80E498C
	.align	2, 0
	.type	 TaskDummy3,function
	.thumb_func
TaskDummy3:
	bx	lr
.Lfe83:
	.size	 TaskDummy3,.Lfe83-TaskDummy3
	.section .rodata
	.type	 sGenderColors,object
	.size	 sGenderColors,6
sGenderColors:
	.byte	0x0
	.byte	0x9
	.byte	0x8
	.byte	0x0
	.byte	0x5
	.byte	0x4
.text
	.align	2, 0
	.type	 sub_80E49BC,function
	.thumb_func
sub_80E49BC:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	mov	r4, #0x0
	ldr	r1, .L411
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r5, .L411+0x4
	ldr	r0, [r5]
	ldr	r1, .L411+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xff
	beq	.L409	@cond_branch
	cmp	r0, #0xfe
	bne	.L410	@cond_branch
	ldr	r1, .L411+0xc
	add	r0, sp, #0xc
	bl	StringCopy
	mov	r4, #0x1
.L410:
	ldr	r0, [r5]
	ldr	r1, .L411+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	ldr	r2, .L411+0x14
	add	r1, r1, r2
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r2, #0x68
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
.L409:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gText_MaleSymbol
	.word	gNamingScreenData
	.word	0x1e36
	.word	gText_FemaleSymbol
	.word	0x1e13
	.word	sGenderColors
.Lfe84:
	.size	 sub_80E49BC,.Lfe84-sub_80E49BC
	.align	2, 0
	.type	 GetCharAtKeyboardPos,function
	.thumb_func
GetCharAtKeyboardPos:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L414
	bl	sub_80E3274
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0xd
	add	r4, r4, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x13
	add	r4, r4, r0
	add	r4, r4, r6
	ldrb	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L415:
	.align	2, 0
.L414:
	.word	gUnknown_0858BE40
.Lfe85:
	.size	 GetCharAtKeyboardPos,.Lfe85-GetCharAtKeyboardPos
	.align	2, 0
	.type	 GetTextCaretPosition,function
	.thumb_func
GetTextCaretPosition:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r0, .L424
	ldr	r4, [r0]
	ldr	r3, .L424+0x4
	add	r1, r4, r3
	ldr	r1, [r1]
	ldrb	r3, [r1, #0x1]
	add	r5, r0, #0
	cmp	r2, r3
	bcs	.L418	@cond_branch
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r1, r4, r0
.L420:
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L419	@cond_branch
	add	r0, r2, #0
	b	.L423
.L425:
	.align	2, 0
.L424:
	.word	gNamingScreenData
	.word	0x1e28
.L419:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r3
	bcc	.L420	@cond_branch
.L418:
	ldr	r0, [r5]
	ldr	r1, .L426
	add	r0, r0, r1
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L423:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L427:
	.align	2, 0
.L426:
	.word	0x1e28
.Lfe86:
	.size	 GetTextCaretPosition,.Lfe86-GetTextCaretPosition
	.align	2, 0
	.type	 GetPreviousTextCaretPosition,function
	.thumb_func
GetPreviousTextCaretPosition:
	push	{lr}
	ldr	r0, .L436
	ldr	r2, [r0]
	ldr	r1, .L436+0x4
	add	r0, r2, r1
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1]
	sub	r0, r0, #0x1
	lsl	r1, r0, #0x18
	cmp	r1, #0
	ble	.L430	@cond_branch
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r3, r2, r0
.L432:
	asr	r2, r1, #0x18
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	beq	.L431	@cond_branch
	lsr	r0, r1, #0x18
	b	.L435
.L437:
	.align	2, 0
.L436:
	.word	gNamingScreenData
	.word	0x1e28
.L431:
	sub	r0, r2, #0x1
	lsl	r1, r0, #0x18
	cmp	r1, #0
	bgt	.L432	@cond_branch
.L430:
	mov	r0, #0x0
.L435:
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 GetPreviousTextCaretPosition,.Lfe87-GetPreviousTextCaretPosition
	.align	2, 0
	.type	 DeleteTextCharacter,function
	.thumb_func
DeleteTextCharacter:
	push	{r4, r5, r6, lr}
	bl	GetPreviousTextCaretPosition
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L441
	ldr	r0, [r6]
	mov	r5, #0xc0
	lsl	r5, r5, #0x5
	add	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x0
	strb	r1, [r0]
	bl	sub_80E4D10
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xff
	strb	r1, [r0]
	bl	GetKeyRoleAtCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L440	@cond_branch
	cmp	r0, #0x2
	bne	.L439	@cond_branch
.L440:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1
	bl	sub_80E3948
.L439:
	mov	r0, #0x17
	bl	PlaySE
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L442:
	.align	2, 0
.L441:
	.word	gNamingScreenData
.Lfe88:
	.size	 DeleteTextCharacter,.Lfe88-DeleteTextCharacter
	.align	2, 0
	.type	 sub_80E4B54,function
	.thumb_func
sub_80E4B54:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCursorPos
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	GetCharAtKeyboardPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	AddTextCharacter
	bl	sub_80E4D10
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x5
	bl	PlaySE
	bl	GetPreviousTextCaretPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L447
	ldr	r1, [r1]
	ldr	r2, .L447+0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	ldrb	r1, [r1, #0x1]
	sub	r1, r1, #0x1
	cmp	r0, r1
	bne	.L444	@cond_branch
	mov	r0, #0x1
	b	.L446
.L448:
	.align	2, 0
.L447:
	.word	gNamingScreenData
	.word	0x1e28
.L444:
	mov	r0, #0x0
.L446:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 sub_80E4B54,.Lfe89-sub_80E4B54
	.align	2, 0
	.type	 AddTextCharacter,function
	.thumb_func
AddTextCharacter:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetTextCaretPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L450
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	add	r1, r1, r0
	strb	r4, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L451:
	.align	2, 0
.L450:
	.word	gNamingScreenData
.Lfe90:
	.size	 AddTextCharacter,.Lfe90-AddTextCharacter
	.align	2, 0
	.type	 sub_80E4BE4,function
	.thumb_func
sub_80E4BE4:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r1, .L460
	ldr	r0, [r1]
	ldr	r4, .L460+0x4
	add	r0, r0, r4
	ldr	r0, [r0]
	add	r5, r1, #0
	b	.L459
.L461:
	.align	2, 0
.L460:
	.word	gNamingScreenData
	.word	0x1e28
.L456:
	ldr	r1, [r1]
	mov	r0, #0xc0
	lsl	r0, r0, #0x5
	add	r3, r1, r0
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L455	@cond_branch
	cmp	r0, #0xff
	beq	.L455	@cond_branch
	ldr	r2, .L462
	add	r0, r1, r2
	ldr	r0, [r0]
	add	r1, r1, r4
	ldr	r1, [r1]
	ldrb	r2, [r1, #0x1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r3, #0
	bl	StringCopyN
	b	.L454
.L463:
	.align	2, 0
.L462:
	.word	0x1e30
.L455:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r1, r5, #0
	ldr	r0, [r1]
	ldr	r4, .L464
	add	r0, r0, r4
	ldr	r0, [r0]
.L459:
	ldrb	r0, [r0, #0x1]
	cmp	r2, r0
	bcc	.L456	@cond_branch
.L454:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L465:
	.align	2, 0
.L464:
	.word	0x1e28
.Lfe91:
	.size	 sub_80E4BE4,.Lfe91-sub_80E4BE4
	.align	2, 0
	.type	 choose_name_or_words_screen_load_bg_tile_patterns,function
	.thumb_func
choose_name_or_words_screen_load_bg_tile_patterns:
	push	{r4, r5, r6, lr}
	ldr	r0, .L467
	ldr	r6, .L467+0x4
	ldr	r1, [r6]
	ldr	r4, .L467+0x8
	add	r1, r1, r4
	bl	LZ77UnCompWram
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r5, #0xc0
	lsl	r5, r5, #0x3
	mov	r0, #0x1
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r0, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, [r6]
	add	r1, r1, r4
	mov	r0, #0x3
	add	r2, r5, #0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r0, .L467+0xc
	bl	LoadSpriteSheets
	ldr	r0, .L467+0x10
	bl	LoadSpritePalettes
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L468:
	.align	2, 0
.L467:
	.word	gNamingScreenMenu_Gfx
	.word	gNamingScreenData
	.word	0x1810
	.word	gUnknown_0858C1C8
	.word	gUnknown_0858C230
.Lfe92:
	.size	 choose_name_or_words_screen_load_bg_tile_patterns,.Lfe92-choose_name_or_words_screen_load_bg_tile_patterns
	.align	2, 0
	.type	 sub_80E4CB8,function
	.thumb_func
sub_80E4CB8:
	push	{lr}
	bl	InputInit
	bl	sub_80E3920
	pop	{r0}
	bx	r0
.Lfe93:
	.size	 sub_80E4CB8,.Lfe93-sub_80E4CB8
	.align	2, 0
	.type	 choose_name_or_words_screen_apply_bg_pals,function
	.thumb_func
choose_name_or_words_screen_apply_bg_pals:
	push	{lr}
	ldr	r0, .L471
	mov	r1, #0x0
	mov	r2, #0xc0
	bl	LoadPalette
	ldr	r0, .L471+0x4
	mov	r1, #0xa0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x2
	bl	stdpal_get
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	LoadPalette
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gNamingScreenMenu_Pal
	.word	gUnknown_0858BD78
.Lfe94:
	.size	 choose_name_or_words_screen_apply_bg_pals,.Lfe94-choose_name_or_words_screen_apply_bg_pals
	.align	2, 0
	.type	 sub_80E4CF8,function
	.thumb_func
sub_80E4CF8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	pop	{r0}
	bx	r0
.Lfe95:
	.size	 sub_80E4CF8,.Lfe95-sub_80E4CF8
	.align	2, 0
	.type	 nullsub_10,function
	.thumb_func
nullsub_10:
	bx	lr
.Lfe96:
	.size	 nullsub_10,.Lfe96-nullsub_10
	.align	2, 0
	.type	 sub_80E4D10,function
	.thumb_func
sub_80E4D10:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	ldr	r7, .L483
	ldr	r1, [r7]
	ldr	r2, .L483+0x4
	add	r0, r1, r2
	ldr	r0, [r0]
	ldrb	r6, [r0, #0x1]
	sub	r2, r2, #0x12
	add	r0, r1, r2
	ldrh	r0, [r0]
	sub	r0, r0, #0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldr	r0, .L483+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
	cmp	r4, r6
	bcs	.L477	@cond_branch
	add	r5, sp, #0xc
	mov	sl, r4
	ldr	r0, .L483+0xc
	ldrb	r0, [r0]
	mov	r8, r0
.L479:
	ldr	r0, [r7]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r5]
	mov	r2, r8
	strb	r2, [r5, #0x1]
	ldrb	r0, [r5]
	bl	IsLetter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0x1
	bne	.L480	@cond_branch
	mov	r1, #0x2
.L480:
	ldr	r0, [r7]
	ldr	r2, .L483+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r3, r4, #0x3
	add	r3, r3, r9
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	mov	r1, sl
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r6
	bcc	.L479	@cond_branch
.L477:
	bl	sub_80E498C
	ldr	r5, .L483
	ldr	r0, [r5]
	ldr	r4, .L483+0x8
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L484:
	.align	2, 0
.L483:
	.word	gNamingScreenData
	.word	0x1e28
	.word	0x1e13
	.word	gText_ExpandedPlaceholder_Empty
.Lfe97:
	.size	 sub_80E4D10,.Lfe97-sub_80E4D10
	.section .rodata
	.align	2, 0
	.type	 sTextColorStruct,object
	.size	 sTextColorStruct,12
sTextColorStruct:
	.byte	0xd
	.byte	0x1
	.byte	0x2
	.space	1
	.byte	0xe
	.byte	0x1
	.byte	0x2
	.space	1
	.byte	0xf
	.byte	0x1
	.byte	0x2
	.space	1
	.type	 sFillValues,object
	.size	 sFillValues,3
sFillValues:
	.byte	0xee
	.byte	0xdd
	.byte	0xff
	.align	2, 0
	.type	 sKeyboardTextColors,object
	.size	 sKeyboardTextColors,12
sKeyboardTextColors:
	.word	sTextColorStruct+0x4
	.word	sTextColorStruct
	.word	sTextColorStruct+0x8
.text
	.align	2, 0
	.type	 sub_80E4DE4,function
	.thumb_func
sub_80E4DE4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r0, .L491
	add	r0, r5, r0
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
	ldr	r1, .L491+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r7, [r0]
	ldr	r0, .L491+0x8
	mov	r8, r0
.L489:
	lsl	r3, r4, #0x4
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r7, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	lsl	r0, r4, #0x2
	lsl	r1, r5, #0x4
	add	r0, r0, r1
	add	r0, r0, r8
	ldr	r0, [r0]
	str	r0, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	AddTextPrinterParameterized3
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L489	@cond_branch
	add	r0, r6, #0
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L492:
	.align	2, 0
.L491:
	.word	sFillValues
	.word	sKeyboardTextColors
	.word	sNamingScreenKeyboardText
.Lfe98:
	.size	 sub_80E4DE4,.Lfe98-sub_80E4DE4
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0858BF98,object
gUnknown_0858BF98:
	.word	gUnknown_08DD4620
	.word	gUnknown_08DD46E0
	.word	gUnknown_08DD47A0
	.size	 gUnknown_0858BF98,12
.text
	.align	2, 0
	.type	 sub_80E4E5C,function
	.thumb_func
sub_80E4E5C:
	push	{r4, r5, r6, lr}
	mov	r0, #0xa
	bl	GetGpuReg
	add	r4, r0, #0
	mov	r5, #0x3
	and	r4, r4, r5
	mov	r0, #0xc
	bl	GetGpuReg
	and	r0, r0, r5
	cmp	r4, r0
	bls	.L494	@cond_branch
	mov	r5, #0x1
	mov	r6, #0x1
	ldr	r1, .L497
	ldr	r0, [r1]
	ldr	r2, .L497+0x4
	b	.L496
.L498:
	.align	2, 0
.L497:
	.word	gNamingScreenData
	.word	0x1e11
.L494:
	mov	r5, #0x2
	mov	r6, #0x2
	ldr	r1, .L499
	ldr	r0, [r1]
	ldr	r2, .L499+0x4
.L496:
	add	r0, r0, r2
	ldrb	r4, [r0]
	add	r0, r1, #0
	ldr	r1, .L499+0x8
	ldr	r0, [r0]
	ldr	r2, .L499+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	sub_80E4CF8
	bl	sub_80E3254
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_80E4DE4
	bl	sub_80E3254
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	nullsub_10
	add	r0, r6, #0
	bl	CopyBgTilemapBufferToVram
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L500:
	.align	2, 0
.L499:
	.word	gNamingScreenData
	.word	0x1e12
	.word	gUnknown_0858BF98
	.word	0x1e22
.Lfe99:
	.size	 sub_80E4E5C,.Lfe99-sub_80E4E5C
	.section .rodata
.LC176:
	.byte	0xf
	.byte	0x1
	.byte	0x2
.text
	.align	2, 0
	.type	 sub_80E4EF0,function
	.thumb_func
sub_80E4EF0:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	ldr	r1, .L502
	add	r0, sp, #0xc
	mov	r2, #0x3
	bl	memcpy
	ldr	r5, .L502+0x4
	ldr	r0, [r5]
	ldr	r4, .L502+0x8
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	add	r1, sp, #0xc
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	ldr	r1, .L502+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L503:
	.align	2, 0
.L502:
	.word	.LC176
	.word	gNamingScreenData
	.word	0x1e15
	.word	gText_MoveOkBack
.Lfe100:
	.size	 sub_80E4EF0,.Lfe100-sub_80E4EF0
	.align	2, 0
	.type	 sub_80E4F58,function
	.thumb_func
sub_80E4F58:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe101:
	.size	 sub_80E4F58,.Lfe101-sub_80E4F58
	.align	2, 0
	.type	 NamingScreen_TurnOffScreen,function
	.thumb_func
NamingScreen_TurnOffScreen:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r0}
	bx	r0
.Lfe102:
	.size	 NamingScreen_TurnOffScreen,.Lfe102-NamingScreen_TurnOffScreen
	.align	2, 0
	.type	 NamingScreen_InitDisplayMode,function
	.thumb_func
NamingScreen_InitDisplayMode:
	push	{lr}
	ldr	r0, .L507
	bl	SetVBlankCallback
	pop	{r0}
	bx	r0
.L508:
	.align	2, 0
.L507:
	.word	VBlankCB_NamingScreen
.Lfe103:
	.size	 NamingScreen_InitDisplayMode,.Lfe103-NamingScreen_InitDisplayMode
	.align	2, 0
	.type	 VBlankCB_NamingScreen,function
	.thumb_func
VBlankCB_NamingScreen:
	push	{r4, r5, lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r5, .L510
	ldr	r0, [r5]
	ldr	r1, .L510+0x4
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x16
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L510+0x8
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x1a
	bl	SetGpuReg
	mov	r0, #0xa
	bl	GetGpuReg
	ldr	r4, .L510+0xc
	add	r1, r4, #0
	and	r1, r1, r0
	mov	r0, #0xa
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L510+0x10
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xa
	bl	SetGpuRegBits
	mov	r0, #0xc
	bl	GetGpuReg
	and	r4, r4, r0
	mov	r0, #0xc
	add	r1, r4, #0
	bl	SetGpuReg
	ldr	r0, [r5]
	ldr	r1, .L510+0x14
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0xc
	bl	SetGpuRegBits
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L511:
	.align	2, 0
.L510:
	.word	gNamingScreenData
	.word	0x1e18
	.word	0x1e1a
	.word	0xfffc
	.word	0x1e1c
	.word	0x1e1e
.Lfe104:
	.size	 VBlankCB_NamingScreen,.Lfe104-VBlankCB_NamingScreen
	.align	2, 0
	.type	 sub_80E501C,function
	.thumb_func
sub_80E501C:
	push	{lr}
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	pop	{r0}
	bx	r0
.Lfe105:
	.size	 sub_80E501C,.Lfe105-sub_80E501C
	.align	2, 0
	.type	 IsLetter,function
	.thumb_func
IsLetter:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r2, #0x0
	ldr	r0, .L521
	ldrb	r1, [r0]
	add	r3, r0, #0
	cmp	r1, #0xff
	beq	.L515	@cond_branch
	add	r1, r3, #0
.L517:
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r4, r0
	beq	.L515	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L517	@cond_branch
.L515:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L522:
	.align	2, 0
.L521:
	.word	sText_AlphabetUpperLower
.Lfe106:
	.size	 IsLetter,.Lfe106-IsLetter
	.align	2, 0
	.type	 sub_80E5074,function
	.thumb_func
sub_80E5074:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L524
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L524+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L525:
	.align	2, 0
.L524:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe107:
	.size	 sub_80E5074,.Lfe107-sub_80E5074
	.align	2, 0
	.type	 sub_80E509C,function
	.thumb_func
sub_80E509C:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L527
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L527+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L528:
	.align	2, 0
.L527:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe108:
	.size	 sub_80E509C,.Lfe108-sub_80E509C
	.align	2, 0
	.type	 sub_80E50C4,function
	.thumb_func
sub_80E50C4:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L530
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L530+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L531:
	.align	2, 0
.L530:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe109:
	.size	 sub_80E50C4,.Lfe109-sub_80E50C4
	.align	2, 0
	.type	 sub_80E50EC,function
	.thumb_func
sub_80E50EC:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L533
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L533+0x4
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r3, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldWithOpenMenu
.Lfe110:
	.size	 sub_80E50EC,.Lfe110-sub_80E50EC
	.section .rodata
	.align	2, 0
	.type	 playerNamingScreenTemplate,object
	.size	 playerNamingScreenTemplate,12
playerNamingScreenTemplate:
	.byte	0x0
	.byte	0x7
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x23
	.space	2
	.word	gText_YourName
	.align	2, 0
	.type	 pcBoxNamingTemplate,object
	.size	 pcBoxNamingTemplate,12
pcBoxNamingTemplate:
	.byte	0x0
	.byte	0x8
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x13
	.space	2
	.word	gText_BoxName
	.align	2, 0
	.type	 monNamingScreenTemplate,object
	.size	 monNamingScreenTemplate,12
monNamingScreenTemplate:
	.byte	0x0
	.byte	0xa
	.byte	0x3
	.byte	0x1
	.byte	0x1
	.byte	0x23
	.space	2
	.word	gText_PkmnsNickname
	.align	2, 0
	.type	 wandaWordsScreenTemplate,object
	.size	 wandaWordsScreenTemplate,12
wandaWordsScreenTemplate:
	.byte	0x1
	.byte	0xf
	.byte	0x4
	.byte	0x0
	.byte	0x1
	.byte	0xb
	.space	2
	.word	gText_TellHimTheWords
	.align	2, 0
	.type	 sNamingScreenTemplates,object
sNamingScreenTemplates:
	.word	playerNamingScreenTemplate
	.word	pcBoxNamingTemplate
	.word	monNamingScreenTemplate
	.word	monNamingScreenTemplate
	.word	wandaWordsScreenTemplate
	.size	 sNamingScreenTemplates,20
	.globl	gOamData_858BFEC
	.align	2, 0
	.type	 gOamData_858BFEC,object
	.size	 gOamData_858BFEC,8
gOamData_858BFEC:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.globl	gOamData_858BFF4
	.align	2, 0
	.type	 gOamData_858BFF4,object
	.size	 gOamData_858BFF4,8
gOamData_858BFF4:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.space	2
	.globl	gOamData_858BFFC
	.align	2, 0
	.type	 gOamData_858BFFC,object
	.size	 gOamData_858BFFC,8
gOamData_858BFFC:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gUnknown_0858C004,object
	.size	 gUnknown_0858C004,32
gUnknown_0858C004:
	.byte	-0x14
	.byte	-0x10
	.byte	0x5
	.byte	0x40
	.byte	0xc
	.byte	-0x10
	.byte	0x40
	.byte	0x40
	.byte	-0x14
	.byte	-0x8
	.byte	0x55
	.byte	0x40
	.byte	0xc
	.byte	-0x8
	.byte	0x90
	.byte	0x40
	.byte	-0x14
	.byte	0x0
	.byte	0xa5
	.byte	0x40
	.byte	0xc
	.byte	0x0
	.byte	0xe0
	.byte	0x40
	.byte	-0x14
	.byte	0x8
	.byte	0xf5
	.byte	0x40
	.byte	0xc
	.byte	0x8
	.byte	0x30
	.byte	0x41
	.align	2, 0
	.type	 gUnknown_0858C024,object
	.size	 gUnknown_0858C024,8
gUnknown_0858C024:
	.byte	-0xc
	.byte	-0x4
	.byte	0x1
	.byte	0x40
	.byte	0x4
	.byte	-0x4
	.byte	0x20
	.byte	0x40
	.align	2, 0
	.type	 gUnknown_0858C02C,object
	.size	 gUnknown_0858C02C,24
gUnknown_0858C02C:
	.byte	-0x14
	.byte	-0xc
	.byte	0x5
	.byte	0x40
	.byte	0xc
	.byte	-0xc
	.byte	0x40
	.byte	0x40
	.byte	-0x14
	.byte	-0x4
	.byte	0x55
	.byte	0x40
	.byte	0xc
	.byte	-0x4
	.byte	0x90
	.byte	0x40
	.byte	-0x14
	.byte	0x4
	.byte	0xa5
	.byte	0x40
	.byte	0xc
	.byte	0x4
	.byte	0xe0
	.byte	0x40
	.align	2, 0
	.type	 gUnknown_0858C044,object
	.size	 gUnknown_0858C044,12
gUnknown_0858C044:
	.byte	-0x8
	.byte	-0xc
	.byte	0x1
	.byte	0xc0
	.byte	-0x8
	.byte	-0x4
	.byte	0x21
	.byte	0xc0
	.byte	-0x8
	.byte	0x4
	.byte	0x41
	.byte	0xc0
	.align	2, 0
	.type	 gUnknown_0858C050,object
gUnknown_0858C050:
	.byte	0x8
	.space	3
	.word	gUnknown_0858C004
	.size	 gUnknown_0858C050,8
	.align	2, 0
	.type	 gUnknown_0858C058,object
gUnknown_0858C058:
	.byte	0x2
	.space	3
	.word	gUnknown_0858C024
	.byte	0x2
	.space	3
	.word	gUnknown_0858C024
	.byte	0x2
	.space	3
	.word	gUnknown_0858C024
	.size	 gUnknown_0858C058,24
	.align	2, 0
	.type	 gUnknown_0858C070,object
gUnknown_0858C070:
	.byte	0x6
	.space	3
	.word	gUnknown_0858C02C
	.size	 gUnknown_0858C070,8
	.align	2, 0
	.type	 gUnknown_0858C078,object
gUnknown_0858C078:
	.byte	0x3
	.space	3
	.word	gUnknown_0858C044
	.size	 gUnknown_0858C078,8
	.align	2, 0
	.type	 gUnknown_0858C080,object
gUnknown_0858C080:
	.word	gSpriteImage_858BBF8
	.short	0xc0
	.space	2
	.word	gSpriteImage_858BCB8
	.short	0xc0
	.space	2
	.size	 gUnknown_0858C080,16
	.align	2, 0
	.type	 gSpriteAnim_858C090,object
gSpriteAnim_858C090:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_858C090,8
	.align	2, 0
	.type	 gSpriteAnim_858C098,object
gSpriteAnim_858C098:
	.short	0x4
	.byte	0x8
	.space	1
	.short	0x8
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 gSpriteAnim_858C098,12
	.align	2, 0
	.type	 gSpriteAnim_858C0A4,object
gSpriteAnim_858C0A4:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 gSpriteAnim_858C0A4,12
	.align	2, 0
	.type	 gSpriteAnimTable_858C0B0,object
gSpriteAnimTable_858C0B0:
	.word	gSpriteAnim_858C090
	.size	 gSpriteAnimTable_858C0B0,4
	.align	2, 0
	.type	 gSpriteAnimTable_858C0B4,object
gSpriteAnimTable_858C0B4:
	.word	gSpriteAnim_858C090
	.word	gSpriteAnim_858C098
	.size	 gSpriteAnimTable_858C0B4,8
	.align	2, 0
	.type	 gSpriteAnimTable_858C0BC,object
gSpriteAnimTable_858C0BC:
	.word	gSpriteAnim_858C0A4
	.size	 gSpriteAnimTable_858C0BC,4
	.align	2, 0
	.type	 gUnknown_0858C0C0,object
	.size	 gUnknown_0858C0C0,24
gUnknown_0858C0C0:
	.short	0x2
	.short	0x4
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80E4084
	.align	2, 0
	.type	 gUnknown_0858C0D8,object
	.size	 gUnknown_0858C0D8,24
gUnknown_0858C0D8:
	.short	0x3
	.short	0x1
	.word	gOamData_858BFFC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0858C0F0,object
	.size	 gUnknown_0858C0F0,24
gUnknown_0858C0F0:
	.short	0x4
	.short	0x4
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0858C108,object
	.size	 gUnknown_0858C108,24
gUnknown_0858C108:
	.short	0x0
	.short	0x6
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0858C120,object
	.size	 gUnknown_0858C120,24
gUnknown_0858C120:
	.short	0x1
	.short	0x7
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 gUnknown_0858C138,object
	.size	 gUnknown_0858C138,24
gUnknown_0858C138:
	.short	0x7
	.short	0x5
	.word	gOamData_858BFF4
	.word	gSpriteAnimTable_858C0B4
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80E3B30
	.align	2, 0
	.type	 sSpriteTemplate_InputArrow,object
	.size	 sSpriteTemplate_InputArrow,24
sSpriteTemplate_InputArrow:
	.short	0xa
	.short	0x3
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80E3C20
	.align	2, 0
	.type	 sSpriteTemplate_Underscore,object
	.size	 sSpriteTemplate_Underscore,24
sSpriteTemplate_Underscore:
	.short	0xb
	.short	0x3
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0B0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80E3C6C
	.align	2, 0
	.type	 gUnknown_0858C180,object
	.size	 gUnknown_0858C180,24
gUnknown_0858C180:
	.short	0xffff
	.short	0x0
	.word	gOamData_858BFEC
	.word	gSpriteAnimTable_858C0BC
	.word	gUnknown_0858C080
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sNamingScreenKeyboardText,object
	.size	 sNamingScreenKeyboardText,48
sNamingScreenKeyboardText:
	.word	gText_NamingScreenKeyboard_abcdef
	.word	gText_NamingScreenKeyboard_ghijkl
	.word	gText_NamingScreenKeyboard_mnopqrs
	.word	gText_NamingScreenKeyboard_tuvwxyz
	.word	gText_NamingScreenKeyboard_ABCDEF
	.word	gText_NamingScreenKeyboard_GHIJKL
	.word	gText_NamingScreenKeyboard_MNOPQRS
	.word	gText_NamingScreenKeyboard_TUVWXYZ
	.word	gText_NamingScreenKeyboard_01234
	.word	gText_NamingScreenKeyboard_56789
	.word	gText_NamingScreenKeyboard_Symbols1
	.word	gText_NamingScreenKeyboard_Symbols2
	.align	2, 0
	.type	 gUnknown_0858C1C8,object
gUnknown_0858C1C8:
	.word	gNamingScreenRWindow_Gfx+0x280
	.short	0x1e0
	.short	0x0
	.word	gNamingScreenRWindow_Gfx+0x460
	.short	0x1e0
	.short	0x1
	.word	gNamingScreenRWindow_Gfx
	.short	0x280
	.short	0x2
	.word	gNamingScreenKeyboardButton_Gfx+0x20
	.short	0x100
	.short	0x3
	.word	gNamingScreenROptions_Gfx
	.short	0x60
	.short	0x4
	.word	gNamingScreenROptions_Gfx+0xa0
	.short	0x60
	.short	0x5
	.word	gNamingScreenROptions_Gfx+0x140
	.short	0x60
	.short	0x6
	.word	gNamingScreenCursor_Gfx
	.short	0x80
	.short	0x7
	.word	gNamingScreenCursor_Gfx+0xa0
	.short	0x80
	.short	0x8
	.word	gNamingScreenCursor_Gfx+0x140
	.short	0x80
	.short	0x9
	.word	gNamingScreenRightPointingTriangleTiles
	.short	0x20
	.short	0xa
	.word	gNamingScreenUnderscoreTiles
	.short	0x20
	.short	0xb
	.word	0x0
	.space	4
	.size	 gUnknown_0858C1C8,104
	.align	2, 0
	.type	 gUnknown_0858C230,object
gUnknown_0858C230:
	.word	gNamingScreenMenu_Pal
	.short	0x0
	.space	2
	.word	gNamingScreenMenu_Pal+0x20
	.short	0x1
	.space	2
	.word	gNamingScreenMenu_Pal+0x40
	.short	0x2
	.space	2
	.word	gNamingScreenMenu_Pal+0x60
	.short	0x3
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x4
	.space	2
	.word	gNamingScreenMenu_Pal+0xa0
	.short	0x5
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x6
	.space	2
	.word	gNamingScreenMenu_Pal+0x80
	.short	0x7
	.space	2
	.word	0x0
	.space	4
	.size	 gUnknown_0858C230,72
.text
	.align	2, 0

